{"version":3,"file":"flood-map-provider.js","mappings":"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","sources":["webpack://defra/./node_modules/@turf/helpers/dist/esm/index.js","webpack://defra/./node_modules/computed-style-to-inline-style/dist/index.js","webpack://defra/./node_modules/tinyqueue/index.js","webpack://defra/./node_modules/polylabel/polylabel.js","webpack://defra/./node_modules/@turf/area/dist/esm/index.js","webpack://defra/./node_modules/@turf/meta/dist/esm/index.js","webpack://defra/./node_modules/@turf/bbox-clip/dist/esm/index.js","webpack://defra/./src/js/provider/os-maplibre/query.js","webpack://defra/./src/js/provider/os-maplibre/marker.js","webpack://defra/./src/js/provider/os-maplibre/symbols.js","webpack://defra/./src/js/provider/os-maplibre/events.js","webpack://defra/./src/js/provider/os-maplibre/provider.js","webpack://defra/./src/js/lib/throttle.js","webpack://defra/./src/js/provider/os-maplibre/constants.js","webpack://defra/./src/js/lib/symbols.js","webpack://defra/./node_modules/@turf/invariant/dist/esm/index.js","webpack://defra/./node_modules/@turf/distance/dist/esm/index.js","webpack://defra/./src/js/lib/debounce.js","webpack://defra/./src/js/lib/viewport.js"],"sourcesContent":["// index.ts\nvar earthRadius = 63710088e-1;\nvar factors = {\n  centimeters: earthRadius * 100,\n  centimetres: earthRadius * 100,\n  degrees: 360 / (2 * Math.PI),\n  feet: earthRadius * 3.28084,\n  inches: earthRadius * 39.37,\n  kilometers: earthRadius / 1e3,\n  kilometres: earthRadius / 1e3,\n  meters: earthRadius,\n  metres: earthRadius,\n  miles: earthRadius / 1609.344,\n  millimeters: earthRadius * 1e3,\n  millimetres: earthRadius * 1e3,\n  nauticalmiles: earthRadius / 1852,\n  radians: 1,\n  yards: earthRadius * 1.0936\n};\nvar areaFactors = {\n  acres: 247105e-9,\n  centimeters: 1e4,\n  centimetres: 1e4,\n  feet: 10.763910417,\n  hectares: 1e-4,\n  inches: 1550.003100006,\n  kilometers: 1e-6,\n  kilometres: 1e-6,\n  meters: 1,\n  metres: 1,\n  miles: 386e-9,\n  nauticalmiles: 29155334959812285e-23,\n  millimeters: 1e6,\n  millimetres: 1e6,\n  yards: 1.195990046\n};\nfunction feature(geom, properties, options = {}) {\n  const feat = { type: \"Feature\" };\n  if (options.id === 0 || options.id) {\n    feat.id = options.id;\n  }\n  if (options.bbox) {\n    feat.bbox = options.bbox;\n  }\n  feat.properties = properties || {};\n  feat.geometry = geom;\n  return feat;\n}\nfunction geometry(type, coordinates, _options = {}) {\n  switch (type) {\n    case \"Point\":\n      return point(coordinates).geometry;\n    case \"LineString\":\n      return lineString(coordinates).geometry;\n    case \"Polygon\":\n      return polygon(coordinates).geometry;\n    case \"MultiPoint\":\n      return multiPoint(coordinates).geometry;\n    case \"MultiLineString\":\n      return multiLineString(coordinates).geometry;\n    case \"MultiPolygon\":\n      return multiPolygon(coordinates).geometry;\n    default:\n      throw new Error(type + \" is invalid\");\n  }\n}\nfunction point(coordinates, properties, options = {}) {\n  if (!coordinates) {\n    throw new Error(\"coordinates is required\");\n  }\n  if (!Array.isArray(coordinates)) {\n    throw new Error(\"coordinates must be an Array\");\n  }\n  if (coordinates.length < 2) {\n    throw new Error(\"coordinates must be at least 2 numbers long\");\n  }\n  if (!isNumber(coordinates[0]) || !isNumber(coordinates[1])) {\n    throw new Error(\"coordinates must contain numbers\");\n  }\n  const geom = {\n    type: \"Point\",\n    coordinates\n  };\n  return feature(geom, properties, options);\n}\nfunction points(coordinates, properties, options = {}) {\n  return featureCollection(\n    coordinates.map((coords) => {\n      return point(coords, properties);\n    }),\n    options\n  );\n}\nfunction polygon(coordinates, properties, options = {}) {\n  for (const ring of coordinates) {\n    if (ring.length < 4) {\n      throw new Error(\n        \"Each LinearRing of a Polygon must have 4 or more Positions.\"\n      );\n    }\n    if (ring[ring.length - 1].length !== ring[0].length) {\n      throw new Error(\"First and last Position are not equivalent.\");\n    }\n    for (let j = 0; j < ring[ring.length - 1].length; j++) {\n      if (ring[ring.length - 1][j] !== ring[0][j]) {\n        throw new Error(\"First and last Position are not equivalent.\");\n      }\n    }\n  }\n  const geom = {\n    type: \"Polygon\",\n    coordinates\n  };\n  return feature(geom, properties, options);\n}\nfunction polygons(coordinates, properties, options = {}) {\n  return featureCollection(\n    coordinates.map((coords) => {\n      return polygon(coords, properties);\n    }),\n    options\n  );\n}\nfunction lineString(coordinates, properties, options = {}) {\n  if (coordinates.length < 2) {\n    throw new Error(\"coordinates must be an array of two or more positions\");\n  }\n  const geom = {\n    type: \"LineString\",\n    coordinates\n  };\n  return feature(geom, properties, options);\n}\nfunction lineStrings(coordinates, properties, options = {}) {\n  return featureCollection(\n    coordinates.map((coords) => {\n      return lineString(coords, properties);\n    }),\n    options\n  );\n}\nfunction featureCollection(features, options = {}) {\n  const fc = { type: \"FeatureCollection\" };\n  if (options.id) {\n    fc.id = options.id;\n  }\n  if (options.bbox) {\n    fc.bbox = options.bbox;\n  }\n  fc.features = features;\n  return fc;\n}\nfunction multiLineString(coordinates, properties, options = {}) {\n  const geom = {\n    type: \"MultiLineString\",\n    coordinates\n  };\n  return feature(geom, properties, options);\n}\nfunction multiPoint(coordinates, properties, options = {}) {\n  const geom = {\n    type: \"MultiPoint\",\n    coordinates\n  };\n  return feature(geom, properties, options);\n}\nfunction multiPolygon(coordinates, properties, options = {}) {\n  const geom = {\n    type: \"MultiPolygon\",\n    coordinates\n  };\n  return feature(geom, properties, options);\n}\nfunction geometryCollection(geometries, properties, options = {}) {\n  const geom = {\n    type: \"GeometryCollection\",\n    geometries\n  };\n  return feature(geom, properties, options);\n}\nfunction round(num, precision = 0) {\n  if (precision && !(precision >= 0)) {\n    throw new Error(\"precision must be a positive number\");\n  }\n  const multiplier = Math.pow(10, precision || 0);\n  return Math.round(num * multiplier) / multiplier;\n}\nfunction radiansToLength(radians, units = \"kilometers\") {\n  const factor = factors[units];\n  if (!factor) {\n    throw new Error(units + \" units is invalid\");\n  }\n  return radians * factor;\n}\nfunction lengthToRadians(distance, units = \"kilometers\") {\n  const factor = factors[units];\n  if (!factor) {\n    throw new Error(units + \" units is invalid\");\n  }\n  return distance / factor;\n}\nfunction lengthToDegrees(distance, units) {\n  return radiansToDegrees(lengthToRadians(distance, units));\n}\nfunction bearingToAzimuth(bearing) {\n  let angle = bearing % 360;\n  if (angle < 0) {\n    angle += 360;\n  }\n  return angle;\n}\nfunction azimuthToBearing(angle) {\n  angle = angle % 360;\n  if (angle > 180) {\n    return angle - 360;\n  } else if (angle < -180) {\n    return angle + 360;\n  }\n  return angle;\n}\nfunction radiansToDegrees(radians) {\n  const normalisedRadians = radians % (2 * Math.PI);\n  return normalisedRadians * 180 / Math.PI;\n}\nfunction degreesToRadians(degrees) {\n  const normalisedDegrees = degrees % 360;\n  return normalisedDegrees * Math.PI / 180;\n}\nfunction convertLength(length, originalUnit = \"kilometers\", finalUnit = \"kilometers\") {\n  if (!(length >= 0)) {\n    throw new Error(\"length must be a positive number\");\n  }\n  return radiansToLength(lengthToRadians(length, originalUnit), finalUnit);\n}\nfunction convertArea(area, originalUnit = \"meters\", finalUnit = \"kilometers\") {\n  if (!(area >= 0)) {\n    throw new Error(\"area must be a positive number\");\n  }\n  const startFactor = areaFactors[originalUnit];\n  if (!startFactor) {\n    throw new Error(\"invalid original units\");\n  }\n  const finalFactor = areaFactors[finalUnit];\n  if (!finalFactor) {\n    throw new Error(\"invalid final units\");\n  }\n  return area / startFactor * finalFactor;\n}\nfunction isNumber(num) {\n  return !isNaN(num) && num !== null && !Array.isArray(num);\n}\nfunction isObject(input) {\n  return input !== null && typeof input === \"object\" && !Array.isArray(input);\n}\nfunction validateBBox(bbox) {\n  if (!bbox) {\n    throw new Error(\"bbox is required\");\n  }\n  if (!Array.isArray(bbox)) {\n    throw new Error(\"bbox must be an Array\");\n  }\n  if (bbox.length !== 4 && bbox.length !== 6) {\n    throw new Error(\"bbox must be an Array of 4 or 6 numbers\");\n  }\n  bbox.forEach((num) => {\n    if (!isNumber(num)) {\n      throw new Error(\"bbox must only contain numbers\");\n    }\n  });\n}\nfunction validateId(id) {\n  if (!id) {\n    throw new Error(\"id is required\");\n  }\n  if ([\"string\", \"number\"].indexOf(typeof id) === -1) {\n    throw new Error(\"id must be a number or a string\");\n  }\n}\nexport {\n  areaFactors,\n  azimuthToBearing,\n  bearingToAzimuth,\n  convertArea,\n  convertLength,\n  degreesToRadians,\n  earthRadius,\n  factors,\n  feature,\n  featureCollection,\n  geometry,\n  geometryCollection,\n  isNumber,\n  isObject,\n  lengthToDegrees,\n  lengthToRadians,\n  lineString,\n  lineStrings,\n  multiLineString,\n  multiPoint,\n  multiPolygon,\n  point,\n  points,\n  polygon,\n  polygons,\n  radiansToDegrees,\n  radiansToLength,\n  round,\n  validateBBox,\n  validateId\n};\n//# sourceMappingURL=index.js.map","!function(e,t){\"object\"==typeof exports&&\"object\"==typeof module?module.exports=t():\"function\"==typeof define&&define.amd?define([],t):\"object\"==typeof exports?exports.computedStyleToInlineStyle=t():e.computedStyleToInlineStyle=t()}(this,(()=>(()=>{\"use strict\";var e={};return(()=>{var t=e;Object.defineProperty(t,\"__esModule\",{value:!0}),t.default=function e(t,o){if(!t)throw new Error(\"No element specified.\");(null==o?void 0:o.recursive)&&Array.prototype.forEach.call(t.children,(t=>{e(t,o)}));const r=getComputedStyle(t);Array.prototype.forEach.call((null==o?void 0:o.properties)||r,(e=>{t.style[e]=r.getPropertyValue(e)}))}})(),e})()));","\nexport default class TinyQueue {\n    constructor(data = [], compare = (a, b) => (a < b ? -1 : a > b ? 1 : 0)) {\n        this.data = data;\n        this.length = this.data.length;\n        this.compare = compare;\n\n        if (this.length > 0) {\n            for (let i = (this.length >> 1) - 1; i >= 0; i--) this._down(i);\n        }\n    }\n\n    push(item) {\n        this.data.push(item);\n        this._up(this.length++);\n    }\n\n    pop() {\n        if (this.length === 0) return undefined;\n\n        const top = this.data[0];\n        const bottom = this.data.pop();\n\n        if (--this.length > 0) {\n            this.data[0] = bottom;\n            this._down(0);\n        }\n\n        return top;\n    }\n\n    peek() {\n        return this.data[0];\n    }\n\n    _up(pos) {\n        const {data, compare} = this;\n        const item = data[pos];\n\n        while (pos > 0) {\n            const parent = (pos - 1) >> 1;\n            const current = data[parent];\n            if (compare(item, current) >= 0) break;\n            data[pos] = current;\n            pos = parent;\n        }\n\n        data[pos] = item;\n    }\n\n    _down(pos) {\n        const {data, compare} = this;\n        const halfLength = this.length >> 1;\n        const item = data[pos];\n\n        while (pos < halfLength) {\n            let bestChild = (pos << 1) + 1; // initially it is the left child\n            const right = bestChild + 1;\n\n            if (right < this.length && compare(data[right], data[bestChild]) < 0) {\n                bestChild = right;\n            }\n            if (compare(data[bestChild], item) >= 0) break;\n\n            data[pos] = data[bestChild];\n            pos = bestChild;\n        }\n\n        data[pos] = item;\n    }\n}\n","\nimport Queue from 'tinyqueue';\n\nexport default function polylabel(polygon, precision = 1.0, debug = false) {\n    // find the bounding box of the outer ring\n    let minX = Infinity;\n    let minY = Infinity;\n    let maxX = -Infinity;\n    let maxY = -Infinity;\n\n    for (const [x, y] of polygon[0]) {\n        if (x < minX) minX = x;\n        if (y < minY) minY = y;\n        if (x > maxX) maxX = x;\n        if (y > maxY) maxY = y;\n    }\n\n    const width = maxX - minX;\n    const height = maxY - minY;\n    const cellSize = Math.max(precision, Math.min(width, height));\n\n    if (cellSize === precision) {\n        const result = [minX, minY];\n        result.distance = 0;\n        return result;\n    }\n\n    // a priority queue of cells in order of their \"potential\" (max distance to polygon)\n    const cellQueue = new Queue([], (a, b) => b.max - a.max);\n\n    // take centroid as the first best guess\n    let bestCell = getCentroidCell(polygon);\n\n    // second guess: bounding box centroid\n    const bboxCell = new Cell(minX + width / 2, minY + height / 2, 0, polygon);\n    if (bboxCell.d > bestCell.d) bestCell = bboxCell;\n\n    let numProbes = 2;\n\n    function potentiallyQueue(x, y, h) {\n        const cell = new Cell(x, y, h, polygon);\n        numProbes++;\n        if (cell.max > bestCell.d + precision) cellQueue.push(cell);\n\n        // update the best cell if we found a better one\n        if (cell.d > bestCell.d) {\n            bestCell = cell;\n            if (debug) console.log(`found best ${Math.round(1e4 * cell.d) / 1e4} after ${numProbes} probes`);\n        }\n    }\n\n    // cover polygon with initial cells\n    let h = cellSize / 2;\n    for (let x = minX; x < maxX; x += cellSize) {\n        for (let y = minY; y < maxY; y += cellSize) {\n            potentiallyQueue(x + h, y + h, h);\n        }\n    }\n\n    while (cellQueue.length) {\n        // pick the most promising cell from the queue\n        const {max, x, y, h: ch} = cellQueue.pop();\n\n        // do not drill down further if there's no chance of a better solution\n        if (max - bestCell.d <= precision) break;\n\n        // split the cell into four cells\n        h = ch / 2;\n        potentiallyQueue(x - h, y - h, h);\n        potentiallyQueue(x + h, y - h, h);\n        potentiallyQueue(x - h, y + h, h);\n        potentiallyQueue(x + h, y + h, h);\n    }\n\n    if (debug) {\n        console.log(`num probes: ${numProbes}\\nbest distance: ${bestCell.d}`);\n    }\n\n    const result = [bestCell.x, bestCell.y];\n    result.distance = bestCell.d;\n    return result;\n}\n\nfunction Cell(x, y, h, polygon) {\n    this.x = x; // cell center x\n    this.y = y; // cell center y\n    this.h = h; // half the cell size\n    this.d = pointToPolygonDist(x, y, polygon); // distance from cell center to polygon\n    this.max = this.d + this.h * Math.SQRT2; // max distance to polygon within a cell\n}\n\n// signed distance from point to polygon outline (negative if point is outside)\nfunction pointToPolygonDist(x, y, polygon) {\n    let inside = false;\n    let minDistSq = Infinity;\n\n    for (const ring of polygon) {\n        for (let i = 0, len = ring.length, j = len - 1; i < len; j = i++) {\n            const a = ring[i];\n            const b = ring[j];\n\n            if ((a[1] > y !== b[1] > y) &&\n                (x < (b[0] - a[0]) * (y - a[1]) / (b[1] - a[1]) + a[0])) inside = !inside;\n\n            minDistSq = Math.min(minDistSq, getSegDistSq(x, y, a, b));\n        }\n    }\n\n    return minDistSq === 0 ? 0 : (inside ? 1 : -1) * Math.sqrt(minDistSq);\n}\n\n// get polygon centroid\nfunction getCentroidCell(polygon) {\n    let area = 0;\n    let x = 0;\n    let y = 0;\n    const points = polygon[0];\n\n    for (let i = 0, len = points.length, j = len - 1; i < len; j = i++) {\n        const a = points[i];\n        const b = points[j];\n        const f = a[0] * b[1] - b[0] * a[1];\n        x += (a[0] + b[0]) * f;\n        y += (a[1] + b[1]) * f;\n        area += f * 3;\n    }\n    const centroid = new Cell(x / area, y / area, 0, polygon);\n    if (area === 0 || centroid.d < 0) return new Cell(points[0][0], points[0][1], 0, polygon);\n    return centroid;\n}\n\n// get squared distance from a point to a segment\nfunction getSegDistSq(px, py, a, b) {\n    let x = a[0];\n    let y = a[1];\n    let dx = b[0] - x;\n    let dy = b[1] - y;\n\n    if (dx !== 0 || dy !== 0) {\n        const t = ((px - x) * dx + (py - y) * dy) / (dx * dx + dy * dy);\n\n        if (t > 1) {\n            x = b[0];\n            y = b[1];\n\n        } else if (t > 0) {\n            x += dx * t;\n            y += dy * t;\n        }\n    }\n\n    dx = px - x;\n    dy = py - y;\n\n    return dx * dx + dy * dy;\n}\n","// index.ts\nimport { earthRadius } from \"@turf/helpers\";\nimport { geomReduce } from \"@turf/meta\";\nfunction area(geojson) {\n  return geomReduce(\n    geojson,\n    (value, geom) => {\n      return value + calculateArea(geom);\n    },\n    0\n  );\n}\nfunction calculateArea(geom) {\n  let total = 0;\n  let i;\n  switch (geom.type) {\n    case \"Polygon\":\n      return polygonArea(geom.coordinates);\n    case \"MultiPolygon\":\n      for (i = 0; i < geom.coordinates.length; i++) {\n        total += polygonArea(geom.coordinates[i]);\n      }\n      return total;\n    case \"Point\":\n    case \"MultiPoint\":\n    case \"LineString\":\n    case \"MultiLineString\":\n      return 0;\n  }\n  return 0;\n}\nfunction polygonArea(coords) {\n  let total = 0;\n  if (coords && coords.length > 0) {\n    total += Math.abs(ringArea(coords[0]));\n    for (let i = 1; i < coords.length; i++) {\n      total -= Math.abs(ringArea(coords[i]));\n    }\n  }\n  return total;\n}\nvar FACTOR = earthRadius * earthRadius / 2;\nvar PI_OVER_180 = Math.PI / 180;\nfunction ringArea(coords) {\n  const coordsLength = coords.length - 1;\n  if (coordsLength <= 2) return 0;\n  let total = 0;\n  let i = 0;\n  while (i < coordsLength) {\n    const lower = coords[i];\n    const middle = coords[i + 1 === coordsLength ? 0 : i + 1];\n    const upper = coords[i + 2 >= coordsLength ? (i + 2) % coordsLength : i + 2];\n    const lowerX = lower[0] * PI_OVER_180;\n    const middleY = middle[1] * PI_OVER_180;\n    const upperX = upper[0] * PI_OVER_180;\n    total += (upperX - lowerX) * Math.sin(middleY);\n    i++;\n  }\n  return total * FACTOR;\n}\nvar turf_area_default = area;\nexport {\n  area,\n  turf_area_default as default\n};\n//# sourceMappingURL=index.js.map","// index.js\nimport { feature, point, lineString, isObject } from \"@turf/helpers\";\nfunction coordEach(geojson, callback, excludeWrapCoord) {\n  if (geojson === null) return;\n  var j, k, l, geometry, stopG, coords, geometryMaybeCollection, wrapShrink = 0, coordIndex = 0, isGeometryCollection, type = geojson.type, isFeatureCollection = type === \"FeatureCollection\", isFeature = type === \"Feature\", stop = isFeatureCollection ? geojson.features.length : 1;\n  for (var featureIndex = 0; featureIndex < stop; featureIndex++) {\n    geometryMaybeCollection = isFeatureCollection ? geojson.features[featureIndex].geometry : isFeature ? geojson.geometry : geojson;\n    isGeometryCollection = geometryMaybeCollection ? geometryMaybeCollection.type === \"GeometryCollection\" : false;\n    stopG = isGeometryCollection ? geometryMaybeCollection.geometries.length : 1;\n    for (var geomIndex = 0; geomIndex < stopG; geomIndex++) {\n      var multiFeatureIndex = 0;\n      var geometryIndex = 0;\n      geometry = isGeometryCollection ? geometryMaybeCollection.geometries[geomIndex] : geometryMaybeCollection;\n      if (geometry === null) continue;\n      coords = geometry.coordinates;\n      var geomType = geometry.type;\n      wrapShrink = excludeWrapCoord && (geomType === \"Polygon\" || geomType === \"MultiPolygon\") ? 1 : 0;\n      switch (geomType) {\n        case null:\n          break;\n        case \"Point\":\n          if (callback(\n            coords,\n            coordIndex,\n            featureIndex,\n            multiFeatureIndex,\n            geometryIndex\n          ) === false)\n            return false;\n          coordIndex++;\n          multiFeatureIndex++;\n          break;\n        case \"LineString\":\n        case \"MultiPoint\":\n          for (j = 0; j < coords.length; j++) {\n            if (callback(\n              coords[j],\n              coordIndex,\n              featureIndex,\n              multiFeatureIndex,\n              geometryIndex\n            ) === false)\n              return false;\n            coordIndex++;\n            if (geomType === \"MultiPoint\") multiFeatureIndex++;\n          }\n          if (geomType === \"LineString\") multiFeatureIndex++;\n          break;\n        case \"Polygon\":\n        case \"MultiLineString\":\n          for (j = 0; j < coords.length; j++) {\n            for (k = 0; k < coords[j].length - wrapShrink; k++) {\n              if (callback(\n                coords[j][k],\n                coordIndex,\n                featureIndex,\n                multiFeatureIndex,\n                geometryIndex\n              ) === false)\n                return false;\n              coordIndex++;\n            }\n            if (geomType === \"MultiLineString\") multiFeatureIndex++;\n            if (geomType === \"Polygon\") geometryIndex++;\n          }\n          if (geomType === \"Polygon\") multiFeatureIndex++;\n          break;\n        case \"MultiPolygon\":\n          for (j = 0; j < coords.length; j++) {\n            geometryIndex = 0;\n            for (k = 0; k < coords[j].length; k++) {\n              for (l = 0; l < coords[j][k].length - wrapShrink; l++) {\n                if (callback(\n                  coords[j][k][l],\n                  coordIndex,\n                  featureIndex,\n                  multiFeatureIndex,\n                  geometryIndex\n                ) === false)\n                  return false;\n                coordIndex++;\n              }\n              geometryIndex++;\n            }\n            multiFeatureIndex++;\n          }\n          break;\n        case \"GeometryCollection\":\n          for (j = 0; j < geometry.geometries.length; j++)\n            if (coordEach(geometry.geometries[j], callback, excludeWrapCoord) === false)\n              return false;\n          break;\n        default:\n          throw new Error(\"Unknown Geometry Type\");\n      }\n    }\n  }\n}\nfunction coordReduce(geojson, callback, initialValue, excludeWrapCoord) {\n  var previousValue = initialValue;\n  coordEach(\n    geojson,\n    function(currentCoord, coordIndex, featureIndex, multiFeatureIndex, geometryIndex) {\n      if (coordIndex === 0 && initialValue === void 0)\n        previousValue = currentCoord;\n      else\n        previousValue = callback(\n          previousValue,\n          currentCoord,\n          coordIndex,\n          featureIndex,\n          multiFeatureIndex,\n          geometryIndex\n        );\n    },\n    excludeWrapCoord\n  );\n  return previousValue;\n}\nfunction propEach(geojson, callback) {\n  var i;\n  switch (geojson.type) {\n    case \"FeatureCollection\":\n      for (i = 0; i < geojson.features.length; i++) {\n        if (callback(geojson.features[i].properties, i) === false) break;\n      }\n      break;\n    case \"Feature\":\n      callback(geojson.properties, 0);\n      break;\n  }\n}\nfunction propReduce(geojson, callback, initialValue) {\n  var previousValue = initialValue;\n  propEach(geojson, function(currentProperties, featureIndex) {\n    if (featureIndex === 0 && initialValue === void 0)\n      previousValue = currentProperties;\n    else\n      previousValue = callback(previousValue, currentProperties, featureIndex);\n  });\n  return previousValue;\n}\nfunction featureEach(geojson, callback) {\n  if (geojson.type === \"Feature\") {\n    callback(geojson, 0);\n  } else if (geojson.type === \"FeatureCollection\") {\n    for (var i = 0; i < geojson.features.length; i++) {\n      if (callback(geojson.features[i], i) === false) break;\n    }\n  }\n}\nfunction featureReduce(geojson, callback, initialValue) {\n  var previousValue = initialValue;\n  featureEach(geojson, function(currentFeature, featureIndex) {\n    if (featureIndex === 0 && initialValue === void 0)\n      previousValue = currentFeature;\n    else previousValue = callback(previousValue, currentFeature, featureIndex);\n  });\n  return previousValue;\n}\nfunction coordAll(geojson) {\n  var coords = [];\n  coordEach(geojson, function(coord) {\n    coords.push(coord);\n  });\n  return coords;\n}\nfunction geomEach(geojson, callback) {\n  var i, j, g, geometry, stopG, geometryMaybeCollection, isGeometryCollection, featureProperties, featureBBox, featureId, featureIndex = 0, isFeatureCollection = geojson.type === \"FeatureCollection\", isFeature = geojson.type === \"Feature\", stop = isFeatureCollection ? geojson.features.length : 1;\n  for (i = 0; i < stop; i++) {\n    geometryMaybeCollection = isFeatureCollection ? geojson.features[i].geometry : isFeature ? geojson.geometry : geojson;\n    featureProperties = isFeatureCollection ? geojson.features[i].properties : isFeature ? geojson.properties : {};\n    featureBBox = isFeatureCollection ? geojson.features[i].bbox : isFeature ? geojson.bbox : void 0;\n    featureId = isFeatureCollection ? geojson.features[i].id : isFeature ? geojson.id : void 0;\n    isGeometryCollection = geometryMaybeCollection ? geometryMaybeCollection.type === \"GeometryCollection\" : false;\n    stopG = isGeometryCollection ? geometryMaybeCollection.geometries.length : 1;\n    for (g = 0; g < stopG; g++) {\n      geometry = isGeometryCollection ? geometryMaybeCollection.geometries[g] : geometryMaybeCollection;\n      if (geometry === null) {\n        if (callback(\n          null,\n          featureIndex,\n          featureProperties,\n          featureBBox,\n          featureId\n        ) === false)\n          return false;\n        continue;\n      }\n      switch (geometry.type) {\n        case \"Point\":\n        case \"LineString\":\n        case \"MultiPoint\":\n        case \"Polygon\":\n        case \"MultiLineString\":\n        case \"MultiPolygon\": {\n          if (callback(\n            geometry,\n            featureIndex,\n            featureProperties,\n            featureBBox,\n            featureId\n          ) === false)\n            return false;\n          break;\n        }\n        case \"GeometryCollection\": {\n          for (j = 0; j < geometry.geometries.length; j++) {\n            if (callback(\n              geometry.geometries[j],\n              featureIndex,\n              featureProperties,\n              featureBBox,\n              featureId\n            ) === false)\n              return false;\n          }\n          break;\n        }\n        default:\n          throw new Error(\"Unknown Geometry Type\");\n      }\n    }\n    featureIndex++;\n  }\n}\nfunction geomReduce(geojson, callback, initialValue) {\n  var previousValue = initialValue;\n  geomEach(\n    geojson,\n    function(currentGeometry, featureIndex, featureProperties, featureBBox, featureId) {\n      if (featureIndex === 0 && initialValue === void 0)\n        previousValue = currentGeometry;\n      else\n        previousValue = callback(\n          previousValue,\n          currentGeometry,\n          featureIndex,\n          featureProperties,\n          featureBBox,\n          featureId\n        );\n    }\n  );\n  return previousValue;\n}\nfunction flattenEach(geojson, callback) {\n  geomEach(geojson, function(geometry, featureIndex, properties, bbox, id) {\n    var type = geometry === null ? null : geometry.type;\n    switch (type) {\n      case null:\n      case \"Point\":\n      case \"LineString\":\n      case \"Polygon\":\n        if (callback(\n          feature(geometry, properties, { bbox, id }),\n          featureIndex,\n          0\n        ) === false)\n          return false;\n        return;\n    }\n    var geomType;\n    switch (type) {\n      case \"MultiPoint\":\n        geomType = \"Point\";\n        break;\n      case \"MultiLineString\":\n        geomType = \"LineString\";\n        break;\n      case \"MultiPolygon\":\n        geomType = \"Polygon\";\n        break;\n    }\n    for (var multiFeatureIndex = 0; multiFeatureIndex < geometry.coordinates.length; multiFeatureIndex++) {\n      var coordinate = geometry.coordinates[multiFeatureIndex];\n      var geom = {\n        type: geomType,\n        coordinates: coordinate\n      };\n      if (callback(feature(geom, properties), featureIndex, multiFeatureIndex) === false)\n        return false;\n    }\n  });\n}\nfunction flattenReduce(geojson, callback, initialValue) {\n  var previousValue = initialValue;\n  flattenEach(\n    geojson,\n    function(currentFeature, featureIndex, multiFeatureIndex) {\n      if (featureIndex === 0 && multiFeatureIndex === 0 && initialValue === void 0)\n        previousValue = currentFeature;\n      else\n        previousValue = callback(\n          previousValue,\n          currentFeature,\n          featureIndex,\n          multiFeatureIndex\n        );\n    }\n  );\n  return previousValue;\n}\nfunction segmentEach(geojson, callback) {\n  flattenEach(geojson, function(feature2, featureIndex, multiFeatureIndex) {\n    var segmentIndex = 0;\n    if (!feature2.geometry) return;\n    var type = feature2.geometry.type;\n    if (type === \"Point\" || type === \"MultiPoint\") return;\n    var previousCoords;\n    var previousFeatureIndex = 0;\n    var previousMultiIndex = 0;\n    var prevGeomIndex = 0;\n    if (coordEach(\n      feature2,\n      function(currentCoord, coordIndex, featureIndexCoord, multiPartIndexCoord, geometryIndex) {\n        if (previousCoords === void 0 || featureIndex > previousFeatureIndex || multiPartIndexCoord > previousMultiIndex || geometryIndex > prevGeomIndex) {\n          previousCoords = currentCoord;\n          previousFeatureIndex = featureIndex;\n          previousMultiIndex = multiPartIndexCoord;\n          prevGeomIndex = geometryIndex;\n          segmentIndex = 0;\n          return;\n        }\n        var currentSegment = lineString(\n          [previousCoords, currentCoord],\n          feature2.properties\n        );\n        if (callback(\n          currentSegment,\n          featureIndex,\n          multiFeatureIndex,\n          geometryIndex,\n          segmentIndex\n        ) === false)\n          return false;\n        segmentIndex++;\n        previousCoords = currentCoord;\n      }\n    ) === false)\n      return false;\n  });\n}\nfunction segmentReduce(geojson, callback, initialValue) {\n  var previousValue = initialValue;\n  var started = false;\n  segmentEach(\n    geojson,\n    function(currentSegment, featureIndex, multiFeatureIndex, geometryIndex, segmentIndex) {\n      if (started === false && initialValue === void 0)\n        previousValue = currentSegment;\n      else\n        previousValue = callback(\n          previousValue,\n          currentSegment,\n          featureIndex,\n          multiFeatureIndex,\n          geometryIndex,\n          segmentIndex\n        );\n      started = true;\n    }\n  );\n  return previousValue;\n}\nfunction lineEach(geojson, callback) {\n  if (!geojson) throw new Error(\"geojson is required\");\n  flattenEach(geojson, function(feature2, featureIndex, multiFeatureIndex) {\n    if (feature2.geometry === null) return;\n    var type = feature2.geometry.type;\n    var coords = feature2.geometry.coordinates;\n    switch (type) {\n      case \"LineString\":\n        if (callback(feature2, featureIndex, multiFeatureIndex, 0, 0) === false)\n          return false;\n        break;\n      case \"Polygon\":\n        for (var geometryIndex = 0; geometryIndex < coords.length; geometryIndex++) {\n          if (callback(\n            lineString(coords[geometryIndex], feature2.properties),\n            featureIndex,\n            multiFeatureIndex,\n            geometryIndex\n          ) === false)\n            return false;\n        }\n        break;\n    }\n  });\n}\nfunction lineReduce(geojson, callback, initialValue) {\n  var previousValue = initialValue;\n  lineEach(\n    geojson,\n    function(currentLine, featureIndex, multiFeatureIndex, geometryIndex) {\n      if (featureIndex === 0 && initialValue === void 0)\n        previousValue = currentLine;\n      else\n        previousValue = callback(\n          previousValue,\n          currentLine,\n          featureIndex,\n          multiFeatureIndex,\n          geometryIndex\n        );\n    }\n  );\n  return previousValue;\n}\nfunction findSegment(geojson, options) {\n  options = options || {};\n  if (!isObject(options)) throw new Error(\"options is invalid\");\n  var featureIndex = options.featureIndex || 0;\n  var multiFeatureIndex = options.multiFeatureIndex || 0;\n  var geometryIndex = options.geometryIndex || 0;\n  var segmentIndex = options.segmentIndex || 0;\n  var properties = options.properties;\n  var geometry;\n  switch (geojson.type) {\n    case \"FeatureCollection\":\n      if (featureIndex < 0)\n        featureIndex = geojson.features.length + featureIndex;\n      properties = properties || geojson.features[featureIndex].properties;\n      geometry = geojson.features[featureIndex].geometry;\n      break;\n    case \"Feature\":\n      properties = properties || geojson.properties;\n      geometry = geojson.geometry;\n      break;\n    case \"Point\":\n    case \"MultiPoint\":\n      return null;\n    case \"LineString\":\n    case \"Polygon\":\n    case \"MultiLineString\":\n    case \"MultiPolygon\":\n      geometry = geojson;\n      break;\n    default:\n      throw new Error(\"geojson is invalid\");\n  }\n  if (geometry === null) return null;\n  var coords = geometry.coordinates;\n  switch (geometry.type) {\n    case \"Point\":\n    case \"MultiPoint\":\n      return null;\n    case \"LineString\":\n      if (segmentIndex < 0) segmentIndex = coords.length + segmentIndex - 1;\n      return lineString(\n        [coords[segmentIndex], coords[segmentIndex + 1]],\n        properties,\n        options\n      );\n    case \"Polygon\":\n      if (geometryIndex < 0) geometryIndex = coords.length + geometryIndex;\n      if (segmentIndex < 0)\n        segmentIndex = coords[geometryIndex].length + segmentIndex - 1;\n      return lineString(\n        [\n          coords[geometryIndex][segmentIndex],\n          coords[geometryIndex][segmentIndex + 1]\n        ],\n        properties,\n        options\n      );\n    case \"MultiLineString\":\n      if (multiFeatureIndex < 0)\n        multiFeatureIndex = coords.length + multiFeatureIndex;\n      if (segmentIndex < 0)\n        segmentIndex = coords[multiFeatureIndex].length + segmentIndex - 1;\n      return lineString(\n        [\n          coords[multiFeatureIndex][segmentIndex],\n          coords[multiFeatureIndex][segmentIndex + 1]\n        ],\n        properties,\n        options\n      );\n    case \"MultiPolygon\":\n      if (multiFeatureIndex < 0)\n        multiFeatureIndex = coords.length + multiFeatureIndex;\n      if (geometryIndex < 0)\n        geometryIndex = coords[multiFeatureIndex].length + geometryIndex;\n      if (segmentIndex < 0)\n        segmentIndex = coords[multiFeatureIndex][geometryIndex].length - segmentIndex - 1;\n      return lineString(\n        [\n          coords[multiFeatureIndex][geometryIndex][segmentIndex],\n          coords[multiFeatureIndex][geometryIndex][segmentIndex + 1]\n        ],\n        properties,\n        options\n      );\n  }\n  throw new Error(\"geojson is invalid\");\n}\nfunction findPoint(geojson, options) {\n  options = options || {};\n  if (!isObject(options)) throw new Error(\"options is invalid\");\n  var featureIndex = options.featureIndex || 0;\n  var multiFeatureIndex = options.multiFeatureIndex || 0;\n  var geometryIndex = options.geometryIndex || 0;\n  var coordIndex = options.coordIndex || 0;\n  var properties = options.properties;\n  var geometry;\n  switch (geojson.type) {\n    case \"FeatureCollection\":\n      if (featureIndex < 0)\n        featureIndex = geojson.features.length + featureIndex;\n      properties = properties || geojson.features[featureIndex].properties;\n      geometry = geojson.features[featureIndex].geometry;\n      break;\n    case \"Feature\":\n      properties = properties || geojson.properties;\n      geometry = geojson.geometry;\n      break;\n    case \"Point\":\n    case \"MultiPoint\":\n      return null;\n    case \"LineString\":\n    case \"Polygon\":\n    case \"MultiLineString\":\n    case \"MultiPolygon\":\n      geometry = geojson;\n      break;\n    default:\n      throw new Error(\"geojson is invalid\");\n  }\n  if (geometry === null) return null;\n  var coords = geometry.coordinates;\n  switch (geometry.type) {\n    case \"Point\":\n      return point(coords, properties, options);\n    case \"MultiPoint\":\n      if (multiFeatureIndex < 0)\n        multiFeatureIndex = coords.length + multiFeatureIndex;\n      return point(coords[multiFeatureIndex], properties, options);\n    case \"LineString\":\n      if (coordIndex < 0) coordIndex = coords.length + coordIndex;\n      return point(coords[coordIndex], properties, options);\n    case \"Polygon\":\n      if (geometryIndex < 0) geometryIndex = coords.length + geometryIndex;\n      if (coordIndex < 0)\n        coordIndex = coords[geometryIndex].length + coordIndex;\n      return point(coords[geometryIndex][coordIndex], properties, options);\n    case \"MultiLineString\":\n      if (multiFeatureIndex < 0)\n        multiFeatureIndex = coords.length + multiFeatureIndex;\n      if (coordIndex < 0)\n        coordIndex = coords[multiFeatureIndex].length + coordIndex;\n      return point(coords[multiFeatureIndex][coordIndex], properties, options);\n    case \"MultiPolygon\":\n      if (multiFeatureIndex < 0)\n        multiFeatureIndex = coords.length + multiFeatureIndex;\n      if (geometryIndex < 0)\n        geometryIndex = coords[multiFeatureIndex].length + geometryIndex;\n      if (coordIndex < 0)\n        coordIndex = coords[multiFeatureIndex][geometryIndex].length - coordIndex;\n      return point(\n        coords[multiFeatureIndex][geometryIndex][coordIndex],\n        properties,\n        options\n      );\n  }\n  throw new Error(\"geojson is invalid\");\n}\nexport {\n  coordAll,\n  coordEach,\n  coordReduce,\n  featureEach,\n  featureReduce,\n  findPoint,\n  findSegment,\n  flattenEach,\n  flattenReduce,\n  geomEach,\n  geomReduce,\n  lineEach,\n  lineReduce,\n  propEach,\n  propReduce,\n  segmentEach,\n  segmentReduce\n};\n//# sourceMappingURL=index.js.map","// index.ts\nimport {\n  lineString,\n  multiLineString,\n  multiPolygon,\n  polygon\n} from \"@turf/helpers\";\nimport { getGeom } from \"@turf/invariant\";\n\n// lib/lineclip.ts\nfunction lineclip(points, bbox, result) {\n  var len = points.length, codeA = bitCode(points[0], bbox), part = [], i, codeB, lastCode;\n  let a;\n  let b;\n  if (!result) result = [];\n  for (i = 1; i < len; i++) {\n    a = points[i - 1];\n    b = points[i];\n    codeB = lastCode = bitCode(b, bbox);\n    while (true) {\n      if (!(codeA | codeB)) {\n        part.push(a);\n        if (codeB !== lastCode) {\n          part.push(b);\n          if (i < len - 1) {\n            result.push(part);\n            part = [];\n          }\n        } else if (i === len - 1) {\n          part.push(b);\n        }\n        break;\n      } else if (codeA & codeB) {\n        break;\n      } else if (codeA) {\n        a = intersect(a, b, codeA, bbox);\n        codeA = bitCode(a, bbox);\n      } else {\n        b = intersect(a, b, codeB, bbox);\n        codeB = bitCode(b, bbox);\n      }\n    }\n    codeA = lastCode;\n  }\n  if (part.length) result.push(part);\n  return result;\n}\nfunction polygonclip(points, bbox) {\n  var result, edge, prev, prevInside, i, p, inside;\n  for (edge = 1; edge <= 8; edge *= 2) {\n    result = [];\n    prev = points[points.length - 1];\n    prevInside = !(bitCode(prev, bbox) & edge);\n    for (i = 0; i < points.length; i++) {\n      p = points[i];\n      inside = !(bitCode(p, bbox) & edge);\n      if (inside !== prevInside) result.push(intersect(prev, p, edge, bbox));\n      if (inside) result.push(p);\n      prev = p;\n      prevInside = inside;\n    }\n    points = result;\n    if (!points.length) break;\n  }\n  return result;\n}\nfunction intersect(a, b, edge, bbox) {\n  return edge & 8 ? [a[0] + (b[0] - a[0]) * (bbox[3] - a[1]) / (b[1] - a[1]), bbox[3]] : edge & 4 ? [a[0] + (b[0] - a[0]) * (bbox[1] - a[1]) / (b[1] - a[1]), bbox[1]] : edge & 2 ? [bbox[2], a[1] + (b[1] - a[1]) * (bbox[2] - a[0]) / (b[0] - a[0])] : edge & 1 ? [bbox[0], a[1] + (b[1] - a[1]) * (bbox[0] - a[0]) / (b[0] - a[0])] : null;\n}\nfunction bitCode(p, bbox) {\n  var code = 0;\n  if (p[0] < bbox[0]) code |= 1;\n  else if (p[0] > bbox[2]) code |= 2;\n  if (p[1] < bbox[1]) code |= 4;\n  else if (p[1] > bbox[3]) code |= 8;\n  return code;\n}\n\n// index.ts\nfunction bboxClip(feature, bbox) {\n  const geom = getGeom(feature);\n  const type = geom.type;\n  const properties = feature.type === \"Feature\" ? feature.properties : {};\n  let coords = geom.coordinates;\n  switch (type) {\n    case \"LineString\":\n    case \"MultiLineString\": {\n      const lines = [];\n      if (type === \"LineString\") {\n        coords = [coords];\n      }\n      coords.forEach((line) => {\n        lineclip(line, bbox, lines);\n      });\n      if (lines.length === 1) {\n        return lineString(lines[0], properties);\n      }\n      return multiLineString(lines, properties);\n    }\n    case \"Polygon\":\n      return polygon(clipPolygon(coords, bbox), properties);\n    case \"MultiPolygon\":\n      return multiPolygon(\n        coords.map((poly) => {\n          return clipPolygon(poly, bbox);\n        }),\n        properties\n      );\n    default:\n      throw new Error(\"geometry \" + type + \" not supported\");\n  }\n}\nfunction clipPolygon(rings, bbox) {\n  const outRings = [];\n  for (const ring of rings) {\n    const clipped = polygonclip(ring, bbox);\n    if (clipped.length > 0) {\n      if (clipped[0][0] !== clipped[clipped.length - 1][0] || clipped[0][1] !== clipped[clipped.length - 1][1]) {\n        clipped.push(clipped[0]);\n      }\n      if (clipped.length >= 4) {\n        outRings.push(clipped);\n      }\n    }\n  }\n  return outRings;\n}\nvar turf_bbox_clip_default = bboxClip;\nexport {\n  bboxClip,\n  turf_bbox_clip_default as default\n};\n//# sourceMappingURL=index.js.map","import polylabel from 'polylabel'\nimport { area as turfArea } from '@turf/area'\nimport { distance as turfDistance } from '@turf/distance'\nimport { point as TurfPoint, polygon as TurfPolygon, multiPolygon as TurfMultiPolygon } from '@turf/helpers'\nimport { bboxClip as TurfBboxClip } from '@turf/bbox-clip'\nimport { getFocusBounds } from '../../lib/viewport'\nimport { defaults } from './constants'\n\nfunction getPaddedBounds () {\n  const { map } = this\n  const padding = map.getPadding()\n  const bounds = map.getBounds()\n\n  // Get the pixel coordinates for the current bounds\n  const sw = map.project([bounds.getWest(), bounds.getSouth()])\n  const ne = map.project([bounds.getEast(), bounds.getNorth()])\n\n  // Adjust for padding\n  sw.x += padding.left\n  sw.y -= padding.bottom\n  ne.x -= padding.right\n  ne.y += padding.top\n\n  // Convert back to geographical coordinates\n  const paddedSW = map.unproject(sw)\n  const paddedNE = map.unproject(ne)\n\n  // Create new bounds\n  const paddedBounds = [[paddedSW.lng, paddedSW.lat], [paddedNE.lng, paddedNE.lat]]\n\n  return paddedBounds.flat(1)\n}\n\nfunction addFeatureProperties (features) {\n  const { map } = this\n  return features.map(f => {\n    const { lng, lat } = map.getCenter()\n    const coord = f.geometry.type === 'Polygon' ? polylabel(f.geometry.coordinates, 0.00001) : f.geometry.coordinates\n    const p1 = new TurfPoint([coord[0], coord[1]])\n    const p2 = new TurfPoint([lng, lat])\n    const distance = turfDistance(p1, p2, { units: 'metres' })\n    return {\n      ...f.properties,\n      id: f.properties.id || f.id,\n      geometryType: f.geometry.type,\n      coord,\n      distance\n    }\n  })\n}\n\nfunction intersectFeatures (bounds, features) {\n  features = features.map(f => {\n    if (['Polygon', 'MultiPolygon'].includes(f.geometry.type)) {\n      const polygon = f.geometry.type === 'Polygon' ? new TurfPolygon(f.geometry.coordinates) : new TurfMultiPolygon(f.geometry.coordinates)\n      const clipped = TurfBboxClip(polygon, bounds)\n      // Remove empty rings\n      clipped.geometry.coordinates = clipped.geometry.coordinates.filter(c => c.length)\n      // const clippedGeometry = martinez.intersection(boundsPolygon.geometry.coordinates, f.geometry.coordinates)\n      f.geometry = clipped.geometry\n    }\n    return f\n  })\n  return features\n}\n\nfunction combineFeatures (features) {\n  const combined = []\n  features.forEach(f => {\n    const group = combined.find(c => c.length && ((f.id && f.id === c[0].id) || (f.properties.id && f.properties.id === c[0].properties.id)))\n    if (f.geometry.type === 'MultiPolygon') {\n      // Get largest single polygon, outer shape (excluding holes) and add area\n      const parts = f.geometry.coordinates.map(c => {\n        const polygon = new TurfPolygon([c[0]])\n        polygon.properties = { area: turfArea(polygon) }\n        return polygon\n      })\n      const largest = parts.find(p => p.properties.area === Math.max(...parts.map(b => b.properties.area)))\n      f.geometry = largest.geometry\n      f.properties.area = largest.properties.area\n    } else if (f.geometry.type === 'Polygon') {\n      // Get out shape (excluding holes) and add area\n      const polygon = new TurfPolygon([f.geometry.coordinates[0]])\n      f.properties.area = turfArea(polygon)\n      f.geometry = polygon.geometry\n    } else {\n      f.properties.area = 0\n    }\n    group?.push(f) || combined.push([f])\n  })\n  // Return largest single polygon\n  return combined.map(g => g.find(f => f.properties.area === Math.max(...g.map(b => b.properties.area))))\n}\n\nfunction getViewport () {\n  const { map } = this\n  const bounds = map.getBounds().toArray().flat(1)\n  const focusBounds = getPaddedBounds.bind(this)()\n  let center = map.getCenter()\n  let zoom = map.getZoom()\n  center = center.toArray().map(n => parseFloat(n.toFixed(defaults.PRECISION)))\n  zoom = parseFloat(zoom.toFixed(defaults.PRECISION))\n  const isMaxZoom = map.getZoom() >= map.getMaxZoom()\n  const isMinZoom = map.getZoom() <= map.getMinZoom()\n\n  return {\n    bounds,\n    focusBounds,\n    center,\n    zoom,\n    isMaxZoom,\n    isMinZoom\n  }\n}\n\nexport function addMapHoverBehaviour () {\n  const { map, featureLayers, labelLayers } = this\n\n  // Toggle cursor style for features\n  map.on('mousemove', [...featureLayers, ...labelLayers], e => {\n    const features = map.queryRenderedFeatures(e.point, { layers: [...featureLayers, ...labelLayers] })\n    const isFeature = !e.originalEvent.altKey && features && !!features.find(f => featureLayers.includes(f.layer.id))\n    const isLabel = e.originalEvent.altKey && features && !!features.find(f => labelLayers.includes(f.layer.id))\n    map.getCanvas().style.cursor = isFeature || isLabel ? 'pointer' : ''\n  })\n\n  // Revert cursor on mouseout\n  map.on('mouseout', [...featureLayers, ...labelLayers], () => { map.getCanvas().style.cursor = '' })\n}\n\nexport async function getDetail (pixel) {\n  const { selectedLayers } = this\n  const viewport = getViewport.bind(this)()\n  const features = getFeatures.bind(this)(pixel)\n  const label = getHighlightedLabel.bind(this)()\n  const selectedId = getSelectedFeatureId.bind(this)(selectedLayers)\n\n  return {\n    ...viewport,\n    resultType: features.resultType,\n    coord: features.coord,\n    selectedId,\n    features,\n    label\n  }\n}\n\nexport function getFeatures (pixel) {\n  const { map, featureLayers, locationLayers, paddingBox, scale } = this\n  const bounds = getFocusBounds(paddingBox, scale)\n\n  // Get all visible feature and pixel layers\n  let layers = [...featureLayers, ...locationLayers]\n  layers = map.getStyle()?.layers.filter(l => layers.includes(l?.id) && l?.layout?.visibility !== 'none').map(l => l.id)\n\n  // Get all features at given pixel\n  let featuresAtPixel = map.queryRenderedFeatures(pixel, { layers })\n\n  featuresAtPixel = (featuresAtPixel.map(f => {\n    return {\n      ...f.properties,\n      id: f.properties.id || f.id,\n      name: f.properties.name,\n      layer: f.layer.id\n    }\n  }))\n\n  // Get all 'featureLayer' features in the viewport\n  const renderedFeaturesInViewport = map.queryRenderedFeatures({ layers: featureLayers })\n\n  // Get total 'featureLayer' features in viewport (May be more than 9)\n  const featuresTotal = Array.from(new Set(renderedFeaturesInViewport.map(f => f.properties.id || f.id))).length\n\n  // Get all 'featureLayer' features in the padded bounds\n  const renderedFeaturesInPadding = map.queryRenderedFeatures(bounds, { layers: featureLayers })\n\n  // Get total 'featureLayer' features in padding bounds (May be more than 9)\n  const featuresFocusTotal = Array.from(new Set(renderedFeaturesInPadding.map(f => f.properties.id || f.id))).length\n\n  // Get geometry that intersects bounds\n  const intersectingFocusFeatures = intersectFeatures(getPaddedBounds.bind(this)(), renderedFeaturesInPadding)\n\n  // Split multi polygons and combine duplicate features\n  const viewportPolygonFeatures = featuresFocusTotal <= defaults.MAX_FEATURES ? combineFeatures(renderedFeaturesInViewport) : []\n  const focusPolygonFeatures = featuresFocusTotal <= defaults.MAX_FEATURES ? combineFeatures(intersectingFocusFeatures) : []\n\n  // Add props and sort features\n  const featuresInViewport = renderedFeaturesInViewport.length <= defaults.MAX_FEATURES ? addFeatureProperties.bind(this)(viewportPolygonFeatures) : []\n  const featuresInFocus = addFeatureProperties.bind(this)(focusPolygonFeatures).sort((a, b) => a.distance - b.distance)\n\n  // Get long lat of query\n  let lngLat\n  if (pixel) {\n    lngLat = map.unproject(pixel)\n    lngLat = [lngLat.lng, lngLat.lat]\n    lngLat = lngLat.map(c => Math.round(c * Math.pow(10, defaults.PRECISION)) / Math.pow(10, defaults.PRECISION))\n  }\n\n  // Set 'features' result type\n  const feature = featuresAtPixel.length ? featuresAtPixel[0] : null\n  const featureType = (featureLayers?.includes(feature?.layer) && 'feature') || (locationLayers?.includes(feature?.layer) && 'pixel')\n  const hasFeatureLayers = layers?.some(l => featureLayers?.includes(l))\n  const hasPixelLayers = layers?.some(l => locationLayers?.includes(l))\n  const resultType = featureType || (hasPixelLayers ? 'pixel' : null)\n\n  return {\n    resultType,\n    items: featuresAtPixel,\n    featuresTotal,\n    featuresInViewport,\n    featuresFocusTotal,\n    featuresInFocus,\n    isFeaturesInMap: hasFeatureLayers,\n    isPixelFeaturesAtPixel: locationLayers?.includes(feature?.layer),\n    isPixelFeaturesInMap: hasPixelLayers,\n    coord: lngLat\n  }\n}\n\nexport function toggleSelectedFeature (id) {\n  const { map, selectedLayers } = this\n  if (map?.getStyle()) {\n    for (const layer of selectedLayers) {\n      map.setLayoutProperty(layer, 'visibility', id ? 'visible' : 'none')\n      map.setFilter(layer, [\n        'any',\n        ['==', ['id'], id || ''],\n        ['==', ['get', 'id'], id || '']\n      ])\n    }\n  }\n}\n\nexport function getHighlightedLabel () {\n  const { map } = this\n  const features = map.queryRenderedFeatures({ layers: ['label'] })\n  let text\n  if (features?.length) {\n    const label = map.getStyle()?.layers.find(l => l.id === 'label')?.layout['text-field']\n    text = `${label} (${features[0].properties.layer})`\n  }\n  return text\n}\n\nexport function getSelectedFeatureId (selectedLayers) {\n  const { map } = this\n  const features = map.queryRenderedFeatures({ layers: selectedLayers })\n  return features.length ? (features[0].properties?.id || features[0]?.id) : null\n}\n\nexport function getLabel (pixel) {\n  const { map, labelLayers } = this\n  const feature = map.queryRenderedFeatures(pixel, { layers: labelLayers })[0]\n  return feature\n}\n\nexport function getLabels () {\n  const { map, paddingBox, scale } = this\n  const bounds = getFocusBounds(paddingBox, scale)\n  const features = map.queryRenderedFeatures(bounds, { layers: this.labelLayers })\n  const labels = features.map(f => {\n    let pixel = f.geometry.type === 'Point' && map.project(f.geometry.coordinates)\n    if (f.geometry.type !== 'Point') {\n      const coordinates = f.geometry.coordinates.flat(f.geometry.type === 'MultiLineString' ? 1 : 0)\n      const pixels = coordinates.map(c => map.project(c))\n      const xS = pixels.map(p => p.x)\n      const yS = pixels.map(p => p.y)\n      const centerX = ((Math.max(...xS) - Math.min(...xS)) / 2) + Math.min(...xS)\n      const centerY = ((Math.max(...yS) - Math.min(...yS)) / 2) + Math.min(...yS)\n      pixel = { x: centerX, y: centerY }\n    }\n    return {\n      feature: f,\n      pixel: [pixel.x, pixel.y]\n    }\n  })\n  return labels\n}\n","export const locationMarkerHTML = () => {\n  const el = document.createElement('div')\n  el.className = 'fm-c-marker fm-c-marker--location'\n  el.innerHTML = '<div class=\"fm-c-marker__inner\"><svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" fill=\"currentColor\"><circle cx=\"10\" cy=\"10\" r=\"8\" stroke=\"#fff\" stroke-width=\"3\"/></svg></div>'\n  return el\n}\n\nexport const targetMarkerHTML = () => {\n  const el = document.createElement('div')\n  el.className = 'fm-c-marker fm-c-marker--target'\n  el.innerHTML = `<div class=\"fm-c-marker__inner\">\n    <svg width=\"38\" height=\"38\" viewBox=\"0 0 38 38\" fill-rule=\"evenodd\" fill=\"currentColor\">\n      <path d=\"M5.035 20H1v-2h4.035C5.525 11.069 11.069 5.525 18 5.035V1h2v4.035c6.931.49 12.475 6.034 12.965 12.965H37v2h-4.035c-.49 6.931-6.034 12.475-12.965 12.965V37h-2v-4.035C11.069 32.475 5.525 26.931 5.035 20zM19 7A12.01 12.01 0 0 0 7 19a12.01 12.01 0 0 0 12 12 12.01 12.01 0 0 0 12-12A12.01 12.01 0 0 0 19 7zm0 10a2 2 0 1 1 0 4 2 2 0 1 1 0-4z\"/>\n      <path d=\"M5.035 20H1v-2h4.035a14.02 14.02 0 0 1 .246-1.8l1.96.399C7.083 17.375 7 18.178 7 19s.083 1.625.241 2.401l-1.96.399a14.02 14.02 0 0 1-.246-1.8zM20 5.035a14.02 14.02 0 0 1 1.8.246l-.399 1.96C20.625 7.083 19.822 7 19 7s-1.625.083-2.401.241l-.399-1.96a14.02 14.02 0 0 1 1.8-.246V1h2v4.035zm-2 27.93a14.02 14.02 0 0 1-1.8-.246l.399-1.96c.776.158 1.579.241 2.401.241s1.625-.083 2.401-.241l.399 1.96a14.02 14.02 0 0 1-1.8.246V37h-2v-4.035zM32.965 20a14.02 14.02 0 0 1-.246 1.8l-1.96-.399c.158-.776.241-1.579.241-2.401s-.083-1.625-.241-2.401l1.96-.399a14.02 14.02 0 0 1 .246 1.8H37v2h-4.035zM19 17a2 2 0 1 1 0 4 2 2 0 1 1 0-4zm3.8-9.385l.634-1.897a13.98 13.98 0 0 1 4.848 2.805l-1.327 1.496c-1.196-1.06-2.605-1.886-4.155-2.404zm5.181 3.43l1.496-1.327a13.98 13.98 0 0 1 2.805 4.848l-1.897.634c-.518-1.55-1.344-2.959-2.404-4.155zM30.385 22.8l1.897.634a13.98 13.98 0 0 1-2.805 4.848l-1.496-1.327c1.06-1.196 1.886-2.605 2.404-4.155zm-3.43 5.181l1.327 1.496a13.98 13.98 0 0 1-4.848 2.805l-.634-1.897c1.55-.518 2.959-1.344 4.155-2.404zM15.2 30.385l-.634 1.897a13.98 13.98 0 0 1-4.848-2.805l1.327-1.496c1.196 1.06 2.605 1.886 4.155 2.404zm-5.181-3.43l-1.496 1.327a13.98 13.98 0 0 1-2.805-4.848l1.897-.634c.518 1.55 1.344 2.959 2.404 4.155zM7.615 15.2l-1.897-.634a13.98 13.98 0 0 1 2.805-4.848l1.496 1.327c-1.06 1.196-1.886 2.605-2.404 4.155zm3.43-5.181L9.718 8.523a13.98 13.98 0 0 1 4.848-2.805l.634 1.897c-1.55.518-2.959 1.344-4.155 2.404z\"/>\n    </svg>\n  </div>`\n  return el\n}\n\nexport const shortcutMarkerHTML = (key) => {\n  const el = document.createElement('div')\n  el.className = 'fm-c-marker fm-c-marker--shortcut'\n  el.innerHTML = `<div class=\"fm-c-marker__inner\">${key}</div>`\n  return el\n}\n","import computedStyleToInlineStyle from 'computed-style-to-inline-style'\nimport { defaults } from './constants'\nimport { shortcutMarkerHTML } from './marker'\nimport { parseSVG } from '../../lib/symbols'\n\nconst SYMBOL_PLACEMENT = 'symbol-placement'\nconst TEXT_FIELD = 'text-field'\nconst SCALE_FACTOR_SMALL = 1.5\nconst SCALE_FACTOR_LARGE = 1.25\n\nexport function amendLineSymbolLayers () {\n  const { map } = this\n  const lineSymbolLayers = map.getStyle().layers.filter(l => l.layout && (SYMBOL_PLACEMENT in l.layout) && l.layout[SYMBOL_PLACEMENT] === 'line')\n  lineSymbolLayers.forEach(l => map.setLayoutProperty(l.id, SYMBOL_PLACEMENT, 'line-center'))\n}\n\nexport function addHighlightedLabelLayer () {\n  const { map } = this\n  const layers = map.getStyle().layers\n  this.labelLayers = layers.filter(l => l.id !== 'label' && l.layout ? l.layout[TEXT_FIELD] : null).map(l => l.id)\n  map.addSource('label', { type: 'geojson', data: { type: 'FeatureCollection', features: [] } })\n  map.addLayer({\n    id: 'label',\n    type: 'symbol',\n    source: 'label',\n    layout: {\n      'text-allow-overlap': true,\n      'text-ignore-placement': true\n    },\n    paint: {\n      'text-halo-width': 3,\n      'text-halo-blur': 1,\n      'text-opacity': 1\n    }\n  })\n}\n\nexport function addShortcutMarkers (features) {\n  const { map, shortcutMarkers } = this\n  const { Marker } = this.modules\n  shortcutMarkers.forEach(m => m.remove())\n  features.forEach((f, i) => {\n    const offset = f.geometryType === 'Point' ? [0, defaults.SHORTCUT_LABEL_OFFSET] : [0, 0]\n    shortcutMarkers.push(new Marker({ element: shortcutMarkerHTML(i + 1), offset }).setLngLat(f.coord).addTo(map))\n  })\n}\n\nexport function highlightLabel (feature) {\n  const { map, scale, style } = this\n\n  if (!map.style) {\n    return\n  }\n\n  if (feature) {\n    map.moveLayer('label')\n    map.getSource('label').setData({\n      type: 'Feature',\n      geometry: feature.geometry,\n      properties: {\n        ...feature.properties,\n        layer: feature.layer.id\n      }\n    })\n    // Clone layout properties\n    const textScale = scale === 1 ? SCALE_FACTOR_SMALL : SCALE_FACTOR_LARGE\n    const textField = feature.layer.layout[TEXT_FIELD]\n    map.setLayoutProperty('label', SYMBOL_PLACEMENT, feature.layer.layout[SYMBOL_PLACEMENT])\n    map.setLayoutProperty('label', TEXT_FIELD, textField.sections ? textField.sections[0].text : textField)\n    map.setLayoutProperty('label', 'text-font', feature.layer.layout['text-font'])\n    map.setLayoutProperty('label', 'text-letter-spacing', feature.layer.layout['text-letter-spacing'])\n    map.setLayoutProperty('label', 'text-size', feature.layer.layout['text-size'] * textScale)\n    map.setLayoutProperty('label', 'text-anchor', feature.layer.layout['text-anchor'])\n    map.setLayoutProperty('label', 'text-justify', feature.layer.layout['text-justify'])\n    map.setLayoutProperty('label', 'text-offset', feature.layer.layout['text-offset']?.map(o => o / textScale))\n    // Clone paint properties\n    map.setPaintProperty('label', 'text-color', (style === 'dark' ? '#ffffff' : '#000000'))\n    map.setPaintProperty('label', 'text-halo-color', (style === 'dark' ? '#000000' : '#ffffff'))\n  } else {\n    map?.getSource('label')?.setData({\n      type: 'FeatureCollection',\n      features: []\n    })\n  }\n}\n\nexport function addSelectedLayers (layers, selectedId, isDarkBasemap) {\n  const { map } = this\n  const selectedLayers = []\n  for (const layer of layers) {\n    layer.id = `${layer.id}-selected`\n    layer.filter = ['==', 'id', selectedId || '']\n    if (layer.type === 'symbol') {\n      layer.layout['icon-image'] = ['concat', layer.layout['icon-image'], '-selected']\n    }\n    if (layer.type === 'fill') {\n      layer.paint = { 'line-color': isDarkBasemap ? '#ffffff' : '#0b0c0c', 'line-width': 2 }\n      layer.type = 'line'\n    }\n    if (map.getLayer(layer.id)) {\n      map.removeLayer(layer.id)\n    }\n    selectedLayers.push(layer.id)\n    setTimeout(() => map.addLayer(layer), 0)\n  }\n  return selectedLayers\n}\n\nexport function loadSymbols () {\n  let fn\n  if (this.symbols?.length) {\n    const { map, symbols, style } = this\n    const isDarkBasemap = ['dark', 'aerial'].includes(style.name)\n\n    fn = Promise.all(symbols.map(u => fetch(u))).then(responses =>\n      Promise.all(responses.map(r => r.text()))\n    ).then(texts => Promise.all(texts.map((t, i) => loadImage(getName(symbols[i]), t, map, isDarkBasemap))\n      .concat(texts.map((t, i) => loadImage(`${getName(symbols[i])}-selected`, t, map, isDarkBasemap)))\n    ))\n  }\n  return fn\n}\n\nconst getName = path => {\n  const extNumChars = 4\n  return path.split('\\\\').pop().split('/').pop().slice(0, -Math.abs(extNumChars))\n}\n\nconst loadImage = (name, text, map, isDarkBasemap) => {\n  const parsed = parseSVG(name, null, text, isDarkBasemap, 2)\n  const container = map.getCanvasContainer()\n  container.insertAdjacentHTML('beforeend', parsed)\n  const el = container.lastChild\n  computedStyleToInlineStyle(el, { recursive: true, properties: ['stroke', 'fill'] })\n  const base64 = 'data:image/svg+xml;base64,' + btoa(container.lastChild.outerHTML)\n  const img = document.createElement('img')\n  el?.remove()\n  return new Promise((resolve, reject) => {\n    img.onload = () => {\n      try {\n        if (map?.hasImage(name)) {\n          return\n        }\n        map.addImage(name, img)\n        resolve(img)\n      } catch (err) {\n        console.log(err)\n      }\n    }\n    img.onerror = reject\n    img.src = base64\n  })\n}\n","import { getDetail, addMapHoverBehaviour } from './query'\nimport { loadSymbols, addHighlightedLabelLayer, amendLineSymbolLayers, addShortcutMarkers, addSelectedLayers } from './symbols'\n\nexport const getResolution = (map) => {\n  const center = map.getCenter()\n  const zoom = map.getZoom()\n  const lat = center.lat\n  const EARTH_CIRCUMFERENCE = 40075016.686\n  const TILE_SIZE = 512\n  const scale = Math.pow(2, zoom)\n  const resolution = (EARTH_CIRCUMFERENCE * Math.cos((lat * Math.PI) / 180)) / (scale * TILE_SIZE)\n  return resolution\n}\n\nexport const getAttributions = (map) => {\n  const style = map.getStyle()\n  if (!style) {\n    return []\n  }\n\n  const currentZoom = map.getZoom()\n  const activeAttributions = new Set()\n\n  // Check each layer for visibility at current zoom\n  style.layers.forEach(layer => {\n    // Skip layers without a source\n    if (!layer.source) return\n\n    // Check if layer is visible based on zoom and visibility property\n    const minZoom = layer.minzoom !== undefined ? layer.minzoom : 0\n    const maxZoom = layer.maxzoom !== undefined ? layer.maxzoom : 24\n    const isVisible = currentZoom >= minZoom && currentZoom < maxZoom && (!layer.layout || layer.layout.visibility !== 'none')\n\n    // If layer is visible, get attribution from its source\n    if (isVisible) {\n      const source = style.sources[layer.source]\n      if (source && source.attribution) {\n        activeAttributions.add(source.attribution)\n      }\n    }\n  })\n\n  return Array.from(activeAttributions)\n}\n\nexport async function handleLoad () {\n  const { map } = this\n  await loadSymbols.bind(this)()\n  this.isLoaded = true\n  const resolution = getResolution(map)\n  const zoom = map.getZoom()\n  const attributions = getAttributions(map)\n  this.dispatchEvent(new CustomEvent('load', {\n    detail: {\n      framework: { map },\n      resolution,\n      zoom,\n      attributions\n    }\n  }))\n}\n\nexport async function handleStyleLoad () {\n  const { map } = this\n  // Store ref to baselayers when a new style is loaded\n  this.baseLayers = map.getStyle().layers\n  // Amend symbol-placement prop so labels have a coordinate\n  amendLineSymbolLayers.bind(this)()\n  // Add highlighted label layer and source\n  addHighlightedLabelLayer.bind(this)()\n  // Change cursor type on feature hover\n  addMapHoverBehaviour.bind(this)(this.featureLayers, this.labelLayers)\n  if (this.isLoaded) {\n    await loadSymbols.bind(this)()\n    this.dispatchEvent(new CustomEvent('style', {\n      detail: {\n        type: 'style'\n      }\n    }))\n  }\n}\n\nexport async function handleIdle () {\n  if (this.map) {\n    const { map, paddingBox, selectedId, scale } = this\n    const { offsetTop, offsetLeft, offsetWidth, offsetHeight } = paddingBox\n    const { offsetTop: parentOffsetTop, offsetLeft: parentOffsetLeft } = paddingBox.parentNode\n    const pixel = [offsetLeft + parentOffsetLeft + (offsetWidth / 2), offsetTop + parentOffsetTop + (offsetHeight / 2)].map(c => c / scale)\n    const detail = await getDetail.bind(this)(selectedId ? null : pixel)\n    const attributions = getAttributions(map)\n    addShortcutMarkers.bind(this)(detail?.features?.featuresInFocus)\n    this.dispatchEvent(new CustomEvent('update', {\n      detail: {\n        ...detail,\n        attributions\n      }\n    }))\n  }\n}\n\nexport async function handleMoveStart (e) {\n  this.hideLabel()\n  this.dispatchEvent(new CustomEvent('movestart', {\n    detail: {\n      isUserInitiated: e.isUserInitiated || !!e.originalEvent\n    }\n  }))\n}\n\nexport function handleMove () {\n  const { map } = this\n  const isMaxZoom = map.getZoom() >= map.getMaxZoom()\n  const isMinZoom = map.getZoom() <= map.getMinZoom()\n  const zoom = map.getZoom()\n  const resolution = getResolution(map)\n  const attributions = getAttributions(map)\n\n  // Need to include maxBounds check as this can also constrain zoom\n  this.dispatchEvent(new CustomEvent('move', {\n    detail: {\n      isMaxZoom,\n      isMinZoom,\n      zoom,\n      resolution,\n      attributions\n    }\n  }))\n}\n\nexport function handleStyleData (e) {\n  if (this.baseLayers.length) {\n    const { map, style, selectedId } = this\n    const featureLayers = e.target.getStyle().layers.filter(l => this.featureLayers.includes(l.id))\n    const selectedLayers = map.getStyle().layers.filter(l => l.id.includes('selected'))\n    if (selectedLayers.length !== featureLayers.length) {\n      const isDarkBasemap = ['dark', 'aerial'].includes(style.name)\n      this.selectedLayers = addSelectedLayers.bind(this)(featureLayers, selectedId, isDarkBasemap)\n    }\n  }\n}\n\nexport function handleError (err) {\n  console.log(err)\n}\n","import { handleLoad, handleMoveStart, handleMove, handleIdle, handleStyleData, handleStyleLoad, handleError } from './events'\nimport { toggleSelectedFeature, getDetail, getLabels, getLabel } from './query'\nimport { locationMarkerHTML, targetMarkerHTML } from './marker'\nimport { highlightLabel } from './symbols'\nimport { getFocusPadding, spatialNavigate, getScale } from '../../lib/viewport'\nimport { debounce } from '../../lib/debounce'\nimport { throttle } from '../../lib/throttle'\nimport { defaults, css } from './constants'\nimport { capabilities } from '../../lib/capabilities.js'\nimport { defaults as storeDefaults } from '../../store/constants.js'\n\nclass Provider extends EventTarget {\n  constructor ({ transformRequest, symbols }) {\n    super()\n    this.srid = 4326\n    this.capabilities = {\n      ...capabilities.default,\n      hasDraw: true,\n      hasSize: !!window.globalThis\n    }\n    this.transformRequest = transformRequest\n    this.symbols = symbols\n    this.baseLayers = []\n    this.selectedId = ''\n    this.selectedCoordinate = null\n    this.isLoaded = false\n  }\n\n  init (options) {\n    if (this.capabilities.isLatest) {\n      import(/* webpackChunkName: \"maplibre\", webpackExports: [\"Map\", \"Marker\", \"LngLatBounds\"] */ 'maplibre-gl').then(module => {\n        this.addMap(module, options)\n      })\n    } else {\n      Promise.all([\n        import(/* webpackChunkName: \"maplibre-legacy\", webpackExports: [\"Map\", \"Marker\", \"LngLatBounds\"] */ 'maplibre-gl-legacy'),\n        import(/* webpackChunkName: \"maplibre-legacy\", webpackExports: [\"install\"] */ 'resize-observer'),\n        import(/* webpackChunkName: \"maplibre-legacy\" */ 'array-flat-polyfill')\n      ]).then(promises => {\n        if (!window.ResizeObserver) {\n          promises[1].install()\n        }\n        this.addMap(promises[0], options)\n      })\n    }\n  }\n\n  remove () {\n    this.map?.remove()\n    this.map = null\n  }\n\n  addMap (module, options) {\n    const { container, paddingBox, bounds, maxBounds, center, zoom, minZoom, maxZoom, style, size, featureLayers, locationLayers, callBack } = options\n    const { Map: MaplibreMap, Marker, LngLatBounds } = module.default\n    const scale = getScale(size)\n\n    const map = new MaplibreMap({\n      ...options,\n      container,\n      style: style?.url,\n      maxBounds: maxBounds || storeDefaults.MAX_BOUNDS_4326,\n      bounds,\n      center,\n      zoom,\n      minZoom,\n      maxZoom,\n      fadeDuration: 0,\n      attributionControl: false,\n      dragRotate: false\n    })\n\n    // Set initial padding, bounds and center (*No option to set in constructor)\n    // map.showPadding = true\n\n    map.setPadding(getFocusPadding(paddingBox, scale))\n    if (bounds) {\n      map.fitBounds(bounds, { animate: false })\n    } else {\n      map.flyTo({ center, zoom, animate: false })\n    }\n\n    // Disable rotation\n    map.touchZoomRotate.disableRotation()\n\n    // Overide device pixel ratio\n    if (map.setPixelRatio) {\n      map.setPixelRatio(window.devicePixelRatio * scale)\n    }\n\n    // Tidy up canvas\n    const canvas = map.getCanvas()\n    canvas.removeAttribute('role')\n    canvas.removeAttribute('tabindex')\n    canvas.removeAttribute('aria-label')\n    canvas.style.display = 'block'\n\n    this.container = container\n    this.map = map\n    this.featureLayers = featureLayers || []\n    this.locationLayers = locationLayers || []\n    this.selectedLayers = []\n    this.paddingBox = paddingBox\n    this.style = style\n    this.scale = scale\n\n    // Add markers\n    this.targetMarker = new Marker({ element: targetMarkerHTML() }).setLngLat([0, 0]).addTo(map)\n    this.locationMarker = new Marker({ element: locationMarkerHTML() }).setLngLat([0, 0]).addTo(map)\n    this.shortcutMarkers = []\n\n    // Return ref to dynamically loaded modules and framework functions\n    this.modules = { MaplibreMap, Marker, LngLatBounds }\n    this.framework = { map }\n\n    // Map ready event (first load)\n    map.on('load', handleLoad.bind(this))\n\n    // Map movestart\n    map.on('movestart', handleMoveStart.bind(this))\n\n    // Detect max/min zoom on move\n    const throttleHandleMove = throttle(() => { handleMove.bind(this)() }, defaults.THROTTLE)\n    map.on('move', throttleHandleMove)\n\n    // Detect map layer addition\n    map.on('styledata', handleStyleData.bind(this))\n\n    // All render/changes/animations complete. Must debounce, min 500ms\n    const debounceHandleIdle = debounce(() => { handleIdle.bind(this)() }, defaults.DELAY)\n    map.on('idle', debounceHandleIdle)\n\n    // Map style change\n    map.on('style.load', handleStyleLoad.bind(this))\n\n    // Capture errors\n    map.on('error', handleError.bind(this))\n\n    // Implementation callback after initialisation\n    if (callBack) {\n      callBack(this)\n    }\n  }\n\n  getPixel (coord) {\n    let pixel\n    if (this.map && coord) {\n      pixel = this.map.project(coord)\n      pixel = [Math.round(pixel.x), Math.round(pixel.y)]\n    }\n    return pixel\n  }\n\n  panBy (offset, isUserInitiated = true) {\n    if (this.map) {\n      this.map.panBy(offset, { ...defaults.ANIMATION }, { isUserInitiated })\n    }\n  }\n\n  panTo (coord) {\n    this.map.flyTo({ center: coord, ...defaults.ANIMATION })\n  }\n\n  zoomIn () {\n    if (this.map) {\n      this.map.zoomIn(defaults.ANIMATION)\n    }\n  }\n\n  zoomOut () {\n    if (this.map) {\n      this.map.zoomOut(defaults.ANIMATION)\n    }\n  }\n\n  setStyle (style) {\n    this.style = style\n    this.map.setStyle(style.url, { diff: false })\n\n    // Udate draw style\n    this.draw?.setStyle?.()\n  }\n\n  setPadding (coord, isAnimate) {\n    if (this.map) {\n      const { map, paddingBox, scale } = this\n      const padding = getFocusPadding(paddingBox, scale)\n      // Search needs to set padding first before fitBounds\n      this.map.setPadding(padding || map.getPadding())\n      // Ease map to new when coord is obscured\n      coord && this.map.easeTo({ center: coord, animate: isAnimate, ...defaults.ANIMATION })\n    }\n  }\n\n  setSize (size) {\n    const scale = getScale(size)\n    this.scale = scale\n    this.setPadding()\n    if (this.map.setPixelRatio) {\n      this.map?.setPixelRatio(window.devicePixelRatio * scale)\n    }\n    setTimeout(() => {\n      this.map.resize()\n      this.dispatchEvent(new CustomEvent('style', {\n        detail: {\n          type: 'size'\n        }\n      }))\n    }, defaults.DELAY)\n  }\n\n  fitBounds (bounds, isAnimate = true) {\n    bounds = [[bounds[0], bounds[1]], [bounds[2], bounds[3]]]\n    this.map.fitBounds(bounds, { animate: isAnimate, linear: true, duration: defaults.ANIMATION.duration })\n  }\n\n  setCentre (coord, _zoom) {\n    if (this.map) {\n      this.map.flyTo({ center: coord, ...defaults.ANIMATION })\n    }\n  }\n\n  initDraw (options) {\n    import(/* webpackChunkName: \"maplibre-draw\" */ './draw.js').then(module => {\n      const Draw = module.default\n      this.draw = new Draw(this, options)\n    })\n  }\n\n  setTargetMarker (coord, hasData, isVisible) {\n    const { targetMarker } = this\n    if (targetMarker) {\n      targetMarker.setLngLat(coord || [0, 0])\n      const el = targetMarker.getElement() // addClassName not supported in v1.15\n      el.classList.toggle('fm-c-marker--has-data', hasData)\n      el.classList.toggle(css.MARKER_VISIBLE, isVisible && coord)\n    }\n  }\n\n  selectFeature (id) {\n    this.selectedId = id\n    toggleSelectedFeature.bind(this)(id)\n  }\n\n  selectCoordinate (coord) {\n    this.selectedCoordinate = coord\n  }\n\n  async queryFeature (id) {\n    if (id) {\n      const detail = await getDetail.bind(this)(null, false)\n      detail.features.items = [detail.features.items.find(f => f.id === id)]\n      this.dispatchEvent(new CustomEvent('mapquery', { detail }))\n    }\n  }\n\n  async queryPoint (point) {\n    const detail = await getDetail.bind(this)(point, this.selectedLayers)\n    this.hideLabel()\n    this.dispatchEvent(new CustomEvent('mapquery', {\n      detail: {\n        resultType: detail.features.resultType,\n        ...detail\n      }\n    }))\n  }\n\n  getGeoLocation (success, error) {\n    navigator.geolocation.getCurrentPosition(async (position) => {\n      let coord = [position.coords.longitude, position.coords.latitude]\n      coord = coord.map(n => parseFloat(n.toFixed(defaults.PRECISION)))\n      // const place = this.getNearest ? await this.getNearest(coord) : null\n      success(coord, null)\n    }, (err) => {\n      console.log(err)\n      error(err)\n    }, {\n      enableHighAccuracy: false\n    })\n  }\n\n  showLocation (coord) {\n    const { locationMarker } = this\n    locationMarker.setLngLat(coord).addClassName(css.MARKER_VISIBLE)\n  }\n\n  showNextLabel (pixel, direction) {\n    const labels = getLabels.bind(this)()\n    const { lng, lat } = this.map.getCenter()\n    const center = this.map.project([lng, lat])\n    const pixels = labels.map(c => c.pixel)\n    const index = spatialNavigate(direction, pixel || [center.x, center.y], pixels)\n    const feature = labels[index]?.feature\n    highlightLabel.bind(this)(feature)\n    return labels[index]?.pixel\n  }\n\n  showLabel (point) {\n    const feature = getLabel.bind(this)(point)\n    highlightLabel.bind(this)(feature)\n    return point\n  }\n\n  hideLabel () {\n    if (this.map) {\n      highlightLabel.bind(this)()\n    }\n  }\n}\n\nexport default Provider\n","export const throttle = (fn, wait) => {\n  let lastCallTime = 0\n  return (...args) => {\n    const now = Date.now()\n    if (now - lastCallTime >= wait) {\n      lastCallTime = now\n      fn(...args)\n    }\n  }\n}\n","export const defaults = {\n  PRECISION: 6,\n  ANIMATION: {\n    duration: 500,\n    curve: 0\n  },\n  DELAY: 500,\n  THROTTLE: 100,\n  MAX_FEATURES: 9,\n  SHORTCUT_LABEL_OFFSET: -30\n}\n\nexport const css = {\n  MARKER_VISIBLE: 'fm-c-marker--visible'\n}\n","const { DOMParser } = window\n\nexport const parseSVG = (icon, fill, text, isDarkBasemap = false, scale = 1) => {\n  const isSelected = icon.includes('selected')\n  // let styled = text.replace(/#0f0|#00ff00|#0F0|#00FF00/g, isSelected ? isDarkBasemap ? '#ffffff' : '#0b0c0c' : 'transparent')\n  // styled = styled.replace(/#00f|#0000ff|#00F|#0000FF/g, isDarkBasemap ? '#162232' : '#ffffff')\n  const parser = new DOMParser()\n  const dom = parser.parseFromString(text, 'text/html')\n  const svg = dom.querySelector('svg')\n  // Add xmlns attribute and class to svg\n  // svg.setAttribute('xmlns', 'http://www.w3.org/2000/svg')\n  svg.classList.add('fm-c-symbol')\n  svg.classList.toggle('fm-c-symbol--selected', isSelected)\n  svg.classList.toggle('fm-c-symbol--dark', isDarkBasemap)\n  // Set svg height and width\n  const viewBox = svg.getAttribute('viewBox')\n  const width = parseInt(viewBox.split(' ')[2], 10) * scale\n  const height = parseInt(viewBox.split(' ')[3], 10) * scale\n  svg.setAttribute('width', width)\n  svg.setAttribute('height', height)\n  // Conditionally add fill\n  if (fill) {\n    svg.setAttribute('fill', fill)\n  }\n  // Add classnames\n  const olFill = svg.querySelectorAll('[fill=\"#0b0c0c\" i], [style*=\"fill:#0b0c0c\" i]')\n  const olStroke = svg.querySelectorAll('[stroke=\"#0b0c0c\" i], [style*=\"stroke:#0b0c0c\" i]')\n  olFill.forEach(n => n.classList.add('fm-c-symbol__ol-fill'))\n  olStroke.forEach(n => n.classList.add('fm-c-symbol__ol-stroke'))\n  const bgFill = svg.querySelectorAll('[fill=\"#fff\" i], [fill=\"#ffffff\" i], [style*=\"fill:#fff\" i], [style*=\"fill:#ffffff\" i]')\n  const bgStroke = svg.querySelectorAll('[stroke*=\"#fff\" i], [stroke*=\"#ffffff\" i], [style*=\"stroke:#fff\" i], [style*=\"stroke:#ffffff\" i]')\n  bgFill.forEach(n => n.classList.add('fm-c-symbol__bg-fill'))\n  bgStroke.forEach(n => n.classList.add('fm-c-symbol__bg-stroke'))\n  const fgFill = svg.querySelectorAll(':not(.fm-c-symbol__ol-fill):not(.fm-c-symbol__bg-fill)[fill], :not(.fm-c-symbol__ol-fill):not(.fm-c-symbol__bg-fill)[style*=\"fill\"]')\n  const fgStroke = svg.querySelectorAll(':not(.fm-c-symbol__ol-stroke):not(.fm-c-symbol__bg-stroke)[stroke], :not(.fm-c-symbol__ol-stroke):not(.fm-c-symbol__bg-stroke)[style*=\"stroke\"]')\n  fgFill.forEach(n => n.classList.add('fm-c-symbol__fg-fill'))\n  fgStroke.forEach(n => n.classList.add('fm-c-symbol__fg-stroke'))\n  return dom.body.innerHTML\n}\n","// index.ts\nimport { isNumber } from \"@turf/helpers\";\nfunction getCoord(coord) {\n  if (!coord) {\n    throw new Error(\"coord is required\");\n  }\n  if (!Array.isArray(coord)) {\n    if (coord.type === \"Feature\" && coord.geometry !== null && coord.geometry.type === \"Point\") {\n      return [...coord.geometry.coordinates];\n    }\n    if (coord.type === \"Point\") {\n      return [...coord.coordinates];\n    }\n  }\n  if (Array.isArray(coord) && coord.length >= 2 && !Array.isArray(coord[0]) && !Array.isArray(coord[1])) {\n    return [...coord];\n  }\n  throw new Error(\"coord must be GeoJSON Point or an Array of numbers\");\n}\nfunction getCoords(coords) {\n  if (Array.isArray(coords)) {\n    return coords;\n  }\n  if (coords.type === \"Feature\") {\n    if (coords.geometry !== null) {\n      return coords.geometry.coordinates;\n    }\n  } else {\n    if (coords.coordinates) {\n      return coords.coordinates;\n    }\n  }\n  throw new Error(\n    \"coords must be GeoJSON Feature, Geometry Object or an Array\"\n  );\n}\nfunction containsNumber(coordinates) {\n  if (coordinates.length > 1 && isNumber(coordinates[0]) && isNumber(coordinates[1])) {\n    return true;\n  }\n  if (Array.isArray(coordinates[0]) && coordinates[0].length) {\n    return containsNumber(coordinates[0]);\n  }\n  throw new Error(\"coordinates must only contain numbers\");\n}\nfunction geojsonType(value, type, name) {\n  if (!type || !name) {\n    throw new Error(\"type and name required\");\n  }\n  if (!value || value.type !== type) {\n    throw new Error(\n      \"Invalid input to \" + name + \": must be a \" + type + \", given \" + value.type\n    );\n  }\n}\nfunction featureOf(feature, type, name) {\n  if (!feature) {\n    throw new Error(\"No feature passed\");\n  }\n  if (!name) {\n    throw new Error(\".featureOf() requires a name\");\n  }\n  if (!feature || feature.type !== \"Feature\" || !feature.geometry) {\n    throw new Error(\n      \"Invalid input to \" + name + \", Feature with geometry required\"\n    );\n  }\n  if (!feature.geometry || feature.geometry.type !== type) {\n    throw new Error(\n      \"Invalid input to \" + name + \": must be a \" + type + \", given \" + feature.geometry.type\n    );\n  }\n}\nfunction collectionOf(featureCollection, type, name) {\n  if (!featureCollection) {\n    throw new Error(\"No featureCollection passed\");\n  }\n  if (!name) {\n    throw new Error(\".collectionOf() requires a name\");\n  }\n  if (!featureCollection || featureCollection.type !== \"FeatureCollection\") {\n    throw new Error(\n      \"Invalid input to \" + name + \", FeatureCollection required\"\n    );\n  }\n  for (const feature of featureCollection.features) {\n    if (!feature || feature.type !== \"Feature\" || !feature.geometry) {\n      throw new Error(\n        \"Invalid input to \" + name + \", Feature with geometry required\"\n      );\n    }\n    if (!feature.geometry || feature.geometry.type !== type) {\n      throw new Error(\n        \"Invalid input to \" + name + \": must be a \" + type + \", given \" + feature.geometry.type\n      );\n    }\n  }\n}\nfunction getGeom(geojson) {\n  if (geojson.type === \"Feature\") {\n    return geojson.geometry;\n  }\n  return geojson;\n}\nfunction getType(geojson, _name) {\n  if (geojson.type === \"FeatureCollection\") {\n    return \"FeatureCollection\";\n  }\n  if (geojson.type === \"GeometryCollection\") {\n    return \"GeometryCollection\";\n  }\n  if (geojson.type === \"Feature\" && geojson.geometry !== null) {\n    return geojson.geometry.type;\n  }\n  return geojson.type;\n}\nexport {\n  collectionOf,\n  containsNumber,\n  featureOf,\n  geojsonType,\n  getCoord,\n  getCoords,\n  getGeom,\n  getType\n};\n//# sourceMappingURL=index.js.map","// index.ts\nimport { getCoord } from \"@turf/invariant\";\nimport { radiansToLength, degreesToRadians } from \"@turf/helpers\";\nfunction distance(from, to, options = {}) {\n  var coordinates1 = getCoord(from);\n  var coordinates2 = getCoord(to);\n  var dLat = degreesToRadians(coordinates2[1] - coordinates1[1]);\n  var dLon = degreesToRadians(coordinates2[0] - coordinates1[0]);\n  var lat1 = degreesToRadians(coordinates1[1]);\n  var lat2 = degreesToRadians(coordinates2[1]);\n  var a = Math.pow(Math.sin(dLat / 2), 2) + Math.pow(Math.sin(dLon / 2), 2) * Math.cos(lat1) * Math.cos(lat2);\n  return radiansToLength(\n    2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a)),\n    options.units\n  );\n}\nvar turf_distance_default = distance;\nexport {\n  turf_distance_default as default,\n  distance\n};\n//# sourceMappingURL=index.js.map","export const debounce = (fn, wait) => {\n  let timeoutId = null\n  return (...args) => {\n    window.clearTimeout(timeoutId)\n    timeoutId = window.setTimeout(() => {\n      fn(...args)\n    }, wait)\n  }\n}\n","import { distance as turfDistance } from '@turf/distance'\nimport { point as TurfPoint } from '@turf/helpers'\nimport { defaults } from '../store/constants'\n\nconst getBearing = (coord1, coord2) => {\n  const east = coord1[0] < coord2[0] && 'east'\n  const west = coord1[0] > coord2[0] && 'west'\n  const north = coord1[1] < coord2[1] && 'north'\n  const south = coord1[1] > coord2[1] && 'south'\n  return [east, west, north, south].filter(b => b && typeof b === 'string')\n}\n\nconst getUnits = (metres) => {\n  const MAX_METRES = 800\n  const MAX_MILES = 5000\n  const RATIO = 0.621371\n  let units\n  if (metres < MAX_METRES) {\n    units = `${metres} metres`\n  } else if (metres < MAX_MILES) {\n    units = (metres / 1000 * RATIO).toFixed(1) + ' miles'\n  } else {\n    units = Math.round((metres / 1000) * RATIO) + ' miles'\n  }\n  return units\n}\n\nconst getDirection = (coord1, coord2) => {\n  coord1 = coord1.map(n => n > 1000 ? Math.round(n) : Math.round(n * 100000) / 100000)\n  coord2 = coord2.map(n => n > 1000 ? Math.round(n) : Math.round(n * 100000) / 100000)\n  const ns1 = [coord1[0], coord1[1]]\n  const ns2 = [coord1[0], coord2[1]]\n  const ew1 = [coord1[0], coord1[1]]\n  const ew2 = [coord2[0], coord1[1]]\n  const nsd = getDistance(ns1, ns2)\n  const ewd = getDistance(ew1, ew2)\n  const bearing = getBearing(coord1, coord2)\n  const ewc = bearing.filter(b => ['east', 'west'].includes(b)).join('')\n  const nsc = bearing.filter(b => ['north', 'south'].includes(b)).join('')\n  const ew = ewc ? `${ewc} ${getUnits(ewd)}` : ''\n  const ns = nsc ? `${nsc} ${getUnits(nsd)}` : ''\n  return `${ns + (ewc && nsc ? ', ' : '') + ew}`\n}\n\nconst getArea = (bounds) => {\n  const ew = getDistance([bounds[0], bounds[1]], [bounds[2], bounds[1]])\n  const ns = getDistance([bounds[0], bounds[1]], [bounds[0], bounds[3]])\n  return `${getUnits(ew)} by ${getUnits(ns)}`\n}\n\nconst getBoundsChange = (oCentre, originalZoom, isMaxZoom, isMinZoom, center, zoom) => {\n  const isSameCentre = JSON.stringify(oCentre) === JSON.stringify(center)\n  const isSameZoom = originalZoom === zoom\n  const isMove = oCentre && originalZoom && !(isSameCentre && isSameZoom)\n  const maxZoom = isMaxZoom ? ' (Maximum zoom reached)' : ''\n  const minZoom = isMinZoom ? ' (Minimum zoom reached)' : ''\n  let change = ''\n  if (isMove) {\n    if (!isSameCentre && !isSameZoom) {\n      change = `New area${maxZoom}${minZoom}. `\n    } else if (!isSameCentre) {\n      change = `Map move: ${getDirection(oCentre, center)}. `\n    } else {\n      const direction = zoom > originalZoom ? 'in' : 'out'\n      change = `Zoomed ${direction}${maxZoom}${minZoom}. `\n    }\n  }\n  return change\n}\n\nconst getSelectedStatus = (featuresInViewport, id) => {\n  const total = featuresInViewport.length\n  const index = featuresInViewport.findIndex(f => f.id === id)\n  return index >= 0 && `${total} feature${total !== 1 ? 's' : ''} in this area. ${featuresInViewport[index].name}. ${index + 1} of ${total} highlighted.`\n}\n\nconst getOffsetBoundingClientRect = (el) => {\n  const offsetParent = el.closest('[data-fm-main]') || document.body\n  return offsetParent.getBoundingClientRect()\n}\n\nconst isCirclePolygon = (geometry) => {\n  const coordinates = geometry?.coordinates?.[0]\n\n  // Expect exactly 64 points\n  if (coordinates?.length !== 65) {\n    return false\n  }\n\n  // Compute approximate centre using two opposite points\n  const [x1, y1] = coordinates[0]\n  const [x2, y2] = coordinates[32]\n  const center = [(x1 + x2) / 2, (y1 + y2) / 2]\n\n  let minDist = Infinity; let maxDist = -Infinity\n  let minEdge = Infinity; let maxEdge = -Infinity\n\n  for (let i = 0; i < 64; i++) {\n    const [xA, yA] = coordinates[i]\n    const [xB, yB] = coordinates[(i + 1) % 64]\n\n    // Distance from center\n    const dist = Math.hypot(xA - center[0], yA - center[1])\n    minDist = Math.min(minDist, dist)\n    maxDist = Math.max(maxDist, dist)\n\n    // Distance to next vertex (edge length)\n    const edgeDist = Math.hypot(xB - xA, yB - yA)\n    minEdge = Math.min(minEdge, edgeDist)\n    maxEdge = Math.max(maxEdge, edgeDist)\n  }\n\n  // Need to revist tolerance as they depend on size too\n  const WSG84_TOLERANCE = 0.3\n  const BNG_TOLERANCE = 0.3\n  const tolerance = detectCoordinateType(center) === 'WSG84' ? WSG84_TOLERANCE : BNG_TOLERANCE\n\n  return Math.abs(maxDist - minDist) < tolerance && Math.abs(maxEdge - minEdge) < tolerance\n}\n\n// const metresToImperial = (metres) => {\n//   const MILE = 1609.344\n//   const YARD = 0.9144\n//   const pluralize = (value, singular, plural) => `${value} ${value === 1 ? singular : plural}`\n//   if (metres >= MILE) {\n//     const miles = Math.floor(metres / MILE)\n//     const remainder = metres % MILE\n//     const yards = Math.floor(remainder / YARD)\n//     return `${pluralize(miles, 'mile', 'miles')}, ${pluralize(yards, 'yard', 'yards')}`\n//   } else {\n//     const yards = Math.floor(metres / YARD)\n//     return `${pluralize(yards, 'yard', 'yards')}`\n//   }\n// }\n\nconst metresToKilometres = (metres) => {\n  const KILOMETRE = 1000\n  // const pluralize = (value, singular, plural) => `${value} ${value === 1 ? singular : plural}`\n  if (metres >= KILOMETRE) {\n    const kilometres = metres / KILOMETRE\n    const roundedKm = Math.round(kilometres * 100) / 100\n    return `${roundedKm}km`\n  } else {\n    // return `${pluralize(Math.round(metres), 'metre', 'metres')}`\n    return `${Math.round(metres)}m`\n  }\n}\n\nexport const squareMetresToKm = (metres) => {\n  const SQ_KM = 1_000_000\n  if (metres >= SQ_KM) {\n    let km2 = (metres / SQ_KM).toFixed(2)\n    km2 = Number(km2).toLocaleString(undefined, { minimumFractionDigits: 0, maximumFractionDigits: 2 })\n    return `${km2}km²`\n  } else {\n    return `${Math.ceil(metres).toLocaleString()}m²`\n  }\n}\n\nexport const parseDimensions = (dimensions) => {\n  const { area, center, width, radius } = dimensions\n  const areaDisplay = area ? squareMetresToKm(area) : null\n  const centerDisplay = center ? center.map(c => Math.round(c)).join(', ') : null\n  const widthDisplay = width ? metresToKilometres(width) : null\n  const radiusDisplay = radius ? metresToKilometres(radius) : null\n  return { ...dimensions, areaDisplay, centerDisplay, widthDisplay, radiusDisplay }\n}\n\nexport const detectCoordinateType = (coords) => {\n  if (coords.length === 3) {\n    return 'BNG' // If a third value exists (zone), it's UTM\n  }\n  const [x, y] = coords\n  if (x >= -180 && x <= 180 && y >= -90 && y <= 90) {\n    return 'WSG84'\n  }\n  if (x > 180 && y > 90) {\n    return 'BNG'\n  }\n  return 'Unknown'\n}\n\nexport const getDistance = (coord1, coord2) => {\n  let distance\n  if (coord1[0] > 1000) {\n    const x = Math.abs(coord1[0] - coord2[0])\n    const y = Math.abs(coord1[1] - coord2[1])\n    const dist = Math.sqrt((Math.pow(x, 2)) + (Math.pow(y, 2)))\n    distance = dist\n  } else {\n    const p1 = new TurfPoint(coord1)\n    const p2 = new TurfPoint(coord2)\n    distance = turfDistance(p1, p2, { units: 'metres' })\n  }\n  return Math.round(distance)\n}\n\nexport const getFocusPadding = (el, scale) => {\n  let padding\n  if (el) {\n    const parent = getOffsetBoundingClientRect(el)\n    const box = el.getBoundingClientRect()\n    const boxX = box.x || box.left\n    const boxY = box.y || box.top\n    const parentX = parent.x || parent.left\n    const parentY = parent.y || parent.top\n    padding = {\n      top: (boxY - parentY) / scale,\n      left: (boxX - parentX) / scale,\n      right: (parent.width - box.width - (boxX - parentX)) / scale,\n      bottom: (parent.height - box.height - (boxY - parentY)) / scale\n    }\n  }\n  // Addresses repid browser resizing\n  const isValid = Object.values(padding).every(i => i >= 0)\n  return isValid && padding\n}\n\nexport const getFocusBounds = (el, scale) => {\n  let bounds\n  if (el) {\n    const parent = getOffsetBoundingClientRect(el)\n    const box = el.getBoundingClientRect()\n    const m = 10\n    bounds = [[\n      ((box.x || box.left) - (parent.x || parent.left) + m) / scale,\n      (((box.y || box.top) - (parent.y || parent.top)) + box.height - m) / scale\n    ], [\n      (box.width + ((box.x || box.left) - (parent.x || parent.left)) - m) / scale,\n      ((box.y || box.top) - (parent.y || parent.top) + m) / scale\n    ]]\n  }\n  return bounds\n}\n\nexport const getMapPixel = (el, scale) => {\n  const parent = getOffsetBoundingClientRect(el)\n  const box = el.getBoundingClientRect()\n  const left = ((box.x || box.left) - (parent.x || parent.left)) / scale\n  const top = ((box.y || box.top) - (parent.y || parent.top)) / scale\n  const offsetLeft = (box.width / 2) / scale\n  const offsetTop = (box.height / 2) / scale\n  const point = [left + offsetLeft, top + offsetTop]\n  return point\n}\n\nexport const getDescription = (place, bounds, focusBounds, features, isFocusArea) => {\n  const { featuresTotal, featuresFocusTotal, isFeaturesInMap, isPixelFeaturesAtPixel, isPixelFeaturesInMap } = features || {}\n  const activeFeaturesTotal = isFocusArea ? featuresFocusTotal : featuresTotal\n  const activeBounds = isFocusArea ? focusBounds : bounds\n  let text = ''\n  if (activeFeaturesTotal) {\n    text = `${activeFeaturesTotal} feature${activeFeaturesTotal === 1 ? '' : 's'} in this area. `\n  } else if (isPixelFeaturesAtPixel) {\n    text = 'Data visible at the center coordinate. '\n  } else if (isPixelFeaturesInMap) {\n    text = 'No data visible at the center coordinate. '\n  } else if (isFeaturesInMap) {\n    text = 'No feature data in this area. '\n  } else {\n    // Null\n  }\n\n  const display = isFocusArea ? 'Focus area ' : ''\n  const newPlace = place ? `Approximate centre ${place}. ` : ''\n  const newArea = `Covering ${getArea(activeBounds)}. `\n  const findPlace = place ? '' : 'Use ALT plus I to find closest place'\n\n  return `${display}${newPlace}${newArea}${text}${findPlace}`\n}\n\nexport const getStatus = ({ action, isBoundsChange, place, isFocusArea, prevZoom, prevCenter, center, bounds, focusBounds, zoom, isMaxZoom, isMinZoom, features, label, featureId }) => {\n  let status = null\n  if (label) {\n    status = label\n  } else if (featureId) {\n    const selected = getSelectedStatus(features?.featuresInViewport, featureId)\n    status = selected\n  } else if (action === 'GEOCODE') {\n    status = getDescription(place, bounds, focusBounds, features, isFocusArea)\n  } else if (action === 'DATA') {\n    status = 'Map change: new data. Use ALT plus I to get new details'\n  } else if (isBoundsChange) {\n    const direction = getBoundsChange(prevCenter, prevZoom, isMaxZoom, isMinZoom, center, zoom)\n    const description = getDescription(place, bounds, focusBounds, features, isFocusArea)\n    status = `${direction}${description}`\n  } else {\n    status = ''\n  }\n  return status\n}\n\nexport const getPlace = (isUserInitiated, action, oPlace, newPlace) => {\n  let place\n  if (!isUserInitiated) {\n    if (action === 'RESET') {\n      place = oPlace\n    } else {\n      place = newPlace\n    }\n  }\n  return place\n}\n\nexport const parseCentre = (value, srid) => {\n  const mb = defaults[`MAX_BOUNDS_${srid}`]\n  let isInRange\n  let coords = value?.split(',')\n  // Query string formed correctly\n  if (!(Array.isArray(coords) && coords?.length === 3)) {\n    return null\n  }\n  // Coords are numbers\n  coords = coords.slice(0, 2).map(x => parseFloat(x))\n  coords = !coords.some(isNaN) && coords\n  if (!coords) {\n    return null\n  }\n  // Coords are within the valid range\n  if (srid === '27700') {\n    isInRange = !!coords.filter(c => c >= 0).length\n  } else {\n    isInRange = (coords[0] > mb[0] && coords[0] < mb[2]) && (coords[1] > mb[1] && coords[1] < mb[3])\n  }\n  return isInRange ? coords : null\n}\n\nexport const parseZoom = value => {\n  const coords = value?.split(',')\n  if (!(Array.isArray(coords) && coords?.length === 3)) {\n    return null\n  }\n  const zoom = parseFloat(coords[2])\n  return !zoom.isNaN ? zoom : null\n}\n\nexport const getShortcutKey = (e, featuresViewport) => {\n  const number = e.code.slice(-1)\n  const hasFeature = featuresViewport.length >= number\n  const id = hasFeature ? featuresViewport[number - 1].id : ''\n  return id\n}\n\nexport const getFeatureShape = (feature) => {\n  if (isCirclePolygon(feature?.geometry)) {\n    return 'circle'\n  }\n  if (feature?.geometry?.type?.toLowerCase() === 'polygon') {\n    const coords = feature.geometry?.coordinates\n    const flatCoords = (coords && Array.from(new Set(coords.flat(2)))) || null\n    return flatCoords?.length === 4 ? 'square' : 'polygon'\n  }\n  return null\n}\n\nexport const spatialNavigate = (direction, start, pixels) => {\n  const quadrant = pixels.filter(p => {\n    const offsetX = Math.abs(p[0] - start[0])\n    const offsetY = Math.abs(p[1] - start[1])\n    let isQuadrant = false\n    if (direction === 'up') {\n      isQuadrant = p[1] <= start[1] && offsetY >= offsetX\n    } else if (direction === 'down') {\n      isQuadrant = p[1] > start[1] && offsetY >= offsetX\n    } else if (direction === 'left') {\n      isQuadrant = p[0] <= start[0] && offsetY < offsetX\n    } else {\n      isQuadrant = p[0] > start[0] && offsetY < offsetX\n    }\n    return isQuadrant && (JSON.stringify(p) !== JSON.stringify(start))\n  })\n  if (!quadrant.length) {\n    quadrant.push(start)\n  }\n  const pythagorean = (a, b) => Math.sqrt(Math.pow(a, 2) + Math.pow(b, 2))\n  const distances = quadrant.map(p => pythagorean(Math.abs(start[0] - p[0]), Math.abs(start[1] - p[1])))\n  const closest = quadrant[distances.indexOf(Math.min(...distances))]\n  return pixels.findIndex(i => JSON.stringify(i) === JSON.stringify(closest))\n}\n\nexport const getScale = (size) => {\n  return { small: 1, medium: 1.5, large: 2 }[size] || 1\n}\n\nexport const getPoint = (el, e, scale) => {\n  const { left, top } = el.getBoundingClientRect()\n  const { clientX, clientY } = e.nativeEvent\n  const x = clientX - left\n  const y = clientY - top\n  return [x / scale, y / scale]\n}\n\nexport const getStyle = (styles = []) => {\n  const validStyles = styles.filter(s => defaults.STYLES.includes(s.name))\n  const style = window.localStorage.getItem('style')\n  return validStyles.find(s => s.name === style) || validStyles.find(s => s.name === 'default')\n}\n"],"names":["earthRadius","factors","centimeters","centimetres","degrees","Math","PI","feet","inches","kilometers","kilometres","meters","metres","miles","millimeters","millimetres","nauticalmiles","radians","yards","feature","geom","properties","options","feat","type","id","bbox","geometry","point","coordinates","Error","Array","isArray","length","isNumber","polygon","ring","j","lineString","multiLineString","multiPolygon","radiansToLength","units","factor","lengthToRadians","distance","radiansToDegrees","degreesToRadians","num","isNaN","module","exports","t","e","Object","defineProperty","value","default","o","recursive","prototype","forEach","call","children","r","getComputedStyle","style","getPropertyValue","TinyQueue","constructor","data","compare","a","b","this","i","_down","push","item","_up","pop","top","bottom","peek","pos","parent","current","halfLength","bestChild","right","Cell","x","y","h","d","inside","minDistSq","Infinity","len","min","getSegDistSq","sqrt","pointToPolygonDist","max","SQRT2","px","py","dx","dy","geojson","previousValue","callback","g","stopG","geometryMaybeCollection","isGeometryCollection","featureProperties","featureBBox","featureId","featureIndex","isFeatureCollection","isFeature","stop","features","geometries","geomEach","currentGeometry","total","polygonArea","calculateArea","geomReduce","coords","abs","ringArea","FACTOR","PI_OVER_180","coordsLength","lower","middle","upper","lowerX","middleY","sin","polygonclip","points","result","edge","prev","prevInside","p","bitCode","intersect","code","clipPolygon","rings","outRings","clipped","_regeneratorRuntime","n","hasOwnProperty","Symbol","iterator","c","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","arg","l","f","s","GeneratorFunction","GeneratorFunctionPrototype","getPrototypeOf","v","values","defineIteratorMethods","_invoke","AsyncIterator","invoke","_typeof","resolve","__await","then","callInvokeWithMethodAndArg","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","return","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","reset","displayName","isGeneratorFunction","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","charAt","slice","rval","handle","complete","finish","catch","delegateYield","asyncGeneratorStep","_toConsumableArray","_arrayLikeToArray","_arrayWithoutHoles","from","_iterableToArray","_unsupportedIterableToArray","_nonIterableSpread","toString","test","ownKeys","getOwnPropertySymbols","filter","getOwnPropertyDescriptor","apply","_objectSpread","arguments","_defineProperty","getOwnPropertyDescriptors","defineProperties","toPrimitive","String","_toPrimitive","_toPropertyKey","getPaddedBounds","map","padding","getPadding","bounds","getBounds","sw","project","getWest","getSouth","ne","getEast","getNorth","left","paddedSW","unproject","paddedNE","lng","lat","flat","addFeatureProperties","_map$getCenter","getCenter","coord","precision","debug","minX","minY","maxX","maxY","width","height","cellSize","cellQueue","bestCell","area","centroid","getCentroidCell","bboxCell","numProbes","potentiallyQueue","cell","console","log","round","ch","polylabel","p1","TurfPoint","p2","turfDistance","geometryType","combineFeatures","combined","group","find","parts","TurfPolygon","turfArea","largest","getViewport","toArray","focusBounds","bind","center","zoom","getZoom","parseFloat","toFixed","defaults","PRECISION","isMaxZoom","getMaxZoom","isMinZoom","getMinZoom","addMapHoverBehaviour","featureLayers","labelLayers","on","concat","queryRenderedFeatures","layers","originalEvent","altKey","includes","layer","isLabel","getCanvas","cursor","getDetail","_x","_getDetail","_callee","pixel","selectedLayers","viewport","label","selectedId","_context","getFeatures","getHighlightedLabel","getSelectedFeatureId","resultType","_next","_throw","_map$getStyle","_layers","_layers2","locationLayers","paddingBox","scale","getFocusBounds","getStyle","_l$layout","layout","visibility","featuresAtPixel","lngLat","renderedFeaturesInViewport","featuresTotal","Set","renderedFeaturesInPadding","featuresFocusTotal","intersectingFocusFeatures","lines","line","codeB","lastCode","codeA","part","lineclip","poly","TurfBboxClip","TurfMultiPolygon","intersectFeatures","viewportPolygonFeatures","MAX_FEATURES","focusPolygonFeatures","featuresInViewport","featuresInFocus","sort","pow","featureType","hasFeatureLayers","some","hasPixelLayers","items","isFeaturesInMap","isPixelFeaturesAtPixel","isPixelFeaturesInMap","toggleSelectedFeature","_step","_iterator","_n","F","_createForOfIteratorHelper","setLayoutProperty","setFilter","err","text","_map$getStyle2","_features$0$propertie","_features$","getLabel","getLabels","pixels","xS","yS","locationMarkerHTML","el","document","createElement","className","innerHTML","SYMBOL_PLACEMENT","TEXT_FIELD","amendLineSymbolLayers","addHighlightedLabelLayer","addSource","addLayer","source","paint","addShortcutMarkers","shortcutMarkers","Marker","modules","m","remove","key","offset","SHORTCUT_LABEL_OFFSET","element","setLngLat","addTo","highlightLabel","_feature$layer$layout","moveLayer","getSource","setData","textScale","textField","sections","setPaintProperty","_map$getSource","addSelectedLayers","isDarkBasemap","_loop","getLayer","removeLayer","setTimeout","loadSymbols","_this$symbols","fn","symbols","all","fetch","responses","texts","loadImage","getName","path","split","parsed","parseSVG","container","getCanvasContainer","insertAdjacentHTML","lastChild","computedStyleToInlineStyle","base64","btoa","outerHTML","img","reject","onload","hasImage","addImage","onerror","src","_asyncToGenerator","getResolution","cos","getAttributions","currentZoom","activeAttributions","minZoom","undefined","minzoom","maxZoom","maxzoom","sources","attribution","add","handleLoad","_handleLoad","resolution","attributions","isLoaded","dispatchEvent","CustomEvent","detail","framework","handleStyleLoad","_handleStyleLoad","_callee2","_context2","baseLayers","handleIdle","_handleIdle","_callee3","_detail$features","offsetTop","offsetLeft","offsetWidth","offsetHeight","_paddingBox$parentNod","parentOffsetTop","parentOffsetLeft","_context3","parentNode","handleMoveStart","_handleMoveStart","_callee4","_context4","hideLabel","isUserInitiated","handleMove","handleStyleData","_this","target","handleError","_defineProperties","_wrapNativeSuper","Map","Function","indexOf","_isNativeFunction","has","get","set","Wrapper","_isNativeReflectConstruct","Reflect","construct","_setPrototypeOf","_construct","_getPrototypeOf","Boolean","valueOf","Provider","_EventTarget","_ref","transformRequest","_classCallCheck","ReferenceError","_assertThisInitialized","_possibleConstructorReturn","_callSuper","srid","capabilities","hasDraw","hasSize","window","globalThis","selectedCoordinate","_inherits","_this2","isLatest","addMap","promises","ResizeObserver","install","_this$map","_this3","maxBounds","size","callBack","_module$default","MaplibreMap","LngLatBounds","getScale","url","storeDefaults","MAX_BOUNDS_4326","fadeDuration","attributionControl","dragRotate","setPadding","getFocusPadding","fitBounds","animate","flyTo","touchZoomRotate","disableRotation","setPixelRatio","devicePixelRatio","canvas","removeAttribute","display","targetMarker","locationMarker","wait","lastCallTime","throttleHandleMove","THROTTLE","now","Date","debounceHandleIdle","debounce","DELAY","panBy","ANIMATION","zoomIn","zoomOut","_this$draw","_this$draw$setStyle","setStyle","diff","draw","isAnimate","easeTo","_this$map2","_this4","resize","linear","duration","_zoom","_this5","Draw","hasData","isVisible","getElement","classList","toggle","css","MARKER_VISIBLE","_queryFeature","_queryPoint","_x2","success","error","navigator","geolocation","getCurrentPosition","_ref2","position","longitude","latitude","_x3","enableHighAccuracy","addClassName","direction","_labels$index","_labels$index2","labels","_this$map$getCenter","index","spatialNavigate","EventTarget","curve","DOMParser","icon","fill","isSelected","dom","parseFromString","svg","querySelector","viewBox","getAttribute","parseInt","setAttribute","olFill","querySelectorAll","olStroke","bgFill","bgStroke","fgFill","fgStroke","body","getCoord","getGeom","to","coordinates1","coordinates2","dLat","dLon","lat1","lat2","atan2","timeoutId","_len","args","_key","clearTimeout","getUnits","RATIO","getOffsetBoundingClientRect","closest","getBoundingClientRect","metresToKilometres","roundedKm","squareMetresToKm","SQ_KM","km2","Number","toLocaleString","minimumFractionDigits","maximumFractionDigits","ceil","parseDimensions","dimensions","radius","areaDisplay","centerDisplay","join","widthDisplay","radiusDisplay","detectCoordinateType","_coords","_slicedToArray","getDistance","coord1","coord2","box","boxX","boxY","parentX","parentY","every","getMapPixel","getDescription","place","isFocusArea","activeFeaturesTotal","activeBounds","newPlace","newArea","ew","ns","getArea","findPlace","getStatus","action","isBoundsChange","prevZoom","prevCenter","status","findIndex","oCentre","originalZoom","isSameCentre","JSON","stringify","isSameZoom","change","ns1","ns2","ew1","ew2","nsd","ewd","bearing","getBearing","ewc","nsc","getDirection","getBoundsChange","description","getPlace","oPlace","parseCentre","_coords2","mb","parseZoom","getShortcutKey","featuresViewport","number","getFeatureShape","_feature$geometry","_geometry$coordinates","_coordinates$","x1","y1","_coordinates$2","minDist","maxDist","minEdge","maxEdge","_coordinates$i","xA","yA","_coordinates","xB","yB","dist","hypot","edgeDist","tolerance","isCirclePolygon","toLowerCase","_feature$geometry2","flatCoords","start","quadrant","offsetX","offsetY","distances","small","medium","large","getPoint","_el$getBoundingClient","_e$nativeEvent","nativeEvent","clientX","clientY","validStyles","STYLES","localStorage","getItem"],"sourceRoot":""}