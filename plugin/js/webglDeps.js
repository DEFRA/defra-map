"use strict";(self.webpackChunkdefraMap=self.webpackChunkdefraMap||[]).push([[7876],{80562:function(e,t,r){r.d(t,{b:function(){return _},l:function(){return o},o:function(){return h}});var i,n=r(32150),s={exports:{}};void 0!==(i=["precision","highp","mediump","lowp","attribute","const","uniform","varying","break","continue","do","for","while","if","else","in","out","inout","float","int","void","bool","true","false","discard","return","mat2","mat3","mat4","vec2","vec3","vec4","ivec2","ivec3","ivec4","bvec2","bvec3","bvec4","sampler1D","sampler2D","sampler3D","samplerCube","sampler1DShadow","sampler2DShadow","struct","asm","class","union","enum","typedef","template","this","packed","goto","switch","default","inline","noinline","volatile","public","static","extern","external","interface","long","short","double","half","fixed","unsigned","input","output","hvec2","hvec3","hvec4","dvec2","dvec3","dvec4","fvec2","fvec3","fvec4","sampler2DRect","sampler3DRect","sampler2DRectShadow","sizeof","cast","namespace","using"])&&(s.exports=i);const o=(0,n.g)(s.exports);var a,c={exports:{}};a=c,function(e){var t=["<<=",">>=","++","--","<<",">>","<=",">=","==","!=","&&","||","+=","-=","*=","/=","%=","&=","^^","^=","|=","(",")","[","]",".","!","~","*","/","%","+","-","<",">","&","^","|","?",":","=",",",";","{","}"];void 0!==t&&(a.exports=t)}();const h=(0,n.g)(c.exports);var l,u={exports:{}};l=u,function(e){var t=["abs","acos","all","any","asin","atan","ceil","clamp","cos","cross","dFdx","dFdy","degrees","distance","dot","equal","exp","exp2","faceforward","floor","fract","gl_BackColor","gl_BackLightModelProduct","gl_BackLightProduct","gl_BackMaterial","gl_BackSecondaryColor","gl_ClipPlane","gl_ClipVertex","gl_Color","gl_DepthRange","gl_DepthRangeParameters","gl_EyePlaneQ","gl_EyePlaneR","gl_EyePlaneS","gl_EyePlaneT","gl_Fog","gl_FogCoord","gl_FogFragCoord","gl_FogParameters","gl_FragColor","gl_FragCoord","gl_FragData","gl_FragDepth","gl_FragDepthEXT","gl_FrontColor","gl_FrontFacing","gl_FrontLightModelProduct","gl_FrontLightProduct","gl_FrontMaterial","gl_FrontSecondaryColor","gl_LightModel","gl_LightModelParameters","gl_LightModelProducts","gl_LightProducts","gl_LightSource","gl_LightSourceParameters","gl_MaterialParameters","gl_MaxClipPlanes","gl_MaxCombinedTextureImageUnits","gl_MaxDrawBuffers","gl_MaxFragmentUniformComponents","gl_MaxLights","gl_MaxTextureCoords","gl_MaxTextureImageUnits","gl_MaxTextureUnits","gl_MaxVaryingFloats","gl_MaxVertexAttribs","gl_MaxVertexTextureImageUnits","gl_MaxVertexUniformComponents","gl_ModelViewMatrix","gl_ModelViewMatrixInverse","gl_ModelViewMatrixInverseTranspose","gl_ModelViewMatrixTranspose","gl_ModelViewProjectionMatrix","gl_ModelViewProjectionMatrixInverse","gl_ModelViewProjectionMatrixInverseTranspose","gl_ModelViewProjectionMatrixTranspose","gl_MultiTexCoord0","gl_MultiTexCoord1","gl_MultiTexCoord2","gl_MultiTexCoord3","gl_MultiTexCoord4","gl_MultiTexCoord5","gl_MultiTexCoord6","gl_MultiTexCoord7","gl_Normal","gl_NormalMatrix","gl_NormalScale","gl_ObjectPlaneQ","gl_ObjectPlaneR","gl_ObjectPlaneS","gl_ObjectPlaneT","gl_Point","gl_PointCoord","gl_PointParameters","gl_PointSize","gl_Position","gl_ProjectionMatrix","gl_ProjectionMatrixInverse","gl_ProjectionMatrixInverseTranspose","gl_ProjectionMatrixTranspose","gl_SecondaryColor","gl_TexCoord","gl_TextureEnvColor","gl_TextureMatrix","gl_TextureMatrixInverse","gl_TextureMatrixInverseTranspose","gl_TextureMatrixTranspose","gl_Vertex","greaterThan","greaterThanEqual","inversesqrt","length","lessThan","lessThanEqual","log","log2","matrixCompMult","max","min","mix","mod","normalize","not","notEqual","pow","radians","reflect","refract","sign","sin","smoothstep","sqrt","step","tan","texture2D","texture2DLod","texture2DProj","texture2DProjLod","textureCube","textureCubeLod","texture2DLodEXT","texture2DProjLodEXT","textureCubeLodEXT","texture2DGradEXT","texture2DProjGradEXT","textureCubeGradEXT","textureSize","texelFetch"];void 0!==t&&(l.exports=t)}();const _=(0,n.g)(u.exports)},7970:function(e,t,r){r.d(t,{O:function(){return i}});class i{constructor(){this._outer=new Map}clear(){this._outer.clear()}get empty(){return 0===this._outer.size}get(e,t){return this._outer.get(e)?.get(t)}set(e,t,r){const i=this._outer.get(e);i?i.set(t,r):this._outer.set(e,new Map([[t,r]]))}delete(e,t){const r=this._outer.get(e);r&&(r.delete(t),0===r.size&&this._outer.delete(e))}forEach(e){this._outer.forEach(((t,r)=>e(t,r)))}}},52012:function(e,t,r){r.r(t),r.d(t,{BufferObject:function(){return i.g},FramebufferObject:function(){return n.H},Program:function(){return s.B},ProgramCache:function(){return o.J},Renderbuffer:function(){return a.l},ShaderCompiler:function(){return c.Z},Texture:function(){return h.g},VertexArrayObject:function(){return l.Z},createContext:function(){return f.q},createProgram:function(){return _.r},glslifyDefineMap:function(){return u.I}});var i=r(86305),n=r(96402),s=r(95904),o=r(3934),a=r(49414),c=r(65644),h=r(78541),l=r(81438),u=r(72785),_=r(10904),f=r(6764)},86305:function(e,t,r){r.d(t,{g:function(){return h}});var i=r(50659),n=(r(58941),r(40633)),s=r(24540),o=r(41835),a=r(85456);const c=()=>n.A.getLogger("esri.views.webgl.BufferObject");class h{static createIndex(e,t,r){return new h(e,a.NZ.ELEMENT_ARRAY_BUFFER,t,r)}static createVertex(e,t,r){return new h(e,a.NZ.ARRAY_BUFFER,t,r)}static createUniform(e,t,r){return new h(e,a.NZ.UNIFORM_BUFFER,t,r)}static createPixelPack(e,t=a._U.STREAM_READ,r){const i=new h(e,a.NZ.PIXEL_PACK_BUFFER,t);return r&&i.setSize(r),i}static createPixelUnpack(e,t=a._U.STREAM_DRAW,r){return new h(e,a.NZ.PIXEL_UNPACK_BUFFER,t,r)}static createTransformFeedback(e,t=a._U.STATIC_DRAW,r){const i=new h(e,a.NZ.TRANSFORM_FEEDBACK_BUFFER,t);return i.setSize(r),i}constructor(e,t,r,i){this._context=e,this.bufferType=t,this.usage=r,this._glName=null,this._size=-1,this._indexType=void 0,e.instanceCounter.increment(a.vt.BufferObject,this),this._glName=this._context.gl.createBuffer(),(0,o.Y2)(this._context.gl),i&&this.setData(i)}get glName(){return this._glName}get size(){return this._size}get indexType(){return this._indexType}get usedMemory(){return this.bufferType===a.NZ.ELEMENT_ARRAY_BUFFER?this._indexType===a.pe.UNSIGNED_INT?4*this._size:2*this._size:this._size}get _isVAOAware(){return this.bufferType===a.NZ.ELEMENT_ARRAY_BUFFER||this.bufferType===a.NZ.ARRAY_BUFFER}dispose(){this._context?.gl?(this._glName&&(this._context.gl.deleteBuffer(this._glName),this._glName=null),this._context.instanceCounter.decrement(a.vt.BufferObject,this),this._context=null):this._glName&&c().warn("Leaked WebGL buffer object")}setSize(e,t=null){if(this.bufferType===a.NZ.ELEMENT_ARRAY_BUFFER&&null!=t)switch(this._indexType=t,t){case a.pe.UNSIGNED_SHORT:e*=2;break;case a.pe.UNSIGNED_INT:e*=4}this._setBufferData(e)}setData(e){if(!e)return;let t=e.byteLength;this.bufferType===a.NZ.ELEMENT_ARRAY_BUFFER&&((0,s.jq)(e)&&(t/=2,this._indexType=a.pe.UNSIGNED_SHORT),(0,s.XJ)(e)&&(t/=4,this._indexType=a.pe.UNSIGNED_INT)),this._setBufferData(t,e)}_setBufferData(e,t=null){this._size=e;const r=this._context.getBoundVAO();this._isVAOAware&&this._context.bindVAO(null),this._context.bindBuffer(this);const i=this._context.gl;null!=t?i.bufferData(this.bufferType,t,this.usage):i.bufferData(this.bufferType,e,this.usage),(0,o.Y2)(i),this._isVAOAware&&this._context.bindVAO(r)}setSubData(e,t,r,i){if(!e)return;const n=this._context.getBoundVAO();this._isVAOAware&&this._context.bindVAO(null),this._context.bindBuffer(this);const{gl:s}=this._context;s.bufferSubData(this.bufferType,t*e.BYTES_PER_ELEMENT,e,r,i-r),(0,o.Y2)(s),this._isVAOAware&&this._context.bindVAO(n)}getSubData(e,t=0,r,n){if(r<0||n<0)return;const s=function(e){return(0,i.Xj)(e)}(e)?e.BYTES_PER_ELEMENT:1;if(s*((r??0)+(n??0))>e.byteLength)return;t+s*(n??0)>this.usedMemory&&c().warn("Potential problem getting subdata: requested data exceeds buffer size!");const o=this._context.gl;this.bufferType===a.NZ.TRANSFORM_FEEDBACK_BUFFER?(this._context.bindBuffer(this,a.NZ.TRANSFORM_FEEDBACK_BUFFER),o.getBufferSubData(a.NZ.TRANSFORM_FEEDBACK_BUFFER,t,e,r,n),this._context.unbindBuffer(a.NZ.TRANSFORM_FEEDBACK_BUFFER)):(this._context.bindBuffer(this,a.NZ.COPY_READ_BUFFER),o.getBufferSubData(a.NZ.COPY_READ_BUFFER,t,e,r,n),this._context.unbindBuffer(a.NZ.COPY_READ_BUFFER))}async getSubDataAsync(e,t=0,r,i){await this._context.clientWaitAsync(),this.getSubData(e,t,r,i)}}},96402:function(e,t,r){r.d(t,{H:function(){return u}}),r(58941);var i=r(40633),n=r(95929),s=r(86305),o=r(41835),a=r(85456),c=r(69452),h=r(49414),l=r(78541);class u{constructor(e,t,r=null){this._context=e,this._glName=null,this._colorAttachments=new Map,this._depthStencilBuffer=null,this._depthStencilTexture=null,this._initialized=!1,e.instanceCounter.increment(a.vt.FramebufferObject,this);const i=_(t)?t:new l.g(this._context,t);if(this._colorAttachments.set(a.Nm.COLOR_ATTACHMENT0,i),this._validateTextureDescriptor(i.descriptor),this._validateColorAttachmentPoint(a.Nm.COLOR_ATTACHMENT0),null!=r)if(function(e){return _(e)||null!=e&&"pixelFormat"in e}(r))this._depthStencilTexture=_(r)?r:new l.g(this._context,r),this._validateTextureDescriptor(this._depthStencilTexture.descriptor);else{const e=function(e){return null!=e&&"type"in e&&e.type===c.p.RenderBuffer}(r)?r:new h.l(this._context,r);this._depthStencilBuffer=e,this._validateRenderBufferDescriptor(e.descriptor)}}dispose(){if(0===this._colorAttachments.size&&!this._glName)return;const e=this._context.getBoundFramebufferObject();this._colorAttachments.forEach(((e,t)=>this.detachColorTexture(t)?.dispose())),this.detachDepthStencilBuffer()?.dispose(),this.detachDepthStencilTexture()?.dispose(),this._glName&&(this._context.gl.deleteFramebuffer(this._glName),this._glName=null),this._context.bindFramebuffer(e),this._context.instanceCounter.decrement(a.vt.FramebufferObject,this)}get glName(){return this._glName}get colorTexture(){return this._colorAttachments.get(a.Nm.COLOR_ATTACHMENT0)}get depthStencil(){return this._depthStencilTexture||this._depthStencilBuffer}get depthStencilTexture(){return this._depthStencilTexture}get width(){const e=this._colorAttachments.get(a.Nm.COLOR_ATTACHMENT0);return e?.descriptor?.width??0}get height(){const e=this._colorAttachments.get(a.Nm.COLOR_ATTACHMENT0);return e?.descriptor?.height??0}get usedMemory(){return[...this._colorAttachments].reduce(((e,[t,r])=>e+r.usedMemory),this.depthStencil?.usedMemory??0)}getColorTexture(e){const t=this._colorAttachments.get(e);return t&&_(t)?t:null}get colorAttachments(){return[...this._colorAttachments.keys()]}attachColorTexture(e,t=a.Nm.COLOR_ATTACHMENT0){if(!e)return;this._validateColorAttachmentPoint(t);const r=e.descriptor;this._validateTextureDescriptor(r),this.detachColorTexture(t)?.dispose(),this._initialized&&(this._context.bindFramebuffer(this),this._framebufferTexture2D(e.glName,t)),this._colorAttachments.set(t,e)}detachColorTexture(e=a.Nm.COLOR_ATTACHMENT0){const t=this._colorAttachments.get(e);if(t){if(this._initialized){const t=this._context.getBoundFramebufferObject();this._context.bindFramebuffer(this),this._framebufferTexture2D(null,e),this._context.bindFramebuffer(t)}return this._colorAttachments.delete(e),t}}setColorTextureTarget(e,t=a.Nm.COLOR_ATTACHMENT0){const r=this._colorAttachments.get(t);r&&this._framebufferTexture2D(r.glName,t,e)}attachDepthStencil(e){if(e)switch(e.type){case c.p.Texture:return this._attachDepthStencilTexture(e);case c.p.RenderBuffer:return this._attachDepthStencilBuffer(e)}}_attachDepthStencilTexture(e){if(null==e)return;const t=e.descriptor;t.pixelFormat!==a.Ab.DEPTH_STENCIL&&t.pixelFormat!==a.Ab.DEPTH24_STENCIL8&&console.error("Depth/Stencil texture must have a pixel type of DEPTH_STENCIL!"),t.dataType!==a.ld.UNSIGNED_INT_24_8&&console.error("Depth/Stencil texture must have data type of UNSIGNED_INT_24_8!"),this._validateTextureDescriptor(t),this._disposeDepthStencilAttachments(),this._initialized&&(this._context.bindFramebuffer(this),this._framebufferTexture2D(e.glName,a.nI)),this._depthStencilTexture?.dispose(),this._depthStencilTexture=e}detachDepthStencilTexture(){const e=this._depthStencilTexture;if(e&&this._initialized){const e=this._context.getBoundFramebufferObject();this._context.bindFramebuffer(this),this._framebufferTexture2D(null,a.nI),this._context.bindFramebuffer(e)}return this._depthStencilTexture=null,e}_attachDepthStencilBuffer(e){if(null==e)return;const t=e.descriptor;if(this._validateRenderBufferDescriptor(t),this._disposeDepthStencilAttachments(),this._initialized){this._context.bindFramebuffer(this);const r=this._context.gl,i=this._getGLAttachmentPoint(t);r.framebufferRenderbuffer(a.R.FRAMEBUFFER,i,r.RENDERBUFFER,e.glName)}this._depthStencilBuffer=e}detachDepthStencilBuffer(){const e=this._depthStencilBuffer;if(e&&this._initialized){const t=this._context.getBoundFramebufferObject();this._context.bindFramebuffer(this);const r=this._context.gl,i=this._getGLAttachmentPoint(e.descriptor);r.framebufferRenderbuffer(a.R.FRAMEBUFFER,i,r.RENDERBUFFER,null),this._context.bindFramebuffer(t)}return this._depthStencilBuffer=null,e}copyToTexture(e,t,r,i,n,s,o){(e<0||t<0||n<0||s<0)&&console.error("Offsets cannot be negative!"),(r<=0||i<=0)&&console.error("Copy width and height must be greater than zero!");const c=o.descriptor;o.descriptor.target!==a.Ap.TEXTURE_2D&&console.error("Texture target must be TEXTURE_2D!"),(null==c?.width||null==c?.height||e+r>this.width||t+i>this.height||n+r>c.width||s+i>c.height)&&console.error("Bad dimensions, the current input values will attempt to read or copy out of bounds!");const h=this._context,u=h.bindTexture(o,l.g.TEXTURE_UNIT_FOR_UPDATES);h.setActiveTexture(l.g.TEXTURE_UNIT_FOR_UPDATES),h.bindFramebuffer(this),h.gl.copyTexSubImage2D(a.Ap.TEXTURE_2D,0,n,s,e,t,r,i),h.bindTexture(u,l.g.TEXTURE_UNIT_FOR_UPDATES)}readPixels(e,t,r,i,n,s,o){(r<=0||i<=0)&&console.error("Copy width and height must be greater than zero!"),o||console.error("Target memory is not initialized!"),this._context.bindFramebuffer(this),this._context.gl.readPixels(e,t,r,i,n,s,o)}async readPixelsAsync(e,t,r,i,n,o,c){const{gl:h}=this._context,l=s.g.createPixelPack(this._context,a._U.STREAM_READ,c.byteLength);this._context.bindBuffer(l),this._context.bindFramebuffer(this),h.readPixels(e,t,r,i,n,o,0),this._context.unbindBuffer(a.NZ.PIXEL_PACK_BUFFER),await l.getSubDataAsync(c),l.dispose()}resize(e,t){if(this.width===e&&this.height===t)return;const r={width:e,height:t};f(r,this._context.parameters.maxTextureSize),this._colorAttachments.forEach((e=>e.resize(r.width,r.height))),this._depthStencilTexture?.resize(r.width,r.height),this._initialized&&(f(r,this._context.parameters.maxRenderbufferSize),this._depthStencilBuffer?.resize(r.width,r.height),this._context.getBoundFramebufferObject()===this&&this._context.bindFramebuffer(null),this._initialized=!1)}initializeAndBind(e=a.R.FRAMEBUFFER){const t=this._context.gl;if(this._initialized)return void t.bindFramebuffer(e,this.glName);this._glName&&t.deleteFramebuffer(this._glName);const r=t.createFramebuffer();if(t.bindFramebuffer(e,r),this._colorAttachments.forEach(((t,r)=>this._framebufferTexture2D(t.glName,r,d(t),e))),this._depthStencilBuffer){const r=this._getGLAttachmentPoint(this._depthStencilBuffer.descriptor);t.framebufferRenderbuffer(e,r,t.RENDERBUFFER,this._depthStencilBuffer.glName)}else this._depthStencilTexture&&this._framebufferTexture2D(this._depthStencilTexture.glName,t.DEPTH_STENCIL_ATTACHMENT,d(this._depthStencilTexture),e);(0,o.en)()&&t.checkFramebufferStatus(e)!==t.FRAMEBUFFER_COMPLETE&&console.error("Framebuffer is incomplete!"),this._glName=r,this._initialized=!0}_framebufferTexture2D(e,t=a.Nm.COLOR_ATTACHMENT0,r=a.Ap.TEXTURE_2D,i=a.R.FRAMEBUFFER,n=0){this._context.gl.framebufferTexture2D(i,t,r,e,n)}_disposeDepthStencilAttachments(){const e=this._context.gl;if(this._depthStencilBuffer){if(this._initialized){this._context.bindFramebuffer(this);const t=this._getGLAttachmentPoint(this._depthStencilBuffer.descriptor);e.framebufferRenderbuffer(a.R.FRAMEBUFFER,t,e.RENDERBUFFER,null)}this._depthStencilBuffer=(0,n.WD)(this._depthStencilBuffer)}this._depthStencilTexture&&(this._initialized&&(this._context.bindFramebuffer(this),this._framebufferTexture2D(null,e.DEPTH_STENCIL_ATTACHMENT)),this._depthStencilTexture=(0,n.WD)(this._depthStencilTexture))}_validateTextureDescriptor(e){e.target!==a.Ap.TEXTURE_2D&&e.target!==a.Ap.TEXTURE_CUBE_MAP&&console.error("Texture type must be TEXTURE_2D or TEXTURE_CUBE_MAP!"),f(e,this._context.parameters.maxTextureSize),this._validateBufferDimensions(e)}_validateRenderBufferDescriptor(e){f(e,this._context.parameters.maxRenderbufferSize),this._validateBufferDimensions(e)}_validateBufferDimensions(e){e.width<=0&&(e.width=this.width),e.height<=0&&(e.height=this.height),this.width>0&&this.height>0&&(this.width===e.width&&this.height===e.height||console.error("Attachment size must match framebuffer size!"))}_getGLAttachmentPoint(e){switch(e.internalFormat){case a.yQ.DEPTH_COMPONENT16:case a.yQ.DEPTH_COMPONENT24:case a.yQ.DEPTH_COMPONENT32F:return this._context.gl.DEPTH_ATTACHMENT;case a.yQ.DEPTH24_STENCIL8:case a.yQ.DEPTH32F_STENCIL8:case a.yQ.DEPTH_STENCIL:return this._context.gl.DEPTH_STENCIL_ATTACHMENT;case a.yQ.STENCIL_INDEX8:return this._context.gl.STENCIL_ATTACHMENT}}_validateColorAttachmentPoint(e){if(-1===u._MAX_COLOR_ATTACHMENTS){const{gl:e}=this._context;u._MAX_COLOR_ATTACHMENTS=e.getParameter(e.MAX_COLOR_ATTACHMENTS)}const t=e-a.Nm.COLOR_ATTACHMENT0;t+1>u._MAX_COLOR_ATTACHMENTS&&i.A.getLogger("esri.views.webgl.FrameBufferObject").error("esri.FrameBufferObject",`illegal attachment point for color attachment: ${t+1}. Implementation supports up to ${u._MAX_COLOR_ATTACHMENTS} color attachments`)}}function _(e){return null!=e&&"type"in e&&e.type===c.p.Texture}function f(e,t){const r=Math.max(e.width,e.height);if(r>t){i.A.getLogger("esri.views.webgl.FramebufferObject").warn(`Resizing FBO attachment size ${e.width}x${e.height} to device limit ${t}`);const n=t/r;return e.width=Math.round(e.width*n),e.height=Math.round(e.height*n),!1}return!0}function d(e){return e.descriptor.target===a.Ap.TEXTURE_CUBE_MAP?a.Ap.TEXTURE_CUBE_MAP_POSITIVE_X:a.Ap.TEXTURE_2D}u._MAX_COLOR_ATTACHMENTS=-1},69452:function(e,t,r){var i;r.d(t,{p:function(){return i}}),function(e){e[e.Texture=0]="Texture",e[e.RenderBuffer=1]="RenderBuffer"}(i||(i={}))},95904:function(e,t,r){r.d(t,{B:function(){return v}}),r(58941);var i=r(41835),n=r(85456);const s=["layout","centroid","smooth","case","mat2x2","mat2x3","mat2x4","mat3x2","mat3x3","mat3x4","mat4x2","mat4x3","mat4x4","uint","uvec2","uvec3","uvec4","samplerCubeShadow","sampler2DArray","sampler2DArrayShadow","isampler2D","isampler3D","isamplerCube","isampler2DArray","usampler2D","usampler3D","usamplerCube","usampler2DArray","coherent","restrict","readonly","writeonly","resource","atomic_uint","noperspective","patch","sample","subroutine","common","partition","active","filter","image1D","image2D","image3D","imageCube","iimage1D","iimage2D","iimage3D","iimageCube","uimage1D","uimage2D","uimage3D","uimageCube","image1DArray","image2DArray","iimage1DArray","iimage2DArray","uimage1DArray","uimage2DArray","image1DShadow","image2DShadow","image1DArrayShadow","image2DArrayShadow","imageBuffer","iimageBuffer","uimageBuffer","sampler1DArray","sampler1DArrayShadow","isampler1D","isampler1DArray","usampler1D","usampler1DArray","isampler2DRect","usampler2DRect","samplerBuffer","isamplerBuffer","usamplerBuffer","sampler2DMS","isampler2DMS","usampler2DMS","sampler2DMSArray","isampler2DMSArray","usampler2DMSArray","trunc","round","roundEven","isnan","isinf","floatBitsToInt","floatBitsToUint","intBitsToFloat","uintBitsToFloat","packSnorm2x16","unpackSnorm2x16","packUnorm2x16","unpackUnorm2x16","packHalf2x16","unpackHalf2x16","outerProduct","transpose","determinant","inverse","texture","textureSize","textureProj","textureLod","textureOffset","texelFetch","texelFetchOffset","textureProjOffset","textureLodOffset","textureProjLod","textureProjLodOffset","textureGrad","textureGradOffset","textureProjGrad","textureProjGradOffset"],o=!1;var a=r(80562),c=999,h=9999,l=0,u=1,_=2,f=3,d=4,m=5,p=6,g=7,T=8,x=9,E=10,A=11,R=["block-comment","line-comment","preprocessor","operator","integer","float","ident","builtin","keyword","whitespace","eof","integer"];function b(e){return function(e){var t=function(){var e,t,r,i=0,n=0,s=c,o=[],b=[],S=1,D=0,M=0,N=!1,C=!1,U="";return function(e){return b=[],null!==e?F(e.replace?e.replace(/\r\n/g,"\n"):e):(o.length&&y(o.join("")),s=E,y("(eof)"),b)};function y(e){e.length&&b.push({type:R[s],data:e,position:M,line:S,column:D})}function F(t){var o;for(i=0,r=(U+=t).length;e=U[i],i<r;){switch(o=i,s){case l:i=I();break;case u:case _:i=P();break;case f:i=B();break;case d:i=H();break;case A:i=L();break;case m:i=G();break;case h:i=X();break;case x:i=v();break;case c:i=w()}o!==i&&("\n"===U[o]?(D=0,++S):++D)}return n+=i,U=U.slice(i),b}function w(){return o=o.length?[]:o,"/"===t&&"*"===e?(M=n+i-1,s=l,t=e,i+1):"/"===t&&"/"===e?(M=n+i-1,s=u,t=e,i+1):"#"===e?(s=_,M=n+i,i):/\s/.test(e)?(s=x,M=n+i,i):(N=/\d/.test(e),C=/[^\w_]/.test(e),M=n+i,s=N?d:C?f:h,i)}function v(){return/[^\s]/g.test(e)?(y(o.join("")),s=c,i):(o.push(e),t=e,i+1)}function P(){return"\r"!==e&&"\n"!==e||"\\"===t?(o.push(e),t=e,i+1):(y(o.join("")),s=c,i)}function I(){return"/"===e&&"*"===t?(o.push(e),y(o.join("")),s=c,i+1):(o.push(e),t=e,i+1)}function B(){if("."===t&&/\d/.test(e))return s=m,i;if("/"===t&&"*"===e)return s=l,i;if("/"===t&&"/"===e)return s=u,i;if("."===e&&o.length){for(;O(o););return s=m,i}if(";"===e||")"===e||"("===e){if(o.length)for(;O(o););return y(e),s=c,i+1}var r=2===o.length&&"="!==e;if(/[\w_\d\s]/.test(e)||r){for(;O(o););return s=c,i}return o.push(e),t=e,i+1}function O(e){for(var t,r,i=0;;){if(t=a.o.indexOf(e.slice(0,e.length+i).join("")),r=a.o[t],-1===t){if(i--+e.length>0)continue;r=e.slice(0,1).join("")}return y(r),M+=r.length,(o=o.slice(r.length)).length}}function L(){return/[^a-fA-F0-9]/.test(e)?(y(o.join("")),s=c,i):(o.push(e),t=e,i+1)}function H(){return"."===e||/[eE]/.test(e)?(o.push(e),s=m,t=e,i+1):"x"===e&&1===o.length&&"0"===o[0]?(s=A,o.push(e),t=e,i+1):/[^\d]/.test(e)?(y(o.join("")),s=c,i):(o.push(e),t=e,i+1)}function G(){return"f"===e&&(o.push(e),t=e,i+=1),/[eE]/.test(e)||"-"===e&&/[eE]/.test(t)?(o.push(e),t=e,i+1):/[^\d]/.test(e)?(y(o.join("")),s=c,i):(o.push(e),t=e,i+1)}function X(){if(/[^\d\w_]/.test(e)){var r=o.join("");return s=a.l.indexOf(r)>-1?T:a.b.indexOf(r)>-1?g:p,y(o.join("")),s=c,i}return o.push(e),t=e,i+1}}(),r=[];return(r=r.concat(t(e))).concat(t(null))}(e)}const S=new Set(["GL_OES_standard_derivatives","GL_EXT_frag_depth","GL_EXT_draw_buffers","GL_EXT_shader_texture_lod"]);function D(e,t){for(let r=t-1;r>=0;r--){const t=e[r];if("whitespace"!==t.type&&"block-comment"!==t.type){if("keyword"!==t.type)break;if("attribute"===t.data||"in"===t.data)return!0}}return!1}function M(e,t,r,i){i=i||r;for(const n of e)if("ident"===n.type&&n.data===r)return i in t?t[i]++:t[i]=0,M(e,t,i+"_"+t[i],i);return r}function N(e,t,r="afterVersion"){function i(e,t){for(let r=t;r<e.length;r++){const t=e[r];if("operator"===t.type&&";"===t.data)return r}return null}const n={data:"\n",type:"whitespace"},s=t=>t<e.length&&/[^\r\n]$/.test(e[t].data);let o=function(e){let t=-1,n=0,s=-1;for(let o=0;o<e.length;o++){const a=e[o];if("preprocessor"===a.type&&(/#(if|ifdef|ifndef)\s+.+/.test(a.data)?++n:/#endif\s*.*/.test(a.data)&&--n),"afterVersion"!==r&&"afterPrecision"!==r||"preprocessor"===a.type&&a.data.startsWith("#version")&&(s=Math.max(s,o)),"afterPrecision"===r&&"keyword"===a.type&&"precision"===a.data){const t=i(e,o);if(null===t)throw new Error("precision statement not followed by any semicolons!");s=Math.max(s,t)}t<s&&0===n&&(t=o)}return t+1}(e);s(o-1)&&e.splice(o++,0,n);for(const r of t)e.splice(o++,0,r);s(o-1)&&s(o)&&e.splice(o,0,n)}function C(e,t,r,i="lowp"){N(e,[{type:"keyword",data:"out"},{type:"whitespace",data:" "},{type:"keyword",data:i},{type:"whitespace",data:" "},{type:"keyword",data:r},{type:"whitespace",data:" "},{type:"ident",data:t},{type:"operator",data:";"}],"afterPrecision")}function U(e,t,r,i,n="lowp"){N(e,[{type:"keyword",data:"layout"},{type:"operator",data:"("},{type:"keyword",data:"location"},{type:"whitespace",data:" "},{type:"operator",data:"="},{type:"whitespace",data:" "},{type:"integer",data:i.toString()},{type:"operator",data:")"},{type:"whitespace",data:" "},{type:"keyword",data:"out"},{type:"whitespace",data:" "},{type:"keyword",data:n},{type:"whitespace",data:" "},{type:"keyword",data:r},{type:"whitespace",data:" "},{type:"ident",data:t},{type:"operator",data:";"}],"afterPrecision")}function y(e,t){let r,i,n=-1;for(let s=t;s<e.length;s++){const t=e[s];if("operator"===t.type&&("["===t.data&&(r=s),"]"===t.data)){i=s;break}"integer"===t.type&&(n=parseInt(t.data,10))}return r&&i&&e.splice(r,i-r+1),n}function F(e,t){if(e.startsWith("#version 300"))return e;const r=(i=e,o?w.get(i):null);var i;if(null!=r)return r;const a=b(e);if("300 es"===function(e,t="100",r="300 es"){const i=/^\s*#version\s+([0-9]+(\s+[a-zA-Z]+)?)\s*/;for(const n of e)if("preprocessor"===n.type){const e=i.exec(n.data);if(e){const i=e[1].replaceAll(/\s{2,}/g," ");if(i===r)return i;if(i===t)return n.data="#version "+r,t;throw new Error("unknown glsl version: "+i)}}return e.splice(0,0,{type:"preprocessor",data:"#version "+r},{type:"whitespace",data:"\n"}),null}(a,"100","300 es"))return e;let c=null,h=null;const l={},u={};for(let e=0;e<a.length;++e){const r=a[e];switch(r.type){case"keyword":t===n.Co.VERTEX_SHADER&&"attribute"===r.data?r.data="in":"varying"===r.data&&(r.data=t===n.Co.VERTEX_SHADER?"out":"in");break;case"builtin":if(/^texture(2D|Cube)(Proj)?(Lod|Grad)?(EXT)?$/.test(r.data.trim())&&(r.data=r.data.replaceAll(/(2D|Cube|EXT)/g,"")),t===n.Co.FRAGMENT_SHADER&&"gl_FragColor"===r.data&&(c||(c=M(a,l,"fragColor"),C(a,c,"vec4")),r.data=c),t===n.Co.FRAGMENT_SHADER&&"gl_FragData"===r.data){const t=y(a,e+1),i=M(a,l,"fragData");U(a,i,"vec4",t,"mediump"),r.data=i}else t===n.Co.FRAGMENT_SHADER&&"gl_FragDepthEXT"===r.data&&(h||(h=M(a,l,"gl_FragDepth")),r.data=h);break;case"ident":if(s.includes(r.data)){if(t===n.Co.VERTEX_SHADER&&D(a,e))throw new Error("attribute in vertex shader uses a name that is a reserved word in glsl 300 es");r.data in u||(u[r.data]=M(a,l,r.data)),r.data=u[r.data]}}}for(let e=a.length-1;e>=0;--e){const t=a[e];if("preprocessor"===t.type){const r=t.data.match(/#extension\s+(.*):/);if(r?.[1]&&S.has(r[1].trim())){const t=a[e+1];a.splice(e,t&&"whitespace"===t.type?2:1)}const i=t.data.match(/#ifdef\s+(.*)/);i?.[1]&&S.has(i[1].trim())&&(t.data="#if 1");const n=t.data.match(/#ifndef\s+(.*)/);n?.[1]&&S.has(n[1].trim())&&(t.data="#if 0")}}return function(e,t){return o&&w.set(e,t),t}(e,function(e){return e.map((e=>"eof"!==e.type?e.data:"")).join("")}(a))}const w=new Map;class v{constructor(e,t,r,s,o=new Map,a=[]){this._context=e,this._locations=s,this._uniformBlockBindings=o,this._transformFeedbackVaryings=a,this._refCount=1,this._compiled=!1,this._linesOfCode=0,this._nameToUniformLocation=new Map,this._nameToUniform1=new Map,this._nameToUniform1v=new Map,this._nameToUniform2=new Map,this._nameToUniform3=new Map,this._nameToUniform4=new Map,this._nameToUniformMatrix3=new Map,this._nameToUniformMatrix4=new Map,e||console.error("RenderingContext isn't initialized!"),0===t.length&&console.error("Shaders source should not be empty!"),t=F(t,n.Co.VERTEX_SHADER),r=F(r,n.Co.FRAGMENT_SHADER),this._vShader=P(this._context,n.Co.VERTEX_SHADER,t),this._fShader=P(this._context,n.Co.FRAGMENT_SHADER,r),B.enabled&&(this._linesOfCode=t.match(/\n/g).length+r.match(/\n/g).length+2,this._context.instanceCounter.increment(n.vt.LinesOfCode,this._vShader,this._linesOfCode)),this._vShader&&this._fShader||console.error("Error loading shaders!"),this._context.instanceCounter.increment(n.vt.Shader,this),(0,i.Xc)()&&(this.vertexShader=t,this.fragmentShader=r),this.usedMemory=t.length+r.length;const c=this._context.gl,h=c.createProgram();c.attachShader(h,this._vShader),c.attachShader(h,this._fShader),this._locations.forEach(((e,t)=>c.bindAttribLocation(h,e,t))),this._transformFeedbackVaryings?.length&&c.transformFeedbackVaryings(h,this._transformFeedbackVaryings,c.SEPARATE_ATTRIBS),c.linkProgram(h),(0,i.Xc)()&&!c.getProgramParameter(h,c.LINK_STATUS)&&console.error(`Could not link shader\nvalidated: ${c.getProgramParameter(h,c.VALIDATE_STATUS)}, gl error ${c.getError()}, vertex: ${c.getShaderParameter(this._vShader,c.COMPILE_STATUS)}, fragment: ${c.getShaderParameter(this._fShader,c.COMPILE_STATUS)}, info log: ${c.getProgramInfoLog(h)}, vertex source: ${this.vertexShader}, fragment source: ${this.fragmentShader}`);for(const[e,t]of this._uniformBlockBindings){const r=c.getUniformBlockIndex(h,e);r<4294967295&&c.uniformBlockBinding(h,r,t)}this._glName=h,this._context.instanceCounter.increment(n.vt.Program,this)}get glName(){return this._glName}get hasGLName(){return null!=this._glName}get hasTransformFeedbackVaryings(){return!!this._transformFeedbackVaryings?.length}get compiled(){if(this._compiled)return!0;const e=this._context.gl.getExtension("KHR_parallel_shader_compile");return null==e||null==this.glName?(this._compiled=!0,!0):(this._compiled=!!this._context.gl.getProgramParameter(this.glName,e.COMPLETION_STATUS_KHR),this._compiled)}dispose(){if(--this._refCount>0)return;const e=this._context.gl,t=this._context.instanceCounter;this._nameToUniformLocation.forEach((e=>e&&t.decrement(n.vt.Uniform,e))),this._nameToUniformLocation.clear(),this._vShader&&(this._linesOfCode>0&&(t.decrement(n.vt.LinesOfCode,this._vShader,this._linesOfCode),this._linesOfCode=0),e.deleteShader(this._vShader),this._vShader=null,t.decrement(n.vt.Shader,this)),this._fShader&&(e.deleteShader(this._fShader),this._fShader=null),this._glName&&(e.deleteProgram(this._glName),this._glName=null,t.decrement(n.vt.Program,this))}ref(){++this._refCount}_getUniformLocation(e){const t=this._nameToUniformLocation.get(e);if(void 0!==t)return t;if(this.glName){const t=this._context.gl.getUniformLocation(this.glName,e);return this._nameToUniformLocation.set(e,t),t&&this._context.instanceCounter.increment(n.vt.Uniform,t),t}return null}hasUniform(e){return null!=this._getUniformLocation(e)}setUniform1i(e,t){const r=this._nameToUniform1.get(e);void 0!==r&&t===r||(this._context.gl.uniform1i(this._getUniformLocation(e),t),this._nameToUniform1.set(e,t))}setUniform1iv(e,t){I(this._nameToUniform1v,e,t)&&this._context.gl.uniform1iv(this._getUniformLocation(e),t)}setUniform2iv(e,t){I(this._nameToUniform2,e,t)&&this._context.gl.uniform2iv(this._getUniformLocation(e),t)}setUniform3iv(e,t){I(this._nameToUniform3,e,t)&&this._context.gl.uniform3iv(this._getUniformLocation(e),t)}setUniform4iv(e,t){I(this._nameToUniform4,e,t)&&this._context.gl.uniform4iv(this._getUniformLocation(e),t)}setUniform1f(e,t){const r=this._nameToUniform1.get(e);void 0!==r&&t===r||(this._context.gl.uniform1f(this._getUniformLocation(e),t),this._nameToUniform1.set(e,t))}setUniform1fv(e,t){I(this._nameToUniform1v,e,t)&&this._context.gl.uniform1fv(this._getUniformLocation(e),t)}setUniform2f(e,t,r){const i=this._nameToUniform2.get(e);void 0===i?(this._context.gl.uniform2f(this._getUniformLocation(e),t,r),this._nameToUniform2.set(e,[t,r])):t===i[0]&&r===i[1]||(this._context.gl.uniform2f(this._getUniformLocation(e),t,r),i[0]=t,i[1]=r)}setUniform2fv(e,t){I(this._nameToUniform2,e,t)&&this._context.gl.uniform2fv(this._getUniformLocation(e),t)}setUniform3f(e,t,r,i){const n=this._nameToUniform3.get(e);void 0===n?(this._context.gl.uniform3f(this._getUniformLocation(e),t,r,i),this._nameToUniform3.set(e,[t,r,i])):t===n[0]&&r===n[1]&&i===n[2]||(this._context.gl.uniform3f(this._getUniformLocation(e),t,r,i),n[0]=t,n[1]=r,n[2]=i)}setUniform3fv(e,t){const r=this._getUniformLocation(e);null!=r&&I(this._nameToUniform3,e,t)&&this._context.gl.uniform3fv(r,t)}setUniform4f(e,t,r,i,n){const s=this._nameToUniform4.get(e);void 0===s?(this._context.gl.uniform4f(this._getUniformLocation(e),t,r,i,n),this._nameToUniform4.set(e,[t,r,i,n])):void 0!==s&&t===s[0]&&r===s[1]&&i===s[2]&&n===s[3]||(this._context.gl.uniform4f(this._getUniformLocation(e),t,r,i,n),s[0]=t,s[1]=r,s[2]=i,s[3]=n)}setUniform4fv(e,t){const r=this._getUniformLocation(e);null!=r&&I(this._nameToUniform4,e,t)&&this._context.gl.uniform4fv(r,t)}setUniformMatrix3fv(e,t,r=!1){const i=this._getUniformLocation(e);null!=i&&I(this._nameToUniformMatrix3,e,t)&&this._context.gl.uniformMatrix3fv(i,r,t)}setUniformMatrix4fv(e,t,r=!1){const i=this._getUniformLocation(e);null!=i&&I(this._nameToUniformMatrix4,e,t)&&this._context.gl.uniformMatrix4fv(i,r,t)}stop(){}}function P(e,t,r){const s=e.gl,o=s.createShader(t);return s.shaderSource(o,r),s.compileShader(o),(0,i.Xc)()&&!s.getShaderParameter(o,s.COMPILE_STATUS)&&(console.error("Compile error in ".concat(t===n.Co.VERTEX_SHADER?"vertex":"fragment"," shader")),console.error(s.getShaderInfoLog(o)),console.error(function(e){let t=2;return e.replaceAll("\n",(()=>"\n"+function(e){return e>=1e3?e.toString():("  "+e).slice(-3)}(t++)+":"))}(r))),o}function I(e,t,r){const i=e.get(t);if(!i)return e.set(t,Array.from(r)),!0;const n=r.length;if(i.length!==n)return e.set(t,Array.from(r)),!0;for(let e=0;e<n;++e){const t=r[e];if(i[e]!==t){for(i[e]=t;e<n;++e)i[e]=r[e];return!0}}return!1}const B={enabled:!1}},3934:function(e,t,r){r.d(t,{J:function(){return s}}),r(58941);var i=r(7970),n=r(95904);class s{constructor(e){this._rctx=e,this._store=new i.O}dispose(){this._store.forEach((e=>e.forEach((e=>e.dispose())))),this._store.clear()}acquire(e,t,r,i){const s=this._store.get(e,t);if(null!=s)return s.ref(),s;const o=new n.B(this._rctx,e,t,r,i);return o.ref(),this._store.set(e,t,o),o}get test(){}}},10904:function(e,t,r){r.d(t,{r:function(){return n}});var i=r(95904);function n(e,t,r=""){return new i.B(e,r+t.shaders.vertexShader,r+t.shaders.fragmentShader,t.attributes)}},49414:function(e,t,r){r.d(t,{l:function(){return o}});var i=r(85456),n=r(69452),s=r(15167);class o{constructor(e,t){this._context=e,this._descriptor=t,this.type=n.p.RenderBuffer,this._context.instanceCounter.increment(i.vt.Renderbuffer,this);const r=this._context.gl;this.glName=r.createRenderbuffer(),this._context.bindRenderbuffer(this);const{width:s,height:o,internalFormat:a,multisampled:c}=t;c?r.renderbufferStorageMultisample(r.RENDERBUFFER,this.samples,a,s,o):r.renderbufferStorage(r.RENDERBUFFER,a,s,o),this._context.bindRenderbuffer(null)}get descriptor(){return this._descriptor}get samples(){const e=this._descriptor.samples,t=this._context.parameters.maxSamples;return e?Math.min(e,t):t}get usedMemory(){return(0,s.e)(this._descriptor)}resize(e,t){const r=this._descriptor;if(r.width===e&&r.height===t)return;r.width=e,r.height=t;const i=this._context.gl;this._context.bindRenderbuffer(this),r.multisampled?i.renderbufferStorageMultisample(i.RENDERBUFFER,this.samples,r.internalFormat,r.width,r.height):i.renderbufferStorage(i.RENDERBUFFER,r.internalFormat,r.width,r.height),this._context.bindRenderbuffer(null)}dispose(){this._context&&(this._context.gl.deleteRenderbuffer(this.glName),this._context.instanceCounter.decrement(i.vt.Renderbuffer,this),this._context=null)}}},15167:function(e,t,r){r.d(t,{e:function(){return s},q:function(){return n}});var i=r(93380);class n{constructor(e,t,r=t){this.internalFormat=e,this.width=t,this.height=r,this.multisampled=!1,this.samples=1}}function s(e){return e.width<=0||e.height<=0||null==e.internalFormat?0:e.width*e.height*(0,i.IB)(e.internalFormat)}},65644:function(e,t,r){r.d(t,{Z:function(){return i}});class i{constructor(e){this._readFile=e}resolveIncludes(e){return this._resolve(e)}_resolve(e,t=new Map){if(t.has(e))return t.get(e);const r=this._read(e);if(!r)throw new Error(`cannot find shader file ${e}`);const i=/^[^\S\n]*#include\s+<(\S+)>[^\S\n]?/gm;let n=i.exec(r);const s=[];for(;null!=n;)s.push({path:n[1],start:n.index,length:n[0].length}),n=i.exec(r);let o=0,a="";return s.forEach((e=>{a+=r.slice(o,e.start),a+=t.has(e.path)?"":this._resolve(e.path,t),o=e.start+e.length})),a+=r.slice(o),t.set(e,a),a}_read(e){return this._readFile(e)}}},78541:function(e,t,r){r.d(t,{g:function(){return h}});var i=r(39819),n=(r(58941),r(41835)),s=r(85456),o=r(69452),a=r(10956);class c extends a.R{constructor(e,t){switch(super(),this.context=e,Object.assign(this,t),this.internalFormat){case s.H0.R16F:case s.H0.R16I:case s.H0.R16UI:case s.H0.R32F:case s.H0.R32I:case s.H0.R32UI:case s.H0.R8_SNORM:case s.H0.R8:case s.H0.R8I:case s.H0.R8UI:this.pixelFormat=s.Ab.RED}}static validate(e,t){return new c(e,t)}}let h=class e{constructor(e,t=null,r=null){if(this.type=o.p.Texture,this._glName=null,this._samplingModeDirty=!1,this._wrapModeDirty=!1,this._wasImmutablyAllocated=!1,"context"in e)this._descriptor=e,r=t;else{const r=c.validate(e,t);if(!r)throw new i.A("Texture descriptor invalid");this._descriptor=r}this._descriptor.target===s.Ap.TEXTURE_CUBE_MAP?this._setDataCubeMap(r):this.setData(r)}get glName(){return this._glName}get descriptor(){return this._descriptor}get usedMemory(){return(0,a.e)(this._descriptor)}get isDirty(){return this._samplingModeDirty||this._wrapModeDirty}dispose(){this._glName&&this._descriptor.context.instanceCounter.decrement(s.vt.Texture,this),this._descriptor.context.gl&&this._glName&&(this._descriptor.context.unbindTexture(this),this._descriptor.context.gl.deleteTexture(this._glName),this._glName=null)}release(){this.dispose()}resize(e,t){const r=this._descriptor;if(r.width!==e||r.height!==t){if(this._wasImmutablyAllocated)throw new i.A("Immutable textures can't be resized!");r.width=e,r.height=t,this._descriptor.target===s.Ap.TEXTURE_CUBE_MAP?this._setDataCubeMap(null):this.setData(null)}}_setDataCubeMap(e=null){for(let t=s.Ap.TEXTURE_CUBE_MAP_POSITIVE_X;t<=s.Ap.TEXTURE_CUBE_MAP_NEGATIVE_Z;t++)this._setData(e,t)}setData(e){this._setData(e)}_setData(t,r){if(!this._descriptor.context?.gl)return;const o=this._descriptor.context.gl;(0,n.Y2)(o),this._glName||(this._glName=o.createTexture(),this._glName&&this._descriptor.context.instanceCounter.increment(s.vt.Texture,this)),void 0===t&&(t=null);const a=this._descriptor,c=r??a.target,h=m(c);null===t&&(a.width=a.width||4,a.height=a.height||4,h&&(a.depth=a.depth??1));const g=this._descriptor.context.bindTexture(this,e.TEXTURE_UNIT_FOR_UPDATES);this._descriptor.context.setActiveTexture(e.TEXTURE_UNIT_FOR_UPDATES),l(a),this._configurePixelStorage(),(0,n.Y2)(o);const T=this._deriveInternalFormat();if(d(t)){let e="width"in t?t.width:t.codedWidth,r="height"in t?t.height:t.codedHeight;const i=1;t instanceof HTMLVideoElement&&(e=t.videoWidth,r=t.videoHeight),a.width&&a.height,h&&a.depth,a.isImmutable&&!this._wasImmutablyAllocated&&this._texStorage(c,T,a.hasMipmap,e,r,i),this._texImage(c,0,T,e,r,i,t),(0,n.Y2)(o),a.hasMipmap&&this.generateMipmap(),a.width||(a.width=e),a.height||(a.height=r),h&&!a.depth&&(a.depth=i)}else{const{width:e,height:r,depth:l}=a;if(null==e||null==r)throw new i.A("Width and height must be specified!");if(h&&null==l)throw new i.A("Depth must be specified!");if(a.isImmutable&&!this._wasImmutablyAllocated&&this._texStorage(c,T,a.hasMipmap,e,r,l),f(t)){const n=t.levels,h=p(c,e,r,l),u=Math.min(h-1,n.length-1);o.texParameteri(a.target,this._descriptor.context.gl.TEXTURE_MAX_LEVEL,u);const _=T;if(!(_ in s.CQ))throw new i.A("Attempting to use compressed data with an uncompressed format!");this._forEachMipmapLevel(((e,t,r,i)=>{const s=n[Math.min(e,n.length-1)];this._compressedTexImage(c,e,_,t,r,i,s)}),u)}else this._texImage(c,0,T,e,r,l,t),(0,n.Y2)(o),a.hasMipmap&&this.generateMipmap()}u(o,this._descriptor),_(o,this._descriptor),function(e,t){const r=e.capabilities.textureFilterAnisotropic;r&&e.gl.texParameterf(t.target,r.TEXTURE_MAX_ANISOTROPY,t.maxAnisotropy??1)}(this._descriptor.context,this._descriptor),(0,n.Y2)(o),this._descriptor.context.bindTexture(g,e.TEXTURE_UNIT_FOR_UPDATES)}updateData(t,r,n,s,o,a,c=0){a||console.error("An attempt to use uninitialized data!"),this._glName||console.error("An attempt to update uninitialized texture!");const h=this._descriptor,l=this._deriveInternalFormat(),{context:u,pixelFormat:_,dataType:m,target:p,isImmutable:g}=h;if(g&&!this._wasImmutablyAllocated)throw new i.A("Cannot update immutable texture before allocation!");const T=u.bindTexture(this,e.TEXTURE_UNIT_FOR_UPDATES,!0);(r<0||n<0||r+s>h.width||n+o>h.height)&&console.error("An attempt to update out of bounds of the texture!"),this._configurePixelStorage();const{gl:x}=u;c&&x.pixelStorei(x.UNPACK_SKIP_ROWS,c),d(a)?x.texSubImage2D(p,t,r,n,s,o,_,m,a):f(a)?x.compressedTexSubImage2D(p,t,r,n,s,o,l,a.levels[t]):x.texSubImage2D(p,t,r,n,s,o,_,m,a),c&&x.pixelStorei(x.UNPACK_SKIP_ROWS,0),u.bindTexture(T,e.TEXTURE_UNIT_FOR_UPDATES)}updateData3D(t,r,n,s,o,a,c,h){h||console.error("An attempt to use uninitialized data!"),this._glName||console.error("An attempt to update uninitialized texture!");const l=this._descriptor,u=this._deriveInternalFormat(),{context:_,pixelFormat:d,dataType:p,isImmutable:g,target:T}=l;if(g&&!this._wasImmutablyAllocated)throw new i.A("Cannot update immutable texture before allocation!");m(T)||console.warn("Attempting to set 3D texture data on a non-3D texture");const x=_.bindTexture(this,e.TEXTURE_UNIT_FOR_UPDATES);_.setActiveTexture(e.TEXTURE_UNIT_FOR_UPDATES),(r<0||n<0||s<0||r+o>l.width||n+a>l.height||s+c>l.depth)&&console.error("An attempt to update out of bounds of the texture!"),this._configurePixelStorage();const{gl:E}=_;if(f(h))h=h.levels[t],E.compressedTexSubImage3D(T,t,r,n,s,o,a,c,u,h);else{const e=h;E.texSubImage3D(T,t,r,n,s,o,a,c,d,p,e)}_.bindTexture(x,e.TEXTURE_UNIT_FOR_UPDATES)}generateMipmap(){const t=this._descriptor;if(!t.hasMipmap){if(this._wasImmutablyAllocated)throw new i.A("Cannot add mipmaps to immutable texture after allocation");t.hasMipmap=!0,this._samplingModeDirty=!0,l(t)}t.samplingMode===s.Cj.LINEAR?(this._samplingModeDirty=!0,t.samplingMode=s.Cj.LINEAR_MIPMAP_NEAREST):t.samplingMode===s.Cj.NEAREST&&(this._samplingModeDirty=!0,t.samplingMode=s.Cj.NEAREST_MIPMAP_NEAREST);const r=this._descriptor.context.bindTexture(this,e.TEXTURE_UNIT_FOR_UPDATES);this._descriptor.context.setActiveTexture(e.TEXTURE_UNIT_FOR_UPDATES),this._descriptor.context.gl.generateMipmap(t.target),this._descriptor.context.bindTexture(r,e.TEXTURE_UNIT_FOR_UPDATES)}clearMipmap(){const e=this._descriptor;if(e.hasMipmap){if(this._wasImmutablyAllocated)throw new i.A("Cannot delete mipmaps to immutable texture after allocation");e.hasMipmap=!1,this._samplingModeDirty=!0,l(e)}e.samplingMode===s.Cj.LINEAR_MIPMAP_NEAREST?(this._samplingModeDirty=!0,e.samplingMode=s.Cj.LINEAR):e.samplingMode===s.Cj.NEAREST_MIPMAP_NEAREST&&(this._samplingModeDirty=!0,e.samplingMode=s.Cj.NEAREST)}setSamplingMode(e){e!==this._descriptor.samplingMode&&(this._descriptor.samplingMode=e,this._samplingModeDirty=!0)}setWrapMode(e){e!==this._descriptor.wrapMode&&(this._descriptor.wrapMode=e,l(this._descriptor),this._wrapModeDirty=!0)}applyChanges(){const e=this._descriptor,t=e.context.gl;this._samplingModeDirty&&(u(t,e),this._samplingModeDirty=!1),this._wrapModeDirty&&(_(t,e),this._wrapModeDirty=!1)}_deriveInternalFormat(){if(null!=this._descriptor.internalFormat)return this._descriptor.internalFormat===s.Ab.DEPTH_STENCIL&&(this._descriptor.internalFormat=s.Ab.DEPTH24_STENCIL8),this._descriptor.internalFormat;switch(this._descriptor.dataType){case s.ld.FLOAT:switch(this._descriptor.pixelFormat){case s.Ab.RGBA:return this._descriptor.internalFormat=s.H0.RGBA32F;case s.Ab.RGB:return this._descriptor.internalFormat=s.H0.RGB32F;default:throw new i.A("Unable to derive format")}case s.ld.UNSIGNED_BYTE:switch(this._descriptor.pixelFormat){case s.Ab.RGBA:return this._descriptor.internalFormat=s.H0.RGBA8;case s.Ab.RGB:return this._descriptor.internalFormat=s.H0.RGB8}}return this._descriptor.internalFormat=this._descriptor.pixelFormat===s.Ab.DEPTH_STENCIL?s.Ab.DEPTH24_STENCIL8:this._descriptor.pixelFormat}_configurePixelStorage(){const e=this._descriptor.context.gl,{unpackAlignment:t,flipped:r,preMultiplyAlpha:i}=this._descriptor;e.pixelStorei(e.UNPACK_ALIGNMENT,t),e.pixelStorei(e.UNPACK_FLIP_Y_WEBGL,r?1:0),e.pixelStorei(e.UNPACK_PREMULTIPLY_ALPHA_WEBGL,i?1:0)}_texStorage(e,t,r,n,o,a){const{gl:c}=this._descriptor.context;if(!(t in s.H0))throw new i.A("Immutable textures must have a sized internal format");if(!this._descriptor.isImmutable)return;const h=r?p(e,n,o,a):1;if(m(e)){if(null==a)throw new i.A("Missing depth dimension for 3D texture upload");c.texStorage3D(e,h,t,n,o,a)}else c.texStorage2D(e,h,t,n,o);this._wasImmutablyAllocated=!0}_texImage(e,t,r,n,s,o,a){const c=this._descriptor.context.gl,h=m(e),{isImmutable:l,pixelFormat:u,dataType:_}=this._descriptor;if(l){if(null!=a){const r=a;if(h){if(null==o)throw new i.A("Missing depth dimension for 3D texture upload");c.texSubImage3D(e,t,0,0,0,n,s,o,u,_,r)}else c.texSubImage2D(e,t,0,0,n,s,u,_,r)}}else{const l=a;if(h){if(null==o)throw new i.A("Missing depth dimension for 3D texture upload");c.texImage3D(e,t,r,n,s,o,0,u,_,l)}else c.texImage2D(e,t,r,n,s,0,u,_,l)}}_compressedTexImage(e,t,r,n,s,o,a){const c=this._descriptor.context.gl,h=m(e);if(this._descriptor.isImmutable){if(null!=a)if(h){if(null==o)throw new i.A("Missing depth dimension for 3D texture upload");c.compressedTexSubImage3D(e,t,0,0,0,n,s,o,r,a)}else c.compressedTexSubImage2D(e,t,0,0,n,s,r,a)}else if(h){if(null==o)throw new i.A("Missing depth dimension for 3D texture upload");c.compressedTexImage3D(e,t,r,n,s,o,0,a)}else c.compressedTexImage2D(e,t,r,n,s,0,a)}_forEachMipmapLevel(e,t=1/0){let{width:r,height:n,depth:o,hasMipmap:a,target:c}=this._descriptor;const h=c===s.Ap.TEXTURE_3D;if(null==r||null==n||h&&null==o)throw new i.A("Missing texture dimensions for mipmap calculation");for(let i=0;e(i,r,n,o),a&&(1!==r||1!==n||h&&1!==o)&&!(i>=t);++i)r=Math.max(1,r>>1),n=Math.max(1,n>>1),h&&(o=Math.max(1,o>>1))}};function l(e){(null!=e.width&&e.width<0||null!=e.height&&e.height<0||null!=e.depth&&e.depth<0)&&console.error("Negative dimension parameters are not allowed!")}function u(e,t){let r=t.samplingMode,i=t.samplingMode;r===s.Cj.LINEAR_MIPMAP_NEAREST||r===s.Cj.LINEAR_MIPMAP_LINEAR?(r=s.Cj.LINEAR,t.hasMipmap||(i=s.Cj.LINEAR)):r!==s.Cj.NEAREST_MIPMAP_NEAREST&&r!==s.Cj.NEAREST_MIPMAP_LINEAR||(r=s.Cj.NEAREST,t.hasMipmap||(i=s.Cj.NEAREST)),e.texParameteri(t.target,e.TEXTURE_MAG_FILTER,r),e.texParameteri(t.target,e.TEXTURE_MIN_FILTER,i)}function _(e,t){"number"==typeof t.wrapMode?(e.texParameteri(t.target,e.TEXTURE_WRAP_S,t.wrapMode),e.texParameteri(t.target,e.TEXTURE_WRAP_T,t.wrapMode)):(e.texParameteri(t.target,e.TEXTURE_WRAP_S,t.wrapMode.s),e.texParameteri(t.target,e.TEXTURE_WRAP_T,t.wrapMode.t))}function f(e){return null!=e&&"type"in e&&"compressed"===e.type}function d(e){return null!=e&&!f(e)&&!function(e){return null!=e&&"byteLength"in e}(e)}function m(e){return e===s.Ap.TEXTURE_3D||e===s.Ap.TEXTURE_2D_ARRAY}function p(e,t,r,i=1){let n=Math.max(t,r);return e===s.Ap.TEXTURE_3D&&(n=Math.max(n,i)),Math.round(Math.log(n)/Math.LN2)+1}h.TEXTURE_UNIT_FOR_UPDATES=0},10956:function(e,t,r){r.d(t,{R:function(){return s},e:function(){return o}});var i=r(85456),n=r(93380);class s{constructor(e=0,t=e){this.width=e,this.height=t,this.target=i.Ap.TEXTURE_2D,this.pixelFormat=i.Ab.RGBA,this.dataType=i.ld.UNSIGNED_BYTE,this.samplingMode=i.Cj.LINEAR,this.wrapMode=i.pF.REPEAT,this.maxAnisotropy=1,this.flipped=!1,this.hasMipmap=!1,this.isOpaque=!1,this.unpackAlignment=4,this.preMultiplyAlpha=!1,this.depth=1,this.isImmutable=!1}}function o(e){return e.width<=0||e.height<=0?0:Math.round(e.width*e.height*(e.hasMipmap?4/3:1)*(null==e.internalFormat?4:(0,n.IB)(e.internalFormat)))}},93380:function(e,t,r){r.d(t,{Hi:function(){return c},IB:function(){return h},WH:function(){return o},yu:function(){return a}}),r(58941);var i=r(41835),n=r(85456),s=r(48347);function o(e){const t=e.gl;switch(t.getError()){case t.NO_ERROR:return null;case t.INVALID_ENUM:return"An unacceptable value has been specified for an enumerated argument";case t.INVALID_VALUE:return"An unacceptable value has been specified for an argument";case t.INVALID_OPERATION:return"The specified command is not allowed for the current state";case t.INVALID_FRAMEBUFFER_OPERATION:return"The currently bound framebuffer is not framebuffer complete";case t.OUT_OF_MEMORY:return"Not enough memory is left to execute the command";case t.CONTEXT_LOST_WEBGL:return"WebGL context is lost"}return"Unknown error"}function a(e,t,r,n,a=0){const c=e.gl;e.bindBuffer(r);for(const r of n){const n=t.get(r.name);if(void 0===n){console.warn(`There is no location for vertex attribute '${r.name}' defined.`);continue}const h=a*r.stride;if(r.count<=4)c.vertexAttribPointer(n,r.count,r.type,r.normalized,r.stride,r.offset+h),c.enableVertexAttribArray(n),r.divisor>0&&e.gl.vertexAttribDivisor(n,r.divisor);else if(9===r.count)for(let t=0;t<3;t++)c.vertexAttribPointer(n+t,3,r.type,r.normalized,r.stride,r.offset+12*t+h),c.enableVertexAttribArray(n+t),r.divisor>0&&e.gl.vertexAttribDivisor(n+t,r.divisor);else if(16===r.count)for(let t=0;t<4;t++)c.vertexAttribPointer(n+t,4,r.type,r.normalized,r.stride,r.offset+16*t+h),c.enableVertexAttribArray(n+t),r.divisor>0&&e.gl?.vertexAttribDivisor(n+t,r.divisor);else console.error("Unsupported vertex attribute element count: "+r.count);if((0,i.en)()){const t=o(e),i=(0,s._)(r.type),n=r.offset,a=Math.round(i/n)!==i/n?`. Offset not a multiple of stride. DataType requires ${i} bytes, but descriptor has an offset of ${n}`:"";t&&console.error(`Unable to bind vertex attribute "${r.name}" with baseInstanceOffset ${h}${a}:`,t,r)}}}function c(e,t,r,i){const s=e.gl;e.bindBuffer(r);for(const r of i){const i=t.get(r.name);if(r.count<=4)s.disableVertexAttribArray(i),r.divisor&&r.divisor>0&&e.gl?.vertexAttribDivisor(i,0);else if(9===r.count)for(let t=0;t<3;t++)s.disableVertexAttribArray(i+t),r.divisor&&r.divisor>0&&e.gl?.vertexAttribDivisor(i+t,0);else if(16===r.count)for(let t=0;t<4;t++)s.disableVertexAttribArray(i+t),r.divisor&&r.divisor>0&&e.gl?.vertexAttribDivisor(i+t,0);else console.error("Unsupported vertex attribute element count: "+r.count)}e.unbindBuffer(n.NZ.ARRAY_BUFFER)}function h(e){switch(e){case n.Ab.ALPHA:case n.Ab.LUMINANCE:case n.Ab.RED:case n.Ab.RED_INTEGER:case n.H0.R8:case n.H0.R8I:case n.H0.R8UI:case n.H0.R8_SNORM:case n.yQ.STENCIL_INDEX8:return 1;case n.Ab.LUMINANCE_ALPHA:case n.Ab.RG:case n.Ab.RG_INTEGER:case n.H0.RGBA4:case n.H0.R16F:case n.H0.R16I:case n.H0.R16UI:case n.H0.RG8:case n.H0.RG8I:case n.H0.RG8UI:case n.H0.RG8_SNORM:case n.H0.RGB565:case n.H0.RGB5_A1:case n.yQ.DEPTH_COMPONENT16:return 2;case n.Ab.DEPTH_COMPONENT:case n.Ab.RGB:case n.Ab.RGB_INTEGER:case n.H0.RGB8:case n.H0.RGB8I:case n.H0.RGB8UI:case n.H0.RGB8_SNORM:case n.H0.SRGB8:case n.yQ.DEPTH_COMPONENT24:return 3;case n.Ab.DEPTH_STENCIL:case n.Ab.DEPTH24_STENCIL8:case n.Ab.RGBA:case n.Ab.RGBA_INTEGER:case n.H0.RGBA8:case n.H0.R32F:case n.H0.R11F_G11F_B10F:case n.H0.RG16F:case n.H0.R32I:case n.H0.R32UI:case n.H0.RG16I:case n.H0.RG16UI:case n.H0.RGBA8I:case n.H0.RGBA8UI:case n.H0.RGBA8_SNORM:case n.H0.SRGB8_ALPHA8:case n.H0.RGB9_E5:case n.H0.RGB10_A2UI:case n.H0.RGB10_A2:case n.yQ.DEPTH_STENCIL:case n.yQ.DEPTH_COMPONENT32F:case n.yQ.DEPTH24_STENCIL8:return 4;case n.yQ.DEPTH32F_STENCIL8:return 5;case n.H0.RGB16F:case n.H0.RGB16I:case n.H0.RGB16UI:return 6;case n.H0.RG32F:case n.H0.RG32I:case n.H0.RG32UI:case n.H0.RGBA16F:case n.H0.RGBA16I:case n.H0.RGBA16UI:return 8;case n.H0.RGB32F:case n.H0.RGB32I:case n.H0.RGB32UI:return 12;case n.H0.RGBA32F:case n.H0.RGBA32I:case n.H0.RGBA32UI:return 16;case n.CQ.COMPRESSED_RGB_S3TC_DXT1_EXT:case n.CQ.COMPRESSED_RGBA_S3TC_DXT1_EXT:return.5;case n.CQ.COMPRESSED_RGBA_S3TC_DXT3_EXT:case n.CQ.COMPRESSED_RGBA_S3TC_DXT5_EXT:return 1;case n.CQ.COMPRESSED_R11_EAC:case n.CQ.COMPRESSED_SIGNED_R11_EAC:case n.CQ.COMPRESSED_RGB8_ETC2:case n.CQ.COMPRESSED_SRGB8_ETC2:case n.CQ.COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2:case n.CQ.COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2:return.5;case n.CQ.COMPRESSED_RG11_EAC:case n.CQ.COMPRESSED_SIGNED_RG11_EAC:case n.CQ.COMPRESSED_RGBA8_ETC2_EAC:case n.CQ.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC:return 1}return 0}},81438:function(e,t,r){r.d(t,{Z:function(){return h}});var i=r(40633),n=r(95929),s=r(24540),o=r(85456),a=r(93380);const c=()=>i.A.getLogger("esri.views.webgl.VertexArrayObject");let h=class{constructor(e,t,r,i,n=null){this._context=e,this._locations=t,this._layout=r,this._buffers=i,this._indexBuffer=n,this._glName=null,this._initialized=!1}get glName(){return this._glName}get context(){return this._context}get vertexBuffers(){return this._buffers}get indexBuffer(){return this._indexBuffer}get byteSize(){return Object.keys(this._buffers).reduce(((e,t)=>e+this._buffers[t].usedMemory),null!=this._indexBuffer?this._indexBuffer.usedMemory:0)}get layout(){return this._layout}get locations(){return this._locations}get usedMemory(){return this.byteSize+(Object.keys(this._buffers).length+(this._indexBuffer?1:0))*s.zQ}dispose(){if(this._context){this._context.getBoundVAO()===this&&this._context.bindVAO(null);for(const e in this._buffers)this._buffers[e]?.dispose(),delete this._buffers[e];this._indexBuffer=(0,n.WD)(this._indexBuffer),this.disposeVAOOnly()}else(this._glName||Object.getOwnPropertyNames(this._buffers).length>0)&&c().warn("Leaked WebGL VAO")}disposeVAOOnly(){this._glName&&(this._context.gl.deleteVertexArray(this._glName),this._glName=null,this._context.instanceCounter.decrement(o.vt.VertexArrayObject,this)),this._context=null}initialize(){if(this._initialized)return;const{gl:e}=this._context,t=e.createVertexArray();e.bindVertexArray(t),this._bindLayout(),e.bindVertexArray(null),this._glName=t,this._context.instanceCounter.increment(o.vt.VertexArrayObject,this),this._initialized=!0}bind(){this.initialize(),this._context.gl.bindVertexArray(this.glName)}_bindLayout(){const{_buffers:e,_layout:t,_indexBuffer:r}=this;e||c().error("Vertex buffer dictionary is empty!");const i=this._context.gl;for(const r in e){const i=e[r];i||c().error("Vertex buffer is uninitialized!");const n=t[r];n||c().error("Vertex element descriptor is empty!"),(0,a.yu)(this._context,this._locations,i,n)}null!=r&&i.bindBuffer(i.ELEMENT_ARRAY_BUFFER,r.glName)}unbind(){this.initialize(),this._context.gl.bindVertexArray(null)}}},41835:function(e,t,r){r.d(t,{Xc:function(){return h},Y2:function(){return l},en:function(){return c}});var i=r(39819),n=r(58941),s=r(40633);const o=()=>s.A.getLogger("esri.views.webgl.checkWebGLError"),a=!!(0,n.A)("enable-feature:webgl-debug");function c(){return a}function h(){return a}function l(e){if(c()){const t=e.getError();if(t){const r=function(e,t){switch(t){case e.INVALID_ENUM:return"Invalid Enum. An unacceptable value has been specified for an enumerated argument.";case e.INVALID_VALUE:return"Invalid Value. A numeric argument is out of range.";case e.INVALID_OPERATION:return"Invalid Operation. The specified command is not allowed for the current state.";case e.INVALID_FRAMEBUFFER_OPERATION:return"Invalid Framebuffer operation. The currently bound framebuffer is not framebuffer complete when trying to render to or to read from it.";case e.OUT_OF_MEMORY:return"Out of memory. Not enough memory is left to execute the command.";case e.CONTEXT_LOST_WEBGL:return"WebGL context has been lost";default:return"Unknown error"}}(e,t),n=(new Error).stack;o().error(new i.A("webgl-error","WebGL error occurred",{message:r,stack:n}))}}}},48347:function(e,t,r){r.d(t,{_:function(){return n}});var i=r(85456);function n(e){switch(e){case i.pe.BYTE:case i.pe.UNSIGNED_BYTE:return 1;case i.pe.SHORT:case i.pe.UNSIGNED_SHORT:case i.pe.HALF_FLOAT:return 2;case i.pe.FLOAT:case i.pe.INT:case i.pe.UNSIGNED_INT:return 4}}},72785:function(e,t,r){function i(e){const{options:t,value:r}=e;return"number"==typeof t[r]}function n(e){let t="";for(const r in e){const n=e[r];if("boolean"==typeof n)n&&(t+=`#define ${r}\n`);else if("number"==typeof n)t+=`#define ${r} ${n.toFixed()}\n`;else if("object"==typeof n)if(i(n)){const{value:e,options:i,namespace:s}=n,o=s?`${s}_`:"";for(const e in i)t+=`#define ${o}${e} ${i[e].toFixed()}\n`;t+=`#define ${r} ${o}${e}\n`}else{const e=n.options;let i=0;for(const r in e)t+=`#define ${e[r]} ${(i++).toFixed()}\n`;t+=`#define ${r} ${e[n.value]}\n`}}return t}r.d(t,{I:function(){return n}})}}]);
//# sourceMappingURL=webglDeps.js.map