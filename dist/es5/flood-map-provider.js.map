{"version":3,"file":"flood-map-provider.js","mappings":"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","sources":["webpack://@defra/flood-map/./src/js/provider/os-maplibre/constants.js","webpack://@defra/flood-map/./node_modules/@turf/invariant/dist/esm/index.js","webpack://@defra/flood-map/./src/js/lib/debounce.js","webpack://@defra/flood-map/./node_modules/tinyqueue/index.js","webpack://@defra/flood-map/./node_modules/polylabel/polylabel.js","webpack://@defra/flood-map/./node_modules/@turf/area/dist/esm/index.js","webpack://@defra/flood-map/./node_modules/@turf/meta/dist/esm/index.js","webpack://@defra/flood-map/./node_modules/@turf/bbox-clip/dist/esm/index.js","webpack://@defra/flood-map/./src/js/provider/os-maplibre/query.js","webpack://@defra/flood-map/./src/js/provider/os-maplibre/marker.js","webpack://@defra/flood-map/./src/js/provider/os-maplibre/symbols.js","webpack://@defra/flood-map/./src/js/provider/os-maplibre/events.js","webpack://@defra/flood-map/./src/js/provider/os-maplibre/provider.js","webpack://@defra/flood-map/./node_modules/@turf/helpers/dist/esm/index.js","webpack://@defra/flood-map/./node_modules/computed-style-to-inline-style/dist/index.js","webpack://@defra/flood-map/./src/js/lib/symbols.js","webpack://@defra/flood-map/./node_modules/@turf/distance/dist/esm/index.js","webpack://@defra/flood-map/./src/js/lib/viewport.js"],"sourcesContent":["export const defaults = {\n  PRECISION: 6,\n  ANIMATION: {\n    duration: 500,\n    curve: 0\n  },\n  DELAY: 300,\n  MAX_FEATURES: 9,\n  SHORTCUT_LABEL_OFFSET: -30\n}\n\nexport const css = {\n  MARKER_VISIBLE: 'fm-c-marker--visible'\n}\n","// index.ts\nimport { isNumber } from \"@turf/helpers\";\nfunction getCoord(coord) {\n  if (!coord) {\n    throw new Error(\"coord is required\");\n  }\n  if (!Array.isArray(coord)) {\n    if (coord.type === \"Feature\" && coord.geometry !== null && coord.geometry.type === \"Point\") {\n      return [...coord.geometry.coordinates];\n    }\n    if (coord.type === \"Point\") {\n      return [...coord.coordinates];\n    }\n  }\n  if (Array.isArray(coord) && coord.length >= 2 && !Array.isArray(coord[0]) && !Array.isArray(coord[1])) {\n    return [...coord];\n  }\n  throw new Error(\"coord must be GeoJSON Point or an Array of numbers\");\n}\nfunction getCoords(coords) {\n  if (Array.isArray(coords)) {\n    return coords;\n  }\n  if (coords.type === \"Feature\") {\n    if (coords.geometry !== null) {\n      return coords.geometry.coordinates;\n    }\n  } else {\n    if (coords.coordinates) {\n      return coords.coordinates;\n    }\n  }\n  throw new Error(\n    \"coords must be GeoJSON Feature, Geometry Object or an Array\"\n  );\n}\nfunction containsNumber(coordinates) {\n  if (coordinates.length > 1 && isNumber(coordinates[0]) && isNumber(coordinates[1])) {\n    return true;\n  }\n  if (Array.isArray(coordinates[0]) && coordinates[0].length) {\n    return containsNumber(coordinates[0]);\n  }\n  throw new Error(\"coordinates must only contain numbers\");\n}\nfunction geojsonType(value, type, name) {\n  if (!type || !name) {\n    throw new Error(\"type and name required\");\n  }\n  if (!value || value.type !== type) {\n    throw new Error(\n      \"Invalid input to \" + name + \": must be a \" + type + \", given \" + value.type\n    );\n  }\n}\nfunction featureOf(feature, type, name) {\n  if (!feature) {\n    throw new Error(\"No feature passed\");\n  }\n  if (!name) {\n    throw new Error(\".featureOf() requires a name\");\n  }\n  if (!feature || feature.type !== \"Feature\" || !feature.geometry) {\n    throw new Error(\n      \"Invalid input to \" + name + \", Feature with geometry required\"\n    );\n  }\n  if (!feature.geometry || feature.geometry.type !== type) {\n    throw new Error(\n      \"Invalid input to \" + name + \": must be a \" + type + \", given \" + feature.geometry.type\n    );\n  }\n}\nfunction collectionOf(featureCollection, type, name) {\n  if (!featureCollection) {\n    throw new Error(\"No featureCollection passed\");\n  }\n  if (!name) {\n    throw new Error(\".collectionOf() requires a name\");\n  }\n  if (!featureCollection || featureCollection.type !== \"FeatureCollection\") {\n    throw new Error(\n      \"Invalid input to \" + name + \", FeatureCollection required\"\n    );\n  }\n  for (const feature of featureCollection.features) {\n    if (!feature || feature.type !== \"Feature\" || !feature.geometry) {\n      throw new Error(\n        \"Invalid input to \" + name + \", Feature with geometry required\"\n      );\n    }\n    if (!feature.geometry || feature.geometry.type !== type) {\n      throw new Error(\n        \"Invalid input to \" + name + \": must be a \" + type + \", given \" + feature.geometry.type\n      );\n    }\n  }\n}\nfunction getGeom(geojson) {\n  if (geojson.type === \"Feature\") {\n    return geojson.geometry;\n  }\n  return geojson;\n}\nfunction getType(geojson, _name) {\n  if (geojson.type === \"FeatureCollection\") {\n    return \"FeatureCollection\";\n  }\n  if (geojson.type === \"GeometryCollection\") {\n    return \"GeometryCollection\";\n  }\n  if (geojson.type === \"Feature\" && geojson.geometry !== null) {\n    return geojson.geometry.type;\n  }\n  return geojson.type;\n}\nexport {\n  collectionOf,\n  containsNumber,\n  featureOf,\n  geojsonType,\n  getCoord,\n  getCoords,\n  getGeom,\n  getType\n};\n//# sourceMappingURL=index.js.map","export const debounce = (fn, wait) => {\n  let timeoutId = null\n  return (...args) => {\n    window.clearTimeout(timeoutId)\n    timeoutId = window.setTimeout(() => {\n      fn(...args)\n    }, wait)\n  }\n}\n","\nexport default class TinyQueue {\n    constructor(data = [], compare = (a, b) => (a < b ? -1 : a > b ? 1 : 0)) {\n        this.data = data;\n        this.length = this.data.length;\n        this.compare = compare;\n\n        if (this.length > 0) {\n            for (let i = (this.length >> 1) - 1; i >= 0; i--) this._down(i);\n        }\n    }\n\n    push(item) {\n        this.data.push(item);\n        this._up(this.length++);\n    }\n\n    pop() {\n        if (this.length === 0) return undefined;\n\n        const top = this.data[0];\n        const bottom = this.data.pop();\n\n        if (--this.length > 0) {\n            this.data[0] = bottom;\n            this._down(0);\n        }\n\n        return top;\n    }\n\n    peek() {\n        return this.data[0];\n    }\n\n    _up(pos) {\n        const {data, compare} = this;\n        const item = data[pos];\n\n        while (pos > 0) {\n            const parent = (pos - 1) >> 1;\n            const current = data[parent];\n            if (compare(item, current) >= 0) break;\n            data[pos] = current;\n            pos = parent;\n        }\n\n        data[pos] = item;\n    }\n\n    _down(pos) {\n        const {data, compare} = this;\n        const halfLength = this.length >> 1;\n        const item = data[pos];\n\n        while (pos < halfLength) {\n            let bestChild = (pos << 1) + 1; // initially it is the left child\n            const right = bestChild + 1;\n\n            if (right < this.length && compare(data[right], data[bestChild]) < 0) {\n                bestChild = right;\n            }\n            if (compare(data[bestChild], item) >= 0) break;\n\n            data[pos] = data[bestChild];\n            pos = bestChild;\n        }\n\n        data[pos] = item;\n    }\n}\n","\nimport Queue from 'tinyqueue';\n\nexport default function polylabel(polygon, precision = 1.0, debug = false) {\n    // find the bounding box of the outer ring\n    let minX = Infinity;\n    let minY = Infinity;\n    let maxX = -Infinity;\n    let maxY = -Infinity;\n\n    for (const [x, y] of polygon[0]) {\n        if (x < minX) minX = x;\n        if (y < minY) minY = y;\n        if (x > maxX) maxX = x;\n        if (y > maxY) maxY = y;\n    }\n\n    const width = maxX - minX;\n    const height = maxY - minY;\n    const cellSize = Math.max(precision, Math.min(width, height));\n\n    if (cellSize === precision) {\n        const result = [minX, minY];\n        result.distance = 0;\n        return result;\n    }\n\n    // a priority queue of cells in order of their \"potential\" (max distance to polygon)\n    const cellQueue = new Queue([], (a, b) => b.max - a.max);\n\n    // take centroid as the first best guess\n    let bestCell = getCentroidCell(polygon);\n\n    // second guess: bounding box centroid\n    const bboxCell = new Cell(minX + width / 2, minY + height / 2, 0, polygon);\n    if (bboxCell.d > bestCell.d) bestCell = bboxCell;\n\n    let numProbes = 2;\n\n    function potentiallyQueue(x, y, h) {\n        const cell = new Cell(x, y, h, polygon);\n        numProbes++;\n        if (cell.max > bestCell.d + precision) cellQueue.push(cell);\n\n        // update the best cell if we found a better one\n        if (cell.d > bestCell.d) {\n            bestCell = cell;\n            if (debug) console.log(`found best ${Math.round(1e4 * cell.d) / 1e4} after ${numProbes} probes`);\n        }\n    }\n\n    // cover polygon with initial cells\n    let h = cellSize / 2;\n    for (let x = minX; x < maxX; x += cellSize) {\n        for (let y = minY; y < maxY; y += cellSize) {\n            potentiallyQueue(x + h, y + h, h);\n        }\n    }\n\n    while (cellQueue.length) {\n        // pick the most promising cell from the queue\n        const {max, x, y, h: ch} = cellQueue.pop();\n\n        // do not drill down further if there's no chance of a better solution\n        if (max - bestCell.d <= precision) break;\n\n        // split the cell into four cells\n        h = ch / 2;\n        potentiallyQueue(x - h, y - h, h);\n        potentiallyQueue(x + h, y - h, h);\n        potentiallyQueue(x - h, y + h, h);\n        potentiallyQueue(x + h, y + h, h);\n    }\n\n    if (debug) {\n        console.log(`num probes: ${numProbes}\\nbest distance: ${bestCell.d}`);\n    }\n\n    const result = [bestCell.x, bestCell.y];\n    result.distance = bestCell.d;\n    return result;\n}\n\nfunction Cell(x, y, h, polygon) {\n    this.x = x; // cell center x\n    this.y = y; // cell center y\n    this.h = h; // half the cell size\n    this.d = pointToPolygonDist(x, y, polygon); // distance from cell center to polygon\n    this.max = this.d + this.h * Math.SQRT2; // max distance to polygon within a cell\n}\n\n// signed distance from point to polygon outline (negative if point is outside)\nfunction pointToPolygonDist(x, y, polygon) {\n    let inside = false;\n    let minDistSq = Infinity;\n\n    for (const ring of polygon) {\n        for (let i = 0, len = ring.length, j = len - 1; i < len; j = i++) {\n            const a = ring[i];\n            const b = ring[j];\n\n            if ((a[1] > y !== b[1] > y) &&\n                (x < (b[0] - a[0]) * (y - a[1]) / (b[1] - a[1]) + a[0])) inside = !inside;\n\n            minDistSq = Math.min(minDistSq, getSegDistSq(x, y, a, b));\n        }\n    }\n\n    return minDistSq === 0 ? 0 : (inside ? 1 : -1) * Math.sqrt(minDistSq);\n}\n\n// get polygon centroid\nfunction getCentroidCell(polygon) {\n    let area = 0;\n    let x = 0;\n    let y = 0;\n    const points = polygon[0];\n\n    for (let i = 0, len = points.length, j = len - 1; i < len; j = i++) {\n        const a = points[i];\n        const b = points[j];\n        const f = a[0] * b[1] - b[0] * a[1];\n        x += (a[0] + b[0]) * f;\n        y += (a[1] + b[1]) * f;\n        area += f * 3;\n    }\n    const centroid = new Cell(x / area, y / area, 0, polygon);\n    if (area === 0 || centroid.d < 0) return new Cell(points[0][0], points[0][1], 0, polygon);\n    return centroid;\n}\n\n// get squared distance from a point to a segment\nfunction getSegDistSq(px, py, a, b) {\n    let x = a[0];\n    let y = a[1];\n    let dx = b[0] - x;\n    let dy = b[1] - y;\n\n    if (dx !== 0 || dy !== 0) {\n        const t = ((px - x) * dx + (py - y) * dy) / (dx * dx + dy * dy);\n\n        if (t > 1) {\n            x = b[0];\n            y = b[1];\n\n        } else if (t > 0) {\n            x += dx * t;\n            y += dy * t;\n        }\n    }\n\n    dx = px - x;\n    dy = py - y;\n\n    return dx * dx + dy * dy;\n}\n","// index.ts\nimport { earthRadius } from \"@turf/helpers\";\nimport { geomReduce } from \"@turf/meta\";\nfunction area(geojson) {\n  return geomReduce(\n    geojson,\n    (value, geom) => {\n      return value + calculateArea(geom);\n    },\n    0\n  );\n}\nfunction calculateArea(geom) {\n  let total = 0;\n  let i;\n  switch (geom.type) {\n    case \"Polygon\":\n      return polygonArea(geom.coordinates);\n    case \"MultiPolygon\":\n      for (i = 0; i < geom.coordinates.length; i++) {\n        total += polygonArea(geom.coordinates[i]);\n      }\n      return total;\n    case \"Point\":\n    case \"MultiPoint\":\n    case \"LineString\":\n    case \"MultiLineString\":\n      return 0;\n  }\n  return 0;\n}\nfunction polygonArea(coords) {\n  let total = 0;\n  if (coords && coords.length > 0) {\n    total += Math.abs(ringArea(coords[0]));\n    for (let i = 1; i < coords.length; i++) {\n      total -= Math.abs(ringArea(coords[i]));\n    }\n  }\n  return total;\n}\nvar FACTOR = earthRadius * earthRadius / 2;\nvar PI_OVER_180 = Math.PI / 180;\nfunction ringArea(coords) {\n  const coordsLength = coords.length - 1;\n  if (coordsLength <= 2) return 0;\n  let total = 0;\n  let i = 0;\n  while (i < coordsLength) {\n    const lower = coords[i];\n    const middle = coords[i + 1 === coordsLength ? 0 : i + 1];\n    const upper = coords[i + 2 >= coordsLength ? (i + 2) % coordsLength : i + 2];\n    const lowerX = lower[0] * PI_OVER_180;\n    const middleY = middle[1] * PI_OVER_180;\n    const upperX = upper[0] * PI_OVER_180;\n    total += (upperX - lowerX) * Math.sin(middleY);\n    i++;\n  }\n  return total * FACTOR;\n}\nvar turf_area_default = area;\nexport {\n  area,\n  turf_area_default as default\n};\n//# sourceMappingURL=index.js.map","// index.js\nimport { feature, point, lineString, isObject } from \"@turf/helpers\";\nfunction coordEach(geojson, callback, excludeWrapCoord) {\n  if (geojson === null) return;\n  var j, k, l, geometry, stopG, coords, geometryMaybeCollection, wrapShrink = 0, coordIndex = 0, isGeometryCollection, type = geojson.type, isFeatureCollection = type === \"FeatureCollection\", isFeature = type === \"Feature\", stop = isFeatureCollection ? geojson.features.length : 1;\n  for (var featureIndex = 0; featureIndex < stop; featureIndex++) {\n    geometryMaybeCollection = isFeatureCollection ? geojson.features[featureIndex].geometry : isFeature ? geojson.geometry : geojson;\n    isGeometryCollection = geometryMaybeCollection ? geometryMaybeCollection.type === \"GeometryCollection\" : false;\n    stopG = isGeometryCollection ? geometryMaybeCollection.geometries.length : 1;\n    for (var geomIndex = 0; geomIndex < stopG; geomIndex++) {\n      var multiFeatureIndex = 0;\n      var geometryIndex = 0;\n      geometry = isGeometryCollection ? geometryMaybeCollection.geometries[geomIndex] : geometryMaybeCollection;\n      if (geometry === null) continue;\n      coords = geometry.coordinates;\n      var geomType = geometry.type;\n      wrapShrink = excludeWrapCoord && (geomType === \"Polygon\" || geomType === \"MultiPolygon\") ? 1 : 0;\n      switch (geomType) {\n        case null:\n          break;\n        case \"Point\":\n          if (callback(\n            coords,\n            coordIndex,\n            featureIndex,\n            multiFeatureIndex,\n            geometryIndex\n          ) === false)\n            return false;\n          coordIndex++;\n          multiFeatureIndex++;\n          break;\n        case \"LineString\":\n        case \"MultiPoint\":\n          for (j = 0; j < coords.length; j++) {\n            if (callback(\n              coords[j],\n              coordIndex,\n              featureIndex,\n              multiFeatureIndex,\n              geometryIndex\n            ) === false)\n              return false;\n            coordIndex++;\n            if (geomType === \"MultiPoint\") multiFeatureIndex++;\n          }\n          if (geomType === \"LineString\") multiFeatureIndex++;\n          break;\n        case \"Polygon\":\n        case \"MultiLineString\":\n          for (j = 0; j < coords.length; j++) {\n            for (k = 0; k < coords[j].length - wrapShrink; k++) {\n              if (callback(\n                coords[j][k],\n                coordIndex,\n                featureIndex,\n                multiFeatureIndex,\n                geometryIndex\n              ) === false)\n                return false;\n              coordIndex++;\n            }\n            if (geomType === \"MultiLineString\") multiFeatureIndex++;\n            if (geomType === \"Polygon\") geometryIndex++;\n          }\n          if (geomType === \"Polygon\") multiFeatureIndex++;\n          break;\n        case \"MultiPolygon\":\n          for (j = 0; j < coords.length; j++) {\n            geometryIndex = 0;\n            for (k = 0; k < coords[j].length; k++) {\n              for (l = 0; l < coords[j][k].length - wrapShrink; l++) {\n                if (callback(\n                  coords[j][k][l],\n                  coordIndex,\n                  featureIndex,\n                  multiFeatureIndex,\n                  geometryIndex\n                ) === false)\n                  return false;\n                coordIndex++;\n              }\n              geometryIndex++;\n            }\n            multiFeatureIndex++;\n          }\n          break;\n        case \"GeometryCollection\":\n          for (j = 0; j < geometry.geometries.length; j++)\n            if (coordEach(geometry.geometries[j], callback, excludeWrapCoord) === false)\n              return false;\n          break;\n        default:\n          throw new Error(\"Unknown Geometry Type\");\n      }\n    }\n  }\n}\nfunction coordReduce(geojson, callback, initialValue, excludeWrapCoord) {\n  var previousValue = initialValue;\n  coordEach(\n    geojson,\n    function(currentCoord, coordIndex, featureIndex, multiFeatureIndex, geometryIndex) {\n      if (coordIndex === 0 && initialValue === void 0)\n        previousValue = currentCoord;\n      else\n        previousValue = callback(\n          previousValue,\n          currentCoord,\n          coordIndex,\n          featureIndex,\n          multiFeatureIndex,\n          geometryIndex\n        );\n    },\n    excludeWrapCoord\n  );\n  return previousValue;\n}\nfunction propEach(geojson, callback) {\n  var i;\n  switch (geojson.type) {\n    case \"FeatureCollection\":\n      for (i = 0; i < geojson.features.length; i++) {\n        if (callback(geojson.features[i].properties, i) === false) break;\n      }\n      break;\n    case \"Feature\":\n      callback(geojson.properties, 0);\n      break;\n  }\n}\nfunction propReduce(geojson, callback, initialValue) {\n  var previousValue = initialValue;\n  propEach(geojson, function(currentProperties, featureIndex) {\n    if (featureIndex === 0 && initialValue === void 0)\n      previousValue = currentProperties;\n    else\n      previousValue = callback(previousValue, currentProperties, featureIndex);\n  });\n  return previousValue;\n}\nfunction featureEach(geojson, callback) {\n  if (geojson.type === \"Feature\") {\n    callback(geojson, 0);\n  } else if (geojson.type === \"FeatureCollection\") {\n    for (var i = 0; i < geojson.features.length; i++) {\n      if (callback(geojson.features[i], i) === false) break;\n    }\n  }\n}\nfunction featureReduce(geojson, callback, initialValue) {\n  var previousValue = initialValue;\n  featureEach(geojson, function(currentFeature, featureIndex) {\n    if (featureIndex === 0 && initialValue === void 0)\n      previousValue = currentFeature;\n    else previousValue = callback(previousValue, currentFeature, featureIndex);\n  });\n  return previousValue;\n}\nfunction coordAll(geojson) {\n  var coords = [];\n  coordEach(geojson, function(coord) {\n    coords.push(coord);\n  });\n  return coords;\n}\nfunction geomEach(geojson, callback) {\n  var i, j, g, geometry, stopG, geometryMaybeCollection, isGeometryCollection, featureProperties, featureBBox, featureId, featureIndex = 0, isFeatureCollection = geojson.type === \"FeatureCollection\", isFeature = geojson.type === \"Feature\", stop = isFeatureCollection ? geojson.features.length : 1;\n  for (i = 0; i < stop; i++) {\n    geometryMaybeCollection = isFeatureCollection ? geojson.features[i].geometry : isFeature ? geojson.geometry : geojson;\n    featureProperties = isFeatureCollection ? geojson.features[i].properties : isFeature ? geojson.properties : {};\n    featureBBox = isFeatureCollection ? geojson.features[i].bbox : isFeature ? geojson.bbox : void 0;\n    featureId = isFeatureCollection ? geojson.features[i].id : isFeature ? geojson.id : void 0;\n    isGeometryCollection = geometryMaybeCollection ? geometryMaybeCollection.type === \"GeometryCollection\" : false;\n    stopG = isGeometryCollection ? geometryMaybeCollection.geometries.length : 1;\n    for (g = 0; g < stopG; g++) {\n      geometry = isGeometryCollection ? geometryMaybeCollection.geometries[g] : geometryMaybeCollection;\n      if (geometry === null) {\n        if (callback(\n          null,\n          featureIndex,\n          featureProperties,\n          featureBBox,\n          featureId\n        ) === false)\n          return false;\n        continue;\n      }\n      switch (geometry.type) {\n        case \"Point\":\n        case \"LineString\":\n        case \"MultiPoint\":\n        case \"Polygon\":\n        case \"MultiLineString\":\n        case \"MultiPolygon\": {\n          if (callback(\n            geometry,\n            featureIndex,\n            featureProperties,\n            featureBBox,\n            featureId\n          ) === false)\n            return false;\n          break;\n        }\n        case \"GeometryCollection\": {\n          for (j = 0; j < geometry.geometries.length; j++) {\n            if (callback(\n              geometry.geometries[j],\n              featureIndex,\n              featureProperties,\n              featureBBox,\n              featureId\n            ) === false)\n              return false;\n          }\n          break;\n        }\n        default:\n          throw new Error(\"Unknown Geometry Type\");\n      }\n    }\n    featureIndex++;\n  }\n}\nfunction geomReduce(geojson, callback, initialValue) {\n  var previousValue = initialValue;\n  geomEach(\n    geojson,\n    function(currentGeometry, featureIndex, featureProperties, featureBBox, featureId) {\n      if (featureIndex === 0 && initialValue === void 0)\n        previousValue = currentGeometry;\n      else\n        previousValue = callback(\n          previousValue,\n          currentGeometry,\n          featureIndex,\n          featureProperties,\n          featureBBox,\n          featureId\n        );\n    }\n  );\n  return previousValue;\n}\nfunction flattenEach(geojson, callback) {\n  geomEach(geojson, function(geometry, featureIndex, properties, bbox, id) {\n    var type = geometry === null ? null : geometry.type;\n    switch (type) {\n      case null:\n      case \"Point\":\n      case \"LineString\":\n      case \"Polygon\":\n        if (callback(\n          feature(geometry, properties, { bbox, id }),\n          featureIndex,\n          0\n        ) === false)\n          return false;\n        return;\n    }\n    var geomType;\n    switch (type) {\n      case \"MultiPoint\":\n        geomType = \"Point\";\n        break;\n      case \"MultiLineString\":\n        geomType = \"LineString\";\n        break;\n      case \"MultiPolygon\":\n        geomType = \"Polygon\";\n        break;\n    }\n    for (var multiFeatureIndex = 0; multiFeatureIndex < geometry.coordinates.length; multiFeatureIndex++) {\n      var coordinate = geometry.coordinates[multiFeatureIndex];\n      var geom = {\n        type: geomType,\n        coordinates: coordinate\n      };\n      if (callback(feature(geom, properties), featureIndex, multiFeatureIndex) === false)\n        return false;\n    }\n  });\n}\nfunction flattenReduce(geojson, callback, initialValue) {\n  var previousValue = initialValue;\n  flattenEach(\n    geojson,\n    function(currentFeature, featureIndex, multiFeatureIndex) {\n      if (featureIndex === 0 && multiFeatureIndex === 0 && initialValue === void 0)\n        previousValue = currentFeature;\n      else\n        previousValue = callback(\n          previousValue,\n          currentFeature,\n          featureIndex,\n          multiFeatureIndex\n        );\n    }\n  );\n  return previousValue;\n}\nfunction segmentEach(geojson, callback) {\n  flattenEach(geojson, function(feature2, featureIndex, multiFeatureIndex) {\n    var segmentIndex = 0;\n    if (!feature2.geometry) return;\n    var type = feature2.geometry.type;\n    if (type === \"Point\" || type === \"MultiPoint\") return;\n    var previousCoords;\n    var previousFeatureIndex = 0;\n    var previousMultiIndex = 0;\n    var prevGeomIndex = 0;\n    if (coordEach(\n      feature2,\n      function(currentCoord, coordIndex, featureIndexCoord, multiPartIndexCoord, geometryIndex) {\n        if (previousCoords === void 0 || featureIndex > previousFeatureIndex || multiPartIndexCoord > previousMultiIndex || geometryIndex > prevGeomIndex) {\n          previousCoords = currentCoord;\n          previousFeatureIndex = featureIndex;\n          previousMultiIndex = multiPartIndexCoord;\n          prevGeomIndex = geometryIndex;\n          segmentIndex = 0;\n          return;\n        }\n        var currentSegment = lineString(\n          [previousCoords, currentCoord],\n          feature2.properties\n        );\n        if (callback(\n          currentSegment,\n          featureIndex,\n          multiFeatureIndex,\n          geometryIndex,\n          segmentIndex\n        ) === false)\n          return false;\n        segmentIndex++;\n        previousCoords = currentCoord;\n      }\n    ) === false)\n      return false;\n  });\n}\nfunction segmentReduce(geojson, callback, initialValue) {\n  var previousValue = initialValue;\n  var started = false;\n  segmentEach(\n    geojson,\n    function(currentSegment, featureIndex, multiFeatureIndex, geometryIndex, segmentIndex) {\n      if (started === false && initialValue === void 0)\n        previousValue = currentSegment;\n      else\n        previousValue = callback(\n          previousValue,\n          currentSegment,\n          featureIndex,\n          multiFeatureIndex,\n          geometryIndex,\n          segmentIndex\n        );\n      started = true;\n    }\n  );\n  return previousValue;\n}\nfunction lineEach(geojson, callback) {\n  if (!geojson) throw new Error(\"geojson is required\");\n  flattenEach(geojson, function(feature2, featureIndex, multiFeatureIndex) {\n    if (feature2.geometry === null) return;\n    var type = feature2.geometry.type;\n    var coords = feature2.geometry.coordinates;\n    switch (type) {\n      case \"LineString\":\n        if (callback(feature2, featureIndex, multiFeatureIndex, 0, 0) === false)\n          return false;\n        break;\n      case \"Polygon\":\n        for (var geometryIndex = 0; geometryIndex < coords.length; geometryIndex++) {\n          if (callback(\n            lineString(coords[geometryIndex], feature2.properties),\n            featureIndex,\n            multiFeatureIndex,\n            geometryIndex\n          ) === false)\n            return false;\n        }\n        break;\n    }\n  });\n}\nfunction lineReduce(geojson, callback, initialValue) {\n  var previousValue = initialValue;\n  lineEach(\n    geojson,\n    function(currentLine, featureIndex, multiFeatureIndex, geometryIndex) {\n      if (featureIndex === 0 && initialValue === void 0)\n        previousValue = currentLine;\n      else\n        previousValue = callback(\n          previousValue,\n          currentLine,\n          featureIndex,\n          multiFeatureIndex,\n          geometryIndex\n        );\n    }\n  );\n  return previousValue;\n}\nfunction findSegment(geojson, options) {\n  options = options || {};\n  if (!isObject(options)) throw new Error(\"options is invalid\");\n  var featureIndex = options.featureIndex || 0;\n  var multiFeatureIndex = options.multiFeatureIndex || 0;\n  var geometryIndex = options.geometryIndex || 0;\n  var segmentIndex = options.segmentIndex || 0;\n  var properties = options.properties;\n  var geometry;\n  switch (geojson.type) {\n    case \"FeatureCollection\":\n      if (featureIndex < 0)\n        featureIndex = geojson.features.length + featureIndex;\n      properties = properties || geojson.features[featureIndex].properties;\n      geometry = geojson.features[featureIndex].geometry;\n      break;\n    case \"Feature\":\n      properties = properties || geojson.properties;\n      geometry = geojson.geometry;\n      break;\n    case \"Point\":\n    case \"MultiPoint\":\n      return null;\n    case \"LineString\":\n    case \"Polygon\":\n    case \"MultiLineString\":\n    case \"MultiPolygon\":\n      geometry = geojson;\n      break;\n    default:\n      throw new Error(\"geojson is invalid\");\n  }\n  if (geometry === null) return null;\n  var coords = geometry.coordinates;\n  switch (geometry.type) {\n    case \"Point\":\n    case \"MultiPoint\":\n      return null;\n    case \"LineString\":\n      if (segmentIndex < 0) segmentIndex = coords.length + segmentIndex - 1;\n      return lineString(\n        [coords[segmentIndex], coords[segmentIndex + 1]],\n        properties,\n        options\n      );\n    case \"Polygon\":\n      if (geometryIndex < 0) geometryIndex = coords.length + geometryIndex;\n      if (segmentIndex < 0)\n        segmentIndex = coords[geometryIndex].length + segmentIndex - 1;\n      return lineString(\n        [\n          coords[geometryIndex][segmentIndex],\n          coords[geometryIndex][segmentIndex + 1]\n        ],\n        properties,\n        options\n      );\n    case \"MultiLineString\":\n      if (multiFeatureIndex < 0)\n        multiFeatureIndex = coords.length + multiFeatureIndex;\n      if (segmentIndex < 0)\n        segmentIndex = coords[multiFeatureIndex].length + segmentIndex - 1;\n      return lineString(\n        [\n          coords[multiFeatureIndex][segmentIndex],\n          coords[multiFeatureIndex][segmentIndex + 1]\n        ],\n        properties,\n        options\n      );\n    case \"MultiPolygon\":\n      if (multiFeatureIndex < 0)\n        multiFeatureIndex = coords.length + multiFeatureIndex;\n      if (geometryIndex < 0)\n        geometryIndex = coords[multiFeatureIndex].length + geometryIndex;\n      if (segmentIndex < 0)\n        segmentIndex = coords[multiFeatureIndex][geometryIndex].length - segmentIndex - 1;\n      return lineString(\n        [\n          coords[multiFeatureIndex][geometryIndex][segmentIndex],\n          coords[multiFeatureIndex][geometryIndex][segmentIndex + 1]\n        ],\n        properties,\n        options\n      );\n  }\n  throw new Error(\"geojson is invalid\");\n}\nfunction findPoint(geojson, options) {\n  options = options || {};\n  if (!isObject(options)) throw new Error(\"options is invalid\");\n  var featureIndex = options.featureIndex || 0;\n  var multiFeatureIndex = options.multiFeatureIndex || 0;\n  var geometryIndex = options.geometryIndex || 0;\n  var coordIndex = options.coordIndex || 0;\n  var properties = options.properties;\n  var geometry;\n  switch (geojson.type) {\n    case \"FeatureCollection\":\n      if (featureIndex < 0)\n        featureIndex = geojson.features.length + featureIndex;\n      properties = properties || geojson.features[featureIndex].properties;\n      geometry = geojson.features[featureIndex].geometry;\n      break;\n    case \"Feature\":\n      properties = properties || geojson.properties;\n      geometry = geojson.geometry;\n      break;\n    case \"Point\":\n    case \"MultiPoint\":\n      return null;\n    case \"LineString\":\n    case \"Polygon\":\n    case \"MultiLineString\":\n    case \"MultiPolygon\":\n      geometry = geojson;\n      break;\n    default:\n      throw new Error(\"geojson is invalid\");\n  }\n  if (geometry === null) return null;\n  var coords = geometry.coordinates;\n  switch (geometry.type) {\n    case \"Point\":\n      return point(coords, properties, options);\n    case \"MultiPoint\":\n      if (multiFeatureIndex < 0)\n        multiFeatureIndex = coords.length + multiFeatureIndex;\n      return point(coords[multiFeatureIndex], properties, options);\n    case \"LineString\":\n      if (coordIndex < 0) coordIndex = coords.length + coordIndex;\n      return point(coords[coordIndex], properties, options);\n    case \"Polygon\":\n      if (geometryIndex < 0) geometryIndex = coords.length + geometryIndex;\n      if (coordIndex < 0)\n        coordIndex = coords[geometryIndex].length + coordIndex;\n      return point(coords[geometryIndex][coordIndex], properties, options);\n    case \"MultiLineString\":\n      if (multiFeatureIndex < 0)\n        multiFeatureIndex = coords.length + multiFeatureIndex;\n      if (coordIndex < 0)\n        coordIndex = coords[multiFeatureIndex].length + coordIndex;\n      return point(coords[multiFeatureIndex][coordIndex], properties, options);\n    case \"MultiPolygon\":\n      if (multiFeatureIndex < 0)\n        multiFeatureIndex = coords.length + multiFeatureIndex;\n      if (geometryIndex < 0)\n        geometryIndex = coords[multiFeatureIndex].length + geometryIndex;\n      if (coordIndex < 0)\n        coordIndex = coords[multiFeatureIndex][geometryIndex].length - coordIndex;\n      return point(\n        coords[multiFeatureIndex][geometryIndex][coordIndex],\n        properties,\n        options\n      );\n  }\n  throw new Error(\"geojson is invalid\");\n}\nexport {\n  coordAll,\n  coordEach,\n  coordReduce,\n  featureEach,\n  featureReduce,\n  findPoint,\n  findSegment,\n  flattenEach,\n  flattenReduce,\n  geomEach,\n  geomReduce,\n  lineEach,\n  lineReduce,\n  propEach,\n  propReduce,\n  segmentEach,\n  segmentReduce\n};\n//# sourceMappingURL=index.js.map","// index.ts\nimport {\n  lineString,\n  multiLineString,\n  multiPolygon,\n  polygon\n} from \"@turf/helpers\";\nimport { getGeom } from \"@turf/invariant\";\n\n// lib/lineclip.ts\nfunction lineclip(points, bbox, result) {\n  var len = points.length, codeA = bitCode(points[0], bbox), part = [], i, codeB, lastCode;\n  let a;\n  let b;\n  if (!result) result = [];\n  for (i = 1; i < len; i++) {\n    a = points[i - 1];\n    b = points[i];\n    codeB = lastCode = bitCode(b, bbox);\n    while (true) {\n      if (!(codeA | codeB)) {\n        part.push(a);\n        if (codeB !== lastCode) {\n          part.push(b);\n          if (i < len - 1) {\n            result.push(part);\n            part = [];\n          }\n        } else if (i === len - 1) {\n          part.push(b);\n        }\n        break;\n      } else if (codeA & codeB) {\n        break;\n      } else if (codeA) {\n        a = intersect(a, b, codeA, bbox);\n        codeA = bitCode(a, bbox);\n      } else {\n        b = intersect(a, b, codeB, bbox);\n        codeB = bitCode(b, bbox);\n      }\n    }\n    codeA = lastCode;\n  }\n  if (part.length) result.push(part);\n  return result;\n}\nfunction polygonclip(points, bbox) {\n  var result, edge, prev, prevInside, i, p, inside;\n  for (edge = 1; edge <= 8; edge *= 2) {\n    result = [];\n    prev = points[points.length - 1];\n    prevInside = !(bitCode(prev, bbox) & edge);\n    for (i = 0; i < points.length; i++) {\n      p = points[i];\n      inside = !(bitCode(p, bbox) & edge);\n      if (inside !== prevInside) result.push(intersect(prev, p, edge, bbox));\n      if (inside) result.push(p);\n      prev = p;\n      prevInside = inside;\n    }\n    points = result;\n    if (!points.length) break;\n  }\n  return result;\n}\nfunction intersect(a, b, edge, bbox) {\n  return edge & 8 ? [a[0] + (b[0] - a[0]) * (bbox[3] - a[1]) / (b[1] - a[1]), bbox[3]] : edge & 4 ? [a[0] + (b[0] - a[0]) * (bbox[1] - a[1]) / (b[1] - a[1]), bbox[1]] : edge & 2 ? [bbox[2], a[1] + (b[1] - a[1]) * (bbox[2] - a[0]) / (b[0] - a[0])] : edge & 1 ? [bbox[0], a[1] + (b[1] - a[1]) * (bbox[0] - a[0]) / (b[0] - a[0])] : null;\n}\nfunction bitCode(p, bbox) {\n  var code = 0;\n  if (p[0] < bbox[0]) code |= 1;\n  else if (p[0] > bbox[2]) code |= 2;\n  if (p[1] < bbox[1]) code |= 4;\n  else if (p[1] > bbox[3]) code |= 8;\n  return code;\n}\n\n// index.ts\nfunction bboxClip(feature, bbox) {\n  const geom = getGeom(feature);\n  const type = geom.type;\n  const properties = feature.type === \"Feature\" ? feature.properties : {};\n  let coords = geom.coordinates;\n  switch (type) {\n    case \"LineString\":\n    case \"MultiLineString\": {\n      const lines = [];\n      if (type === \"LineString\") {\n        coords = [coords];\n      }\n      coords.forEach((line) => {\n        lineclip(line, bbox, lines);\n      });\n      if (lines.length === 1) {\n        return lineString(lines[0], properties);\n      }\n      return multiLineString(lines, properties);\n    }\n    case \"Polygon\":\n      return polygon(clipPolygon(coords, bbox), properties);\n    case \"MultiPolygon\":\n      return multiPolygon(\n        coords.map((poly) => {\n          return clipPolygon(poly, bbox);\n        }),\n        properties\n      );\n    default:\n      throw new Error(\"geometry \" + type + \" not supported\");\n  }\n}\nfunction clipPolygon(rings, bbox) {\n  const outRings = [];\n  for (const ring of rings) {\n    const clipped = polygonclip(ring, bbox);\n    if (clipped.length > 0) {\n      if (clipped[0][0] !== clipped[clipped.length - 1][0] || clipped[0][1] !== clipped[clipped.length - 1][1]) {\n        clipped.push(clipped[0]);\n      }\n      if (clipped.length >= 4) {\n        outRings.push(clipped);\n      }\n    }\n  }\n  return outRings;\n}\nvar turf_bbox_clip_default = bboxClip;\nexport {\n  bboxClip,\n  turf_bbox_clip_default as default\n};\n//# sourceMappingURL=index.js.map","import polylabel from 'polylabel'\nimport { area as turfArea } from '@turf/area'\nimport { distance as turfDistance } from '@turf/distance'\nimport { point as TurfPoint, polygon as TurfPolygon, multiPolygon as TurfMultiPolygon } from '@turf/helpers'\nimport { bboxClip as TurfBboxClip } from '@turf/bbox-clip'\nimport { getFocusBounds } from '../../lib/viewport'\nimport { defaults } from './constants'\n\nfunction getPaddedBounds () {\n  const { map } = this\n  const padding = map.getPadding()\n  const bounds = map.getBounds()\n\n  // Get the pixel coordinates for the current bounds\n  const sw = map.project([bounds.getWest(), bounds.getSouth()])\n  const ne = map.project([bounds.getEast(), bounds.getNorth()])\n\n  // Adjust for padding\n  sw.x += padding.left\n  sw.y -= padding.bottom\n  ne.x -= padding.right\n  ne.y += padding.top\n\n  // Convert back to geographical coordinates\n  const paddedSW = map.unproject(sw)\n  const paddedNE = map.unproject(ne)\n\n  // Create new bounds\n  return [[paddedSW.lng, paddedSW.lat], [paddedNE.lng, paddedNE.lat]]\n}\n\nfunction addFeatureProperties (features) {\n  const { map } = this\n  return features.map(f => {\n    const { lng, lat } = map.getCenter()\n    const coord = f.geometry.type === 'Polygon' ? polylabel(f.geometry.coordinates, 0.00001) : f.geometry.coordinates\n    const p1 = new TurfPoint([coord[0], coord[1]])\n    const p2 = new TurfPoint([lng, lat])\n    const distance = turfDistance(p1, p2, { units: 'metres' })\n    return {\n      ...f.properties,\n      id: f.properties.id || f.id,\n      geometryType: f.geometry.type,\n      coord,\n      distance\n    }\n  })\n}\n\nfunction intersectFeatures (bounds, features) {\n  features = features.map(f => {\n    if (['Polygon', 'MultiPolygon'].includes(f.geometry.type)) {\n      const polygon = f.geometry.type === 'Polygon' ? new TurfPolygon(f.geometry.coordinates) : new TurfMultiPolygon(f.geometry.coordinates)\n      const clipped = TurfBboxClip(polygon, bounds)\n      // Remove empty rings\n      clipped.geometry.coordinates = clipped.geometry.coordinates.filter(c => c.length)\n      // const clippedGeometry = martinez.intersection(boundsPolygon.geometry.coordinates, f.geometry.coordinates)\n      f.geometry = clipped.geometry\n    }\n    return f\n  })\n  return features\n}\n\nfunction combineFeatures (features) {\n  const combined = []\n  features.forEach(f => {\n    const group = combined.find(c => c.length && ((f.id && f.id === c[0].id) || (f.properties.id && f.properties.id === c[0].properties.id)))\n    if (f.geometry.type === 'MultiPolygon') {\n      // Get largest single polygon, outer shape (excluding holes) and add area\n      const parts = f.geometry.coordinates.map(c => {\n        const polygon = new TurfPolygon([c[0]])\n        polygon.properties = { area: turfArea(polygon) }\n        return polygon\n      })\n      const largest = parts.find(p => p.properties.area === Math.max(...parts.map(b => b.properties.area)))\n      f.geometry = largest.geometry\n      f.properties.area = largest.properties.area\n    } else if (f.geometry.type === 'Polygon') {\n      // Get out shape (excluding holes) and add area\n      const polygon = new TurfPolygon([f.geometry.coordinates[0]])\n      f.properties.area = turfArea(polygon)\n      f.geometry = polygon.geometry\n    } else {\n      f.properties.area = 0\n    }\n    group?.push(f) || combined.push([f])\n  })\n  // Return largest single polygon\n  return combined.map(g => g.find(f => f.properties.area === Math.max(...g.map(b => b.properties.area))))\n}\n\nfunction getViewport () {\n  const { map } = this\n  let bounds = getPaddedBounds.bind(this)()\n  bounds = bounds.flat(1).map(n => parseFloat(n.toFixed(defaults.PRECISION)))\n  let center = map.getCenter()\n  let zoom = map.getZoom()\n  center = center.toArray().map(n => parseFloat(n.toFixed(defaults.PRECISION)))\n  zoom = parseFloat(zoom.toFixed(defaults.PRECISION))\n  const isMaxZoom = map.getZoom() >= map.getMaxZoom()\n  const isMinZoom = map.getZoom() <= map.getMinZoom()\n\n  return {\n    bounds,\n    center,\n    zoom,\n    isMaxZoom,\n    isMinZoom\n  }\n}\n\nexport function addMapHoverBehaviour () {\n  const { map, featureLayers, labelLayers } = this\n\n  // Toggle cursor style for features\n  map.on('mousemove', [...featureLayers, ...labelLayers], e => {\n    const features = map.queryRenderedFeatures(e.point, { layers: [...featureLayers, ...labelLayers] })\n    const isFeature = !e.originalEvent.altKey && features && !!features.find(f => featureLayers.includes(f.layer.id))\n    const isLabel = e.originalEvent.altKey && features && !!features.find(f => labelLayers.includes(f.layer.id))\n    map.getCanvas().style.cursor = isFeature || isLabel ? 'pointer' : ''\n  })\n\n  // Revert cursor on mouseout\n  map.on('mouseout', [...featureLayers, ...labelLayers], () => { map.getCanvas().style.cursor = '' })\n}\n\nexport async function getDetail (pixel) {\n  const { selectedLayers } = this\n  const viewport = getViewport.bind(this)()\n  const features = getFeatures.bind(this)(pixel)\n  const label = getHighlightedLabel.bind(this)()\n  const selectedId = getSelectedFeatureId.bind(this)(selectedLayers)\n\n  return {\n    ...viewport,\n    resultType: features.resultType,\n    coord: features.coord,\n    selectedId,\n    features,\n    label\n  }\n}\n\nexport function getFeatures (pixel) {\n  const { map, featureLayers, locationLayers, paddingBox, scale } = this\n  const bounds = getFocusBounds(paddingBox, scale)\n\n  // Get all visible feature and pixel layers\n  let layers = [...featureLayers, ...locationLayers]\n  layers = map.getStyle()?.layers.filter(l => layers.includes(l?.id) && l?.layout?.visibility !== 'none').map(l => l.id)\n\n  // Get all features at given pixel\n  let featuresAtPixel = map.queryRenderedFeatures(pixel, { layers })\n\n  featuresAtPixel = (featuresAtPixel.map(f => {\n    return {\n      ...f.properties,\n      id: f.properties.id || f.id,\n      name: f.properties.name,\n      layer: f.layer.id\n    }\n  }))\n\n  // Get all 'featureLayer' features in the viewport\n  const renderedFeaturesInViewport = map.queryRenderedFeatures(bounds, { layers: featureLayers })\n\n  // Get total 'featureLayer' features in viewport (May be more than 9)\n  const featuresTotal = Array.from(new Set(renderedFeaturesInViewport.map(f => f.properties.id || f.id))).length\n\n  // Get geometry that intersects bounds\n  const intersectingFeatures = intersectFeatures(getPaddedBounds.bind(this)().flat(1), renderedFeaturesInViewport)\n\n  // Split multi polygons and combine duplicate features\n  const polygonFeatures = featuresTotal <= defaults.MAX_FEATURES ? combineFeatures(intersectingFeatures) : []\n\n  // Add props and sort features\n  const featuresInViewport = addFeatureProperties.bind(this)(polygonFeatures).sort((a, b) => a.distance - b.distance)\n\n  // Get long lat of query\n  let lngLat\n  if (pixel) {\n    lngLat = map.unproject(pixel)\n    lngLat = [lngLat.lng, lngLat.lat]\n    lngLat = lngLat.map(c => Math.round(c * Math.pow(10, defaults.PRECISION)) / Math.pow(10, defaults.PRECISION))\n  }\n\n  // Set 'features' result type\n  const feature = featuresAtPixel.length ? featuresAtPixel[0] : null\n  const featureType = (featureLayers?.includes(feature?.layer) && 'feature') || (locationLayers?.includes(feature?.layer) && 'pixel')\n  const hasPixelLayers = layers?.some(l => locationLayers?.includes(l))\n  const resultType = featureType || (hasPixelLayers ? 'pixel' : null)\n\n  return {\n    resultType,\n    items: featuresAtPixel,\n    featuresTotal,\n    featuresInViewport,\n    isFeaturesInMap: !!layers?.length,\n    isPixelFeaturesAtPixel: locationLayers?.includes(feature?.layer),\n    isPixelFeaturesInMap: hasPixelLayers,\n    coord: lngLat\n  }\n}\n\nexport function toggleSelectedFeature (id) {\n  const { map, selectedLayers } = this\n  if (map?.getStyle()) {\n    for (const layer of selectedLayers) {\n      map.setLayoutProperty(layer, 'visibility', id ? 'visible' : 'none')\n      map.setFilter(layer, [\n        'any',\n        ['==', ['id'], id || ''],\n        ['==', ['get', 'id'], id || '']\n      ])\n    }\n  }\n}\n\nexport function getHighlightedLabel () {\n  const { map } = this\n  const features = map.queryRenderedFeatures({ layers: ['label'] })\n  let text\n  if (features?.length) {\n    const label = map.getStyle()?.layers.find(l => l.id === 'label')?.layout['text-field']\n    text = `${label} (${features[0].properties.layer})`\n  }\n  return text\n}\n\nexport function getSelectedFeatureId (selectedLayers) {\n  const { map } = this\n  const features = map.queryRenderedFeatures({ layers: selectedLayers })\n  return features.length ? (features[0].properties?.id || features[0]?.id) : null\n}\n\nexport function getLabel (pixel) {\n  const { map, labelLayers } = this\n  const feature = map.queryRenderedFeatures(pixel, { layers: labelLayers })[0]\n  return feature\n}\n\nexport function getLabels () {\n  const { map, paddingBox, scale } = this\n  const bounds = getFocusBounds(paddingBox, scale)\n  const features = map.queryRenderedFeatures(bounds, { layers: this.labelLayers })\n  const labels = features.map(f => {\n    let pixel = f.geometry.type === 'Point' && map.project(f.geometry.coordinates)\n    if (f.geometry.type !== 'Point') {\n      const coordinates = f.geometry.coordinates.flat(f.geometry.type === 'MultiLineString' ? 1 : 0)\n      const pixels = coordinates.map(c => map.project(c))\n      const xS = pixels.map(p => p.x)\n      const yS = pixels.map(p => p.y)\n      const centerX = ((Math.max(...xS) - Math.min(...xS)) / 2) + Math.min(...xS)\n      const centerY = ((Math.max(...yS) - Math.min(...yS)) / 2) + Math.min(...yS)\n      pixel = { x: centerX, y: centerY }\n    }\n    return {\n      feature: f,\n      pixel: [pixel.x, pixel.y]\n    }\n  })\n  return labels\n}\n","export const locationMarkerHTML = () => {\n  const el = document.createElement('div')\n  el.className = 'fm-c-marker fm-c-marker--location'\n  el.innerHTML = '<div class=\"fm-c-marker__inner\"><svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" fill=\"currentColor\"><circle cx=\"10\" cy=\"10\" r=\"8\" stroke=\"#fff\" stroke-width=\"3\"/></svg></div>'\n  return el\n}\n\nexport const targetMarkerHTML = () => {\n  const el = document.createElement('div')\n  el.className = 'fm-c-marker fm-c-marker--target'\n  el.innerHTML = `<div class=\"fm-c-marker__inner\">\n    <svg width=\"38\" height=\"38\" viewBox=\"0 0 38 38\" fill-rule=\"evenodd\" fill=\"currentColor\">\n      <path d=\"M5.035 20H1v-2h4.035C5.525 11.069 11.069 5.525 18 5.035V1h2v4.035c6.931.49 12.475 6.034 12.965 12.965H37v2h-4.035c-.49 6.931-6.034 12.475-12.965 12.965V37h-2v-4.035C11.069 32.475 5.525 26.931 5.035 20zM19 7A12.01 12.01 0 0 0 7 19a12.01 12.01 0 0 0 12 12 12.01 12.01 0 0 0 12-12A12.01 12.01 0 0 0 19 7zm0 10a2 2 0 1 1 0 4 2 2 0 1 1 0-4z\"/>\n      <path d=\"M5.035 20H1v-2h4.035a14.02 14.02 0 0 1 .246-1.8l1.96.399C7.083 17.375 7 18.178 7 19s.083 1.625.241 2.401l-1.96.399a14.02 14.02 0 0 1-.246-1.8zM20 5.035a14.02 14.02 0 0 1 1.8.246l-.399 1.96C20.625 7.083 19.822 7 19 7s-1.625.083-2.401.241l-.399-1.96a14.02 14.02 0 0 1 1.8-.246V1h2v4.035zm-2 27.93a14.02 14.02 0 0 1-1.8-.246l.399-1.96c.776.158 1.579.241 2.401.241s1.625-.083 2.401-.241l.399 1.96a14.02 14.02 0 0 1-1.8.246V37h-2v-4.035zM32.965 20a14.02 14.02 0 0 1-.246 1.8l-1.96-.399c.158-.776.241-1.579.241-2.401s-.083-1.625-.241-2.401l1.96-.399a14.02 14.02 0 0 1 .246 1.8H37v2h-4.035zM19 17a2 2 0 1 1 0 4 2 2 0 1 1 0-4zm3.8-9.385l.634-1.897a13.98 13.98 0 0 1 4.848 2.805l-1.327 1.496c-1.196-1.06-2.605-1.886-4.155-2.404zm5.181 3.43l1.496-1.327a13.98 13.98 0 0 1 2.805 4.848l-1.897.634c-.518-1.55-1.344-2.959-2.404-4.155zM30.385 22.8l1.897.634a13.98 13.98 0 0 1-2.805 4.848l-1.496-1.327c1.06-1.196 1.886-2.605 2.404-4.155zm-3.43 5.181l1.327 1.496a13.98 13.98 0 0 1-4.848 2.805l-.634-1.897c1.55-.518 2.959-1.344 4.155-2.404zM15.2 30.385l-.634 1.897a13.98 13.98 0 0 1-4.848-2.805l1.327-1.496c1.196 1.06 2.605 1.886 4.155 2.404zm-5.181-3.43l-1.496 1.327a13.98 13.98 0 0 1-2.805-4.848l1.897-.634c.518 1.55 1.344 2.959 2.404 4.155zM7.615 15.2l-1.897-.634a13.98 13.98 0 0 1 2.805-4.848l1.496 1.327c-1.06 1.196-1.886 2.605-2.404 4.155zm3.43-5.181L9.718 8.523a13.98 13.98 0 0 1 4.848-2.805l.634 1.897c-1.55.518-2.959 1.344-4.155 2.404z\"/>\n    </svg>\n  </div>`\n  return el\n}\n\nexport const shortcutMarkerHTML = (key) => {\n  const el = document.createElement('div')\n  el.className = 'fm-c-marker fm-c-marker--shortcut'\n  el.innerHTML = `<div class=\"fm-c-marker__inner\">${key}</div>`\n  return el\n}\n","import computedStyleToInlineStyle from 'computed-style-to-inline-style'\nimport { defaults } from './constants'\nimport { shortcutMarkerHTML } from './marker'\nimport { parseSVG } from '../../lib/symbols'\n\nconst SYMBOL_PLACEMENT = 'symbol-placement'\nconst TEXT_FIELD = 'text-field'\nconst SCALE_FACTOR_SMALL = 1.5\nconst SCALE_FACTOR_LARGE = 1.25\n\nexport function amendLineSymbolLayers () {\n  const { map } = this\n  const lineSymbolLayers = map.getStyle().layers.filter(l => l.layout && (SYMBOL_PLACEMENT in l.layout) && l.layout[SYMBOL_PLACEMENT] === 'line')\n  lineSymbolLayers.forEach(l => map.setLayoutProperty(l.id, SYMBOL_PLACEMENT, 'line-center'))\n}\n\nexport function addHighlightedLabelLayer () {\n  const { map } = this\n  const layers = map.getStyle().layers\n  this.labelLayers = layers.filter(l => l.id !== 'label' && l.layout ? l.layout[TEXT_FIELD] : null).map(l => l.id)\n  map.addSource('label', { type: 'geojson', data: { type: 'FeatureCollection', features: [] } })\n  map.addLayer({\n    id: 'label',\n    type: 'symbol',\n    source: 'label',\n    layout: {\n      'text-allow-overlap': true,\n      'text-ignore-placement': true\n    },\n    paint: {\n      'text-halo-width': 3,\n      'text-halo-blur': 1,\n      'text-opacity': 1\n    }\n  })\n}\n\nexport function addShortcutMarkers (features) {\n  const { map, shortcutMarkers } = this\n  const { Marker } = this.modules\n  shortcutMarkers.forEach(m => m.remove())\n  features.forEach((f, i) => {\n    const offset = f.geometryType === 'Point' ? [0, defaults.SHORTCUT_LABEL_OFFSET] : [0, 0]\n    shortcutMarkers.push(new Marker({ element: shortcutMarkerHTML(i + 1), offset }).setLngLat(f.coord).addTo(map))\n  })\n}\n\nexport function highlightLabel (feature) {\n  const { map, scale, style } = this\n\n  if (!map.style) {\n    return\n  }\n\n  if (feature) {\n    map.moveLayer('label')\n    map.getSource('label').setData({\n      type: 'Feature',\n      geometry: feature.geometry,\n      properties: {\n        ...feature.properties,\n        layer: feature.layer.id\n      }\n    })\n    // Clone layout properties\n    const textScale = scale === 1 ? SCALE_FACTOR_SMALL : SCALE_FACTOR_LARGE\n    const textField = feature.layer.layout[TEXT_FIELD]\n    map.setLayoutProperty('label', SYMBOL_PLACEMENT, feature.layer.layout[SYMBOL_PLACEMENT])\n    map.setLayoutProperty('label', TEXT_FIELD, textField.sections ? textField.sections[0].text : textField)\n    map.setLayoutProperty('label', 'text-font', feature.layer.layout['text-font'])\n    map.setLayoutProperty('label', 'text-letter-spacing', feature.layer.layout['text-letter-spacing'])\n    map.setLayoutProperty('label', 'text-size', feature.layer.layout['text-size'] * textScale)\n    map.setLayoutProperty('label', 'text-anchor', feature.layer.layout['text-anchor'])\n    map.setLayoutProperty('label', 'text-justify', feature.layer.layout['text-justify'])\n    map.setLayoutProperty('label', 'text-offset', feature.layer.layout['text-offset']?.map(o => o / textScale))\n    // Clone paint properties\n    map.setPaintProperty('label', 'text-color', (style === 'dark' ? '#ffffff' : '#000000'))\n    map.setPaintProperty('label', 'text-halo-color', (style === 'dark' ? '#000000' : '#ffffff'))\n  } else {\n    map?.getSource('label')?.setData({\n      type: 'FeatureCollection',\n      features: []\n    })\n  }\n}\n\nexport function addSelectedLayers (layers, selectedId, isDarkBasemap) {\n  const { map } = this\n  const selectedLayers = []\n  for (const layer of layers) {\n    layer.id = `${layer.id}-selected`\n    layer.filter = ['==', 'id', selectedId || '']\n    if (layer.type === 'symbol') {\n      layer.layout['icon-image'] = ['concat', layer.layout['icon-image'], '-selected']\n    }\n    if (layer.type === 'fill') {\n      layer.paint = { 'line-color': isDarkBasemap ? '#ffffff' : '#0b0c0c', 'line-width': 2 }\n      layer.type = 'line'\n    }\n    if (map.getLayer(layer.id)) {\n      map.removeLayer(layer.id)\n    }\n    selectedLayers.push(layer.id)\n    setTimeout(() => map.addLayer(layer), 0)\n  }\n  return selectedLayers\n}\n\nexport function loadSymbols () {\n  let fn\n  if (this.symbols?.length) {\n    const { map, symbols, style } = this\n    const isDarkBasemap = ['dark', 'aerial'].includes(style.name)\n\n    fn = Promise.all(symbols.map(u => fetch(u))).then(responses =>\n      Promise.all(responses.map(r => r.text()))\n    ).then(texts => Promise.all(texts.map((t, i) => loadImage(getName(symbols[i]), t, map, isDarkBasemap))\n      .concat(texts.map((t, i) => loadImage(`${getName(symbols[i])}-selected`, t, map, isDarkBasemap)))\n    ))\n  }\n  return fn\n}\n\nconst getName = path => {\n  const extNumChars = 4\n  return path.split('\\\\').pop().split('/').pop().slice(0, -Math.abs(extNumChars))\n}\n\nconst loadImage = (name, text, map, isDarkBasemap) => {\n  const parsed = parseSVG(name, null, text, isDarkBasemap, 2)\n  const container = map.getCanvasContainer()\n  container.insertAdjacentHTML('beforeend', parsed)\n  const el = container.lastChild\n  computedStyleToInlineStyle(el, { recursive: true, properties: ['stroke', 'fill'] })\n  const base64 = 'data:image/svg+xml;base64,' + btoa(container.lastChild.outerHTML)\n  const img = document.createElement('img')\n  el?.remove()\n  return new Promise((resolve, reject) => {\n    img.onload = () => {\n      try {\n        if (map?.hasImage(name)) {\n          return\n        }\n        map.addImage(name, img)\n        resolve(img)\n      } catch (err) {\n        console.log(err)\n      }\n    }\n    img.onerror = reject\n    img.src = base64\n  })\n}\n","import { getDetail, addMapHoverBehaviour } from './query'\nimport { loadSymbols, addHighlightedLabelLayer, amendLineSymbolLayers, addShortcutMarkers, addSelectedLayers } from './symbols'\n\nexport const getResolution = (map) => {\n  const center = map.getCenter()\n  const zoom = map.getZoom()\n  const lat = center.lat\n  const EARTH_CIRCUMFERENCE = 40075016.686\n  const TILE_SIZE = 512\n  const scale = Math.pow(2, zoom)\n  const resolution = (EARTH_CIRCUMFERENCE * Math.cos((lat * Math.PI) / 180)) / (scale * TILE_SIZE)\n  return resolution\n}\n\nexport const getAttributions = (map) => {\n  const style = map.getStyle()\n  if (!style) {\n    return []\n  }\n\n  const currentZoom = map.getZoom()\n  const activeAttributions = new Set()\n\n  // Check each layer for visibility at current zoom\n  style.layers.forEach(layer => {\n    // Skip layers without a source\n    if (!layer.source) return\n\n    // Check if layer is visible based on zoom and visibility property\n    const minZoom = layer.minzoom !== undefined ? layer.minzoom : 0\n    const maxZoom = layer.maxzoom !== undefined ? layer.maxzoom : 24\n    const isVisible = currentZoom >= minZoom && currentZoom < maxZoom && (!layer.layout || layer.layout.visibility !== 'none')\n\n    // If layer is visible, get attribution from its source\n    if (isVisible) {\n      const source = style.sources[layer.source]\n      if (source && source.attribution) {\n        activeAttributions.add(source.attribution)\n      }\n    }\n  })\n\n  return Array.from(activeAttributions)\n}\n\nexport async function handleLoad () {\n  const { map } = this\n  await loadSymbols.bind(this)()\n  this.isLoaded = true\n  const resolution = getResolution(map)\n  const zoom = map.getZoom()\n  const attributions = getAttributions(map)\n  this.dispatchEvent(new CustomEvent('load', {\n    detail: {\n      framework: { map },\n      resolution,\n      zoom,\n      attributions\n    }\n  }))\n}\n\nexport async function handleStyleLoad () {\n  const { map } = this\n  // Store ref to baselayers when a new style is loaded\n  this.baseLayers = map.getStyle().layers\n  // Amend symbol-placement prop so labels have a coordinate\n  amendLineSymbolLayers.bind(this)()\n  // Add highlighted label layer and source\n  addHighlightedLabelLayer.bind(this)()\n  // Change cursor type on feature hover\n  addMapHoverBehaviour.bind(this)(this.featureLayers, this.labelLayers)\n  if (this.isLoaded) {\n    await loadSymbols.bind(this)()\n    this.dispatchEvent(new CustomEvent('style', {\n      detail: {\n        type: 'style'\n      }\n    }))\n  }\n}\n\nexport async function handleIdle () {\n  if (this.map) {\n    const { map, paddingBox, selectedId, scale } = this\n    const { offsetTop, offsetLeft, offsetWidth, offsetHeight } = paddingBox\n    const { offsetTop: parentOffsetTop, offsetLeft: parentOffsetLeft } = paddingBox.parentNode\n    const pixel = [offsetLeft + parentOffsetLeft + (offsetWidth / 2), offsetTop + parentOffsetTop + (offsetHeight / 2)].map(c => c / scale)\n    const detail = await getDetail.bind(this)(selectedId ? null : pixel)\n    const attributions = getAttributions(map)\n    addShortcutMarkers.bind(this)(detail?.features?.featuresInViewport)\n    this.dispatchEvent(new CustomEvent('update', {\n      detail: {\n        ...detail,\n        attributions\n      }\n    }))\n  }\n}\n\nexport async function handleMoveStart (e) {\n  this.hideLabel()\n  this.dispatchEvent(new CustomEvent('movestart', {\n    detail: {\n      isUserInitiated: e.isUserInitiated || !!e.originalEvent\n    }\n  }))\n}\n\nexport function handleMove () {\n  const { map } = this\n  const isMaxZoom = map.getZoom() >= map.getMaxZoom()\n  const isMinZoom = map.getZoom() <= map.getMinZoom()\n  const zoom = map.getZoom()\n  const resolution = getResolution(map)\n  const attributions = getAttributions(map)\n\n  // Need to include maxBounds check as this can also constrain zoom\n  this.dispatchEvent(new CustomEvent('move', {\n    detail: {\n      isMaxZoom,\n      isMinZoom,\n      zoom,\n      resolution,\n      attributions\n    }\n  }))\n}\n\nexport function handleStyleData (e) {\n  if (this.baseLayers.length) {\n    const { map, style, selectedId } = this\n    const featureLayers = e.target.getStyle().layers.filter(l => this.featureLayers.includes(l.id))\n    const selectedLayers = map.getStyle().layers.filter(l => l.id.includes('selected'))\n    if (selectedLayers.length !== featureLayers.length) {\n      const isDarkBasemap = ['dark', 'aerial'].includes(style.name)\n      this.selectedLayers = addSelectedLayers.bind(this)(featureLayers, selectedId, isDarkBasemap)\n    }\n  }\n}\n\nexport function handleError (err) {\n  console.log(err)\n}\n","import { handleLoad, handleMoveStart, handleMove, handleIdle, handleStyleData, handleStyleLoad, handleError } from './events'\nimport { toggleSelectedFeature, getDetail, getLabels, getLabel } from './query'\nimport { locationMarkerHTML, targetMarkerHTML } from './marker'\nimport { highlightLabel } from './symbols'\nimport { getFocusPadding, spatialNavigate, getScale } from '../../lib/viewport'\nimport { debounce } from '../../lib/debounce'\nimport { defaults, css } from './constants'\nimport { capabilities } from '../../lib/capabilities.js'\nimport { defaults as storeDefaults } from '../../store/constants.js'\n\nclass Provider extends EventTarget {\n  constructor ({ transformRequest, symbols }) {\n    super()\n    this.srid = 4326\n    this.capabilities = {\n      ...capabilities.default,\n      hasDraw: true,\n      hasSize: !!window.globalThis\n    }\n    this.transformRequest = transformRequest\n    this.symbols = symbols\n    this.baseLayers = []\n    this.selectedId = ''\n    this.selectedCoordinate = null\n    this.isLoaded = false\n  }\n\n  init (options) {\n    if (this.capabilities.isLatest) {\n      import(/* webpackChunkName: \"maplibre\", webpackExports: [\"Map\", \"Marker\"] */ 'maplibre-gl').then(module => {\n        this.addMap(module, options)\n      })\n    } else {\n      Promise.all([\n        import(/* webpackChunkName: \"maplibre-legacy\", webpackExports: [\"Map\", \"Marker\"] */ 'maplibre-gl-legacy'),\n        import(/* webpackChunkName: \"maplibre-legacy\", webpackExports: [\"install\"] */ 'resize-observer'),\n        import(/* webpackChunkName: \"maplibre-legacy\" */ 'array-flat-polyfill')\n      ]).then(promises => {\n        if (!window.ResizeObserver) {\n          promises[1].install()\n        }\n        this.addMap(promises[0], options)\n      })\n    }\n  }\n\n  remove () {\n    this.map?.remove()\n    this.map = null\n  }\n\n  addMap (module, options) {\n    const { container, paddingBox, bounds, maxBounds, center, zoom, minZoom, maxZoom, style, size, featureLayers, locationLayers, callBack } = options\n    const { Map: MaplibreMap, Marker } = module.default\n    const scale = getScale(size)\n\n    const map = new MaplibreMap({\n      ...options,\n      container,\n      style: style?.url,\n      maxBounds: maxBounds || storeDefaults.MAX_BOUNDS_4326,\n      bounds,\n      center,\n      zoom,\n      minZoom,\n      maxZoom,\n      fadeDuration: 0,\n      attributionControl: false,\n      dragRotate: false\n    })\n\n    // Set initial padding, bounds and center (*No option to set in constructor)\n    // map.showPadding = true\n    map.setPadding(getFocusPadding(paddingBox, scale))\n    if (bounds) {\n      map.fitBounds(bounds, { animate: false })\n    } else {\n      map.flyTo({ center, zoom, animate: false })\n    }\n\n    // Disable rotation\n    map.touchZoomRotate.disableRotation()\n\n    // Overide device pixel ratio\n    if (map.setPixelRatio) {\n      map.setPixelRatio(window.devicePixelRatio * scale)\n    }\n\n    // Tidy up canvas\n    const canvas = map.getCanvas()\n    canvas.removeAttribute('role')\n    canvas.removeAttribute('tabindex')\n    canvas.removeAttribute('aria-label')\n    canvas.style.display = 'block'\n\n    this.container = container\n    this.map = map\n    this.featureLayers = featureLayers || []\n    this.locationLayers = locationLayers || []\n    this.selectedLayers = []\n    this.paddingBox = paddingBox\n    this.style = style\n    this.scale = scale\n\n    // Add markers\n    this.targetMarker = new Marker({ element: targetMarkerHTML() }).setLngLat([0, 0]).addTo(map)\n    this.locationMarker = new Marker({ element: locationMarkerHTML() }).setLngLat([0, 0]).addTo(map)\n    this.shortcutMarkers = []\n\n    // Return ref to dynamically loaded modules and framework functions\n    this.modules = { MaplibreMap, Marker }\n    this.framework = { map }\n\n    // Map ready event (first load)\n    map.on('load', handleLoad.bind(this))\n\n    // Map movestart\n    map.on('movestart', handleMoveStart.bind(this))\n\n    // Detect max/min zoom on move\n    map.on('move', handleMove.bind(this))\n\n    // Detect map layer addition\n    map.on('styledata', handleStyleData.bind(this))\n\n    // All render/changes/animations complete. Must debounce, min 500ms\n    const debounceHandleIdle = debounce(() => { handleIdle.bind(this)() }, defaults.DELAY)\n    map.on('idle', debounceHandleIdle)\n\n    // Map style change\n    map.on('style.load', handleStyleLoad.bind(this))\n\n    // Capture errors\n    map.on('error', handleError.bind(this))\n\n    // Implementation callback after initialisation\n    if (callBack) {\n      callBack(this)\n    }\n  }\n\n  getPixel (coord) {\n    let pixel\n    if (this.map && coord) {\n      pixel = this.map.project(coord)\n      pixel = [Math.round(pixel.x), Math.round(pixel.y)]\n    }\n    return pixel\n  }\n\n  panBy (offset, isUserInitiated = true) {\n    if (this.map) {\n      this.map.panBy(offset, { ...defaults.ANIMATION }, { isUserInitiated })\n    }\n  }\n\n  panTo (coord) {\n    this.map.flyTo({ center: coord, ...defaults.ANIMATION })\n  }\n\n  zoomIn () {\n    if (this.map) {\n      this.map.zoomIn(defaults.ANIMATION)\n    }\n  }\n\n  zoomOut () {\n    if (this.map) {\n      this.map.zoomOut(defaults.ANIMATION)\n    }\n  }\n\n  setStyle (style) {\n    this.style = style\n    this.map.setStyle(style.url, { diff: false })\n\n    // Udate draw style\n    this.draw?.setStyle?.()\n  }\n\n  setPadding (coord, isAnimate) {\n    if (this.map) {\n      const { map, paddingBox, scale } = this\n      const padding = getFocusPadding(paddingBox, scale)\n      // Search needs to set padding first before fitBounds\n      this.map.setPadding(padding || map.getPadding())\n      // Ease map to new when coord is obscured\n      coord && this.map.easeTo({ center: coord, animate: isAnimate, ...defaults.ANIMATION })\n    }\n  }\n\n  setSize (size) {\n    const scale = getScale(size)\n    this.scale = scale\n    this.setPadding()\n    if (this.map.setPixelRatio) {\n      this.map?.setPixelRatio(window.devicePixelRatio * scale)\n    }\n    setTimeout(() => {\n      this.map.resize()\n      this.dispatchEvent(new CustomEvent('style', {\n        detail: {\n          type: 'size'\n        }\n      }))\n    }, defaults.DELAY)\n  }\n\n  fitBounds (bounds, isAnimate = true) {\n    bounds = [[bounds[0], bounds[1]], [bounds[2], bounds[3]]]\n    this.map.fitBounds(bounds, { animate: isAnimate, linear: true, duration: defaults.ANIMATION.duration })\n  }\n\n  setCentre (coord, _zoom) {\n    if (this.map) {\n      this.map.flyTo({ center: coord, ...defaults.ANIMATION })\n    }\n  }\n\n  initDraw (options) {\n    import(/* webpackChunkName: \"maplibre-draw\" */ './draw.js').then(module => {\n      const Draw = module.default\n      this.draw = new Draw(this, options)\n    })\n  }\n\n  setTargetMarker (coord, hasData, isVisible) {\n    const { targetMarker } = this\n    if (targetMarker) {\n      targetMarker.setLngLat(coord || [0, 0])\n      const el = targetMarker.getElement() // addClassName not supported in v1.15\n      el.classList.toggle('fm-c-marker--has-data', hasData)\n      el.classList.toggle(css.MARKER_VISIBLE, isVisible && coord)\n    }\n  }\n\n  selectFeature (id) {\n    this.selectedId = id\n    toggleSelectedFeature.bind(this)(id)\n  }\n\n  selectCoordinate (coord) {\n    this.selectedCoordinate = coord\n  }\n\n  async queryFeature (id) {\n    if (id) {\n      const detail = await getDetail.bind(this)(null, false)\n      detail.features.items = [detail.features.items.find(f => f.id === id)]\n      this.dispatchEvent(new CustomEvent('mapquery', { detail }))\n    }\n  }\n\n  async queryPoint (point) {\n    const detail = await getDetail.bind(this)(point, this.selectedLayers)\n    this.hideLabel()\n    this.dispatchEvent(new CustomEvent('mapquery', {\n      detail: {\n        resultType: detail.features.resultType,\n        ...detail\n      }\n    }))\n  }\n\n  getGeoLocation (success, error) {\n    navigator.geolocation.getCurrentPosition(async (position) => {\n      let coord = [position.coords.longitude, position.coords.latitude]\n      coord = coord.map(n => parseFloat(n.toFixed(defaults.PRECISION)))\n      // const place = this.getNearest ? await this.getNearest(coord) : null\n      success(coord, null)\n    }, (err) => {\n      console.log(err)\n      error(err)\n    }, {\n      enableHighAccuracy: false\n    })\n  }\n\n  showLocation (coord) {\n    const { locationMarker } = this\n    locationMarker.setLngLat(coord).addClassName(css.MARKER_VISIBLE)\n  }\n\n  showNextLabel (pixel, direction) {\n    const labels = getLabels.bind(this)()\n    const { lng, lat } = this.map.getCenter()\n    const center = this.map.project([lng, lat])\n    const pixels = labels.map(c => c.pixel)\n    const index = spatialNavigate(direction, pixel || [center.x, center.y], pixels)\n    const feature = labels[index]?.feature\n    highlightLabel.bind(this)(feature)\n    return labels[index]?.pixel\n  }\n\n  showLabel (point) {\n    const feature = getLabel.bind(this)(point)\n    highlightLabel.bind(this)(feature)\n    return point\n  }\n\n  hideLabel () {\n    if (this.map) {\n      highlightLabel.bind(this)()\n    }\n  }\n}\n\nexport default Provider\n","// index.ts\nvar earthRadius = 63710088e-1;\nvar factors = {\n  centimeters: earthRadius * 100,\n  centimetres: earthRadius * 100,\n  degrees: 360 / (2 * Math.PI),\n  feet: earthRadius * 3.28084,\n  inches: earthRadius * 39.37,\n  kilometers: earthRadius / 1e3,\n  kilometres: earthRadius / 1e3,\n  meters: earthRadius,\n  metres: earthRadius,\n  miles: earthRadius / 1609.344,\n  millimeters: earthRadius * 1e3,\n  millimetres: earthRadius * 1e3,\n  nauticalmiles: earthRadius / 1852,\n  radians: 1,\n  yards: earthRadius * 1.0936\n};\nvar areaFactors = {\n  acres: 247105e-9,\n  centimeters: 1e4,\n  centimetres: 1e4,\n  feet: 10.763910417,\n  hectares: 1e-4,\n  inches: 1550.003100006,\n  kilometers: 1e-6,\n  kilometres: 1e-6,\n  meters: 1,\n  metres: 1,\n  miles: 386e-9,\n  nauticalmiles: 29155334959812285e-23,\n  millimeters: 1e6,\n  millimetres: 1e6,\n  yards: 1.195990046\n};\nfunction feature(geom, properties, options = {}) {\n  const feat = { type: \"Feature\" };\n  if (options.id === 0 || options.id) {\n    feat.id = options.id;\n  }\n  if (options.bbox) {\n    feat.bbox = options.bbox;\n  }\n  feat.properties = properties || {};\n  feat.geometry = geom;\n  return feat;\n}\nfunction geometry(type, coordinates, _options = {}) {\n  switch (type) {\n    case \"Point\":\n      return point(coordinates).geometry;\n    case \"LineString\":\n      return lineString(coordinates).geometry;\n    case \"Polygon\":\n      return polygon(coordinates).geometry;\n    case \"MultiPoint\":\n      return multiPoint(coordinates).geometry;\n    case \"MultiLineString\":\n      return multiLineString(coordinates).geometry;\n    case \"MultiPolygon\":\n      return multiPolygon(coordinates).geometry;\n    default:\n      throw new Error(type + \" is invalid\");\n  }\n}\nfunction point(coordinates, properties, options = {}) {\n  if (!coordinates) {\n    throw new Error(\"coordinates is required\");\n  }\n  if (!Array.isArray(coordinates)) {\n    throw new Error(\"coordinates must be an Array\");\n  }\n  if (coordinates.length < 2) {\n    throw new Error(\"coordinates must be at least 2 numbers long\");\n  }\n  if (!isNumber(coordinates[0]) || !isNumber(coordinates[1])) {\n    throw new Error(\"coordinates must contain numbers\");\n  }\n  const geom = {\n    type: \"Point\",\n    coordinates\n  };\n  return feature(geom, properties, options);\n}\nfunction points(coordinates, properties, options = {}) {\n  return featureCollection(\n    coordinates.map((coords) => {\n      return point(coords, properties);\n    }),\n    options\n  );\n}\nfunction polygon(coordinates, properties, options = {}) {\n  for (const ring of coordinates) {\n    if (ring.length < 4) {\n      throw new Error(\n        \"Each LinearRing of a Polygon must have 4 or more Positions.\"\n      );\n    }\n    if (ring[ring.length - 1].length !== ring[0].length) {\n      throw new Error(\"First and last Position are not equivalent.\");\n    }\n    for (let j = 0; j < ring[ring.length - 1].length; j++) {\n      if (ring[ring.length - 1][j] !== ring[0][j]) {\n        throw new Error(\"First and last Position are not equivalent.\");\n      }\n    }\n  }\n  const geom = {\n    type: \"Polygon\",\n    coordinates\n  };\n  return feature(geom, properties, options);\n}\nfunction polygons(coordinates, properties, options = {}) {\n  return featureCollection(\n    coordinates.map((coords) => {\n      return polygon(coords, properties);\n    }),\n    options\n  );\n}\nfunction lineString(coordinates, properties, options = {}) {\n  if (coordinates.length < 2) {\n    throw new Error(\"coordinates must be an array of two or more positions\");\n  }\n  const geom = {\n    type: \"LineString\",\n    coordinates\n  };\n  return feature(geom, properties, options);\n}\nfunction lineStrings(coordinates, properties, options = {}) {\n  return featureCollection(\n    coordinates.map((coords) => {\n      return lineString(coords, properties);\n    }),\n    options\n  );\n}\nfunction featureCollection(features, options = {}) {\n  const fc = { type: \"FeatureCollection\" };\n  if (options.id) {\n    fc.id = options.id;\n  }\n  if (options.bbox) {\n    fc.bbox = options.bbox;\n  }\n  fc.features = features;\n  return fc;\n}\nfunction multiLineString(coordinates, properties, options = {}) {\n  const geom = {\n    type: \"MultiLineString\",\n    coordinates\n  };\n  return feature(geom, properties, options);\n}\nfunction multiPoint(coordinates, properties, options = {}) {\n  const geom = {\n    type: \"MultiPoint\",\n    coordinates\n  };\n  return feature(geom, properties, options);\n}\nfunction multiPolygon(coordinates, properties, options = {}) {\n  const geom = {\n    type: \"MultiPolygon\",\n    coordinates\n  };\n  return feature(geom, properties, options);\n}\nfunction geometryCollection(geometries, properties, options = {}) {\n  const geom = {\n    type: \"GeometryCollection\",\n    geometries\n  };\n  return feature(geom, properties, options);\n}\nfunction round(num, precision = 0) {\n  if (precision && !(precision >= 0)) {\n    throw new Error(\"precision must be a positive number\");\n  }\n  const multiplier = Math.pow(10, precision || 0);\n  return Math.round(num * multiplier) / multiplier;\n}\nfunction radiansToLength(radians, units = \"kilometers\") {\n  const factor = factors[units];\n  if (!factor) {\n    throw new Error(units + \" units is invalid\");\n  }\n  return radians * factor;\n}\nfunction lengthToRadians(distance, units = \"kilometers\") {\n  const factor = factors[units];\n  if (!factor) {\n    throw new Error(units + \" units is invalid\");\n  }\n  return distance / factor;\n}\nfunction lengthToDegrees(distance, units) {\n  return radiansToDegrees(lengthToRadians(distance, units));\n}\nfunction bearingToAzimuth(bearing) {\n  let angle = bearing % 360;\n  if (angle < 0) {\n    angle += 360;\n  }\n  return angle;\n}\nfunction azimuthToBearing(angle) {\n  angle = angle % 360;\n  if (angle > 180) {\n    return angle - 360;\n  } else if (angle < -180) {\n    return angle + 360;\n  }\n  return angle;\n}\nfunction radiansToDegrees(radians) {\n  const normalisedRadians = radians % (2 * Math.PI);\n  return normalisedRadians * 180 / Math.PI;\n}\nfunction degreesToRadians(degrees) {\n  const normalisedDegrees = degrees % 360;\n  return normalisedDegrees * Math.PI / 180;\n}\nfunction convertLength(length, originalUnit = \"kilometers\", finalUnit = \"kilometers\") {\n  if (!(length >= 0)) {\n    throw new Error(\"length must be a positive number\");\n  }\n  return radiansToLength(lengthToRadians(length, originalUnit), finalUnit);\n}\nfunction convertArea(area, originalUnit = \"meters\", finalUnit = \"kilometers\") {\n  if (!(area >= 0)) {\n    throw new Error(\"area must be a positive number\");\n  }\n  const startFactor = areaFactors[originalUnit];\n  if (!startFactor) {\n    throw new Error(\"invalid original units\");\n  }\n  const finalFactor = areaFactors[finalUnit];\n  if (!finalFactor) {\n    throw new Error(\"invalid final units\");\n  }\n  return area / startFactor * finalFactor;\n}\nfunction isNumber(num) {\n  return !isNaN(num) && num !== null && !Array.isArray(num);\n}\nfunction isObject(input) {\n  return input !== null && typeof input === \"object\" && !Array.isArray(input);\n}\nfunction validateBBox(bbox) {\n  if (!bbox) {\n    throw new Error(\"bbox is required\");\n  }\n  if (!Array.isArray(bbox)) {\n    throw new Error(\"bbox must be an Array\");\n  }\n  if (bbox.length !== 4 && bbox.length !== 6) {\n    throw new Error(\"bbox must be an Array of 4 or 6 numbers\");\n  }\n  bbox.forEach((num) => {\n    if (!isNumber(num)) {\n      throw new Error(\"bbox must only contain numbers\");\n    }\n  });\n}\nfunction validateId(id) {\n  if (!id) {\n    throw new Error(\"id is required\");\n  }\n  if ([\"string\", \"number\"].indexOf(typeof id) === -1) {\n    throw new Error(\"id must be a number or a string\");\n  }\n}\nexport {\n  areaFactors,\n  azimuthToBearing,\n  bearingToAzimuth,\n  convertArea,\n  convertLength,\n  degreesToRadians,\n  earthRadius,\n  factors,\n  feature,\n  featureCollection,\n  geometry,\n  geometryCollection,\n  isNumber,\n  isObject,\n  lengthToDegrees,\n  lengthToRadians,\n  lineString,\n  lineStrings,\n  multiLineString,\n  multiPoint,\n  multiPolygon,\n  point,\n  points,\n  polygon,\n  polygons,\n  radiansToDegrees,\n  radiansToLength,\n  round,\n  validateBBox,\n  validateId\n};\n//# sourceMappingURL=index.js.map","!function(e,t){\"object\"==typeof exports&&\"object\"==typeof module?module.exports=t():\"function\"==typeof define&&define.amd?define([],t):\"object\"==typeof exports?exports.computedStyleToInlineStyle=t():e.computedStyleToInlineStyle=t()}(this,(()=>(()=>{\"use strict\";var e={};return(()=>{var t=e;Object.defineProperty(t,\"__esModule\",{value:!0}),t.default=function e(t,o){if(!t)throw new Error(\"No element specified.\");(null==o?void 0:o.recursive)&&Array.prototype.forEach.call(t.children,(t=>{e(t,o)}));const r=getComputedStyle(t);Array.prototype.forEach.call((null==o?void 0:o.properties)||r,(e=>{t.style[e]=r.getPropertyValue(e)}))}})(),e})()));","const { DOMParser } = window\n\nexport const parseSVG = (icon, fill, text, isDarkBasemap = false, scale = 1) => {\n  const isSelected = icon.includes('selected')\n  // let styled = text.replace(/#0f0|#00ff00|#0F0|#00FF00/g, isSelected ? isDarkBasemap ? '#ffffff' : '#0b0c0c' : 'transparent')\n  // styled = styled.replace(/#00f|#0000ff|#00F|#0000FF/g, isDarkBasemap ? '#162232' : '#ffffff')\n  const parser = new DOMParser()\n  const dom = parser.parseFromString(text, 'text/html')\n  const svg = dom.querySelector('svg')\n  // Add xmlns attribute and class to svg\n  // svg.setAttribute('xmlns', 'http://www.w3.org/2000/svg')\n  svg.classList.add('fm-c-symbol')\n  svg.classList.toggle('fm-c-symbol--selected', isSelected)\n  svg.classList.toggle('fm-c-symbol--dark', isDarkBasemap)\n  // Set svg height and width\n  const viewBox = svg.getAttribute('viewBox')\n  const width = parseInt(viewBox.split(' ')[2], 10) * scale\n  const height = parseInt(viewBox.split(' ')[3], 10) * scale\n  svg.setAttribute('width', width)\n  svg.setAttribute('height', height)\n  // Conditionally add fill\n  if (fill) {\n    svg.setAttribute('fill', fill)\n  }\n  // Add classnames\n  const olFill = svg.querySelectorAll('[fill=\"#0b0c0c\" i], [style*=\"fill:#0b0c0c\" i]')\n  const olStroke = svg.querySelectorAll('[stroke=\"#0b0c0c\" i], [style*=\"stroke:#0b0c0c\" i]')\n  olFill.forEach(n => n.classList.add('fm-c-symbol__ol-fill'))\n  olStroke.forEach(n => n.classList.add('fm-c-symbol__ol-stroke'))\n  const bgFill = svg.querySelectorAll('[fill=\"#fff\" i], [fill=\"#ffffff\" i], [style*=\"fill:#fff\" i], [style*=\"fill:#ffffff\" i]')\n  const bgStroke = svg.querySelectorAll('[stroke*=\"#fff\" i], [stroke*=\"#ffffff\" i], [style*=\"stroke:#fff\" i], [style*=\"stroke:#ffffff\" i]')\n  bgFill.forEach(n => n.classList.add('fm-c-symbol__bg-fill'))\n  bgStroke.forEach(n => n.classList.add('fm-c-symbol__bg-stroke'))\n  const fgFill = svg.querySelectorAll(':not(.fm-c-symbol__ol-fill):not(.fm-c-symbol__bg-fill)[fill], :not(.fm-c-symbol__ol-fill):not(.fm-c-symbol__bg-fill)[style*=\"fill\"]')\n  const fgStroke = svg.querySelectorAll(':not(.fm-c-symbol__ol-stroke):not(.fm-c-symbol__bg-stroke)[stroke], :not(.fm-c-symbol__ol-stroke):not(.fm-c-symbol__bg-stroke)[style*=\"stroke\"]')\n  fgFill.forEach(n => n.classList.add('fm-c-symbol__fg-fill'))\n  fgStroke.forEach(n => n.classList.add('fm-c-symbol__fg-stroke'))\n  return dom.body.innerHTML\n}\n","// index.ts\nimport { getCoord } from \"@turf/invariant\";\nimport { radiansToLength, degreesToRadians } from \"@turf/helpers\";\nfunction distance(from, to, options = {}) {\n  var coordinates1 = getCoord(from);\n  var coordinates2 = getCoord(to);\n  var dLat = degreesToRadians(coordinates2[1] - coordinates1[1]);\n  var dLon = degreesToRadians(coordinates2[0] - coordinates1[0]);\n  var lat1 = degreesToRadians(coordinates1[1]);\n  var lat2 = degreesToRadians(coordinates2[1]);\n  var a = Math.pow(Math.sin(dLat / 2), 2) + Math.pow(Math.sin(dLon / 2), 2) * Math.cos(lat1) * Math.cos(lat2);\n  return radiansToLength(\n    2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a)),\n    options.units\n  );\n}\nvar turf_distance_default = distance;\nexport {\n  turf_distance_default as default,\n  distance\n};\n//# sourceMappingURL=index.js.map","import { distance as turfDistance } from '@turf/distance'\nimport { point as TurfPoint } from '@turf/helpers'\nimport { defaults } from '../store/constants'\n\nconst getBearing = (coord1, coord2) => {\n  const east = coord1[0] < coord2[0] && 'east'\n  const west = coord1[0] > coord2[0] && 'west'\n  const north = coord1[1] < coord2[1] && 'north'\n  const south = coord1[1] > coord2[1] && 'south'\n  return [east, west, north, south].filter(b => b && typeof b === 'string')\n}\n\nconst getUnits = (metres) => {\n  const MAX_METRES = 800\n  const MAX_MILES = 5000\n  const RATIO = 0.621371\n  let units\n  if (metres < MAX_METRES) {\n    units = `${metres} metres`\n  } else if (metres < MAX_MILES) {\n    units = (metres / 1000 * RATIO).toFixed(1) + ' miles'\n  } else {\n    units = Math.round((metres / 1000) * RATIO) + ' miles'\n  }\n  return units\n}\n\nconst getDirection = (coord1, coord2) => {\n  coord1 = coord1.map(n => n > 1000 ? Math.round(n) : Math.round(n * 100000) / 100000)\n  coord2 = coord2.map(n => n > 1000 ? Math.round(n) : Math.round(n * 100000) / 100000)\n  const ns1 = [coord1[0], coord1[1]]\n  const ns2 = [coord1[0], coord2[1]]\n  const ew1 = [coord1[0], coord1[1]]\n  const ew2 = [coord2[0], coord1[1]]\n  const nsd = getDistance(ns1, ns2)\n  const ewd = getDistance(ew1, ew2)\n  const bearing = getBearing(coord1, coord2)\n  const ewc = bearing.filter(b => ['east', 'west'].includes(b)).join('')\n  const nsc = bearing.filter(b => ['north', 'south'].includes(b)).join('')\n  const ew = ewc ? `${ewc} ${getUnits(ewd)}` : ''\n  const ns = nsc ? `${nsc} ${getUnits(nsd)}` : ''\n  return `${ns + (ewc && nsc ? ', ' : '') + ew}`\n}\n\nconst getArea = (bounds) => {\n  const ew = getDistance([bounds[0], bounds[1]], [bounds[2], bounds[1]])\n  const ns = getDistance([bounds[0], bounds[1]], [bounds[0], bounds[3]])\n  return `${getUnits(ew)} by ${getUnits(ns)}`\n}\n\nconst getBoundsChange = (oCentre, originalZoom, isMaxZoom, isMinZoom, center, zoom) => {\n  const isSameCentre = JSON.stringify(oCentre) === JSON.stringify(center)\n  const isSameZoom = originalZoom === zoom\n  const isMove = oCentre && originalZoom && !(isSameCentre && isSameZoom)\n  const maxZoom = isMaxZoom ? ' (Maximum zoom reached)' : ''\n  const minZoom = isMinZoom ? ' (Minimum zoom reached)' : ''\n  let change = ''\n  if (isMove) {\n    if (!isSameCentre && !isSameZoom) {\n      change = `New area${maxZoom}${minZoom}: `\n    } else if (!isSameCentre) {\n      change = `Map move: ${getDirection(oCentre, center)}, `\n    } else {\n      const direction = zoom > originalZoom ? 'in' : 'out'\n      change = `Zoomed ${direction}${maxZoom}${minZoom}: `\n    }\n  }\n  return change\n}\n\nconst getSelectedStatus = (featuresInViewport, id) => {\n  const total = featuresInViewport.length\n  const index = featuresInViewport.findIndex(f => f.id === id)\n  return index >= 0 && `${total} feature${total !== 1 ? 's' : ''} in this area. ${featuresInViewport[index].name}. ${index + 1} of ${total} highlighted.`\n}\n\nconst getOffsetBoundingClientRect = (el) => {\n  const offsetParent = el.closest('[data-fm-main]') || document.body\n  return offsetParent.getBoundingClientRect()\n}\n\nconst isCirclePolygon = (geometry) => {\n  const coordinates = geometry?.coordinates?.[0]\n\n  // Expect exactly 64 points\n  if (coordinates?.length !== 65) {\n    return false\n  }\n\n  // Compute approximate centre using two opposite points\n  const [x1, y1] = coordinates[0]\n  const [x2, y2] = coordinates[32]\n  const center = [(x1 + x2) / 2, (y1 + y2) / 2]\n\n  let minDist = Infinity; let maxDist = -Infinity\n  let minEdge = Infinity; let maxEdge = -Infinity\n\n  for (let i = 0; i < 64; i++) {\n    const [xA, yA] = coordinates[i]\n    const [xB, yB] = coordinates[(i + 1) % 64]\n\n    // Distance from center\n    const dist = Math.hypot(xA - center[0], yA - center[1])\n    minDist = Math.min(minDist, dist)\n    maxDist = Math.max(maxDist, dist)\n\n    // Distance to next vertex (edge length)\n    const edgeDist = Math.hypot(xB - xA, yB - yA)\n    minEdge = Math.min(minEdge, edgeDist)\n    maxEdge = Math.max(maxEdge, edgeDist)\n  }\n\n  // Need to revist tolerance as they depend on size too\n  const WSG84_TOLERANCE = 0.3\n  const BNG_TOLERANCE = 0.3\n  const tolerance = detectCoordinateType(center) === 'WSG84' ? WSG84_TOLERANCE : BNG_TOLERANCE\n\n  return Math.abs(maxDist - minDist) < tolerance && Math.abs(maxEdge - minEdge) < tolerance\n}\n\nconst metresToImperial = (metres) => {\n  const MILE = 1609.344\n  const YARD = 0.9144\n  const pluralize = (value, singular, plural) => `${value} ${value === 1 ? singular : plural}`\n  if (metres >= MILE) {\n    const miles = Math.floor(metres / MILE)\n    const remainder = metres % MILE\n    const yards = Math.floor(remainder / YARD)\n    return `${pluralize(miles, 'mile', 'miles')}, ${pluralize(yards, 'yard', 'yards')}`\n  } else {\n    const yards = Math.floor(metres / YARD)\n    return `${pluralize(yards, 'yard', 'yards')}`\n  }\n}\n\nconst squareMetresToKm = (metres) => {\n  const SQ_KM = 1_000_000\n  if (metres >= SQ_KM) {\n    let km2 = (metres / SQ_KM).toFixed(2)\n    km2 = Number(km2).toLocaleString(undefined, { minimumFractionDigits: 0, maximumFractionDigits: 2 })\n    return `${km2} km²`\n  } else {\n    return `${Math.ceil(metres).toLocaleString()} m²`\n  }\n}\n\nexport const parseDimensions = (dimensions) => {\n  const { area, length } = dimensions\n  const areaDisplay = area ? squareMetresToKm(area) : null\n  const lengthDisplay = length ? metresToImperial(length) : null\n  return { ...dimensions, areaDisplay, lengthDisplay }\n}\n\nexport const detectCoordinateType = (coords) => {\n  if (coords.length === 3) {\n    return 'BNG' // If a third value exists (zone), it's UTM\n  }\n  const [x, y] = coords\n  if (x >= -180 && x <= 180 && y >= -90 && y <= 90) {\n    return 'WSG84'\n  }\n  if (x > 180 && y > 90) {\n    return 'BNG'\n  }\n  return 'Unknown'\n}\n\nexport const getDistance = (coord1, coord2) => {\n  let distance\n  if (coord1[0] > 1000) {\n    const x = Math.abs(coord1[0] - coord2[0])\n    const y = Math.abs(coord1[1] - coord2[1])\n    const dist = Math.sqrt((Math.pow(x, 2)) + (Math.pow(y, 2)))\n    distance = dist\n  } else {\n    const p1 = new TurfPoint(coord1)\n    const p2 = new TurfPoint(coord2)\n    distance = turfDistance(p1, p2, { units: 'metres' })\n  }\n  return Math.round(distance)\n}\n\nexport const getFocusPadding = (el, scale) => {\n  let padding\n  if (el) {\n    const parent = getOffsetBoundingClientRect(el)\n    const box = el.getBoundingClientRect()\n    const boxX = box.x || box.left\n    const boxY = box.y || box.top\n    const parentX = parent.x || parent.left\n    const parentY = parent.y || parent.top\n    padding = {\n      top: (boxY - parentY) / scale,\n      left: (boxX - parentX) / scale,\n      right: (parent.width - box.width - (boxX - parentX)) / scale,\n      bottom: (parent.height - box.height - (boxY - parentY)) / scale\n    }\n  }\n  // Addresses repid browser resizing\n  const isValid = Object.values(padding).every(i => i >= 0)\n  return isValid && padding\n}\n\nexport const getFocusBounds = (el, scale) => {\n  let bounds\n  if (el) {\n    const parent = getOffsetBoundingClientRect(el)\n    const box = el.getBoundingClientRect()\n    const m = 10\n    bounds = [[\n      ((box.x || box.left) - (parent.x || parent.left) + m) / scale,\n      (((box.y || box.top) - (parent.y || parent.top)) + box.height - m) / scale\n    ], [\n      (box.width + ((box.x || box.left) - (parent.x || parent.left)) - m) / scale,\n      ((box.y || box.top) - (parent.y || parent.top) + m) / scale\n    ]]\n  }\n  return bounds\n}\n\nexport const getMapPixel = (el, scale) => {\n  const parent = getOffsetBoundingClientRect(el)\n  const box = el.getBoundingClientRect()\n  const left = ((box.x || box.left) - (parent.x || parent.left)) / scale\n  const top = ((box.y || box.top) - (parent.y || parent.top)) / scale\n  const offsetLeft = (box.width / 2) / scale\n  const offsetTop = (box.height / 2) / scale\n  const point = [left + offsetLeft, top + offsetTop]\n  return point\n}\n\nexport const getDescription = (place, bounds, features) => {\n  const { featuresTotal, isFeaturesInMap, isPixelFeaturesAtPixel, isPixelFeaturesInMap } = features || {}\n  let text = ''\n\n  if (featuresTotal) {\n    text = `${featuresTotal} feature${featuresTotal === 1 ? '' : 's'} in this area. `\n  } else if (isPixelFeaturesAtPixel) {\n    text = 'Data visible at the center coordinate. '\n  } else if (isPixelFeaturesInMap) {\n    text = 'No data visible at the center coordinate. '\n  } else if (isFeaturesInMap) {\n    text = 'No feature data in this area. '\n  } else {\n    // Null\n  }\n\n  const focusPlace = place ? `approximate centre ${place}, ` : ''\n  const focusArea = `covering ${getArea(bounds)}`\n  const findPlace = place ? '' : 'Use ALT plus I to find closest place'\n\n  return `${focusPlace}${focusArea}. ${text}${findPlace}`\n}\n\nexport const getStatus = (action, isBoundsChange, place, state, current) => {\n  const { center, bounds, zoom, isMaxZoom, isMinZoom, features, label, selectedId } = current\n  let status = null\n  if (label) {\n    status = label\n  } else if (selectedId) {\n    const selected = getSelectedStatus(features?.featuresInViewport, selectedId)\n    status = selected\n  } else if (action === 'DATA') {\n    status = 'Map change: new data. Use ALT plus I to get new details'\n  } else if (isBoundsChange) {\n    const direction = getBoundsChange(state.center, state.zoom, isMaxZoom, isMinZoom, center, zoom)\n    const description = getDescription(place, bounds, features)\n    status = `${direction}${direction ? 'f' : 'F'}ocus area ${description}`\n  } else {\n    status = ''\n  }\n  return status\n}\n\nexport const getPlace = (isUserInitiated, action, oPlace, newPlace) => {\n  let place\n  if (!isUserInitiated) {\n    if (action === 'RESET') {\n      place = oPlace\n    } else {\n      place = newPlace\n    }\n  }\n  return place\n}\n\nexport const parseCentre = (value, srid) => {\n  const mb = defaults[`MAX_BOUNDS_${srid}`]\n  let isInRange\n  let coords = value?.split(',')\n  // Query string formed correctly\n  if (!(Array.isArray(coords) && coords?.length === 3)) {\n    return null\n  }\n  // Coords are numbers\n  coords = coords.slice(0, 2).map(x => parseFloat(x))\n  coords = !coords.some(isNaN) && coords\n  if (!coords) {\n    return null\n  }\n  // Coords are within the valid range\n  if (srid === '27700') {\n    isInRange = !!coords.filter(c => c >= 0).length\n  } else {\n    isInRange = (coords[0] > mb[0] && coords[0] < mb[2]) && (coords[1] > mb[1] && coords[1] < mb[3])\n  }\n  return isInRange ? coords : null\n}\n\nexport const parseZoom = value => {\n  const coords = value?.split(',')\n  if (!(Array.isArray(coords) && coords?.length === 3)) {\n    return null\n  }\n  const zoom = parseFloat(coords[2])\n  return !zoom.isNaN ? zoom : null\n}\n\nexport const getShortcutKey = (e, featuresViewport) => {\n  const number = e.code.slice(-1)\n  const hasFeature = featuresViewport.length >= number\n  const id = hasFeature ? featuresViewport[number - 1].id : ''\n  return id\n}\n\nexport const getFeatureShape = (feature) => {\n  if (isCirclePolygon(feature?.geometry)) {\n    return 'circle'\n  }\n  if (feature?.geometry?.type?.toLowerCase() === 'polygon') {\n    const coords = feature.geometry?.coordinates\n    const flatCoords = (coords && Array.from(new Set(coords.flat(2)))) || null\n    return flatCoords?.length === 4 ? 'square' : 'polygon'\n  }\n  return null\n}\n\nexport const spatialNavigate = (direction, start, pixels) => {\n  const quadrant = pixels.filter(p => {\n    const offsetX = Math.abs(p[0] - start[0])\n    const offsetY = Math.abs(p[1] - start[1])\n    let isQuadrant = false\n    if (direction === 'up') {\n      isQuadrant = p[1] <= start[1] && offsetY >= offsetX\n    } else if (direction === 'down') {\n      isQuadrant = p[1] > start[1] && offsetY >= offsetX\n    } else if (direction === 'left') {\n      isQuadrant = p[0] <= start[0] && offsetY < offsetX\n    } else {\n      isQuadrant = p[0] > start[0] && offsetY < offsetX\n    }\n    return isQuadrant && (JSON.stringify(p) !== JSON.stringify(start))\n  })\n  if (!quadrant.length) {\n    quadrant.push(start)\n  }\n  const pythagorean = (a, b) => Math.sqrt(Math.pow(a, 2) + Math.pow(b, 2))\n  const distances = quadrant.map(p => pythagorean(Math.abs(start[0] - p[0]), Math.abs(start[1] - p[1])))\n  const closest = quadrant[distances.indexOf(Math.min(...distances))]\n  return pixels.findIndex(i => JSON.stringify(i) === JSON.stringify(closest))\n}\n\nexport const getScale = (size) => {\n  return { small: 1, medium: 1.5, large: 2 }[size] || 1\n}\n\nexport const getPoint = (el, e, scale) => {\n  const { left, top } = el.getBoundingClientRect()\n  const { clientX, clientY } = e.nativeEvent\n  const x = clientX - left\n  const y = clientY - top\n  return [x / scale, y / scale]\n}\n\nexport const getStyle = (styles = []) => {\n  const validStyles = styles.filter(s => defaults.STYLES.includes(s.name))\n  const style = window.localStorage.getItem('style')\n  return validStyles.find(s => s.name === style) || validStyles.find(s => s.name === 'default')\n}\n"],"names":["defaults","PRECISION","ANIMATION","duration","curve","DELAY","MAX_FEATURES","SHORTCUT_LABEL_OFFSET","css","MARKER_VISIBLE","getCoord","coord","Error","Array","isArray","type","geometry","coordinates","length","getGeom","geojson","debounce","fn","wait","timeoutId","_len","arguments","args","_key","window","clearTimeout","setTimeout","apply","TinyQueue","constructor","data","compare","a","b","this","i","_down","push","item","_up","pop","top","bottom","peek","pos","parent","current","halfLength","bestChild","right","Cell","x","y","h","polygon","d","inside","minDistSq","Infinity","ring","len","j","Math","min","getSegDistSq","sqrt","pointToPolygonDist","max","SQRT2","px","py","dx","dy","t","previousValue","callback","g","stopG","geometryMaybeCollection","isGeometryCollection","featureProperties","featureBBox","featureId","featureIndex","isFeatureCollection","isFeature","stop","features","properties","bbox","id","geometries","geomEach","currentGeometry","geom","total","polygonArea","calculateArea","geomReduce","coords","abs","ringArea","FACTOR","PI_OVER_180","PI","coordsLength","lower","middle","upper","lowerX","middleY","sin","polygonclip","points","result","edge","prev","prevInside","p","bitCode","intersect","code","clipPolygon","rings","outRings","clipped","_regeneratorRuntime","e","r","Object","prototype","n","hasOwnProperty","o","defineProperty","value","Symbol","iterator","c","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","arg","call","l","f","s","GeneratorFunction","GeneratorFunctionPrototype","getPrototypeOf","v","values","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","_typeof","resolve","__await","then","callInvokeWithMethodAndArg","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","return","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","reset","isNaN","displayName","isGeneratorFunction","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","charAt","slice","rval","handle","complete","finish","catch","delegateYield","asyncGeneratorStep","_toConsumableArray","_arrayLikeToArray","_arrayWithoutHoles","from","_iterableToArray","_unsupportedIterableToArray","_nonIterableSpread","toString","test","ownKeys","getOwnPropertySymbols","filter","getOwnPropertyDescriptor","_objectSpread","_defineProperty","getOwnPropertyDescriptors","defineProperties","toPrimitive","String","_toPrimitive","_toPropertyKey","getPaddedBounds","map","padding","getPadding","bounds","getBounds","sw","project","getWest","getSouth","ne","getEast","getNorth","left","paddedSW","unproject","paddedNE","lng","lat","addFeatureProperties","_map$getCenter","getCenter","precision","debug","minX","minY","maxX","maxY","width","height","cellSize","distance","cellQueue","bestCell","area","centroid","getCentroidCell","bboxCell","numProbes","potentiallyQueue","cell","console","log","round","ch","polylabel","p1","TurfPoint","p2","turfDistance","units","geometryType","getViewport","bind","flat","parseFloat","toFixed","center","zoom","getZoom","toArray","isMaxZoom","getMaxZoom","isMinZoom","getMinZoom","addMapHoverBehaviour","featureLayers","labelLayers","on","concat","queryRenderedFeatures","point","layers","originalEvent","altKey","find","includes","layer","isLabel","getCanvas","style","cursor","getDetail","_x","_getDetail","_callee","pixel","selectedLayers","viewport","label","selectedId","_context","getFeatures","getHighlightedLabel","getSelectedFeatureId","resultType","_next","_throw","_map$getStyle","_layers","_layers2","locationLayers","paddingBox","scale","getFocusBounds","getStyle","_l$layout","layout","visibility","featuresAtPixel","combined","lngLat","renderedFeaturesInViewport","featuresTotal","Set","intersectingFeatures","feature","lines","line","codeB","lastCode","codeA","part","lineclip","poly","TurfBboxClip","TurfPolygon","TurfMultiPolygon","intersectFeatures","polygonFeatures","group","parts","turfArea","largest","featuresInViewport","sort","pow","featureType","hasPixelLayers","some","items","isFeaturesInMap","isPixelFeaturesAtPixel","isPixelFeaturesInMap","toggleSelectedFeature","_step","_iterator","_n","F","_createForOfIteratorHelper","setLayoutProperty","setFilter","err","text","_map$getStyle2","_features$0$propertie","_features$","getLabel","getLabels","pixels","xS","yS","locationMarkerHTML","el","document","createElement","className","innerHTML","SYMBOL_PLACEMENT","TEXT_FIELD","amendLineSymbolLayers","addHighlightedLabelLayer","addSource","addLayer","source","paint","addShortcutMarkers","shortcutMarkers","Marker","modules","m","remove","key","offset","element","setLngLat","addTo","highlightLabel","_feature$layer$layout","moveLayer","getSource","setData","textScale","textField","sections","setPaintProperty","_map$getSource","addSelectedLayers","isDarkBasemap","_loop","getLayer","removeLayer","loadSymbols","_this$symbols","symbols","all","fetch","responses","texts","loadImage","getName","path","split","parsed","parseSVG","container","getCanvasContainer","insertAdjacentHTML","lastChild","computedStyleToInlineStyle","recursive","base64","btoa","outerHTML","img","reject","onload","hasImage","addImage","onerror","src","_asyncToGenerator","getResolution","cos","getAttributions","currentZoom","activeAttributions","minZoom","undefined","minzoom","maxZoom","maxzoom","sources","attribution","add","handleLoad","_handleLoad","resolution","attributions","isLoaded","dispatchEvent","CustomEvent","detail","framework","handleStyleLoad","_handleStyleLoad","_callee2","_context2","baseLayers","handleIdle","_handleIdle","_callee3","_detail$features","offsetTop","offsetLeft","offsetWidth","offsetHeight","_paddingBox$parentNod","parentOffsetTop","parentOffsetLeft","_context3","parentNode","handleMoveStart","_handleMoveStart","_callee4","_context4","hideLabel","isUserInitiated","handleMove","handleStyleData","_this","target","handleError","_defineProperties","_wrapNativeSuper","Map","Function","indexOf","_isNativeFunction","has","get","set","Wrapper","_isNativeReflectConstruct","Reflect","construct","_setPrototypeOf","_construct","_getPrototypeOf","Boolean","valueOf","Provider","_EventTarget","_ref","transformRequest","_classCallCheck","ReferenceError","_assertThisInitialized","_possibleConstructorReturn","_callSuper","srid","capabilities","default","hasDraw","hasSize","globalThis","selectedCoordinate","_inherits","options","_this2","isLatest","module","addMap","promises","ResizeObserver","install","_this$map","_this3","maxBounds","size","callBack","_module$default","MaplibreMap","getScale","url","storeDefaults","MAX_BOUNDS_4326","fadeDuration","attributionControl","dragRotate","setPadding","getFocusPadding","fitBounds","animate","flyTo","touchZoomRotate","disableRotation","setPixelRatio","devicePixelRatio","canvas","removeAttribute","display","targetMarker","locationMarker","debounceHandleIdle","panBy","zoomIn","zoomOut","_this$draw","_this$draw$setStyle","setStyle","diff","draw","isAnimate","easeTo","_this$map2","_this4","resize","linear","_zoom","_this5","Draw","hasData","isVisible","getElement","classList","toggle","_queryFeature","_queryPoint","_x2","success","error","navigator","geolocation","getCurrentPosition","_ref2","position","longitude","latitude","_x3","enableHighAccuracy","addClassName","direction","_labels$index","_labels$index2","labels","_this$map$getCenter","index","spatialNavigate","EventTarget","earthRadius","factors","centimeters","centimetres","degrees","feet","inches","kilometers","kilometres","meters","metres","miles","millimeters","millimetres","nauticalmiles","radians","yards","feat","isNumber","lineString","multiLineString","multiPolygon","radiansToLength","factor","lengthToRadians","radiansToDegrees","degreesToRadians","num","exports","children","getComputedStyle","getPropertyValue","DOMParser","icon","fill","isSelected","dom","parseFromString","svg","querySelector","viewBox","getAttribute","parseInt","setAttribute","olFill","querySelectorAll","olStroke","bgFill","bgStroke","fgFill","fgStroke","body","to","coordinates1","coordinates2","dLat","dLon","lat1","lat2","atan2","getUnits","RATIO","getOffsetBoundingClientRect","closest","getBoundingClientRect","parseDimensions","dimensions","areaDisplay","SQ_KM","km2","Number","toLocaleString","minimumFractionDigits","maximumFractionDigits","ceil","squareMetresToKm","lengthDisplay","MILE","YARD","pluralize","singular","plural","floor","remainder","metresToImperial","detectCoordinateType","_coords","_slicedToArray","getDistance","coord1","coord2","box","boxX","boxY","parentX","parentY","every","getMapPixel","getDescription","place","focusPlace","focusArea","ew","ns","getArea","findPlace","getStatus","action","isBoundsChange","state","status","findIndex","oCentre","originalZoom","isSameCentre","JSON","stringify","isSameZoom","change","ns1","ns2","ew1","ew2","nsd","ewd","bearing","getBearing","ewc","join","nsc","getDirection","getBoundsChange","description","getPlace","oPlace","newPlace","parseCentre","_coords2","mb","parseZoom","getShortcutKey","featuresViewport","number","getFeatureShape","_feature$geometry","_geometry$coordinates","_coordinates$","x1","y1","_coordinates$2","minDist","maxDist","minEdge","maxEdge","_coordinates$i","xA","yA","_coordinates","xB","yB","dist","hypot","edgeDist","tolerance","isCirclePolygon","toLowerCase","_feature$geometry2","flatCoords","start","quadrant","offsetX","offsetY","distances","small","medium","large","getPoint","_el$getBoundingClient","_e$nativeEvent","nativeEvent","clientX","clientY","validStyles","STYLES","localStorage","getItem"],"sourceRoot":""}