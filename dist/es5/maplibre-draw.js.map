{"version":3,"file":"maplibre-draw.js","mappings":"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","sources":["webpack://@defra/flood-map/./node_modules/fast-deep-equal/index.js","webpack://@defra/flood-map/./node_modules/@mapbox/mapbox-gl-draw/src/lib/mode_handler.js","webpack://@defra/flood-map/./node_modules/@mapbox/mapbox-gl-draw/src/constants.js","webpack://@defra/flood-map/./node_modules/@mapbox/mapbox-gl-draw/src/lib/sort_features.js","webpack://@defra/flood-map/./node_modules/@mapbox/mapbox-gl-draw/src/lib/map_event_to_bounding_box.js","webpack://@defra/flood-map/./node_modules/@mapbox/mapbox-gl-draw/src/lib/string_set.js","webpack://@defra/flood-map/./node_modules/@mapbox/mapbox-gl-draw/src/lib/features_at.js","webpack://@defra/flood-map/./node_modules/@mapbox/mapbox-gl-draw/src/lib/get_features_and_set_cursor.js","webpack://@defra/flood-map/./node_modules/@mapbox/mapbox-gl-draw/src/lib/euclidean_distance.js","webpack://@defra/flood-map/./node_modules/@mapbox/mapbox-gl-draw/src/lib/is_click.js","webpack://@defra/flood-map/./node_modules/@mapbox/mapbox-gl-draw/src/lib/is_tap.js","webpack://@defra/flood-map/./node_modules/@mapbox/mapbox-gl-draw/src/lib/id.js","webpack://@defra/flood-map/./node_modules/nanoid/non-secure/index.js","webpack://@defra/flood-map/./node_modules/@mapbox/mapbox-gl-draw/src/feature_types/feature.js","webpack://@defra/flood-map/./node_modules/@mapbox/mapbox-gl-draw/src/feature_types/point.js","webpack://@defra/flood-map/./node_modules/@mapbox/mapbox-gl-draw/src/feature_types/line_string.js","webpack://@defra/flood-map/./node_modules/@mapbox/mapbox-gl-draw/src/feature_types/polygon.js","webpack://@defra/flood-map/./node_modules/@mapbox/mapbox-gl-draw/src/feature_types/multi_feature.js","webpack://@defra/flood-map/./node_modules/@mapbox/mapbox-gl-draw/src/modes/mode_interface_accessors.js","webpack://@defra/flood-map/./node_modules/@mapbox/mapbox-gl-draw/src/modes/mode_interface.js","webpack://@defra/flood-map/./node_modules/@mapbox/mapbox-gl-draw/src/modes/object_to_mode.js","webpack://@defra/flood-map/./node_modules/@mapbox/mapbox-gl-draw/src/lib/to_dense_array.js","webpack://@defra/flood-map/./node_modules/@mapbox/mapbox-gl-draw/src/render.js","webpack://@defra/flood-map/./node_modules/@mapbox/mapbox-gl-draw/src/store.js","webpack://@defra/flood-map/./node_modules/@mapbox/mapbox-gl-draw/src/ui.js","webpack://@defra/flood-map/./node_modules/@mapbox/mapbox-gl-draw/src/setup.js","webpack://@defra/flood-map/./node_modules/@mapbox/mapbox-gl-draw/src/events.js","webpack://@defra/flood-map/./node_modules/@mapbox/mapbox-gl-draw/src/lib/theme.js","webpack://@defra/flood-map/./node_modules/@mapbox/mapbox-gl-draw/src/lib/common_selectors.js","webpack://@defra/flood-map/./node_modules/@mapbox/point-geometry/index.js","webpack://@defra/flood-map/./node_modules/@mapbox/mapbox-gl-draw/src/lib/mouse_event_point.js","webpack://@defra/flood-map/./node_modules/@mapbox/mapbox-gl-draw/src/lib/create_vertex.js","webpack://@defra/flood-map/./node_modules/@mapbox/mapbox-gl-draw/src/lib/create_midpoint.js","webpack://@defra/flood-map/./node_modules/@mapbox/mapbox-gl-draw/src/lib/create_supplementary_points.js","webpack://@defra/flood-map/./node_modules/@mapbox/mapbox-gl-draw/src/lib/double_click_zoom.js","webpack://@defra/flood-map/./node_modules/@mapbox/mapbox-gl-draw/src/lib/constrain_feature_movement.js","webpack://@defra/flood-map/./node_modules/@mapbox/mapbox-gl-draw/src/lib/move_features.js","webpack://@defra/flood-map/./node_modules/@mapbox/mapbox-gl-draw/src/modes/simple_select.js","webpack://@defra/flood-map/./node_modules/@mapbox/mapbox-gl-draw/src/modes/direct_select.js","webpack://@defra/flood-map/./node_modules/@mapbox/mapbox-gl-draw/src/modes/draw_point.js","webpack://@defra/flood-map/./node_modules/@mapbox/mapbox-gl-draw/src/lib/is_event_at_coordinates.js","webpack://@defra/flood-map/./node_modules/@mapbox/mapbox-gl-draw/src/modes/draw_polygon.js","webpack://@defra/flood-map/./node_modules/@mapbox/mapbox-gl-draw/src/modes/draw_line_string.js","webpack://@defra/flood-map/./node_modules/@mapbox/mapbox-gl-draw/src/modes/index.js","webpack://@defra/flood-map/./node_modules/@mapbox/mapbox-gl-draw/src/options.js","webpack://@defra/flood-map/./node_modules/@mapbox/mapbox-gl-draw/src/lib/string_sets_are_equal.js","webpack://@defra/flood-map/./node_modules/@mapbox/mapbox-gl-draw/src/api.js","webpack://@defra/flood-map/./node_modules/@mapbox/mapbox-gl-draw/index.js","webpack://@defra/flood-map/./src/js/provider/os-maplibre/modes.js","webpack://@defra/flood-map/./src/js/provider/os-maplibre/styles.js","webpack://@defra/flood-map/./node_modules/@turf/destination/dist/esm/index.js","webpack://@defra/flood-map/./node_modules/@turf/circle/dist/esm/index.js","webpack://@defra/flood-map/./src/js/provider/os-maplibre/draw.js","webpack://@defra/flood-map/./node_modules/@mapbox/geojson-normalize/index.js","webpack://@defra/flood-map/./node_modules/wgs84/index.js","webpack://@defra/flood-map/./node_modules/@mapbox/geojson-area/index.js"],"sourcesContent":["'use strict';\n\n// do not edit .js files directly - edit src/index.jst\n\n\n\nmodule.exports = function equal(a, b) {\n  if (a === b) return true;\n\n  if (a && b && typeof a == 'object' && typeof b == 'object') {\n    if (a.constructor !== b.constructor) return false;\n\n    var length, i, keys;\n    if (Array.isArray(a)) {\n      length = a.length;\n      if (length != b.length) return false;\n      for (i = length; i-- !== 0;)\n        if (!equal(a[i], b[i])) return false;\n      return true;\n    }\n\n\n\n    if (a.constructor === RegExp) return a.source === b.source && a.flags === b.flags;\n    if (a.valueOf !== Object.prototype.valueOf) return a.valueOf() === b.valueOf();\n    if (a.toString !== Object.prototype.toString) return a.toString() === b.toString();\n\n    keys = Object.keys(a);\n    length = keys.length;\n    if (length !== Object.keys(b).length) return false;\n\n    for (i = length; i-- !== 0;)\n      if (!Object.prototype.hasOwnProperty.call(b, keys[i])) return false;\n\n    for (i = length; i-- !== 0;) {\n      var key = keys[i];\n\n      if (!equal(a[key], b[key])) return false;\n    }\n\n    return true;\n  }\n\n  // true if both NaN, false otherwise\n  return a!==a && b!==b;\n};\n","\nconst ModeHandler = function(mode, DrawContext) {\n\n  const handlers = {\n    drag: [],\n    click: [],\n    mousemove: [],\n    mousedown: [],\n    mouseup: [],\n    mouseout: [],\n    keydown: [],\n    keyup: [],\n    touchstart: [],\n    touchmove: [],\n    touchend: [],\n    tap: []\n  };\n\n  const ctx = {\n    on(event, selector, fn) {\n      if (handlers[event] === undefined) {\n        throw new Error(`Invalid event type: ${event}`);\n      }\n      handlers[event].push({\n        selector,\n        fn\n      });\n    },\n    render(id) {\n      DrawContext.store.featureChanged(id);\n    }\n  };\n\n  const delegate = function (eventName, event) {\n    const handles = handlers[eventName];\n    let iHandle = handles.length;\n    while (iHandle--) {\n      const handle = handles[iHandle];\n      if (handle.selector(event)) {\n        const skipRender = handle.fn.call(ctx, event);\n        if (!skipRender) {\n          DrawContext.store.render();\n        }\n        DrawContext.ui.updateMapClasses();\n\n        // ensure an event is only handled once\n        // we do this to let modes have multiple overlapping selectors\n        // and relay on order of oppertations to filter\n        break;\n      }\n    }\n  };\n\n  mode.start.call(ctx);\n\n  return {\n    render: mode.render,\n    stop() {\n      if (mode.stop) mode.stop();\n    },\n    trash() {\n      if (mode.trash) {\n        mode.trash();\n        DrawContext.store.render();\n      }\n    },\n    combineFeatures() {\n      if (mode.combineFeatures) {\n        mode.combineFeatures();\n      }\n    },\n    uncombineFeatures() {\n      if (mode.uncombineFeatures) {\n        mode.uncombineFeatures();\n      }\n    },\n    drag(event) {\n      delegate('drag', event);\n    },\n    click(event) {\n      delegate('click', event);\n    },\n    mousemove(event) {\n      delegate('mousemove', event);\n    },\n    mousedown(event) {\n      delegate('mousedown', event);\n    },\n    mouseup(event) {\n      delegate('mouseup', event);\n    },\n    mouseout(event) {\n      delegate('mouseout', event);\n    },\n    keydown(event) {\n      delegate('keydown', event);\n    },\n    keyup(event) {\n      delegate('keyup', event);\n    },\n    touchstart(event) {\n      delegate('touchstart', event);\n    },\n    touchmove(event) {\n      delegate('touchmove', event);\n    },\n    touchend(event) {\n      delegate('touchend', event);\n    },\n    tap(event) {\n      delegate('tap', event);\n    }\n  };\n};\n\nexport default ModeHandler;\n","export const classes = {\n  CANVAS: 'mapboxgl-canvas',\n  CONTROL_BASE: 'mapboxgl-ctrl',\n  CONTROL_PREFIX: 'mapboxgl-ctrl-',\n  CONTROL_BUTTON: 'mapbox-gl-draw_ctrl-draw-btn',\n  CONTROL_BUTTON_LINE: 'mapbox-gl-draw_line',\n  CONTROL_BUTTON_POLYGON: 'mapbox-gl-draw_polygon',\n  CONTROL_BUTTON_POINT: 'mapbox-gl-draw_point',\n  CONTROL_BUTTON_TRASH: 'mapbox-gl-draw_trash',\n  CONTROL_BUTTON_COMBINE_FEATURES: 'mapbox-gl-draw_combine',\n  CONTROL_BUTTON_UNCOMBINE_FEATURES: 'mapbox-gl-draw_uncombine',\n  CONTROL_GROUP: 'mapboxgl-ctrl-group',\n  ATTRIBUTION: 'mapboxgl-ctrl-attrib',\n  ACTIVE_BUTTON: 'active',\n  BOX_SELECT: 'mapbox-gl-draw_boxselect'\n};\n\nexport const sources = {\n  HOT: 'mapbox-gl-draw-hot',\n  COLD: 'mapbox-gl-draw-cold'\n};\n\nexport const cursors = {\n  ADD: 'add',\n  MOVE: 'move',\n  DRAG: 'drag',\n  POINTER: 'pointer',\n  NONE: 'none'\n};\n\nexport const types = {\n  POLYGON: 'polygon',\n  LINE: 'line_string',\n  POINT: 'point'\n};\n\nexport const geojsonTypes = {\n  FEATURE: 'Feature',\n  POLYGON: 'Polygon',\n  LINE_STRING: 'LineString',\n  POINT: 'Point',\n  FEATURE_COLLECTION: 'FeatureCollection',\n  MULTI_PREFIX: 'Multi',\n  MULTI_POINT: 'MultiPoint',\n  MULTI_LINE_STRING: 'MultiLineString',\n  MULTI_POLYGON: 'MultiPolygon'\n};\n\nexport const modes = {\n  DRAW_LINE_STRING: 'draw_line_string',\n  DRAW_POLYGON: 'draw_polygon',\n  DRAW_POINT: 'draw_point',\n  SIMPLE_SELECT: 'simple_select',\n  DIRECT_SELECT: 'direct_select'\n};\n\nexport const events = {\n  CREATE: 'draw.create',\n  DELETE: 'draw.delete',\n  UPDATE: 'draw.update',\n  SELECTION_CHANGE: 'draw.selectionchange',\n  MODE_CHANGE: 'draw.modechange',\n  ACTIONABLE: 'draw.actionable',\n  RENDER: 'draw.render',\n  COMBINE_FEATURES: 'draw.combine',\n  UNCOMBINE_FEATURES: 'draw.uncombine'\n};\n\nexport const updateActions = {\n  MOVE: 'move',\n  CHANGE_PROPERTIES: 'change_properties',\n  CHANGE_COORDINATES: 'change_coordinates'\n};\n\nexport const meta = {\n  FEATURE: 'feature',\n  MIDPOINT: 'midpoint',\n  VERTEX: 'vertex'\n};\n\nexport const activeStates = {\n  ACTIVE: 'true',\n  INACTIVE: 'false'\n};\n\nexport const interactions = [\n  'scrollZoom',\n  'boxZoom',\n  'dragRotate',\n  'dragPan',\n  'keyboard',\n  'doubleClickZoom',\n  'touchZoomRotate'\n];\n\nexport const LAT_MIN = -90;\nexport const LAT_RENDERED_MIN = -85;\nexport const LAT_MAX = 90;\nexport const LAT_RENDERED_MAX = 85;\nexport const LNG_MIN = -270;\nexport const LNG_MAX = 270;\n","import area from '@mapbox/geojson-area';\nimport * as Constants from '../constants.js';\n\nconst FEATURE_SORT_RANKS = {\n  Point: 0,\n  LineString: 1,\n  MultiLineString: 1,\n  Polygon: 2\n};\n\nfunction comparator(a, b) {\n  const score = FEATURE_SORT_RANKS[a.geometry.type] - FEATURE_SORT_RANKS[b.geometry.type];\n\n  if (score === 0 && a.geometry.type === Constants.geojsonTypes.POLYGON) {\n    return a.area - b.area;\n  }\n\n  return score;\n}\n\n// Sort in the order above, then sort polygons by area ascending.\nfunction sortFeatures(features) {\n  return features.map((feature) => {\n    if (feature.geometry.type === Constants.geojsonTypes.POLYGON) {\n      feature.area = area.geometry({\n        type: Constants.geojsonTypes.FEATURE,\n        property: {},\n        geometry: feature.geometry\n      });\n    }\n    return feature;\n  }).sort(comparator).map((feature) => {\n    delete feature.area;\n    return feature;\n  });\n}\n\nexport default sortFeatures;\n","/**\n * Returns a bounding box representing the event's location.\n *\n * @param {Event} mapEvent - Mapbox GL JS map event, with a point properties.\n * @return {Array<Array<number>>} Bounding box.\n */\nfunction mapEventToBoundingBox(mapEvent, buffer = 0) {\n  return [\n    [mapEvent.point.x - buffer, mapEvent.point.y - buffer],\n    [mapEvent.point.x + buffer, mapEvent.point.y + buffer]\n  ];\n}\n\nexport default mapEventToBoundingBox;\n","function StringSet(items) {\n  this._items = {};\n  this._nums = {};\n  this._length = items ? items.length : 0;\n  if (!items) return;\n  for (let i = 0, l = items.length; i < l; i++) {\n    this.add(items[i]);\n    if (items[i] === undefined) continue;\n    if (typeof items[i] === 'string') this._items[items[i]] = i;\n    else this._nums[items[i]] = i;\n\n  }\n}\n\nStringSet.prototype.add = function(x) {\n  if (this.has(x)) return this;\n  this._length++;\n  if (typeof x === 'string') this._items[x] = this._length;\n  else this._nums[x] = this._length;\n  return this;\n};\n\nStringSet.prototype.delete = function(x) {\n  if (this.has(x) === false) return this;\n  this._length--;\n  delete this._items[x];\n  delete this._nums[x];\n  return this;\n};\n\nStringSet.prototype.has = function(x) {\n  if (typeof x !== 'string' && typeof x !== 'number') return false;\n  return this._items[x] !== undefined || this._nums[x] !== undefined;\n};\n\nStringSet.prototype.values = function() {\n  const values = [];\n  Object.keys(this._items).forEach((k) => {\n    values.push({ k, v: this._items[k] });\n  });\n  Object.keys(this._nums).forEach((k) => {\n    values.push({ k: JSON.parse(k), v: this._nums[k] });\n  });\n\n  return values.sort((a, b) => a.v - b.v).map(a => a.k);\n};\n\nStringSet.prototype.clear = function() {\n  this._length = 0;\n  this._items = {};\n  this._nums = {};\n  return this;\n};\n\nexport default StringSet;\n","import sortFeatures from './sort_features.js';\nimport mapEventToBoundingBox from './map_event_to_bounding_box.js';\nimport * as Constants from '../constants.js';\nimport StringSet from './string_set.js';\n\nconst META_TYPES = [\n  Constants.meta.FEATURE,\n  Constants.meta.MIDPOINT,\n  Constants.meta.VERTEX\n];\n\n// Requires either event or bbox\nexport default {\n  click: featuresAtClick,\n  touch: featuresAtTouch\n};\n\nfunction featuresAtClick(event, bbox, ctx) {\n  return featuresAt(event, bbox, ctx, ctx.options.clickBuffer);\n}\n\nfunction featuresAtTouch(event, bbox, ctx) {\n  return featuresAt(event, bbox, ctx, ctx.options.touchBuffer);\n}\n\nfunction featuresAt(event, bbox, ctx, buffer) {\n  if (ctx.map === null) return [];\n\n  const box = (event) ? mapEventToBoundingBox(event, buffer) : bbox;\n\n  const queryParams = {};\n\n  if (ctx.options.styles) queryParams.layers = ctx.options.styles.map(s => s.id).filter(id => ctx.map.getLayer(id) != null);\n\n  const features = ctx.map.queryRenderedFeatures(box, queryParams)\n    .filter(feature => META_TYPES.indexOf(feature.properties.meta) !== -1);\n\n  const featureIds = new StringSet();\n  const uniqueFeatures = [];\n  features.forEach((feature) => {\n    const featureId = feature.properties.id;\n    if (featureIds.has(featureId)) return;\n    featureIds.add(featureId);\n    uniqueFeatures.push(feature);\n  });\n\n  return sortFeatures(uniqueFeatures);\n}\n","import featuresAt from './features_at.js';\nimport * as Constants from '../constants.js';\n\nexport default function getFeatureAtAndSetCursors(event, ctx) {\n  const features = featuresAt.click(event, null, ctx);\n  const classes = { mouse: Constants.cursors.NONE };\n\n  if (features[0]) {\n    classes.mouse = (features[0].properties.active === Constants.activeStates.ACTIVE) ?\n      Constants.cursors.MOVE : Constants.cursors.POINTER;\n    classes.feature = features[0].properties.meta;\n  }\n\n  if (ctx.events.currentModeName().indexOf('draw') !== -1) {\n    classes.mouse = Constants.cursors.ADD;\n  }\n\n  ctx.ui.queueMapClasses(classes);\n  ctx.ui.updateMapClasses();\n\n  return features[0];\n}\n","export default function(a, b) {\n  const x = a.x - b.x;\n  const y = a.y - b.y;\n  return Math.sqrt((x * x) + (y * y));\n}\n","import euclideanDistance from './euclidean_distance.js';\n\nconst FINE_TOLERANCE = 4;\nconst GROSS_TOLERANCE = 12;\nconst INTERVAL = 500;\n\nexport default function isClick(start, end, options = {}) {\n  const fineTolerance = (options.fineTolerance != null) ? options.fineTolerance : FINE_TOLERANCE;\n  const grossTolerance = (options.grossTolerance != null) ? options.grossTolerance : GROSS_TOLERANCE;\n  const interval = (options.interval != null) ? options.interval : INTERVAL;\n\n  start.point = start.point || end.point;\n  start.time = start.time || end.time;\n  const moveDistance = euclideanDistance(start.point, end.point);\n\n  return moveDistance < fineTolerance ||\n    (moveDistance < grossTolerance && (end.time - start.time) < interval);\n}\n","import euclideanDistance from './euclidean_distance.js';\n\nexport const TAP_TOLERANCE = 25;\nexport const TAP_INTERVAL = 250;\n\nexport default function isTap(start, end, options = {}) {\n  const tolerance = (options.tolerance != null) ? options.tolerance : TAP_TOLERANCE;\n  const interval = (options.interval != null) ? options.interval : TAP_INTERVAL;\n\n  start.point = start.point || end.point;\n  start.time = start.time || end.time;\n  const moveDistance = euclideanDistance(start.point, end.point);\n\n  return moveDistance < tolerance && (end.time - start.time) < interval;\n}\n","import {customAlphabet} from 'nanoid/non-secure';\n\nconst nanoid = customAlphabet('0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz', 32);\n\nexport function generateID() {\n  return nanoid();\n}\n","/* @ts-self-types=\"./index.d.ts\" */\nlet urlAlphabet =\n  'useandom-26T198340PX75pxJACKVERYMINDBUSHWOLF_GQZbfghjklqvwyzrict'\nexport let customAlphabet = (alphabet, defaultSize = 21) => {\n  return (size = defaultSize) => {\n    let id = ''\n    let i = size | 0\n    while (i--) {\n      id += alphabet[(Math.random() * alphabet.length) | 0]\n    }\n    return id\n  }\n}\nexport let nanoid = (size = 21) => {\n  let id = ''\n  let i = size | 0\n  while (i--) {\n    id += urlAlphabet[(Math.random() * 64) | 0]\n  }\n  return id\n}\n","import {generateID} from '../lib/id.js';\nimport * as Constants from '../constants.js';\n\nconst Feature = function(ctx, geojson) {\n  this.ctx = ctx;\n  this.properties = geojson.properties || {};\n  this.coordinates = geojson.geometry.coordinates;\n  this.id = geojson.id || generateID();\n  this.type = geojson.geometry.type;\n};\n\nFeature.prototype.changed = function() {\n  this.ctx.store.featureChanged(this.id);\n};\n\nFeature.prototype.incomingCoords = function(coords) {\n  this.setCoordinates(coords);\n};\n\nFeature.prototype.setCoordinates = function(coords) {\n  this.coordinates = coords;\n  this.changed();\n};\n\nFeature.prototype.getCoordinates = function() {\n  return JSON.parse(JSON.stringify(this.coordinates));\n};\n\nFeature.prototype.setProperty = function(property, value) {\n  this.properties[property] = value;\n};\n\nFeature.prototype.toGeoJSON = function() {\n  return JSON.parse(JSON.stringify({\n    id: this.id,\n    type: Constants.geojsonTypes.FEATURE,\n    properties: this.properties,\n    geometry: {\n      coordinates: this.getCoordinates(),\n      type: this.type\n    }\n  }));\n};\n\nFeature.prototype.internal = function(mode) {\n  const properties = {\n    id: this.id,\n    meta: Constants.meta.FEATURE,\n    'meta:type': this.type,\n    active: Constants.activeStates.INACTIVE,\n    mode\n  };\n\n  if (this.ctx.options.userProperties) {\n    for (const name in this.properties) {\n      properties[`user_${name}`] = this.properties[name];\n    }\n  }\n\n  return {\n    type: Constants.geojsonTypes.FEATURE,\n    properties,\n    geometry: {\n      coordinates: this.getCoordinates(),\n      type: this.type\n    }\n  };\n};\n\nexport default Feature;\n","import Feature from './feature.js';\n\nconst Point = function(ctx, geojson) {\n  Feature.call(this, ctx, geojson);\n};\n\nPoint.prototype = Object.create(Feature.prototype);\n\nPoint.prototype.isValid = function() {\n  return typeof this.coordinates[0] === 'number' &&\n    typeof this.coordinates[1] === 'number';\n};\n\nPoint.prototype.updateCoordinate = function(pathOrLng, lngOrLat, lat) {\n  if (arguments.length === 3) {\n    this.coordinates = [lngOrLat, lat];\n  } else {\n    this.coordinates = [pathOrLng, lngOrLat];\n  }\n  this.changed();\n};\n\nPoint.prototype.getCoordinate = function() {\n  return this.getCoordinates();\n};\n\nexport default Point;\n","import Feature from './feature.js';\n\nconst LineString = function(ctx, geojson) {\n  Feature.call(this, ctx, geojson);\n};\n\nLineString.prototype = Object.create(Feature.prototype);\n\nLineString.prototype.isValid = function() {\n  return this.coordinates.length > 1;\n};\n\nLineString.prototype.addCoordinate = function(path, lng, lat) {\n  this.changed();\n  const id = parseInt(path, 10);\n  this.coordinates.splice(id, 0, [lng, lat]);\n};\n\nLineString.prototype.getCoordinate = function(path) {\n  const id = parseInt(path, 10);\n  return JSON.parse(JSON.stringify(this.coordinates[id]));\n};\n\nLineString.prototype.removeCoordinate = function(path) {\n  this.changed();\n  this.coordinates.splice(parseInt(path, 10), 1);\n};\n\nLineString.prototype.updateCoordinate = function(path, lng, lat) {\n  const id = parseInt(path, 10);\n  this.coordinates[id] = [lng, lat];\n  this.changed();\n};\n\nexport default LineString;\n","import Feature from './feature.js';\n\nconst Polygon = function(ctx, geojson) {\n  Feature.call(this, ctx, geojson);\n  this.coordinates = this.coordinates.map(ring => ring.slice(0, -1));\n};\n\nPolygon.prototype = Object.create(Feature.prototype);\n\nPolygon.prototype.isValid = function() {\n  if (this.coordinates.length === 0) return false;\n  return this.coordinates.every(ring => ring.length > 2);\n};\n\n// Expects valid geoJSON polygon geometry: first and last positions must be equivalent.\nPolygon.prototype.incomingCoords = function(coords) {\n  this.coordinates = coords.map(ring => ring.slice(0, -1));\n  this.changed();\n};\n\n// Does NOT expect valid geoJSON polygon geometry: first and last positions should not be equivalent.\nPolygon.prototype.setCoordinates = function(coords) {\n  this.coordinates = coords;\n  this.changed();\n};\n\nPolygon.prototype.addCoordinate = function(path, lng, lat) {\n  this.changed();\n  const ids = path.split('.').map(x => parseInt(x, 10));\n\n  const ring = this.coordinates[ids[0]];\n\n  ring.splice(ids[1], 0, [lng, lat]);\n};\n\nPolygon.prototype.removeCoordinate = function(path) {\n  this.changed();\n  const ids = path.split('.').map(x => parseInt(x, 10));\n  const ring = this.coordinates[ids[0]];\n  if (ring) {\n    ring.splice(ids[1], 1);\n    if (ring.length < 3) {\n      this.coordinates.splice(ids[0], 1);\n    }\n  }\n};\n\nPolygon.prototype.getCoordinate = function(path) {\n  const ids = path.split('.').map(x => parseInt(x, 10));\n  const ring = this.coordinates[ids[0]];\n  return JSON.parse(JSON.stringify(ring[ids[1]]));\n};\n\nPolygon.prototype.getCoordinates = function() {\n  return this.coordinates.map(coords => coords.concat([coords[0]]));\n};\n\nPolygon.prototype.updateCoordinate = function(path, lng, lat) {\n  this.changed();\n  const parts = path.split('.');\n  const ringId = parseInt(parts[0], 10);\n  const coordId = parseInt(parts[1], 10);\n\n  if (this.coordinates[ringId] === undefined) {\n    this.coordinates[ringId] = [];\n  }\n\n  this.coordinates[ringId][coordId] = [lng, lat];\n};\n\nexport default Polygon;\n","import {generateID} from '../lib/id.js';\nimport Feature from './feature.js';\nimport * as Constants from '../constants.js';\n\nimport MultiPoint from './point.js';\nimport MultiLineString from './line_string.js';\nimport MultiPolygon from './polygon.js';\n\nconst models = {\n  MultiPoint,\n  MultiLineString,\n  MultiPolygon\n};\n\nconst takeAction = (features, action, path, lng, lat) => {\n  const parts = path.split('.');\n  const idx = parseInt(parts[0], 10);\n  const tail = (!parts[1]) ? null : parts.slice(1).join('.');\n  return features[idx][action](tail, lng, lat);\n};\n\nconst MultiFeature = function(ctx, geojson) {\n  Feature.call(this, ctx, geojson);\n\n  delete this.coordinates;\n  this.model = models[geojson.geometry.type];\n  if (this.model === undefined) throw new TypeError(`${geojson.geometry.type} is not a valid type`);\n  this.features = this._coordinatesToFeatures(geojson.geometry.coordinates);\n};\n\nMultiFeature.prototype = Object.create(Feature.prototype);\n\nMultiFeature.prototype._coordinatesToFeatures = function(coordinates) {\n  const Model = this.model.bind(this);\n  return coordinates.map(coords => new Model(this.ctx, {\n    id: generateID(),\n    type: Constants.geojsonTypes.FEATURE,\n    properties: {},\n    geometry: {\n      coordinates: coords,\n      type: this.type.replace('Multi', '')\n    }\n  }));\n};\n\nMultiFeature.prototype.isValid = function() {\n  return this.features.every(f => f.isValid());\n};\n\nMultiFeature.prototype.setCoordinates = function(coords) {\n  this.features = this._coordinatesToFeatures(coords);\n  this.changed();\n};\n\nMultiFeature.prototype.getCoordinate = function(path) {\n  return takeAction(this.features, 'getCoordinate', path);\n};\n\nMultiFeature.prototype.getCoordinates = function() {\n  return JSON.parse(JSON.stringify(this.features.map((f) => {\n    if (f.type === Constants.geojsonTypes.POLYGON) return f.getCoordinates();\n    return f.coordinates;\n  })));\n};\n\nMultiFeature.prototype.updateCoordinate = function(path, lng, lat) {\n  takeAction(this.features, 'updateCoordinate', path, lng, lat);\n  this.changed();\n};\n\nMultiFeature.prototype.addCoordinate = function(path, lng, lat) {\n  takeAction(this.features, 'addCoordinate', path, lng, lat);\n  this.changed();\n};\n\nMultiFeature.prototype.removeCoordinate = function(path) {\n  takeAction(this.features, 'removeCoordinate', path);\n  this.changed();\n};\n\nMultiFeature.prototype.getFeatures = function() {\n  return this.features;\n};\n\nexport default MultiFeature;\n","import * as Constants from '../constants.js';\nimport featuresAt from '../lib/features_at.js';\nimport Point from '../feature_types/point.js';\nimport LineString from '../feature_types/line_string.js';\nimport Polygon from '../feature_types/polygon.js';\nimport MultiFeature from '../feature_types/multi_feature.js';\n\nexport default function ModeInterface(ctx) {\n  this.map = ctx.map;\n  this.drawConfig = JSON.parse(JSON.stringify(ctx.options || {}));\n  this._ctx = ctx;\n}\n\n/**\n * Sets Draw's interal selected state\n * @name this.setSelected\n * @param {DrawFeature[]} - whats selected as a [DrawFeature](https://github.com/mapbox/mapbox-gl-draw/blob/main/src/feature_types/feature.js)\n */\nModeInterface.prototype.setSelected = function(features) {\n  return this._ctx.store.setSelected(features);\n};\n\n/**\n * Sets Draw's internal selected coordinate state\n * @name this.setSelectedCoordinates\n * @param {Object[]} coords - a array of {coord_path: 'string', feature_id: 'string'}\n */\nModeInterface.prototype.setSelectedCoordinates = function(coords) {\n  this._ctx.store.setSelectedCoordinates(coords);\n  coords.reduce((m, c) => {\n    if (m[c.feature_id] === undefined) {\n      m[c.feature_id] = true;\n      this._ctx.store.get(c.feature_id).changed();\n    }\n    return m;\n  }, {});\n};\n\n/**\n * Get all selected features as a [DrawFeature](https://github.com/mapbox/mapbox-gl-draw/blob/main/src/feature_types/feature.js)\n * @name this.getSelected\n * @returns {DrawFeature[]}\n */\nModeInterface.prototype.getSelected = function() {\n  return this._ctx.store.getSelected();\n};\n\n/**\n * Get the ids of all currently selected features\n * @name this.getSelectedIds\n * @returns {String[]}\n */\nModeInterface.prototype.getSelectedIds = function() {\n  return this._ctx.store.getSelectedIds();\n};\n\n/**\n * Check if a feature is selected\n * @name this.isSelected\n * @param {String} id - a feature id\n * @returns {Boolean}\n */\nModeInterface.prototype.isSelected = function(id) {\n  return this._ctx.store.isSelected(id);\n};\n\n/**\n * Get a [DrawFeature](https://github.com/mapbox/mapbox-gl-draw/blob/main/src/feature_types/feature.js) by its id\n * @name this.getFeature\n * @param {String} id - a feature id\n * @returns {DrawFeature}\n */\nModeInterface.prototype.getFeature = function(id) {\n  return this._ctx.store.get(id);\n};\n\n/**\n * Add a feature to draw's internal selected state\n * @name this.select\n * @param {String} id\n */\nModeInterface.prototype.select = function(id) {\n  return this._ctx.store.select(id);\n};\n\n/**\n * Remove a feature from draw's internal selected state\n * @name this.delete\n * @param {String} id\n */\nModeInterface.prototype.deselect = function(id) {\n  return this._ctx.store.deselect(id);\n};\n\n/**\n * Delete a feature from draw\n * @name this.deleteFeature\n * @param {String} id - a feature id\n */\nModeInterface.prototype.deleteFeature = function(id, opts = {}) {\n  return this._ctx.store.delete(id, opts);\n};\n\n/**\n * Add a [DrawFeature](https://github.com/mapbox/mapbox-gl-draw/blob/main/src/feature_types/feature.js) to draw.\n * See `this.newFeature` for converting geojson into a DrawFeature\n * @name this.addFeature\n * @param {DrawFeature} feature - the feature to add\n */\nModeInterface.prototype.addFeature = function(feature, opts = {}) {\n  return this._ctx.store.add(feature, opts);\n};\n\n/**\n * Clear all selected features\n */\nModeInterface.prototype.clearSelectedFeatures = function() {\n  return this._ctx.store.clearSelected();\n};\n\n/**\n * Clear all selected coordinates\n */\nModeInterface.prototype.clearSelectedCoordinates = function() {\n  return this._ctx.store.clearSelectedCoordinates();\n};\n\n/**\n * Indicate if the different action are currently possible with your mode\n * See [draw.actionalbe](https://github.com/mapbox/mapbox-gl-draw/blob/main/API.md#drawactionable) for a list of possible actions. All undefined actions are set to **false** by default\n * @name this.setActionableState\n * @param {Object} actions\n */\nModeInterface.prototype.setActionableState = function(actions = {}) {\n  const newSet = {\n    trash: actions.trash || false,\n    combineFeatures: actions.combineFeatures || false,\n    uncombineFeatures: actions.uncombineFeatures || false\n  };\n  return this._ctx.events.actionable(newSet);\n};\n\n/**\n * Trigger a mode change\n * @name this.changeMode\n * @param {String} mode - the mode to transition into\n * @param {Object} opts - the options object to pass to the new mode\n * @param {Object} eventOpts - used to control what kind of events are emitted.\n */\nModeInterface.prototype.changeMode = function(mode, opts = {}, eventOpts = {}) {\n  return this._ctx.events.changeMode(mode, opts, eventOpts);\n};\n\n/**\n * Fire a map event\n * @name this.fire\n * @param {String} eventName - the event name.\n * @param {Object} eventData - the event data object.\n */\nModeInterface.prototype.fire = function(eventName, eventData) {\n  return this._ctx.events.fire(eventName, eventData);\n};\n\n/**\n * Update the state of draw map classes\n * @name this.updateUIClasses\n * @param {Object} opts\n */\nModeInterface.prototype.updateUIClasses = function(opts) {\n  return this._ctx.ui.queueMapClasses(opts);\n};\n\n/**\n * If a name is provided it makes that button active, else if makes all buttons inactive\n * @name this.activateUIButton\n * @param {String?} name - name of the button to make active, leave as undefined to set buttons to be inactive\n */\nModeInterface.prototype.activateUIButton = function(name) {\n  return this._ctx.ui.setActiveButton(name);\n};\n\n/**\n * Get the features at the location of an event object or in a bbox\n * @name this.featuresAt\n * @param {Event||NULL} event - a mapbox-gl event object\n * @param {BBOX||NULL} bbox - the area to get features from\n * @param {String} bufferType - is this `click` or `tap` event, defaults to click\n */\nModeInterface.prototype.featuresAt = function(event, bbox, bufferType = 'click') {\n  if (bufferType !== 'click' && bufferType !== 'touch') throw new Error('invalid buffer type');\n  return featuresAt[bufferType](event, bbox, this._ctx);\n};\n\n/**\n * Create a new [DrawFeature](https://github.com/mapbox/mapbox-gl-draw/blob/main/src/feature_types/feature.js) from geojson\n * @name this.newFeature\n * @param {GeoJSONFeature} geojson\n * @returns {DrawFeature}\n */\nModeInterface.prototype.newFeature = function(geojson) {\n  const type = geojson.geometry.type;\n  if (type === Constants.geojsonTypes.POINT) return new Point(this._ctx, geojson);\n  if (type === Constants.geojsonTypes.LINE_STRING) return new LineString(this._ctx, geojson);\n  if (type === Constants.geojsonTypes.POLYGON) return new Polygon(this._ctx, geojson);\n  return new MultiFeature(this._ctx, geojson);\n};\n\n/**\n * Check is an object is an instance of a [DrawFeature](https://github.com/mapbox/mapbox-gl-draw/blob/main/src/feature_types/feature.js)\n * @name this.isInstanceOf\n * @param {String} type - `Point`, `LineString`, `Polygon`, `MultiFeature`\n * @param {Object} feature - the object that needs to be checked\n * @returns {Boolean}\n */\nModeInterface.prototype.isInstanceOf = function(type, feature) {\n  if (type === Constants.geojsonTypes.POINT) return feature instanceof Point;\n  if (type === Constants.geojsonTypes.LINE_STRING) return feature instanceof LineString;\n  if (type === Constants.geojsonTypes.POLYGON) return feature instanceof Polygon;\n  if (type === 'MultiFeature') return feature instanceof MultiFeature;\n  throw new Error(`Unknown feature class: ${type}`);\n};\n\n/**\n * Force draw to rerender the feature of the provided id\n * @name this.doRender\n * @param {String} id - a feature id\n */\nModeInterface.prototype.doRender = function(id) {\n  return this._ctx.store.featureChanged(id);\n};\n\n","import ModeInterface from './mode_interface_accessors.js';\nexport default ModeInterface;\n\n/**\n * Triggered while a mode is being transitioned into.\n * @param opts {Object} - this is the object passed via `draw.changeMode('mode', opts)`;\n * @name MODE.onSetup\n * @returns {Object} - this object will be passed to all other life cycle functions\n */\nModeInterface.prototype.onSetup = function() {};\n\n/**\n * Triggered when a drag event is detected on the map\n * @name MODE.onDrag\n * @param state {Object} - a mutible state object created by onSetup\n * @param e {Object} - the captured event that is triggering this life cycle event\n */\nModeInterface.prototype.onDrag = function() {};\n\n/**\n * Triggered when the mouse is clicked\n * @name MODE.onClick\n * @param state {Object} - a mutible state object created by onSetup\n * @param e {Object} - the captured event that is triggering this life cycle event\n */\nModeInterface.prototype.onClick = function() {};\n\n/**\n * Triggered with the mouse is moved\n * @name MODE.onMouseMove\n * @param state {Object} - a mutible state object created by onSetup\n * @param e {Object} - the captured event that is triggering this life cycle event\n */\nModeInterface.prototype.onMouseMove = function() {};\n\n/**\n * Triggered when the mouse button is pressed down\n * @name MODE.onMouseDown\n * @param state {Object} - a mutible state object created by onSetup\n * @param e {Object} - the captured event that is triggering this life cycle event\n */\nModeInterface.prototype.onMouseDown = function() {};\n\n/**\n * Triggered when the mouse button is released\n * @name MODE.onMouseUp\n * @param state {Object} - a mutible state object created by onSetup\n * @param e {Object} - the captured event that is triggering this life cycle event\n */\nModeInterface.prototype.onMouseUp = function() {};\n\n/**\n * Triggered when the mouse leaves the map's container\n * @name MODE.onMouseOut\n * @param state {Object} - a mutible state object created by onSetup\n * @param e {Object} - the captured event that is triggering this life cycle event\n */\nModeInterface.prototype.onMouseOut = function() {};\n\n/**\n * Triggered when a key up event is detected\n * @name MODE.onKeyUp\n * @param state {Object} - a mutible state object created by onSetup\n * @param e {Object} - the captured event that is triggering this life cycle event\n */\nModeInterface.prototype.onKeyUp = function() {};\n\n/**\n * Triggered when a key down event is detected\n * @name MODE.onKeyDown\n * @param state {Object} - a mutible state object created by onSetup\n * @param e {Object} - the captured event that is triggering this life cycle event\n */\nModeInterface.prototype.onKeyDown = function() {};\n\n/**\n * Triggered when a touch event is started\n * @name MODE.onTouchStart\n * @param state {Object} - a mutible state object created by onSetup\n * @param e {Object} - the captured event that is triggering this life cycle event\n */\nModeInterface.prototype.onTouchStart = function() {};\n\n/**\n * Triggered when one drags thier finger on a mobile device\n * @name MODE.onTouchMove\n * @param state {Object} - a mutible state object created by onSetup\n * @param e {Object} - the captured event that is triggering this life cycle event\n */\nModeInterface.prototype.onTouchMove = function() {};\n\n/**\n * Triggered when one removes their finger from the map\n * @name MODE.onTouchEnd\n * @param state {Object} - a mutible state object created by onSetup\n * @param e {Object} - the captured event that is triggering this life cycle event\n */\nModeInterface.prototype.onTouchEnd = function() {};\n\n/**\n * Triggered when one quicly taps the map\n * @name MODE.onTap\n * @param state {Object} - a mutible state object created by onSetup\n * @param e {Object} - the captured event that is triggering this life cycle event\n */\nModeInterface.prototype.onTap = function() {};\n\n/**\n * Triggered when the mode is being exited, to be used for cleaning up artifacts such as invalid features\n * @name MODE.onStop\n * @param state {Object} - a mutible state object created by onSetup\n */\nModeInterface.prototype.onStop = function() {};\n\n/**\n * Triggered when [draw.trash()](https://github.com/mapbox/mapbox-gl-draw/blob/main/API.md#trash-draw) is called.\n * @name MODE.onTrash\n * @param state {Object} - a mutible state object created by onSetup\n */\nModeInterface.prototype.onTrash = function() {};\n\n/**\n * Triggered when [draw.combineFeatures()](https://github.com/mapbox/mapbox-gl-draw/blob/main/API.md#combinefeatures-draw) is called.\n * @name MODE.onCombineFeature\n * @param state {Object} - a mutible state object created by onSetup\n */\nModeInterface.prototype.onCombineFeature = function() {};\n\n/**\n * Triggered when [draw.uncombineFeatures()](https://github.com/mapbox/mapbox-gl-draw/blob/main/API.md#uncombinefeatures-draw) is called.\n * @name MODE.onUncombineFeature\n * @param state {Object} - a mutible state object created by onSetup\n */\nModeInterface.prototype.onUncombineFeature = function() {};\n\n/**\n * Triggered per feature on render to convert raw features into set of features for display on the map\n * See [styling draw](https://github.com/mapbox/mapbox-gl-draw/blob/main/API.md#styling-draw) for information about what geojson properties Draw uses as part of rendering.\n * @name MODE.toDisplayFeatures\n * @param state {Object} - a mutible state object created by onSetup\n * @param geojson {Object} - a geojson being evaulated. To render, pass to `display`.\n * @param display {Function} - all geojson objects passed to this be rendered onto the map\n */\nModeInterface.prototype.toDisplayFeatures = function() {\n  throw new Error('You must overwrite toDisplayFeatures');\n};\n\n","import ModeInterface from './mode_interface.js';\n\nconst eventMapper = {\n  drag: 'onDrag',\n  click: 'onClick',\n  mousemove: 'onMouseMove',\n  mousedown: 'onMouseDown',\n  mouseup: 'onMouseUp',\n  mouseout: 'onMouseOut',\n  keyup: 'onKeyUp',\n  keydown: 'onKeyDown',\n  touchstart: 'onTouchStart',\n  touchmove: 'onTouchMove',\n  touchend: 'onTouchEnd',\n  tap: 'onTap'\n};\n\nconst eventKeys = Object.keys(eventMapper);\n\nexport default function(modeObject) {\n  const modeObjectKeys = Object.keys(modeObject);\n\n  return function(ctx, startOpts = {}) {\n    let state = {};\n\n    const mode = modeObjectKeys.reduce((m, k) => {\n      m[k] = modeObject[k];\n      return m;\n    }, new ModeInterface(ctx));\n\n    function wrapper(eh) {\n      return e => mode[eh](state, e);\n    }\n\n    return {\n      start() {\n        state = mode.onSetup(startOpts); // this should set ui buttons\n\n        // Adds event handlers for all event options\n        // add sets the selector to false for all\n        // handlers that are not present in the mode\n        // to reduce on render calls for functions that\n        // have no logic\n        eventKeys.forEach((key) => {\n          const modeHandler = eventMapper[key];\n          let selector = () => false;\n          if (modeObject[modeHandler]) {\n            selector = () => true;\n          }\n          this.on(key, selector, wrapper(modeHandler));\n        });\n\n      },\n      stop() {\n        mode.onStop(state);\n      },\n      trash() {\n        mode.onTrash(state);\n      },\n      combineFeatures() {\n        mode.onCombineFeatures(state);\n      },\n      uncombineFeatures() {\n        mode.onUncombineFeatures(state);\n      },\n      render(geojson, push) {\n        mode.toDisplayFeatures(state, geojson, push);\n      }\n    };\n  };\n}\n","/**\n * Derive a dense array (no `undefined`s) from a single value or array.\n *\n * @param {any} x\n * @return {Array<any>}\n */\nfunction toDenseArray(x) {\n  return [].concat(x).filter(y => y !== undefined);\n}\n\nexport default toDenseArray;\n","import * as Constants from './constants.js';\n\nexport default function render() {\n  // eslint-disable-next-line no-invalid-this\n  const store = this;\n  const mapExists = store.ctx.map && store.ctx.map.getSource(Constants.sources.HOT) !== undefined;\n  if (!mapExists) return cleanup();\n\n  const mode = store.ctx.events.currentModeName();\n\n  store.ctx.ui.queueMapClasses({ mode });\n\n  let newHotIds = [];\n  let newColdIds = [];\n\n  if (store.isDirty) {\n    newColdIds = store.getAllIds();\n  } else {\n    newHotIds = store.getChangedIds().filter(id => store.get(id) !== undefined);\n    newColdIds = store.sources.hot.filter(geojson => geojson.properties.id && newHotIds.indexOf(geojson.properties.id) === -1 && store.get(geojson.properties.id) !== undefined).map(geojson => geojson.properties.id);\n  }\n\n  store.sources.hot = [];\n  const lastColdCount = store.sources.cold.length;\n  store.sources.cold = store.isDirty ? [] : store.sources.cold.filter((geojson) => {\n    const id = geojson.properties.id || geojson.properties.parent;\n    return newHotIds.indexOf(id) === -1;\n  });\n\n  const coldChanged = lastColdCount !== store.sources.cold.length || newColdIds.length > 0;\n  newHotIds.forEach(id => renderFeature(id, 'hot'));\n  newColdIds.forEach(id => renderFeature(id, 'cold'));\n\n  function renderFeature(id, source) {\n    const feature = store.get(id);\n    const featureInternal = feature.internal(mode);\n    store.ctx.events.currentModeRender(featureInternal, (geojson) => {\n      geojson.properties.mode = mode;\n      store.sources[source].push(geojson);\n    });\n  }\n\n  if (coldChanged) {\n    store.ctx.map.getSource(Constants.sources.COLD).setData({\n      type: Constants.geojsonTypes.FEATURE_COLLECTION,\n      features: store.sources.cold\n    });\n  }\n\n  store.ctx.map.getSource(Constants.sources.HOT).setData({\n    type: Constants.geojsonTypes.FEATURE_COLLECTION,\n    features: store.sources.hot\n  });\n\n  cleanup();\n\n  function cleanup() {\n    store.isDirty = false;\n    store.clearChangedIds();\n  }\n}\n","import toDenseArray from './lib/to_dense_array.js';\nimport StringSet from './lib/string_set.js';\nimport render from './render.js';\nimport * as Constants from './constants.js';\n\nexport default function Store(ctx) {\n  this._features = {};\n  this._featureIds = new StringSet();\n  this._selectedFeatureIds = new StringSet();\n  this._selectedCoordinates = [];\n  this._changedFeatureIds = new StringSet();\n  this._emitSelectionChange = false;\n  this._mapInitialConfig = {};\n  this.ctx = ctx;\n  this.sources = {\n    hot: [],\n    cold: []\n  };\n\n  // Deduplicate requests to render and tie them to animation frames.\n  let renderRequest;\n  this.render = () => {\n    if (!renderRequest) {\n      renderRequest = requestAnimationFrame(() => {\n        renderRequest = null;\n        render.call(this);\n\n        // Fire deduplicated selection change event\n        if (this._emitSelectionChange) {\n          this.ctx.events.fire(Constants.events.SELECTION_CHANGE, {\n            features: this.getSelected().map(feature => feature.toGeoJSON()),\n            points: this.getSelectedCoordinates().map(coordinate => ({\n              type: Constants.geojsonTypes.FEATURE,\n              properties: {},\n              geometry: {\n                type: Constants.geojsonTypes.POINT,\n                coordinates: coordinate.coordinates\n              }\n            }))\n          });\n\n          this._emitSelectionChange = false;\n        }\n\n        // Fire render event\n        this.ctx.events.fire(Constants.events.RENDER, {});\n      });\n    }\n  };\n\n  this.isDirty = false;\n}\n\n/**\n * Delays all rendering until the returned function is invoked\n * @return {Function} renderBatch\n */\nStore.prototype.createRenderBatch = function() {\n  const holdRender = this.render;\n  let numRenders = 0;\n  this.render = function() {\n    numRenders++;\n  };\n\n  return () => {\n    this.render = holdRender;\n    if (numRenders > 0) {\n      this.render();\n    }\n  };\n};\n\n/**\n * Sets the store's state to dirty.\n * @return {Store} this\n */\nStore.prototype.setDirty = function() {\n  this.isDirty = true;\n  return this;\n};\n\n/**\n * Sets a feature's state to changed.\n * @param {string} featureId\n * @return {Store} this\n */\nStore.prototype.featureCreated = function(featureId, options = {}) {\n  this._changedFeatureIds.add(featureId);\n\n  const silent = options.silent != null ? options.silent : this.ctx.options.suppressAPIEvents;\n  if (silent !== true) {\n    const feature = this.get(featureId);\n    this.ctx.events.fire(Constants.events.CREATE, {\n      features: [feature.toGeoJSON()]\n    });\n  }\n\n  return this;\n};\n\n/**\n * Sets a feature's state to changed.\n * @param {string} featureId\n * @return {Store} this\n */\nStore.prototype.featureChanged = function(featureId, options = {}) {\n  this._changedFeatureIds.add(featureId);\n\n  const silent = options.silent != null ? options.silent : this.ctx.options.suppressAPIEvents;\n  if (silent !== true) {\n    this.ctx.events.fire(Constants.events.UPDATE, {\n      action: options.action ? options.action : Constants.updateActions.CHANGE_COORDINATES,\n      features: [this.get(featureId).toGeoJSON()]\n    });\n  }\n\n  return this;\n};\n\n/**\n * Gets the ids of all features currently in changed state.\n * @return {Store} this\n */\nStore.prototype.getChangedIds = function() {\n  return this._changedFeatureIds.values();\n};\n\n/**\n * Sets all features to unchanged state.\n * @return {Store} this\n */\nStore.prototype.clearChangedIds = function() {\n  this._changedFeatureIds.clear();\n  return this;\n};\n\n/**\n * Gets the ids of all features in the store.\n * @return {Store} this\n */\nStore.prototype.getAllIds = function() {\n  return this._featureIds.values();\n};\n\n/**\n * Adds a feature to the store.\n * @param {Object} feature\n * @param {Object} [options]\n * @param {Object} [options.silent] - If `true`, this invocation will not fire an event.\n *\n * @return {Store} this\n */\nStore.prototype.add = function(feature, options = {}) {\n  this._features[feature.id] = feature;\n  this._featureIds.add(feature.id);\n  this.featureCreated(feature.id, {silent: options.silent});\n  return this;\n};\n\n/**\n * Deletes a feature or array of features from the store.\n * Cleans up after the deletion by deselecting the features.\n * If changes were made, sets the state to the dirty\n * and fires an event.\n * @param {string | Array<string>} featureIds\n * @param {Object} [options]\n * @param {Object} [options.silent] - If `true`, this invocation will not fire an event.\n * @return {Store} this\n */\nStore.prototype.delete = function(featureIds, options = {}) {\n  const deletedFeaturesToEmit = [];\n  toDenseArray(featureIds).forEach((id) => {\n    if (!this._featureIds.has(id)) return;\n    this._featureIds.delete(id);\n    this._selectedFeatureIds.delete(id);\n    if (!options.silent) {\n      if (deletedFeaturesToEmit.indexOf(this._features[id]) === -1) {\n        deletedFeaturesToEmit.push(this._features[id].toGeoJSON());\n      }\n    }\n    delete this._features[id];\n    this.isDirty = true;\n  });\n\n  if (deletedFeaturesToEmit.length) {\n    this.ctx.events.fire(Constants.events.DELETE, {features: deletedFeaturesToEmit});\n  }\n\n  refreshSelectedCoordinates(this, options);\n  return this;\n};\n\n/**\n * Returns a feature in the store matching the specified value.\n * @return {Object | undefined} feature\n */\nStore.prototype.get = function(id) {\n  return this._features[id];\n};\n\n/**\n * Returns all features in the store.\n * @return {Array<Object>}\n */\nStore.prototype.getAll = function() {\n  return Object.keys(this._features).map(id => this._features[id]);\n};\n\n/**\n * Adds features to the current selection.\n * @param {string | Array<string>} featureIds\n * @param {Object} [options]\n * @param {Object} [options.silent] - If `true`, this invocation will not fire an event.\n * @return {Store} this\n */\nStore.prototype.select = function(featureIds, options = {}) {\n  toDenseArray(featureIds).forEach((id) => {\n    if (this._selectedFeatureIds.has(id)) return;\n    this._selectedFeatureIds.add(id);\n    this._changedFeatureIds.add(id);\n    if (!options.silent) {\n      this._emitSelectionChange = true;\n    }\n  });\n  return this;\n};\n\n/**\n * Deletes features from the current selection.\n * @param {string | Array<string>} featureIds\n * @param {Object} [options]\n * @param {Object} [options.silent] - If `true`, this invocation will not fire an event.\n * @return {Store} this\n */\nStore.prototype.deselect = function(featureIds, options = {}) {\n  toDenseArray(featureIds).forEach((id) => {\n    if (!this._selectedFeatureIds.has(id)) return;\n    this._selectedFeatureIds.delete(id);\n    this._changedFeatureIds.add(id);\n    if (!options.silent) {\n      this._emitSelectionChange = true;\n    }\n  });\n  refreshSelectedCoordinates(this, options);\n  return this;\n};\n\n/**\n * Clears the current selection.\n * @param {Object} [options]\n * @param {Object} [options.silent] - If `true`, this invocation will not fire an event.\n * @return {Store} this\n */\nStore.prototype.clearSelected = function(options = {}) {\n  this.deselect(this._selectedFeatureIds.values(), { silent: options.silent });\n  return this;\n};\n\n/**\n * Sets the store's selection, clearing any prior values.\n * If no feature ids are passed, the store is just cleared.\n * @param {string | Array<string> | undefined} featureIds\n * @param {Object} [options]\n * @param {Object} [options.silent] - If `true`, this invocation will not fire an event.\n * @return {Store} this\n */\nStore.prototype.setSelected = function(featureIds, options = {}) {\n  featureIds = toDenseArray(featureIds);\n\n  // Deselect any features not in the new selection\n  this.deselect(this._selectedFeatureIds.values().filter(id => featureIds.indexOf(id) === -1), { silent: options.silent });\n\n  // Select any features in the new selection that were not already selected\n  this.select(featureIds.filter(id => !this._selectedFeatureIds.has(id)), { silent: options.silent });\n\n  return this;\n};\n\n/**\n * Sets the store's coordinates selection, clearing any prior values.\n * @param {Array<Array<string>>} coordinates\n * @return {Store} this\n */\nStore.prototype.setSelectedCoordinates = function(coordinates) {\n  this._selectedCoordinates = coordinates;\n  this._emitSelectionChange = true;\n  return this;\n};\n\n/**\n * Clears the current coordinates selection.\n * @param {Object} [options]\n * @return {Store} this\n */\nStore.prototype.clearSelectedCoordinates = function() {\n  this._selectedCoordinates = [];\n  this._emitSelectionChange = true;\n  return this;\n};\n\n/**\n * Returns the ids of features in the current selection.\n * @return {Array<string>} Selected feature ids.\n */\nStore.prototype.getSelectedIds = function() {\n  return this._selectedFeatureIds.values();\n};\n\n/**\n * Returns features in the current selection.\n * @return {Array<Object>} Selected features.\n */\nStore.prototype.getSelected = function() {\n  return this.getSelectedIds().map(id => this.get(id));\n};\n\n/**\n * Returns selected coordinates in the currently selected feature.\n * @return {Array<Object>} Selected coordinates.\n */\nStore.prototype.getSelectedCoordinates = function() {\n  const selected = this._selectedCoordinates.map((coordinate) => {\n    const feature = this.get(coordinate.feature_id);\n    return {\n      coordinates: feature.getCoordinate(coordinate.coord_path)\n    };\n  });\n  return selected;\n};\n\n/**\n * Indicates whether a feature is selected.\n * @param {string} featureId\n * @return {boolean} `true` if the feature is selected, `false` if not.\n */\nStore.prototype.isSelected = function(featureId) {\n  return this._selectedFeatureIds.has(featureId);\n};\n\n/**\n * Sets a property on the given feature\n * @param {string} featureId\n * @param {string} property property\n * @param {string} property value\n * @param {Object} [options]\n * @param {Object} [options.silent] - If `true`, this invocation will not fire an event.\n*/\nStore.prototype.setFeatureProperty = function(featureId, property, value, options = {}) {\n  this.get(featureId).setProperty(property, value);\n\n  this.featureChanged(featureId, {\n    silent: options.silent,\n    action: Constants.updateActions.CHANGE_PROPERTIES\n  });\n};\n\nfunction refreshSelectedCoordinates(store, options = {}) {\n  const newSelectedCoordinates = store._selectedCoordinates.filter(point => store._selectedFeatureIds.has(point.feature_id));\n  if (store._selectedCoordinates.length !== newSelectedCoordinates.length && !options.silent) {\n    store._emitSelectionChange = true;\n  }\n  store._selectedCoordinates = newSelectedCoordinates;\n}\n\n/**\n * Stores the initial config for a map, so that we can set it again after we're done.\n*/\nStore.prototype.storeMapConfig = function() {\n  Constants.interactions.forEach((interaction) => {\n    const interactionSet = this.ctx.map[interaction];\n    if (interactionSet) {\n      this._mapInitialConfig[interaction] = this.ctx.map[interaction].isEnabled();\n    }\n  });\n};\n\n/**\n * Restores the initial config for a map, ensuring all is well.\n*/\nStore.prototype.restoreMapConfig = function() {\n  Object.keys(this._mapInitialConfig).forEach((key) => {\n    const value = this._mapInitialConfig[key];\n    if (value) {\n      this.ctx.map[key].enable();\n    } else {\n      this.ctx.map[key].disable();\n    }\n  });\n};\n\n/**\n * Returns the initial state of an interaction setting.\n * @param {string} interaction\n * @return {boolean} `true` if the interaction is enabled, `false` if not.\n * Defaults to `true`. (Todo: include defaults.)\n*/\nStore.prototype.getInitialConfigValue = function(interaction) {\n  if (this._mapInitialConfig[interaction] !== undefined) {\n    return this._mapInitialConfig[interaction];\n  } else {\n    // This needs to be set to whatever the default is for that interaction\n    // It seems to be true for all cases currently, so let's send back `true`.\n    return true;\n  }\n};\n","import * as Constants from './constants.js';\n\nconst classTypes = ['mode', 'feature', 'mouse'];\n\nexport default function(ctx) {\n\n\n  const buttonElements = {};\n  let activeButton = null;\n\n  let currentMapClasses = {\n    mode: null, // e.g. mode-direct_select\n    feature: null, // e.g. feature-vertex\n    mouse: null // e.g. mouse-move\n  };\n\n  let nextMapClasses = {\n    mode: null,\n    feature: null,\n    mouse: null\n  };\n\n  function clearMapClasses() {\n    queueMapClasses({mode:null, feature:null, mouse:null});\n    updateMapClasses();\n  }\n\n  function queueMapClasses(options) {\n    nextMapClasses = Object.assign(nextMapClasses, options);\n  }\n\n  function updateMapClasses() {\n    if (!ctx.container) return;\n\n    const classesToRemove = [];\n    const classesToAdd = [];\n\n    classTypes.forEach((type) => {\n      if (nextMapClasses[type] === currentMapClasses[type]) return;\n\n      classesToRemove.push(`${type}-${currentMapClasses[type]}`);\n      if (nextMapClasses[type] !== null) {\n        classesToAdd.push(`${type}-${nextMapClasses[type]}`);\n      }\n    });\n\n    if (classesToRemove.length > 0) {\n      ctx.container.classList.remove(...classesToRemove);\n    }\n\n    if (classesToAdd.length > 0) {\n      ctx.container.classList.add(...classesToAdd);\n    }\n\n    currentMapClasses = Object.assign(currentMapClasses, nextMapClasses);\n  }\n\n  function createControlButton(id, options = {}) {\n    const button = document.createElement('button');\n    button.className = `${Constants.classes.CONTROL_BUTTON} ${options.className}`;\n    button.setAttribute('title', options.title);\n    options.container.appendChild(button);\n\n    button.addEventListener('click', (e) => {\n      e.preventDefault();\n      e.stopPropagation();\n\n      const clickedButton = e.target;\n      if (clickedButton === activeButton) {\n        deactivateButtons();\n        options.onDeactivate();\n        return;\n      }\n\n      setActiveButton(id);\n      options.onActivate();\n    }, true);\n\n    return button;\n  }\n\n  function deactivateButtons() {\n    if (!activeButton) return;\n    activeButton.classList.remove(Constants.classes.ACTIVE_BUTTON);\n    activeButton = null;\n  }\n\n  function setActiveButton(id) {\n    deactivateButtons();\n\n    const button = buttonElements[id];\n    if (!button) return;\n\n    if (button && id !== 'trash') {\n      button.classList.add(Constants.classes.ACTIVE_BUTTON);\n      activeButton = button;\n    }\n  }\n\n  function addButtons() {\n    const controls = ctx.options.controls;\n    const controlGroup = document.createElement('div');\n    controlGroup.className = `${Constants.classes.CONTROL_GROUP} ${Constants.classes.CONTROL_BASE}`;\n\n    if (!controls) return controlGroup;\n\n    if (controls[Constants.types.LINE]) {\n      buttonElements[Constants.types.LINE] = createControlButton(Constants.types.LINE, {\n        container: controlGroup,\n        className: Constants.classes.CONTROL_BUTTON_LINE,\n        title: `LineString tool ${ctx.options.keybindings ? '(l)' : ''}`,\n        onActivate: () => ctx.events.changeMode(Constants.modes.DRAW_LINE_STRING),\n        onDeactivate: () => ctx.events.trash()\n      });\n    }\n\n    if (controls[Constants.types.POLYGON]) {\n      buttonElements[Constants.types.POLYGON] = createControlButton(Constants.types.POLYGON, {\n        container: controlGroup,\n        className: Constants.classes.CONTROL_BUTTON_POLYGON,\n        title: `Polygon tool ${ctx.options.keybindings ? '(p)' : ''}`,\n        onActivate: () => ctx.events.changeMode(Constants.modes.DRAW_POLYGON),\n        onDeactivate: () => ctx.events.trash()\n      });\n    }\n\n    if (controls[Constants.types.POINT]) {\n      buttonElements[Constants.types.POINT] = createControlButton(Constants.types.POINT, {\n        container: controlGroup,\n        className: Constants.classes.CONTROL_BUTTON_POINT,\n        title: `Marker tool ${ctx.options.keybindings ? '(m)' : ''}`,\n        onActivate: () => ctx.events.changeMode(Constants.modes.DRAW_POINT),\n        onDeactivate: () => ctx.events.trash()\n      });\n    }\n\n    if (controls.trash) {\n      buttonElements.trash = createControlButton('trash', {\n        container: controlGroup,\n        className: Constants.classes.CONTROL_BUTTON_TRASH,\n        title: 'Delete',\n        onActivate: () => {\n          ctx.events.trash();\n        }\n      });\n    }\n\n    if (controls.combine_features) {\n      buttonElements.combine_features = createControlButton('combineFeatures', {\n        container: controlGroup,\n        className: Constants.classes.CONTROL_BUTTON_COMBINE_FEATURES,\n        title: 'Combine',\n        onActivate: () => {\n          ctx.events.combineFeatures();\n        }\n      });\n    }\n\n    if (controls.uncombine_features) {\n      buttonElements.uncombine_features = createControlButton('uncombineFeatures', {\n        container: controlGroup,\n        className: Constants.classes.CONTROL_BUTTON_UNCOMBINE_FEATURES,\n        title: 'Uncombine',\n        onActivate: () => {\n          ctx.events.uncombineFeatures();\n        }\n      });\n    }\n\n    return controlGroup;\n  }\n\n  function removeButtons() {\n    Object.keys(buttonElements).forEach((buttonId) => {\n      const button = buttonElements[buttonId];\n      if (button.parentNode) {\n        button.parentNode.removeChild(button);\n      }\n      delete buttonElements[buttonId];\n    });\n  }\n\n  return {\n    setActiveButton,\n    queueMapClasses,\n    updateMapClasses,\n    clearMapClasses,\n    addButtons,\n    removeButtons\n  };\n}\n","import events from './events.js';\nimport Store from './store.js';\nimport ui from './ui.js';\nimport * as Constants from './constants.js';\n\nexport default function(ctx) {\n\n  let controlContainer = null;\n  let mapLoadedInterval = null;\n\n  const setup = {\n    onRemove() {\n      // Stop connect attempt in the event that control is removed before map is loaded\n      ctx.map.off('load', setup.connect);\n      clearInterval(mapLoadedInterval);\n\n      setup.removeLayers();\n      ctx.store.restoreMapConfig();\n      ctx.ui.removeButtons();\n      ctx.events.removeEventListeners();\n      ctx.ui.clearMapClasses();\n      if (ctx.boxZoomInitial) ctx.map.boxZoom.enable();\n      ctx.map = null;\n      ctx.container = null;\n      ctx.store = null;\n\n      if (controlContainer && controlContainer.parentNode) controlContainer.parentNode.removeChild(controlContainer);\n      controlContainer = null;\n\n      return this;\n    },\n    connect() {\n      ctx.map.off('load', setup.connect);\n      clearInterval(mapLoadedInterval);\n      setup.addLayers();\n      ctx.store.storeMapConfig();\n      ctx.events.addEventListeners();\n    },\n    onAdd(map) {\n      ctx.map = map;\n      ctx.events = events(ctx);\n      ctx.ui = ui(ctx);\n      ctx.container = map.getContainer();\n      ctx.store = new Store(ctx);\n\n\n      controlContainer = ctx.ui.addButtons();\n\n      if (ctx.options.boxSelect) {\n        ctx.boxZoomInitial = map.boxZoom.isEnabled();\n        map.boxZoom.disable();\n        const dragPanIsEnabled = map.dragPan.isEnabled();\n        // Need to toggle dragPan on and off or else first\n        // dragPan disable attempt in simple_select doesn't work\n        map.dragPan.disable();\n        map.dragPan.enable();\n        if (!dragPanIsEnabled) {\n          map.dragPan.disable();\n        }\n      }\n\n      if (map.loaded()) {\n        setup.connect();\n      } else {\n        map.on('load', setup.connect);\n        mapLoadedInterval = setInterval(() => { if (map.loaded()) setup.connect(); }, 16);\n      }\n\n      ctx.events.start();\n      return controlContainer;\n    },\n    addLayers() {\n      // drawn features style\n      ctx.map.addSource(Constants.sources.COLD, {\n        data: {\n          type: Constants.geojsonTypes.FEATURE_COLLECTION,\n          features: []\n        },\n        type: 'geojson'\n      });\n\n      // hot features style\n      ctx.map.addSource(Constants.sources.HOT, {\n        data: {\n          type: Constants.geojsonTypes.FEATURE_COLLECTION,\n          features: []\n        },\n        type: 'geojson'\n      });\n\n      ctx.options.styles.forEach((style) => {\n        ctx.map.addLayer(style);\n      });\n\n      ctx.store.setDirty(true);\n      ctx.store.render();\n    },\n    // Check for layers and sources before attempting to remove\n    // If user adds draw control and removes it before the map is loaded, layers and sources will be missing\n    removeLayers() {\n      ctx.options.styles.forEach((style) => {\n        if (ctx.map.getLayer(style.id)) {\n          ctx.map.removeLayer(style.id);\n        }\n      });\n\n      if (ctx.map.getSource(Constants.sources.COLD)) {\n        ctx.map.removeSource(Constants.sources.COLD);\n      }\n\n      if (ctx.map.getSource(Constants.sources.HOT)) {\n        ctx.map.removeSource(Constants.sources.HOT);\n      }\n    }\n  };\n\n  ctx.setup = setup;\n\n  return setup;\n}\n","import setupModeHandler from './lib/mode_handler.js';\nimport getFeaturesAndSetCursor from './lib/get_features_and_set_cursor.js';\nimport featuresAt from './lib/features_at.js';\nimport isClick from './lib/is_click.js';\nimport isTap from './lib/is_tap.js';\nimport * as Constants from './constants.js';\nimport objectToMode from './modes/object_to_mode.js';\n\nexport default function(ctx) {\n\n  const modes = Object.keys(ctx.options.modes).reduce((m, k) => {\n    m[k] = objectToMode(ctx.options.modes[k]);\n    return m;\n  }, {});\n\n  let mouseDownInfo = {};\n  let touchStartInfo = {};\n  const events = {};\n  let currentModeName = null;\n  let currentMode = null;\n\n  events.drag = function(event, isDrag) {\n    if (isDrag({\n      point: event.point,\n      time: new Date().getTime()\n    })) {\n      ctx.ui.queueMapClasses({ mouse: Constants.cursors.DRAG });\n      currentMode.drag(event);\n    } else {\n      event.originalEvent.stopPropagation();\n    }\n  };\n\n  events.mousedrag = function(event) {\n    events.drag(event, endInfo => !isClick(mouseDownInfo, endInfo));\n  };\n\n  events.touchdrag = function(event) {\n    events.drag(event, endInfo => !isTap(touchStartInfo, endInfo));\n  };\n\n  events.mousemove = function(event) {\n    const button = event.originalEvent.buttons !== undefined ? event.originalEvent.buttons : event.originalEvent.which;\n    if (button === 1) {\n      return events.mousedrag(event);\n    }\n    const target = getFeaturesAndSetCursor(event, ctx);\n    event.featureTarget = target;\n    currentMode.mousemove(event);\n  };\n\n  events.mousedown = function(event) {\n    mouseDownInfo = {\n      time: new Date().getTime(),\n      point: event.point\n    };\n    const target = getFeaturesAndSetCursor(event, ctx);\n    event.featureTarget = target;\n    currentMode.mousedown(event);\n  };\n\n  events.mouseup = function(event) {\n    const target = getFeaturesAndSetCursor(event, ctx);\n    event.featureTarget = target;\n\n    if (isClick(mouseDownInfo, {\n      point: event.point,\n      time: new Date().getTime()\n    })) {\n      currentMode.click(event);\n    } else {\n      currentMode.mouseup(event);\n    }\n  };\n\n  events.mouseout = function(event) {\n    currentMode.mouseout(event);\n  };\n\n  events.touchstart = function(event) {\n    if (!ctx.options.touchEnabled) {\n      return;\n    }\n\n    touchStartInfo = {\n      time: new Date().getTime(),\n      point: event.point\n    };\n    const target = featuresAt.touch(event, null, ctx)[0];\n    event.featureTarget = target;\n    currentMode.touchstart(event);\n  };\n\n  events.touchmove = function(event) {\n    if (!ctx.options.touchEnabled) {\n      return;\n    }\n\n    currentMode.touchmove(event);\n    return events.touchdrag(event);\n  };\n\n  events.touchend = function(event) {\n    // Prevent emulated mouse events because we will fully handle the touch here.\n    // This does not stop the touch events from propogating to mapbox though.\n    event.originalEvent.preventDefault();\n    if (!ctx.options.touchEnabled) {\n      return;\n    }\n\n    const target = featuresAt.touch(event, null, ctx)[0];\n    event.featureTarget = target;\n    if (isTap(touchStartInfo, {\n      time: new Date().getTime(),\n      point: event.point\n    })) {\n      currentMode.tap(event);\n    } else {\n      currentMode.touchend(event);\n    }\n  };\n\n  // 8 - Backspace\n  // 46 - Delete\n  const isKeyModeValid = code => !(code === 8 || code === 46 || (code >= 48 && code <= 57));\n\n  events.keydown = function(event) {\n    const isMapElement = (event.srcElement || event.target).classList.contains(Constants.classes.CANVAS);\n    if (!isMapElement) return; // we only handle events on the map\n\n    if ((event.keyCode === 8 || event.keyCode === 46) && ctx.options.controls.trash) {\n      event.preventDefault();\n      currentMode.trash();\n    } else if (isKeyModeValid(event.keyCode)) {\n      currentMode.keydown(event);\n    } else if (event.keyCode === 49 && ctx.options.controls.point) {\n      changeMode(Constants.modes.DRAW_POINT);\n    } else if (event.keyCode === 50 && ctx.options.controls.line_string) {\n      changeMode(Constants.modes.DRAW_LINE_STRING);\n    } else if (event.keyCode === 51 && ctx.options.controls.polygon) {\n      changeMode(Constants.modes.DRAW_POLYGON);\n    }\n  };\n\n  events.keyup = function(event) {\n    if (isKeyModeValid(event.keyCode)) {\n      currentMode.keyup(event);\n    }\n  };\n\n  events.zoomend = function() {\n    ctx.store.changeZoom();\n  };\n\n  events.data = function(event) {\n    if (event.dataType === 'style') {\n      const { setup, map, options, store } = ctx;\n      const hasLayers = options.styles.some(style => map.getLayer(style.id));\n      if (!hasLayers) {\n        setup.addLayers();\n        store.setDirty();\n        store.render();\n      }\n    }\n  };\n\n  function changeMode(modename, nextModeOptions, eventOptions = {}) {\n    currentMode.stop();\n\n    const modebuilder = modes[modename];\n    if (modebuilder === undefined) {\n      throw new Error(`${modename} is not valid`);\n    }\n    currentModeName = modename;\n    const mode = modebuilder(ctx, nextModeOptions);\n    currentMode = setupModeHandler(mode, ctx);\n\n    if (!eventOptions.silent) {\n      ctx.map.fire(Constants.events.MODE_CHANGE, { mode: modename});\n    }\n\n    ctx.store.setDirty();\n    ctx.store.render();\n  }\n\n  const actionState = {\n    trash: false,\n    combineFeatures: false,\n    uncombineFeatures: false\n  };\n\n  function actionable(actions) {\n    let changed = false;\n    Object.keys(actions).forEach((action) => {\n      if (actionState[action] === undefined) throw new Error('Invalid action type');\n      if (actionState[action] !== actions[action]) changed = true;\n      actionState[action] = actions[action];\n    });\n    if (changed) ctx.map.fire(Constants.events.ACTIONABLE, { actions: actionState });\n  }\n\n  const api = {\n    start() {\n      currentModeName = ctx.options.defaultMode;\n      currentMode = setupModeHandler(modes[currentModeName](ctx), ctx);\n    },\n    changeMode,\n    actionable,\n    currentModeName() {\n      return currentModeName;\n    },\n    currentModeRender(geojson, push) {\n      return currentMode.render(geojson, push);\n    },\n    fire(eventName, eventData) {\n      if (!ctx.map) return;\n      ctx.map.fire(eventName, eventData);\n    },\n    addEventListeners() {\n      ctx.map.on('mousemove', events.mousemove);\n      ctx.map.on('mousedown', events.mousedown);\n      ctx.map.on('mouseup', events.mouseup);\n      ctx.map.on('data', events.data);\n\n      ctx.map.on('touchmove', events.touchmove);\n      ctx.map.on('touchstart', events.touchstart);\n      ctx.map.on('touchend', events.touchend);\n\n      ctx.container.addEventListener('mouseout', events.mouseout);\n\n      if (ctx.options.keybindings) {\n        ctx.container.addEventListener('keydown', events.keydown);\n        ctx.container.addEventListener('keyup', events.keyup);\n      }\n    },\n    removeEventListeners() {\n      ctx.map.off('mousemove', events.mousemove);\n      ctx.map.off('mousedown', events.mousedown);\n      ctx.map.off('mouseup', events.mouseup);\n      ctx.map.off('data', events.data);\n\n      ctx.map.off('touchmove', events.touchmove);\n      ctx.map.off('touchstart', events.touchstart);\n      ctx.map.off('touchend', events.touchend);\n\n      ctx.container.removeEventListener('mouseout', events.mouseout);\n\n      if (ctx.options.keybindings) {\n        ctx.container.removeEventListener('keydown', events.keydown);\n        ctx.container.removeEventListener('keyup', events.keyup);\n      }\n    },\n    trash(options) {\n      currentMode.trash(options);\n    },\n    combineFeatures() {\n      currentMode.combineFeatures();\n    },\n    uncombineFeatures() {\n      currentMode.uncombineFeatures();\n    },\n    getMode() {\n      return currentModeName;\n    }\n  };\n\n  return api;\n}\n","/* eslint comma-dangle: [\"error\", \"always-multiline\"] */\n\nconst blue = '#3bb2d0';\nconst orange = '#fbb03b';\nconst white = '#fff';\n\nexport default [\n  // Polygons\n  //   Solid fill\n  //   Active state defines color\n  {\n    'id': 'gl-draw-polygon-fill',\n    'type': 'fill',\n    'filter': [\n      'all',\n      ['==', '$type', 'Polygon'],\n    ],\n    'paint': {\n      'fill-color': [\n        'case',\n        ['==', ['get', 'active'], 'true'], orange,\n        blue,\n      ],\n      'fill-opacity': 0.1,\n    },\n  },\n  // Lines\n  // Polygon\n  //   Matches Lines AND Polygons\n  //   Active state defines color\n  {\n    'id': 'gl-draw-lines',\n    'type': 'line',\n    'filter': [\n      'any',\n      ['==', '$type', 'LineString'],\n      ['==', '$type', 'Polygon'],\n    ],\n    'layout': {\n      'line-cap': 'round',\n      'line-join': 'round',\n    },\n    'paint': {\n      'line-color': [\n        'case',\n        ['==', ['get', 'active'], 'true'], orange,\n        blue,\n      ],\n      'line-dasharray': [\n        'case',\n        ['==', ['get', 'active'], 'true'], [0.2, 2],\n        [2, 0],\n      ],\n      'line-width': 2,\n    },\n  },\n  // Points\n  //   Circle with an outline\n  //   Active state defines size and color\n  {\n    'id': 'gl-draw-point-outer',\n    'type': 'circle',\n    'filter': [\n      'all',\n      ['==', '$type', 'Point'],\n      ['==', 'meta', 'feature'],\n    ],\n    'paint': {\n      'circle-radius': [\n        'case',\n        ['==', ['get', 'active'], 'true'], 7,\n        5,\n      ],\n      'circle-color': white,\n    },\n  },\n  {\n    'id': 'gl-draw-point-inner',\n    'type': 'circle',\n    'filter': [\n      'all',\n      ['==', '$type', 'Point'],\n      ['==', 'meta', 'feature'],\n    ],\n    'paint': {\n      'circle-radius': [\n        'case',\n        ['==', ['get', 'active'], 'true'], 5,\n        3,\n      ],\n      'circle-color': [\n        'case',\n        ['==', ['get', 'active'], 'true'], orange,\n        blue,\n      ],\n    },\n  },\n  // Vertex\n  //   Visible when editing polygons and lines\n  //   Similar behaviour to Points\n  //   Active state defines size\n  {\n    'id': 'gl-draw-vertex-outer',\n    'type': 'circle',\n    'filter': [\n      'all',\n      ['==', '$type', 'Point'],\n      ['==', 'meta', 'vertex'],\n      ['!=', 'mode', 'simple_select'],\n    ],\n    'paint': {\n      'circle-radius': [\n        'case',\n        ['==', ['get', 'active'], 'true'], 7,\n        5,\n      ],\n      'circle-color': white,\n    },\n  },\n  {\n    'id': 'gl-draw-vertex-inner',\n    'type': 'circle',\n    'filter': [\n      'all',\n      ['==', '$type', 'Point'],\n      ['==', 'meta', 'vertex'],\n      ['!=', 'mode', 'simple_select'],\n    ],\n    'paint': {\n      'circle-radius': [\n        'case',\n        ['==', ['get', 'active'], 'true'], 5,\n        3,\n      ],\n      'circle-color': orange,\n    },\n  },\n  // Midpoint\n  //   Visible when editing polygons and lines\n  //   Tapping or dragging them adds a new vertex to the feature\n  {\n    'id': 'gl-draw-midpoint',\n    'type': 'circle',\n    'filter': [\n      'all',\n      ['==', 'meta', 'midpoint'],\n    ],\n    'paint': {\n      'circle-radius': 3,\n      'circle-color': orange,\n    },\n  },\n];\n","import * as Constants from '../constants.js';\n\nexport function isOfMetaType(type) {\n  return function(e) {\n    const featureTarget = e.featureTarget;\n    if (!featureTarget) return false;\n    if (!featureTarget.properties) return false;\n    return featureTarget.properties.meta === type;\n  };\n}\n\nexport function isShiftMousedown(e) {\n  if (!e.originalEvent) return false;\n  if (!e.originalEvent.shiftKey) return false;\n  return e.originalEvent.button === 0;\n}\n\nexport function isActiveFeature(e) {\n  if (!e.featureTarget) return false;\n  if (!e.featureTarget.properties) return false;\n  return e.featureTarget.properties.active === Constants.activeStates.ACTIVE &&\n    e.featureTarget.properties.meta === Constants.meta.FEATURE;\n}\n\nexport function isInactiveFeature(e) {\n  if (!e.featureTarget) return false;\n  if (!e.featureTarget.properties) return false;\n  return e.featureTarget.properties.active === Constants.activeStates.INACTIVE &&\n    e.featureTarget.properties.meta === Constants.meta.FEATURE;\n}\n\nexport function noTarget(e) {\n  return e.featureTarget === undefined;\n}\n\nexport function isFeature(e) {\n  if (!e.featureTarget) return false;\n  if (!e.featureTarget.properties) return false;\n  return e.featureTarget.properties.meta === Constants.meta.FEATURE;\n}\n\nexport function isVertex(e) {\n  const featureTarget = e.featureTarget;\n  if (!featureTarget) return false;\n  if (!featureTarget.properties) return false;\n  return featureTarget.properties.meta === Constants.meta.VERTEX;\n}\n\nexport function isShiftDown(e) {\n  if (!e.originalEvent) return false;\n  return e.originalEvent.shiftKey === true;\n}\n\nexport function isEscapeKey(e) {\n  return e.keyCode === 27;\n}\n\nexport function isEnterKey(e) {\n  return e.keyCode === 13;\n}\n\nexport function isTrue() {\n  return true;\n}\n","/**\n * A standalone point geometry with useful accessor, comparison, and\n * modification methods.\n *\n * @class\n * @param {number} x the x-coordinate. This could be longitude or screen pixels, or any other sort of unit.\n * @param {number} y the y-coordinate. This could be latitude or screen pixels, or any other sort of unit.\n *\n * @example\n * const point = new Point(-77, 38);\n */\nexport default function Point(x, y) {\n    this.x = x;\n    this.y = y;\n}\n\nPoint.prototype = {\n    /**\n     * Clone this point, returning a new point that can be modified\n     * without affecting the old one.\n     * @return {Point} the clone\n     */\n    clone() { return new Point(this.x, this.y); },\n\n    /**\n     * Add this point's x & y coordinates to another point,\n     * yielding a new point.\n     * @param {Point} p the other point\n     * @return {Point} output point\n     */\n    add(p) { return this.clone()._add(p); },\n\n    /**\n     * Subtract this point's x & y coordinates to from point,\n     * yielding a new point.\n     * @param {Point} p the other point\n     * @return {Point} output point\n     */\n    sub(p) { return this.clone()._sub(p); },\n\n    /**\n     * Multiply this point's x & y coordinates by point,\n     * yielding a new point.\n     * @param {Point} p the other point\n     * @return {Point} output point\n     */\n    multByPoint(p) { return this.clone()._multByPoint(p); },\n\n    /**\n     * Divide this point's x & y coordinates by point,\n     * yielding a new point.\n     * @param {Point} p the other point\n     * @return {Point} output point\n     */\n    divByPoint(p) { return this.clone()._divByPoint(p); },\n\n    /**\n     * Multiply this point's x & y coordinates by a factor,\n     * yielding a new point.\n     * @param {number} k factor\n     * @return {Point} output point\n     */\n    mult(k) { return this.clone()._mult(k); },\n\n    /**\n     * Divide this point's x & y coordinates by a factor,\n     * yielding a new point.\n     * @param {number} k factor\n     * @return {Point} output point\n     */\n    div(k) { return this.clone()._div(k); },\n\n    /**\n     * Rotate this point around the 0, 0 origin by an angle a,\n     * given in radians\n     * @param {number} a angle to rotate around, in radians\n     * @return {Point} output point\n     */\n    rotate(a) { return this.clone()._rotate(a); },\n\n    /**\n     * Rotate this point around p point by an angle a,\n     * given in radians\n     * @param {number} a angle to rotate around, in radians\n     * @param {Point} p Point to rotate around\n     * @return {Point} output point\n     */\n    rotateAround(a, p) { return this.clone()._rotateAround(a, p); },\n\n    /**\n     * Multiply this point by a 4x1 transformation matrix\n     * @param {[number, number, number, number]} m transformation matrix\n     * @return {Point} output point\n     */\n    matMult(m) { return this.clone()._matMult(m); },\n\n    /**\n     * Calculate this point but as a unit vector from 0, 0, meaning\n     * that the distance from the resulting point to the 0, 0\n     * coordinate will be equal to 1 and the angle from the resulting\n     * point to the 0, 0 coordinate will be the same as before.\n     * @return {Point} unit vector point\n     */\n    unit() { return this.clone()._unit(); },\n\n    /**\n     * Compute a perpendicular point, where the new y coordinate\n     * is the old x coordinate and the new x coordinate is the old y\n     * coordinate multiplied by -1\n     * @return {Point} perpendicular point\n     */\n    perp() { return this.clone()._perp(); },\n\n    /**\n     * Return a version of this point with the x & y coordinates\n     * rounded to integers.\n     * @return {Point} rounded point\n     */\n    round() { return this.clone()._round(); },\n\n    /**\n     * Return the magnitude of this point: this is the Euclidean\n     * distance from the 0, 0 coordinate to this point's x and y\n     * coordinates.\n     * @return {number} magnitude\n     */\n    mag() {\n        return Math.sqrt(this.x * this.x + this.y * this.y);\n    },\n\n    /**\n     * Judge whether this point is equal to another point, returning\n     * true or false.\n     * @param {Point} other the other point\n     * @return {boolean} whether the points are equal\n     */\n    equals(other) {\n        return this.x === other.x &&\n               this.y === other.y;\n    },\n\n    /**\n     * Calculate the distance from this point to another point\n     * @param {Point} p the other point\n     * @return {number} distance\n     */\n    dist(p) {\n        return Math.sqrt(this.distSqr(p));\n    },\n\n    /**\n     * Calculate the distance from this point to another point,\n     * without the square root step. Useful if you're comparing\n     * relative distances.\n     * @param {Point} p the other point\n     * @return {number} distance\n     */\n    distSqr(p) {\n        const dx = p.x - this.x,\n            dy = p.y - this.y;\n        return dx * dx + dy * dy;\n    },\n\n    /**\n     * Get the angle from the 0, 0 coordinate to this point, in radians\n     * coordinates.\n     * @return {number} angle\n     */\n    angle() {\n        return Math.atan2(this.y, this.x);\n    },\n\n    /**\n     * Get the angle from this point to another point, in radians\n     * @param {Point} b the other point\n     * @return {number} angle\n     */\n    angleTo(b) {\n        return Math.atan2(this.y - b.y, this.x - b.x);\n    },\n\n    /**\n     * Get the angle between this point and another point, in radians\n     * @param {Point} b the other point\n     * @return {number} angle\n     */\n    angleWith(b) {\n        return this.angleWithSep(b.x, b.y);\n    },\n\n    /**\n     * Find the angle of the two vectors, solving the formula for\n     * the cross product a x b = |a||b|sin(θ) for θ.\n     * @param {number} x the x-coordinate\n     * @param {number} y the y-coordinate\n     * @return {number} the angle in radians\n     */\n    angleWithSep(x, y) {\n        return Math.atan2(\n            this.x * y - this.y * x,\n            this.x * x + this.y * y);\n    },\n\n    /** @param {[number, number, number, number]} m */\n    _matMult(m) {\n        const x = m[0] * this.x + m[1] * this.y,\n            y = m[2] * this.x + m[3] * this.y;\n        this.x = x;\n        this.y = y;\n        return this;\n    },\n\n    /** @param {Point} p */\n    _add(p) {\n        this.x += p.x;\n        this.y += p.y;\n        return this;\n    },\n\n    /** @param {Point} p */\n    _sub(p) {\n        this.x -= p.x;\n        this.y -= p.y;\n        return this;\n    },\n\n    /** @param {number} k */\n    _mult(k) {\n        this.x *= k;\n        this.y *= k;\n        return this;\n    },\n\n    /** @param {number} k */\n    _div(k) {\n        this.x /= k;\n        this.y /= k;\n        return this;\n    },\n\n    /** @param {Point} p */\n    _multByPoint(p) {\n        this.x *= p.x;\n        this.y *= p.y;\n        return this;\n    },\n\n    /** @param {Point} p */\n    _divByPoint(p) {\n        this.x /= p.x;\n        this.y /= p.y;\n        return this;\n    },\n\n    _unit() {\n        this._div(this.mag());\n        return this;\n    },\n\n    _perp() {\n        const y = this.y;\n        this.y = this.x;\n        this.x = -y;\n        return this;\n    },\n\n    /** @param {number} angle */\n    _rotate(angle) {\n        const cos = Math.cos(angle),\n            sin = Math.sin(angle),\n            x = cos * this.x - sin * this.y,\n            y = sin * this.x + cos * this.y;\n        this.x = x;\n        this.y = y;\n        return this;\n    },\n\n    /**\n     * @param {number} angle\n     * @param {Point} p\n     */\n    _rotateAround(angle, p) {\n        const cos = Math.cos(angle),\n            sin = Math.sin(angle),\n            x = p.x + cos * (this.x - p.x) - sin * (this.y - p.y),\n            y = p.y + sin * (this.x - p.x) + cos * (this.y - p.y);\n        this.x = x;\n        this.y = y;\n        return this;\n    },\n\n    _round() {\n        this.x = Math.round(this.x);\n        this.y = Math.round(this.y);\n        return this;\n    },\n\n    constructor: Point\n};\n\n/**\n * Construct a point from an array if necessary, otherwise if the input\n * is already a Point, return it unchanged.\n * @param {Point | [number, number] | {x: number, y: number}} p input value\n * @return {Point} constructed point.\n * @example\n * // this\n * var point = Point.convert([0, 1]);\n * // is equivalent to\n * var point = new Point(0, 1);\n */\nPoint.convert = function (p) {\n    if (p instanceof Point) {\n        return /** @type {Point} */ (p);\n    }\n    if (Array.isArray(p)) {\n        return new Point(+p[0], +p[1]);\n    }\n    if (p.x !== undefined && p.y !== undefined) {\n        return new Point(+p.x, +p.y);\n    }\n    throw new Error('Expected [x, y] or {x, y} point format');\n};\n","import Point from '@mapbox/point-geometry';\n\n/**\n * Returns a Point representing a mouse event's position\n * relative to a containing element.\n *\n * @param {MouseEvent} mouseEvent\n * @param {Node} container\n * @returns {Point}\n */\nfunction mouseEventPoint(mouseEvent, container) {\n  const rect = container.getBoundingClientRect();\n  return new Point(\n    mouseEvent.clientX - rect.left - (container.clientLeft || 0),\n    mouseEvent.clientY - rect.top - (container.clientTop || 0)\n  );\n}\n\nexport default mouseEventPoint;\n","import * as Constants from '../constants.js';\n\n/**\n * Returns GeoJSON for a Point representing the\n * vertex of another feature.\n *\n * @param {string} parentId\n * @param {Array<number>} coordinates\n * @param {string} path - Dot-separated numbers indicating exactly\n *   where the point exists within its parent feature's coordinates.\n * @param {boolean} selected\n * @return {GeoJSON} Point\n */\n\nexport default function(parentId, coordinates, path, selected) {\n  return {\n    type: Constants.geojsonTypes.FEATURE,\n    properties: {\n      meta: Constants.meta.VERTEX,\n      parent: parentId,\n      coord_path: path,\n      active: (selected) ? Constants.activeStates.ACTIVE : Constants.activeStates.INACTIVE\n    },\n    geometry: {\n      type: Constants.geojsonTypes.POINT,\n      coordinates\n    }\n  };\n}\n","import * as Constants from '../constants.js';\n\nexport default function(parent, startVertex, endVertex) {\n  const startCoord = startVertex.geometry.coordinates;\n  const endCoord = endVertex.geometry.coordinates;\n\n  // If a coordinate exceeds the projection, we can't calculate a midpoint,\n  // so run away\n  if (startCoord[1] > Constants.LAT_RENDERED_MAX ||\n    startCoord[1] < Constants.LAT_RENDERED_MIN ||\n    endCoord[1] > Constants.LAT_RENDERED_MAX ||\n    endCoord[1] < Constants.LAT_RENDERED_MIN) {\n    return null;\n  }\n\n  const mid = {\n    lng: (startCoord[0] + endCoord[0]) / 2,\n    lat: (startCoord[1] + endCoord[1]) / 2\n  };\n\n  return {\n    type: Constants.geojsonTypes.FEATURE,\n    properties: {\n      meta: Constants.meta.MIDPOINT,\n      parent,\n      lng: mid.lng,\n      lat: mid.lat,\n      coord_path: endVertex.properties.coord_path\n    },\n    geometry: {\n      type: Constants.geojsonTypes.POINT,\n      coordinates: [mid.lng, mid.lat]\n    }\n  };\n}\n","import createVertex from './create_vertex.js';\nimport createMidpoint from './create_midpoint.js';\nimport * as Constants from '../constants.js';\n\nfunction createSupplementaryPoints(geojson, options = {}, basePath = null) {\n  const { type, coordinates } = geojson.geometry;\n  const featureId = geojson.properties && geojson.properties.id;\n\n  let supplementaryPoints = [];\n\n  if (type === Constants.geojsonTypes.POINT) {\n    // For points, just create a vertex\n    supplementaryPoints.push(createVertex(featureId, coordinates, basePath, isSelectedPath(basePath)));\n  } else if (type === Constants.geojsonTypes.POLYGON) {\n    // Cycle through a Polygon's rings and\n    // process each line\n    coordinates.forEach((line, lineIndex) => {\n      processLine(line, (basePath !== null) ? `${basePath}.${lineIndex}` : String(lineIndex));\n    });\n  } else if (type === Constants.geojsonTypes.LINE_STRING) {\n    processLine(coordinates, basePath);\n  } else if (type.indexOf(Constants.geojsonTypes.MULTI_PREFIX) === 0) {\n    processMultiGeometry();\n  }\n\n  function processLine(line, lineBasePath) {\n    let firstPointString = '';\n    let lastVertex = null;\n    line.forEach((point, pointIndex) => {\n      const pointPath = (lineBasePath !== undefined && lineBasePath !== null) ? `${lineBasePath}.${pointIndex}` : String(pointIndex);\n      const vertex = createVertex(featureId, point, pointPath, isSelectedPath(pointPath));\n\n      // If we're creating midpoints, check if there was a\n      // vertex before this one. If so, add a midpoint\n      // between that vertex and this one.\n      if (options.midpoints && lastVertex) {\n        const midpoint = createMidpoint(featureId, lastVertex, vertex);\n        if (midpoint) {\n          supplementaryPoints.push(midpoint);\n        }\n      }\n      lastVertex = vertex;\n\n      // A Polygon line's last point is the same as the first point. If we're on the last\n      // point, we want to draw a midpoint before it but not another vertex on it\n      // (since we already a vertex there, from the first point).\n      const stringifiedPoint = JSON.stringify(point);\n      if (firstPointString !== stringifiedPoint) {\n        supplementaryPoints.push(vertex);\n      }\n      if (pointIndex === 0) {\n        firstPointString = stringifiedPoint;\n      }\n    });\n  }\n\n  function isSelectedPath(path) {\n    if (!options.selectedPaths) return false;\n    return options.selectedPaths.indexOf(path) !== -1;\n  }\n\n  // Split a multi-geometry into constituent\n  // geometries, and accumulate the supplementary points\n  // for each of those constituents\n  function processMultiGeometry() {\n    const subType = type.replace(Constants.geojsonTypes.MULTI_PREFIX, '');\n    coordinates.forEach((subCoordinates, index) => {\n      const subFeature = {\n        type: Constants.geojsonTypes.FEATURE,\n        properties: geojson.properties,\n        geometry: {\n          type: subType,\n          coordinates: subCoordinates\n        }\n      };\n      supplementaryPoints = supplementaryPoints.concat(createSupplementaryPoints(subFeature, options, index));\n    });\n  }\n\n  return supplementaryPoints;\n}\n\nexport default createSupplementaryPoints;\n","export default {\n  enable(ctx) {\n    setTimeout(() => {\n      // First check we've got a map and some context.\n      if (!ctx.map || !ctx.map.doubleClickZoom || !ctx._ctx || !ctx._ctx.store || !ctx._ctx.store.getInitialConfigValue) return;\n      // Now check initial state wasn't false (we leave it disabled if so)\n      if (!ctx._ctx.store.getInitialConfigValue('doubleClickZoom')) return;\n      ctx.map.doubleClickZoom.enable();\n    }, 0);\n  },\n  disable(ctx) {\n    setTimeout(() => {\n      if (!ctx.map || !ctx.map.doubleClickZoom) return;\n      // Always disable here, as it's necessary in some cases.\n      ctx.map.doubleClickZoom.disable();\n    }, 0);\n  }\n};\n","import * as Constants from '../constants.js';\n\nconst {\n  LAT_MIN,\n  LAT_MAX,\n  LAT_RENDERED_MIN,\n  LAT_RENDERED_MAX,\n  LNG_MIN,\n  LNG_MAX,\n} = Constants;\nfunction extent(feature) {\n  const depth = {\n    Point: 0,\n    LineString: 1,\n    Polygon: 2,\n    MultiPoint: 1,\n    MultiLineString: 2,\n    MultiPolygon: 3,\n  }[feature.geometry.type];\n\n  const coords = [feature.geometry.coordinates].flat(depth);\n  const lngs = coords.map(coord => coord[0]);\n  const lats = coords.map(coord => coord[1]);\n  const min = vals => Math.min.apply(null, vals);\n  const max = vals => Math.max.apply(null, vals);\n  return [min(lngs), min(lats), max(lngs), max(lats)];\n}\n\n// Ensure that we do not drag north-south far enough for\n// - any part of any feature to exceed the poles\n// - any feature to be completely lost in the space between the projection's\n//   edge and the poles, such that it couldn't be re-selected and moved back\nexport default function(geojsonFeatures, delta) {\n  // \"inner edge\" = a feature's latitude closest to the equator\n  let northInnerEdge = LAT_MIN;\n  let southInnerEdge = LAT_MAX;\n  // \"outer edge\" = a feature's latitude furthest from the equator\n  let northOuterEdge = LAT_MIN;\n  let southOuterEdge = LAT_MAX;\n\n  let westEdge = LNG_MAX;\n  let eastEdge = LNG_MIN;\n\n  geojsonFeatures.forEach((feature) => {\n    const bounds = extent(feature);\n    const featureSouthEdge = bounds[1];\n    const featureNorthEdge = bounds[3];\n    const featureWestEdge = bounds[0];\n    const featureEastEdge = bounds[2];\n    if (featureSouthEdge > northInnerEdge) northInnerEdge = featureSouthEdge;\n    if (featureNorthEdge < southInnerEdge) southInnerEdge = featureNorthEdge;\n    if (featureNorthEdge > northOuterEdge) northOuterEdge = featureNorthEdge;\n    if (featureSouthEdge < southOuterEdge) southOuterEdge = featureSouthEdge;\n    if (featureWestEdge < westEdge) westEdge = featureWestEdge;\n    if (featureEastEdge > eastEdge) eastEdge = featureEastEdge;\n  });\n\n\n  // These changes are not mutually exclusive: we might hit the inner\n  // edge but also have hit the outer edge and therefore need\n  // another readjustment\n  const constrainedDelta = delta;\n  if (northInnerEdge + constrainedDelta.lat > LAT_RENDERED_MAX) {\n    constrainedDelta.lat = LAT_RENDERED_MAX - northInnerEdge;\n  }\n  if (northOuterEdge + constrainedDelta.lat > LAT_MAX) {\n    constrainedDelta.lat = LAT_MAX - northOuterEdge;\n  }\n  if (southInnerEdge + constrainedDelta.lat < LAT_RENDERED_MIN) {\n    constrainedDelta.lat = LAT_RENDERED_MIN - southInnerEdge;\n  }\n  if (southOuterEdge + constrainedDelta.lat < LAT_MIN) {\n    constrainedDelta.lat = LAT_MIN - southOuterEdge;\n  }\n  if (westEdge + constrainedDelta.lng <= LNG_MIN) {\n    constrainedDelta.lng += Math.ceil(Math.abs(constrainedDelta.lng) / 360) * 360;\n  }\n  if (eastEdge + constrainedDelta.lng >= LNG_MAX) {\n    constrainedDelta.lng -= Math.ceil(Math.abs(constrainedDelta.lng) / 360) * 360;\n  }\n\n  return constrainedDelta;\n}\n","import constrainFeatureMovement from './constrain_feature_movement.js';\nimport * as Constants from '../constants.js';\n\nexport default function(features, delta) {\n  const constrainedDelta = constrainFeatureMovement(features.map(feature => feature.toGeoJSON()), delta);\n\n  features.forEach((feature) => {\n    const currentCoordinates = feature.getCoordinates();\n\n    const moveCoordinate = (coord) => {\n      const point = {\n        lng: coord[0] + constrainedDelta.lng,\n        lat: coord[1] + constrainedDelta.lat\n      };\n      return [point.lng, point.lat];\n    };\n    const moveRing = ring => ring.map(coord => moveCoordinate(coord));\n    const moveMultiPolygon = multi => multi.map(ring => moveRing(ring));\n\n    let nextCoordinates;\n    if (feature.type === Constants.geojsonTypes.POINT) {\n      nextCoordinates = moveCoordinate(currentCoordinates);\n    } else if (feature.type === Constants.geojsonTypes.LINE_STRING || feature.type === Constants.geojsonTypes.MULTI_POINT) {\n      nextCoordinates = currentCoordinates.map(moveCoordinate);\n    } else if (feature.type === Constants.geojsonTypes.POLYGON || feature.type === Constants.geojsonTypes.MULTI_LINE_STRING) {\n      nextCoordinates = currentCoordinates.map(moveRing);\n    } else if (feature.type === Constants.geojsonTypes.MULTI_POLYGON) {\n      nextCoordinates = currentCoordinates.map(moveMultiPolygon);\n    }\n\n    feature.incomingCoords(nextCoordinates);\n  });\n}\n","import * as CommonSelectors from '../lib/common_selectors.js';\nimport mouseEventPoint from '../lib/mouse_event_point.js';\nimport createSupplementaryPoints from '../lib/create_supplementary_points.js';\nimport StringSet from '../lib/string_set.js';\nimport doubleClickZoom from '../lib/double_click_zoom.js';\nimport moveFeatures from '../lib/move_features.js';\nimport * as Constants from '../constants.js';\n\nconst SimpleSelect = {};\n\nSimpleSelect.onSetup = function(opts) {\n  // turn the opts into state.\n  const state = {\n    dragMoveLocation: null,\n    boxSelectStartLocation: null,\n    boxSelectElement: undefined,\n    boxSelecting: false,\n    canBoxSelect: false,\n    dragMoving: false,\n    canDragMove: false,\n    initialDragPanState: this.map.dragPan.isEnabled(),\n    initiallySelectedFeatureIds: opts.featureIds || []\n  };\n\n  this.setSelected(state.initiallySelectedFeatureIds.filter(id => this.getFeature(id) !== undefined));\n  this.fireActionable();\n\n  this.setActionableState({\n    combineFeatures: true,\n    uncombineFeatures: true,\n    trash: true\n  });\n\n  return state;\n};\n\nSimpleSelect.fireUpdate = function() {\n  this.fire(Constants.events.UPDATE, {\n    action: Constants.updateActions.MOVE,\n    features: this.getSelected().map(f => f.toGeoJSON())\n  });\n};\n\nSimpleSelect.fireActionable = function() {\n  const selectedFeatures = this.getSelected();\n\n  const multiFeatures = selectedFeatures.filter(\n    feature => this.isInstanceOf('MultiFeature', feature)\n  );\n\n  let combineFeatures = false;\n\n  if (selectedFeatures.length > 1) {\n    combineFeatures = true;\n    const featureType = selectedFeatures[0].type.replace('Multi', '');\n    selectedFeatures.forEach((feature) => {\n      if (feature.type.replace('Multi', '') !== featureType) {\n        combineFeatures = false;\n      }\n    });\n  }\n\n  const uncombineFeatures = multiFeatures.length > 0;\n  const trash = selectedFeatures.length > 0;\n\n  this.setActionableState({\n    combineFeatures, uncombineFeatures, trash\n  });\n};\n\nSimpleSelect.getUniqueIds = function(allFeatures) {\n  if (!allFeatures.length) return [];\n  const ids = allFeatures.map(s => s.properties.id)\n    .filter(id => id !== undefined)\n    .reduce((memo, id) => {\n      memo.add(id);\n      return memo;\n    }, new StringSet());\n\n  return ids.values();\n};\n\nSimpleSelect.stopExtendedInteractions = function(state) {\n  if (state.boxSelectElement) {\n    if (state.boxSelectElement.parentNode) state.boxSelectElement.parentNode.removeChild(state.boxSelectElement);\n    state.boxSelectElement = null;\n  }\n\n  if ((state.canDragMove || state.canBoxSelect) && state.initialDragPanState === true) {\n    this.map.dragPan.enable();\n  }\n\n  state.boxSelecting = false;\n  state.canBoxSelect = false;\n  state.dragMoving = false;\n  state.canDragMove = false;\n};\n\nSimpleSelect.onStop = function() {\n  doubleClickZoom.enable(this);\n};\n\nSimpleSelect.onMouseMove = function(state, e) {\n  const isFeature = CommonSelectors.isFeature(e);\n  if (isFeature && state.dragMoving) this.fireUpdate();\n\n  // On mousemove that is not a drag, stop extended interactions.\n  // This is useful if you drag off the canvas, release the button,\n  // then move the mouse back over the canvas --- we don't allow the\n  // interaction to continue then, but we do let it continue if you held\n  // the mouse button that whole time\n  this.stopExtendedInteractions(state);\n\n  // Skip render\n  return true;\n};\n\nSimpleSelect.onMouseOut = function(state) {\n  // As soon as you mouse leaves the canvas, update the feature\n  if (state.dragMoving) return this.fireUpdate();\n\n  // Skip render\n  return true;\n};\n\nSimpleSelect.onTap = SimpleSelect.onClick = function(state, e) {\n  // Click (with or without shift) on no feature\n  if (CommonSelectors.noTarget(e)) return this.clickAnywhere(state, e); // also tap\n  if (CommonSelectors.isOfMetaType(Constants.meta.VERTEX)(e)) return this.clickOnVertex(state, e); //tap\n  if (CommonSelectors.isFeature(e)) return this.clickOnFeature(state, e);\n};\n\nSimpleSelect.clickAnywhere = function (state) {\n  // Clear the re-render selection\n  const wasSelected = this.getSelectedIds();\n  if (wasSelected.length) {\n    this.clearSelectedFeatures();\n    wasSelected.forEach(id => this.doRender(id));\n  }\n  doubleClickZoom.enable(this);\n  this.stopExtendedInteractions(state);\n};\n\nSimpleSelect.clickOnVertex = function(state, e) {\n  // Enter direct select mode\n  this.changeMode(Constants.modes.DIRECT_SELECT, {\n    featureId: e.featureTarget.properties.parent,\n    coordPath: e.featureTarget.properties.coord_path,\n    startPos: e.lngLat\n  });\n  this.updateUIClasses({ mouse: Constants.cursors.MOVE });\n};\n\nSimpleSelect.startOnActiveFeature = function(state, e) {\n  // Stop any already-underway extended interactions\n  this.stopExtendedInteractions(state);\n\n  // Disable map.dragPan immediately so it can't start\n  this.map.dragPan.disable();\n\n  // Re-render it and enable drag move\n  this.doRender(e.featureTarget.properties.id);\n\n  // Set up the state for drag moving\n  state.canDragMove = true;\n  state.dragMoveLocation = e.lngLat;\n};\n\nSimpleSelect.clickOnFeature = function(state, e) {\n  // Stop everything\n  doubleClickZoom.disable(this);\n  this.stopExtendedInteractions(state);\n\n  const isShiftClick = CommonSelectors.isShiftDown(e);\n  const selectedFeatureIds = this.getSelectedIds();\n  const featureId = e.featureTarget.properties.id;\n  const isFeatureSelected = this.isSelected(featureId);\n\n  // Click (without shift) on any selected feature but a point\n  if (!isShiftClick && isFeatureSelected && this.getFeature(featureId).type !== Constants.geojsonTypes.POINT) {\n    // Enter direct select mode\n    return this.changeMode(Constants.modes.DIRECT_SELECT, {\n      featureId\n    });\n  }\n\n  // Shift-click on a selected feature\n  if (isFeatureSelected && isShiftClick) {\n    // Deselect it\n    this.deselect(featureId);\n    this.updateUIClasses({ mouse: Constants.cursors.POINTER });\n    if (selectedFeatureIds.length === 1) {\n      doubleClickZoom.enable(this);\n    }\n  // Shift-click on an unselected feature\n  } else if (!isFeatureSelected && isShiftClick) {\n    // Add it to the selection\n    this.select(featureId);\n    this.updateUIClasses({ mouse: Constants.cursors.MOVE });\n  // Click (without shift) on an unselected feature\n  } else if (!isFeatureSelected && !isShiftClick) {\n    // Make it the only selected feature\n    selectedFeatureIds.forEach(id => this.doRender(id));\n    this.setSelected(featureId);\n    this.updateUIClasses({ mouse: Constants.cursors.MOVE });\n  }\n\n  // No matter what, re-render the clicked feature\n  this.doRender(featureId);\n};\n\nSimpleSelect.onMouseDown = function(state, e) {\n  state.initialDragPanState = this.map.dragPan.isEnabled();\n  if (CommonSelectors.isActiveFeature(e)) return this.startOnActiveFeature(state, e);\n  if (this.drawConfig.boxSelect && CommonSelectors.isShiftMousedown(e)) return this.startBoxSelect(state, e);\n};\n\nSimpleSelect.startBoxSelect = function(state, e) {\n  this.stopExtendedInteractions(state);\n  this.map.dragPan.disable();\n  // Enable box select\n  state.boxSelectStartLocation = mouseEventPoint(e.originalEvent, this.map.getContainer());\n  state.canBoxSelect = true;\n};\n\nSimpleSelect.onTouchStart = function(state, e) {\n  if (CommonSelectors.isActiveFeature(e)) return this.startOnActiveFeature(state, e);\n};\n\nSimpleSelect.onDrag = function(state, e) {\n  if (state.canDragMove) return this.dragMove(state, e);\n  if (this.drawConfig.boxSelect && state.canBoxSelect) return this.whileBoxSelect(state, e);\n};\n\nSimpleSelect.whileBoxSelect = function(state, e) {\n  state.boxSelecting = true;\n  this.updateUIClasses({ mouse: Constants.cursors.ADD });\n\n  // Create the box node if it doesn't exist\n  if (!state.boxSelectElement) {\n    state.boxSelectElement = document.createElement('div');\n    state.boxSelectElement.classList.add(Constants.classes.BOX_SELECT);\n    this.map.getContainer().appendChild(state.boxSelectElement);\n  }\n\n  // Adjust the box node's width and xy position\n  const current = mouseEventPoint(e.originalEvent, this.map.getContainer());\n  const minX = Math.min(state.boxSelectStartLocation.x, current.x);\n  const maxX = Math.max(state.boxSelectStartLocation.x, current.x);\n  const minY = Math.min(state.boxSelectStartLocation.y, current.y);\n  const maxY = Math.max(state.boxSelectStartLocation.y, current.y);\n  const translateValue = `translate(${minX}px, ${minY}px)`;\n  state.boxSelectElement.style.transform = translateValue;\n  state.boxSelectElement.style.WebkitTransform = translateValue;\n  state.boxSelectElement.style.width = `${maxX - minX}px`;\n  state.boxSelectElement.style.height = `${maxY - minY}px`;\n};\n\nSimpleSelect.dragMove = function(state, e) {\n  // Dragging when drag move is enabled\n  state.dragMoving = true;\n  e.originalEvent.stopPropagation();\n\n  const delta = {\n    lng: e.lngLat.lng - state.dragMoveLocation.lng,\n    lat: e.lngLat.lat - state.dragMoveLocation.lat\n  };\n\n  moveFeatures(this.getSelected(), delta);\n\n  state.dragMoveLocation = e.lngLat;\n};\n\nSimpleSelect.onTouchEnd = SimpleSelect.onMouseUp = function(state, e) {\n  // End any extended interactions\n  if (state.dragMoving) {\n    this.fireUpdate();\n  } else if (state.boxSelecting) {\n    const bbox = [\n      state.boxSelectStartLocation,\n      mouseEventPoint(e.originalEvent, this.map.getContainer())\n    ];\n    const featuresInBox = this.featuresAt(null, bbox, 'click');\n    const idsToSelect = this.getUniqueIds(featuresInBox)\n      .filter(id => !this.isSelected(id));\n\n    if (idsToSelect.length) {\n      this.select(idsToSelect);\n      idsToSelect.forEach(id => this.doRender(id));\n      this.updateUIClasses({ mouse: Constants.cursors.MOVE });\n    }\n  }\n  this.stopExtendedInteractions(state);\n};\n\nSimpleSelect.toDisplayFeatures = function(state, geojson, display) {\n  geojson.properties.active = (this.isSelected(geojson.properties.id)) ?\n    Constants.activeStates.ACTIVE : Constants.activeStates.INACTIVE;\n  display(geojson);\n  this.fireActionable();\n  if (geojson.properties.active !== Constants.activeStates.ACTIVE ||\n    geojson.geometry.type === Constants.geojsonTypes.POINT) return;\n  createSupplementaryPoints(geojson).forEach(display);\n};\n\nSimpleSelect.onTrash = function() {\n  this.deleteFeature(this.getSelectedIds());\n  this.fireActionable();\n};\n\nSimpleSelect.onCombineFeatures = function() {\n  const selectedFeatures = this.getSelected();\n\n  if (selectedFeatures.length === 0 || selectedFeatures.length < 2) return;\n\n  const coordinates = [], featuresCombined = [];\n  const featureType = selectedFeatures[0].type.replace('Multi', '');\n\n  for (let i = 0; i < selectedFeatures.length; i++) {\n    const feature = selectedFeatures[i];\n\n    if (feature.type.replace('Multi', '') !== featureType) {\n      return;\n    }\n    if (feature.type.includes('Multi')) {\n      feature.getCoordinates().forEach((subcoords) => {\n        coordinates.push(subcoords);\n      });\n    } else {\n      coordinates.push(feature.getCoordinates());\n    }\n\n    featuresCombined.push(feature.toGeoJSON());\n  }\n\n  if (featuresCombined.length > 1) {\n    const multiFeature = this.newFeature({\n      type: Constants.geojsonTypes.FEATURE,\n      properties: featuresCombined[0].properties,\n      geometry: {\n        type: `Multi${featureType}`,\n        coordinates\n      }\n    });\n\n    this.addFeature(multiFeature);\n    this.deleteFeature(this.getSelectedIds(), { silent: true });\n    this.setSelected([multiFeature.id]);\n\n    this.fire(Constants.events.COMBINE_FEATURES, {\n      createdFeatures: [multiFeature.toGeoJSON()],\n      deletedFeatures: featuresCombined\n    });\n  }\n  this.fireActionable();\n};\n\nSimpleSelect.onUncombineFeatures = function() {\n  const selectedFeatures = this.getSelected();\n  if (selectedFeatures.length === 0) return;\n\n  const createdFeatures = [];\n  const featuresUncombined = [];\n\n  for (let i = 0; i < selectedFeatures.length; i++) {\n    const feature = selectedFeatures[i];\n\n    if (this.isInstanceOf('MultiFeature', feature)) {\n      feature.getFeatures().forEach((subFeature) => {\n        this.addFeature(subFeature);\n        subFeature.properties = feature.properties;\n        createdFeatures.push(subFeature.toGeoJSON());\n        this.select([subFeature.id]);\n      });\n      this.deleteFeature(feature.id, { silent: true });\n      featuresUncombined.push(feature.toGeoJSON());\n    }\n  }\n\n  if (createdFeatures.length > 1) {\n    this.fire(Constants.events.UNCOMBINE_FEATURES, {\n      createdFeatures,\n      deletedFeatures: featuresUncombined\n    });\n  }\n  this.fireActionable();\n};\n\nexport default SimpleSelect;\n","import { noTarget, isOfMetaType, isActiveFeature, isInactiveFeature, isShiftDown } from '../lib/common_selectors.js';\nimport createSupplementaryPoints from '../lib/create_supplementary_points.js';\nimport constrainFeatureMovement from '../lib/constrain_feature_movement.js';\nimport doubleClickZoom from '../lib/double_click_zoom.js';\nimport * as Constants from '../constants.js';\nimport moveFeatures from '../lib/move_features.js';\n\nconst isVertex = isOfMetaType(Constants.meta.VERTEX);\nconst isMidpoint = isOfMetaType(Constants.meta.MIDPOINT);\n\nconst DirectSelect = {};\n\n// INTERNAL FUCNTIONS\n\nDirectSelect.fireUpdate = function() {\n  this.fire(Constants.events.UPDATE, {\n    action: Constants.updateActions.CHANGE_COORDINATES,\n    features: this.getSelected().map(f => f.toGeoJSON())\n  });\n};\n\nDirectSelect.fireActionable = function(state) {\n  this.setActionableState({\n    combineFeatures: false,\n    uncombineFeatures: false,\n    trash: state.selectedCoordPaths.length > 0\n  });\n};\n\nDirectSelect.startDragging = function(state, e) {\n  state.initialDragPanState = this.map.dragPan.isEnabled();\n\n  this.map.dragPan.disable();\n  state.canDragMove = true;\n  state.dragMoveLocation = e.lngLat;\n};\n\nDirectSelect.stopDragging = function(state) {\n  if (state.canDragMove && state.initialDragPanState === true) {\n    this.map.dragPan.enable();\n  }\n  state.dragMoving = false;\n  state.canDragMove = false;\n  state.dragMoveLocation = null;\n};\n\nDirectSelect.onVertex = function (state, e) {\n  this.startDragging(state, e);\n  const about = e.featureTarget.properties;\n  const selectedIndex = state.selectedCoordPaths.indexOf(about.coord_path);\n  if (!isShiftDown(e) && selectedIndex === -1) {\n    state.selectedCoordPaths = [about.coord_path];\n  } else if (isShiftDown(e) && selectedIndex === -1) {\n    state.selectedCoordPaths.push(about.coord_path);\n  }\n\n  const selectedCoordinates = this.pathsToCoordinates(state.featureId, state.selectedCoordPaths);\n  this.setSelectedCoordinates(selectedCoordinates);\n};\n\nDirectSelect.onMidpoint = function(state, e) {\n  this.startDragging(state, e);\n  const about = e.featureTarget.properties;\n  state.feature.addCoordinate(about.coord_path, about.lng, about.lat);\n  this.fireUpdate();\n  state.selectedCoordPaths = [about.coord_path];\n};\n\nDirectSelect.pathsToCoordinates = function(featureId, paths) {\n  return paths.map(coord_path => ({ feature_id: featureId, coord_path }));\n};\n\nDirectSelect.onFeature = function(state, e) {\n  if (state.selectedCoordPaths.length === 0) this.startDragging(state, e);\n  else this.stopDragging(state);\n};\n\nDirectSelect.dragFeature = function(state, e, delta) {\n  moveFeatures(this.getSelected(), delta);\n  state.dragMoveLocation = e.lngLat;\n};\n\nDirectSelect.dragVertex = function(state, e, delta) {\n  const selectedCoords = state.selectedCoordPaths.map(coord_path => state.feature.getCoordinate(coord_path));\n  const selectedCoordPoints = selectedCoords.map(coords => ({\n    type: Constants.geojsonTypes.FEATURE,\n    properties: {},\n    geometry: {\n      type: Constants.geojsonTypes.POINT,\n      coordinates: coords\n    }\n  }));\n\n  const constrainedDelta = constrainFeatureMovement(selectedCoordPoints, delta);\n  for (let i = 0; i < selectedCoords.length; i++) {\n    const coord = selectedCoords[i];\n    state.feature.updateCoordinate(state.selectedCoordPaths[i], coord[0] + constrainedDelta.lng, coord[1] + constrainedDelta.lat);\n  }\n};\n\nDirectSelect.clickNoTarget = function () {\n  this.changeMode(Constants.modes.SIMPLE_SELECT);\n};\n\nDirectSelect.clickInactive = function () {\n  this.changeMode(Constants.modes.SIMPLE_SELECT);\n};\n\nDirectSelect.clickActiveFeature = function (state) {\n  state.selectedCoordPaths = [];\n  this.clearSelectedCoordinates();\n  state.feature.changed();\n};\n\n// EXTERNAL FUNCTIONS\n\nDirectSelect.onSetup = function(opts) {\n  const featureId = opts.featureId;\n  const feature = this.getFeature(featureId);\n\n  if (!feature) {\n    throw new Error('You must provide a featureId to enter direct_select mode');\n  }\n\n  if (feature.type === Constants.geojsonTypes.POINT) {\n    throw new TypeError('direct_select mode doesn\\'t handle point features');\n  }\n\n  const state = {\n    featureId,\n    feature,\n    dragMoveLocation: opts.startPos || null,\n    dragMoving: false,\n    canDragMove: false,\n    selectedCoordPaths: opts.coordPath ? [opts.coordPath] : [],\n  };\n\n  this.setSelectedCoordinates(this.pathsToCoordinates(featureId, state.selectedCoordPaths));\n  this.setSelected(featureId);\n  doubleClickZoom.disable(this);\n\n  this.setActionableState({\n    trash: true\n  });\n\n  return state;\n};\n\nDirectSelect.onStop = function() {\n  doubleClickZoom.enable(this);\n  this.clearSelectedCoordinates();\n};\n\nDirectSelect.toDisplayFeatures = function(state, geojson, push) {\n  if (state.featureId === geojson.properties.id) {\n    geojson.properties.active = Constants.activeStates.ACTIVE;\n    push(geojson);\n    createSupplementaryPoints(geojson, {\n      map: this.map,\n      midpoints: true,\n      selectedPaths: state.selectedCoordPaths\n    }).forEach(push);\n  } else {\n    geojson.properties.active = Constants.activeStates.INACTIVE;\n    push(geojson);\n  }\n  this.fireActionable(state);\n};\n\nDirectSelect.onTrash = function(state) {\n  // Uses number-aware sorting to make sure '9' < '10'. Comparison is reversed because we want them\n  // in reverse order so that we can remove by index safely.\n  state.selectedCoordPaths\n    .sort((a, b) => b.localeCompare(a, 'en', { numeric: true }))\n    .forEach(id => state.feature.removeCoordinate(id));\n  this.fireUpdate();\n  state.selectedCoordPaths = [];\n  this.clearSelectedCoordinates();\n  this.fireActionable(state);\n  if (state.feature.isValid() === false) {\n    this.deleteFeature([state.featureId]);\n    this.changeMode(Constants.modes.SIMPLE_SELECT, {});\n  }\n};\n\nDirectSelect.onMouseMove = function(state, e) {\n  // On mousemove that is not a drag, stop vertex movement.\n  const isFeature = isActiveFeature(e);\n  const onVertex = isVertex(e);\n  const isMidPoint = isMidpoint(e);\n  const noCoords = state.selectedCoordPaths.length === 0;\n  if (isFeature && noCoords) this.updateUIClasses({ mouse: Constants.cursors.MOVE });\n  else if (onVertex && !noCoords) this.updateUIClasses({ mouse: Constants.cursors.MOVE });\n  else this.updateUIClasses({ mouse: Constants.cursors.NONE });\n\n  const isDraggableItem = onVertex || isFeature || isMidPoint;\n  if (isDraggableItem && state.dragMoving) this.fireUpdate();\n\n  this.stopDragging(state);\n\n  // Skip render\n  return true;\n};\n\nDirectSelect.onMouseOut = function(state) {\n  // As soon as you mouse leaves the canvas, update the feature\n  if (state.dragMoving) this.fireUpdate();\n\n  // Skip render\n  return true;\n};\n\nDirectSelect.onTouchStart = DirectSelect.onMouseDown = function(state, e) {\n  if (isVertex(e)) return this.onVertex(state, e);\n  if (isActiveFeature(e)) return this.onFeature(state, e);\n  if (isMidpoint(e)) return this.onMidpoint(state, e);\n};\n\nDirectSelect.onDrag = function(state, e) {\n  if (state.canDragMove !== true) return;\n  state.dragMoving = true;\n  e.originalEvent.stopPropagation();\n\n  const delta = {\n    lng: e.lngLat.lng - state.dragMoveLocation.lng,\n    lat: e.lngLat.lat - state.dragMoveLocation.lat\n  };\n  if (state.selectedCoordPaths.length > 0) this.dragVertex(state, e, delta);\n  else this.dragFeature(state, e, delta);\n\n  state.dragMoveLocation = e.lngLat;\n};\n\nDirectSelect.onClick = function(state, e) {\n  if (noTarget(e)) return this.clickNoTarget(state, e);\n  if (isActiveFeature(e)) return this.clickActiveFeature(state, e);\n  if (isInactiveFeature(e)) return this.clickInactive(state, e);\n  this.stopDragging(state);\n};\n\nDirectSelect.onTap = function(state, e) {\n  if (noTarget(e)) return this.clickNoTarget(state, e);\n  if (isActiveFeature(e)) return this.clickActiveFeature(state, e);\n  if (isInactiveFeature(e)) return this.clickInactive(state, e);\n};\n\nDirectSelect.onTouchEnd = DirectSelect.onMouseUp = function(state) {\n  if (state.dragMoving) {\n    this.fireUpdate();\n  }\n  this.stopDragging(state);\n};\n\nexport default DirectSelect;\n\n","import * as CommonSelectors from '../lib/common_selectors.js';\nimport * as Constants from '../constants.js';\n\nconst DrawPoint = {};\n\nDrawPoint.onSetup = function() {\n  const point = this.newFeature({\n    type: Constants.geojsonTypes.FEATURE,\n    properties: {},\n    geometry: {\n      type: Constants.geojsonTypes.POINT,\n      coordinates: []\n    }\n  });\n\n  this.addFeature(point);\n\n  this.clearSelectedFeatures();\n  this.updateUIClasses({ mouse: Constants.cursors.ADD });\n  this.activateUIButton(Constants.types.POINT);\n\n  this.setActionableState({\n    trash: true\n  });\n\n  return { point };\n};\n\nDrawPoint.stopDrawingAndRemove = function(state) {\n  this.deleteFeature([state.point.id], { silent: true });\n  this.changeMode(Constants.modes.SIMPLE_SELECT);\n};\n\nDrawPoint.onTap = DrawPoint.onClick = function(state, e) {\n  this.updateUIClasses({ mouse: Constants.cursors.MOVE });\n  state.point.updateCoordinate('', e.lngLat.lng, e.lngLat.lat);\n  this.fire(Constants.events.CREATE, {\n    features: [state.point.toGeoJSON()]\n  });\n  this.changeMode(Constants.modes.SIMPLE_SELECT, { featureIds: [state.point.id] });\n};\n\nDrawPoint.onStop = function(state) {\n  this.activateUIButton();\n  if (!state.point.getCoordinate().length) {\n    this.deleteFeature([state.point.id], { silent: true });\n  }\n};\n\nDrawPoint.toDisplayFeatures = function(state, geojson, display) {\n  // Never render the point we're drawing\n  const isActivePoint = geojson.properties.id === state.point.id;\n  geojson.properties.active = (isActivePoint) ? Constants.activeStates.ACTIVE : Constants.activeStates.INACTIVE;\n  if (!isActivePoint) return display(geojson);\n};\n\nDrawPoint.onTrash = DrawPoint.stopDrawingAndRemove;\n\nDrawPoint.onKeyUp = function(state, e) {\n  if (CommonSelectors.isEscapeKey(e) || CommonSelectors.isEnterKey(e)) {\n    return this.stopDrawingAndRemove(state, e);\n  }\n};\n\nexport default DrawPoint;\n","function isEventAtCoordinates(event, coordinates) {\n  if (!event.lngLat) return false;\n  return event.lngLat.lng === coordinates[0] && event.lngLat.lat === coordinates[1];\n}\n\nexport default isEventAtCoordinates;\n","import * as CommonSelectors from '../lib/common_selectors.js';\nimport doubleClickZoom from '../lib/double_click_zoom.js';\nimport * as Constants from '../constants.js';\nimport isEventAtCoordinates from '../lib/is_event_at_coordinates.js';\nimport createVertex from '../lib/create_vertex.js';\n\nconst DrawPolygon = {};\n\nDrawPolygon.onSetup = function() {\n  const polygon = this.newFeature({\n    type: Constants.geojsonTypes.FEATURE,\n    properties: {},\n    geometry: {\n      type: Constants.geojsonTypes.POLYGON,\n      coordinates: [[]]\n    }\n  });\n\n  this.addFeature(polygon);\n\n  this.clearSelectedFeatures();\n  doubleClickZoom.disable(this);\n  this.updateUIClasses({ mouse: Constants.cursors.ADD });\n  this.activateUIButton(Constants.types.POLYGON);\n  this.setActionableState({\n    trash: true\n  });\n\n  return {\n    polygon,\n    currentVertexPosition: 0\n  };\n};\n\nDrawPolygon.clickAnywhere = function(state, e) {\n  if (state.currentVertexPosition > 0 && isEventAtCoordinates(e, state.polygon.coordinates[0][state.currentVertexPosition - 1])) {\n    return this.changeMode(Constants.modes.SIMPLE_SELECT, { featureIds: [state.polygon.id] });\n  }\n  this.updateUIClasses({ mouse: Constants.cursors.ADD });\n  state.polygon.updateCoordinate(`0.${state.currentVertexPosition}`, e.lngLat.lng, e.lngLat.lat);\n  state.currentVertexPosition++;\n  state.polygon.updateCoordinate(`0.${state.currentVertexPosition}`, e.lngLat.lng, e.lngLat.lat);\n};\n\nDrawPolygon.clickOnVertex = function(state) {\n  return this.changeMode(Constants.modes.SIMPLE_SELECT, { featureIds: [state.polygon.id] });\n};\n\nDrawPolygon.onMouseMove = function(state, e) {\n  state.polygon.updateCoordinate(`0.${state.currentVertexPosition}`, e.lngLat.lng, e.lngLat.lat);\n  if (CommonSelectors.isVertex(e)) {\n    this.updateUIClasses({ mouse: Constants.cursors.POINTER });\n  }\n};\n\nDrawPolygon.onTap = DrawPolygon.onClick = function(state, e) {\n  if (CommonSelectors.isVertex(e)) return this.clickOnVertex(state, e);\n  return this.clickAnywhere(state, e);\n};\n\nDrawPolygon.onKeyUp = function(state, e) {\n  if (CommonSelectors.isEscapeKey(e)) {\n    this.deleteFeature([state.polygon.id], { silent: true });\n    this.changeMode(Constants.modes.SIMPLE_SELECT);\n  } else if (CommonSelectors.isEnterKey(e)) {\n    this.changeMode(Constants.modes.SIMPLE_SELECT, { featureIds: [state.polygon.id] });\n  }\n};\n\nDrawPolygon.onStop = function(state) {\n  this.updateUIClasses({ mouse: Constants.cursors.NONE });\n  doubleClickZoom.enable(this);\n  this.activateUIButton();\n\n  // check to see if we've deleted this feature\n  if (this.getFeature(state.polygon.id) === undefined) return;\n\n  //remove last added coordinate\n  state.polygon.removeCoordinate(`0.${state.currentVertexPosition}`);\n  if (state.polygon.isValid()) {\n    this.fire(Constants.events.CREATE, {\n      features: [state.polygon.toGeoJSON()]\n    });\n  } else {\n    this.deleteFeature([state.polygon.id], { silent: true });\n    this.changeMode(Constants.modes.SIMPLE_SELECT, {}, { silent: true });\n  }\n};\n\nDrawPolygon.toDisplayFeatures = function(state, geojson, display) {\n  const isActivePolygon = geojson.properties.id === state.polygon.id;\n  geojson.properties.active = (isActivePolygon) ? Constants.activeStates.ACTIVE : Constants.activeStates.INACTIVE;\n  if (!isActivePolygon) return display(geojson);\n\n  // Don't render a polygon until it has two positions\n  // (and a 3rd which is just the first repeated)\n  if (geojson.geometry.coordinates.length === 0) return;\n\n  const coordinateCount = geojson.geometry.coordinates[0].length;\n  // 2 coordinates after selecting a draw type\n  // 3 after creating the first point\n  if (coordinateCount < 3) {\n    return;\n  }\n  geojson.properties.meta = Constants.meta.FEATURE;\n  display(createVertex(state.polygon.id, geojson.geometry.coordinates[0][0], '0.0', false));\n  if (coordinateCount > 3) {\n    // Add a start position marker to the map, clicking on this will finish the feature\n    // This should only be shown when we're in a valid spot\n    const endPos = geojson.geometry.coordinates[0].length - 3;\n    display(createVertex(state.polygon.id, geojson.geometry.coordinates[0][endPos], `0.${endPos}`, false));\n  }\n  if (coordinateCount <= 4) {\n    // If we've only drawn two positions (plus the closer),\n    // make a LineString instead of a Polygon\n    const lineCoordinates = [\n      [geojson.geometry.coordinates[0][0][0], geojson.geometry.coordinates[0][0][1]], [geojson.geometry.coordinates[0][1][0], geojson.geometry.coordinates[0][1][1]]\n    ];\n    // create an initial vertex so that we can track the first point on mobile devices\n    display({\n      type: Constants.geojsonTypes.FEATURE,\n      properties: geojson.properties,\n      geometry: {\n        coordinates: lineCoordinates,\n        type: Constants.geojsonTypes.LINE_STRING\n      }\n    });\n    if (coordinateCount === 3) {\n      return;\n    }\n  }\n  // render the Polygon\n  return display(geojson);\n};\n\nDrawPolygon.onTrash = function(state) {\n  this.deleteFeature([state.polygon.id], { silent: true });\n  this.changeMode(Constants.modes.SIMPLE_SELECT);\n};\n\nexport default DrawPolygon;\n","import * as CommonSelectors from '../lib/common_selectors.js';\nimport isEventAtCoordinates from '../lib/is_event_at_coordinates.js';\nimport doubleClickZoom from '../lib/double_click_zoom.js';\nimport * as Constants from '../constants.js';\nimport createVertex from '../lib/create_vertex.js';\n\nconst DrawLineString = {};\n\nDrawLineString.onSetup = function(opts) {\n  opts = opts || {};\n  const featureId = opts.featureId;\n\n  let line, currentVertexPosition;\n  let direction = 'forward';\n  if (featureId) {\n    line = this.getFeature(featureId);\n    if (!line) {\n      throw new Error('Could not find a feature with the provided featureId');\n    }\n    let from = opts.from;\n    if (from && from.type === 'Feature' && from.geometry && from.geometry.type === 'Point') {\n      from = from.geometry;\n    }\n    if (from && from.type === 'Point' && from.coordinates && from.coordinates.length === 2) {\n      from = from.coordinates;\n    }\n    if (!from || !Array.isArray(from)) {\n      throw new Error('Please use the `from` property to indicate which point to continue the line from');\n    }\n    const lastCoord = line.coordinates.length - 1;\n    if (line.coordinates[lastCoord][0] === from[0] && line.coordinates[lastCoord][1] === from[1]) {\n      currentVertexPosition = lastCoord + 1;\n      // add one new coordinate to continue from\n      line.addCoordinate(currentVertexPosition, ...line.coordinates[lastCoord]);\n    } else if (line.coordinates[0][0] === from[0] && line.coordinates[0][1] === from[1]) {\n      direction = 'backwards';\n      currentVertexPosition = 0;\n      // add one new coordinate to continue from\n      line.addCoordinate(currentVertexPosition, ...line.coordinates[0]);\n    } else {\n      throw new Error('`from` should match the point at either the start or the end of the provided LineString');\n    }\n  } else {\n    line = this.newFeature({\n      type: Constants.geojsonTypes.FEATURE,\n      properties: {},\n      geometry: {\n        type: Constants.geojsonTypes.LINE_STRING,\n        coordinates: []\n      }\n    });\n    currentVertexPosition = 0;\n    this.addFeature(line);\n  }\n\n  this.clearSelectedFeatures();\n  doubleClickZoom.disable(this);\n  this.updateUIClasses({ mouse: Constants.cursors.ADD });\n  this.activateUIButton(Constants.types.LINE);\n  this.setActionableState({\n    trash: true\n  });\n\n  return {\n    line,\n    currentVertexPosition,\n    direction\n  };\n};\n\nDrawLineString.clickAnywhere = function(state, e) {\n  if (state.currentVertexPosition > 0 && isEventAtCoordinates(e, state.line.coordinates[state.currentVertexPosition - 1]) ||\n      state.direction === 'backwards' && isEventAtCoordinates(e, state.line.coordinates[state.currentVertexPosition + 1])) {\n    return this.changeMode(Constants.modes.SIMPLE_SELECT, { featureIds: [state.line.id] });\n  }\n  this.updateUIClasses({ mouse: Constants.cursors.ADD });\n  state.line.updateCoordinate(state.currentVertexPosition, e.lngLat.lng, e.lngLat.lat);\n  if (state.direction === 'forward') {\n    state.currentVertexPosition++;\n    state.line.updateCoordinate(state.currentVertexPosition, e.lngLat.lng, e.lngLat.lat);\n  } else {\n    state.line.addCoordinate(0, e.lngLat.lng, e.lngLat.lat);\n  }\n};\n\nDrawLineString.clickOnVertex = function(state) {\n  return this.changeMode(Constants.modes.SIMPLE_SELECT, { featureIds: [state.line.id] });\n};\n\nDrawLineString.onMouseMove = function(state, e) {\n  state.line.updateCoordinate(state.currentVertexPosition, e.lngLat.lng, e.lngLat.lat);\n  if (CommonSelectors.isVertex(e)) {\n    this.updateUIClasses({ mouse: Constants.cursors.POINTER });\n  }\n};\n\nDrawLineString.onTap = DrawLineString.onClick = function(state, e) {\n  if (CommonSelectors.isVertex(e)) return this.clickOnVertex(state, e);\n  this.clickAnywhere(state, e);\n};\n\nDrawLineString.onKeyUp = function(state, e) {\n  if (CommonSelectors.isEnterKey(e)) {\n    this.changeMode(Constants.modes.SIMPLE_SELECT, { featureIds: [state.line.id] });\n  } else if (CommonSelectors.isEscapeKey(e)) {\n    this.deleteFeature([state.line.id], { silent: true });\n    this.changeMode(Constants.modes.SIMPLE_SELECT);\n  }\n};\n\nDrawLineString.onStop = function(state) {\n  doubleClickZoom.enable(this);\n  this.activateUIButton();\n\n  // check to see if we've deleted this feature\n  if (this.getFeature(state.line.id) === undefined) return;\n\n  //remove last added coordinate\n  state.line.removeCoordinate(`${state.currentVertexPosition}`);\n  if (state.line.isValid()) {\n    this.fire(Constants.events.CREATE, {\n      features: [state.line.toGeoJSON()]\n    });\n  } else {\n    this.deleteFeature([state.line.id], { silent: true });\n    this.changeMode(Constants.modes.SIMPLE_SELECT, {}, { silent: true });\n  }\n};\n\nDrawLineString.onTrash = function(state) {\n  this.deleteFeature([state.line.id], { silent: true });\n  this.changeMode(Constants.modes.SIMPLE_SELECT);\n};\n\nDrawLineString.toDisplayFeatures = function(state, geojson, display) {\n  const isActiveLine = geojson.properties.id === state.line.id;\n  geojson.properties.active = (isActiveLine) ? Constants.activeStates.ACTIVE : Constants.activeStates.INACTIVE;\n  if (!isActiveLine) return display(geojson);\n  // Only render the line if it has at least one real coordinate\n  if (geojson.geometry.coordinates.length < 2) return;\n  geojson.properties.meta = Constants.meta.FEATURE;\n  display(createVertex(\n    state.line.id,\n    geojson.geometry.coordinates[state.direction === 'forward' ? geojson.geometry.coordinates.length - 2 : 1],\n    `${state.direction === 'forward' ? geojson.geometry.coordinates.length - 2 : 1}`,\n    false\n  ));\n\n  display(geojson);\n};\n\nexport default DrawLineString;\n","\nimport simple_select from './simple_select.js';\nimport direct_select from './direct_select.js';\nimport draw_point from './draw_point.js';\nimport draw_polygon from './draw_polygon.js';\nimport draw_line_string from './draw_line_string.js';\n\nexport default {\n  simple_select,\n  direct_select,\n  draw_point,\n  draw_polygon,\n  draw_line_string,\n};\n","import * as Constants from './constants.js';\n\nimport styles from './lib/theme.js';\nimport modes from './modes/index.js';\n\nconst defaultOptions = {\n  defaultMode: Constants.modes.SIMPLE_SELECT,\n  keybindings: true,\n  touchEnabled: true,\n  clickBuffer: 2,\n  touchBuffer: 25,\n  boxSelect: true,\n  displayControlsDefault: true,\n  styles,\n  modes,\n  controls: {},\n  userProperties: false,\n  suppressAPIEvents: true\n};\n\nconst showControls = {\n  point: true,\n  line_string: true,\n  polygon: true,\n  trash: true,\n  combine_features: true,\n  uncombine_features: true\n};\n\nconst hideControls = {\n  point: false,\n  line_string: false,\n  polygon: false,\n  trash: false,\n  combine_features: false,\n  uncombine_features: false\n};\n\nfunction addSources(styles, sourceBucket) {\n  return styles.map((style) => {\n    if (style.source) return style;\n    return Object.assign({}, style, {\n      id: `${style.id}.${sourceBucket}`,\n      source: (sourceBucket === 'hot') ? Constants.sources.HOT : Constants.sources.COLD\n    });\n  });\n}\n\nexport default function(options = {}) {\n  let withDefaults = Object.assign({}, options);\n\n  if (!options.controls) {\n    withDefaults.controls = {};\n  }\n\n  if (options.displayControlsDefault === false) {\n    withDefaults.controls = Object.assign({}, hideControls, options.controls);\n  } else {\n    withDefaults.controls = Object.assign({}, showControls, options.controls);\n  }\n\n  withDefaults = Object.assign({}, defaultOptions, withDefaults);\n\n  // Layers with a shared source should be adjacent for performance reasons\n  withDefaults.styles = addSources(withDefaults.styles, 'cold').concat(addSources(withDefaults.styles, 'hot'));\n\n  return withDefaults;\n}\n","export default function(a, b) {\n  if (a.length !== b.length) return false;\n  return JSON.stringify(a.map(id => id).sort()) === JSON.stringify(b.map(id => id).sort());\n}\n","import isEqual from 'fast-deep-equal';\nimport normalize from '@mapbox/geojson-normalize';\nimport {generateID} from './lib/id.js';\nimport featuresAt from './lib/features_at.js';\nimport stringSetsAreEqual from './lib/string_sets_are_equal.js';\nimport * as Constants from './constants.js';\nimport StringSet from './lib/string_set.js';\n\nimport Polygon from './feature_types/polygon.js';\nimport LineString from './feature_types/line_string.js';\nimport Point from './feature_types/point.js';\nimport MultiFeature from './feature_types/multi_feature.js';\n\nconst featureTypes = {\n  Polygon,\n  LineString,\n  Point,\n  MultiPolygon: MultiFeature,\n  MultiLineString: MultiFeature,\n  MultiPoint: MultiFeature\n};\n\nexport default function(ctx, api) {\n  api.modes = Constants.modes;\n\n  // API doesn't emit events by default\n  const silent = ctx.options.suppressAPIEvents !== undefined ? !!ctx.options.suppressAPIEvents : true;\n\n  api.getFeatureIdsAt = function(point) {\n    const features = featuresAt.click({ point }, null, ctx);\n    return features.map(feature => feature.properties.id);\n  };\n\n  api.getSelectedIds = function() {\n    return ctx.store.getSelectedIds();\n  };\n\n  api.getSelected = function() {\n    return {\n      type: Constants.geojsonTypes.FEATURE_COLLECTION,\n      features: ctx.store.getSelectedIds().map(id => ctx.store.get(id)).map(feature => feature.toGeoJSON())\n    };\n  };\n\n  api.getSelectedPoints = function() {\n    return {\n      type: Constants.geojsonTypes.FEATURE_COLLECTION,\n      features: ctx.store.getSelectedCoordinates().map(coordinate => ({\n        type: Constants.geojsonTypes.FEATURE,\n        properties: {},\n        geometry: {\n          type: Constants.geojsonTypes.POINT,\n          coordinates: coordinate.coordinates\n        }\n      }))\n    };\n  };\n\n  api.set = function(featureCollection) {\n    if (featureCollection.type === undefined || featureCollection.type !== Constants.geojsonTypes.FEATURE_COLLECTION || !Array.isArray(featureCollection.features)) {\n      throw new Error('Invalid FeatureCollection');\n    }\n    const renderBatch = ctx.store.createRenderBatch();\n    let toDelete = ctx.store.getAllIds().slice();\n    const newIds = api.add(featureCollection);\n    const newIdsLookup = new StringSet(newIds);\n\n    toDelete = toDelete.filter(id => !newIdsLookup.has(id));\n    if (toDelete.length) {\n      api.delete(toDelete);\n    }\n\n    renderBatch();\n    return newIds;\n  };\n\n  api.add = function(geojson) {\n    const featureCollection = JSON.parse(JSON.stringify(normalize(geojson)));\n\n    const ids = featureCollection.features.map((feature) => {\n      feature.id = feature.id || generateID();\n\n      if (feature.geometry === null) {\n        throw new Error('Invalid geometry: null');\n      }\n\n      if (ctx.store.get(feature.id) === undefined || ctx.store.get(feature.id).type !== feature.geometry.type) {\n        // If the feature has not yet been created ...\n        const Model = featureTypes[feature.geometry.type];\n        if (Model === undefined) {\n          throw new Error(`Invalid geometry type: ${feature.geometry.type}.`);\n        }\n        const internalFeature = new Model(ctx, feature);\n        ctx.store.add(internalFeature, { silent });\n      } else {\n        // If a feature of that id has already been created, and we are swapping it out ...\n        const internalFeature = ctx.store.get(feature.id);\n        const originalProperties = internalFeature.properties;\n        internalFeature.properties = feature.properties;\n        if (!isEqual(originalProperties, feature.properties)) {\n          ctx.store.featureChanged(internalFeature.id, { silent });\n        }\n        if (!isEqual(internalFeature.getCoordinates(), feature.geometry.coordinates)) {\n          internalFeature.incomingCoords(feature.geometry.coordinates);\n        }\n      }\n      return feature.id;\n    });\n\n    ctx.store.render();\n    return ids;\n  };\n\n\n  api.get = function(id) {\n    const feature = ctx.store.get(id);\n    if (feature) {\n      return feature.toGeoJSON();\n    }\n  };\n\n  api.getAll = function() {\n    return {\n      type: Constants.geojsonTypes.FEATURE_COLLECTION,\n      features: ctx.store.getAll().map(feature => feature.toGeoJSON())\n    };\n  };\n\n  api.delete = function(featureIds) {\n    ctx.store.delete(featureIds, { silent });\n    // If we were in direct select mode and our selected feature no longer exists\n    // (because it was deleted), we need to get out of that mode.\n    if (api.getMode() === Constants.modes.DIRECT_SELECT && !ctx.store.getSelectedIds().length) {\n      ctx.events.changeMode(Constants.modes.SIMPLE_SELECT, undefined, { silent });\n    } else {\n      ctx.store.render();\n    }\n\n    return api;\n  };\n\n  api.deleteAll = function() {\n    ctx.store.delete(ctx.store.getAllIds(), { silent });\n    // If we were in direct select mode, now our selected feature no longer exists,\n    // so escape that mode.\n    if (api.getMode() === Constants.modes.DIRECT_SELECT) {\n      ctx.events.changeMode(Constants.modes.SIMPLE_SELECT, undefined, { silent });\n    } else {\n      ctx.store.render();\n    }\n\n    return api;\n  };\n\n  api.changeMode = function(mode, modeOptions = {}) {\n    // Avoid changing modes just to re-select what's already selected\n    if (mode === Constants.modes.SIMPLE_SELECT && api.getMode() === Constants.modes.SIMPLE_SELECT) {\n      if (stringSetsAreEqual((modeOptions.featureIds || []), ctx.store.getSelectedIds())) return api;\n      // And if we are changing the selection within simple_select mode, just change the selection,\n      // instead of stopping and re-starting the mode\n      ctx.store.setSelected(modeOptions.featureIds, { silent });\n      ctx.store.render();\n      return api;\n    }\n\n    if (mode === Constants.modes.DIRECT_SELECT && api.getMode() === Constants.modes.DIRECT_SELECT &&\n      modeOptions.featureId === ctx.store.getSelectedIds()[0]) {\n      return api;\n    }\n\n    ctx.events.changeMode(mode, modeOptions, { silent });\n    return api;\n  };\n\n  api.getMode = function() {\n    return ctx.events.getMode();\n  };\n\n  api.trash = function() {\n    ctx.events.trash({ silent });\n    return api;\n  };\n\n  api.combineFeatures = function() {\n    ctx.events.combineFeatures({ silent });\n    return api;\n  };\n\n  api.uncombineFeatures = function() {\n    ctx.events.uncombineFeatures({ silent });\n    return api;\n  };\n\n  api.setFeatureProperty = function(featureId, property, value) {\n    ctx.store.setFeatureProperty(featureId, property, value, { silent });\n    return api;\n  };\n\n  return api;\n}\n","import runSetup from './src/setup.js';\nimport setupOptions from './src/options.js';\nimport setupAPI from './src/api.js';\nimport modes from './src/modes/index.js';\nimport * as Constants from './src/constants.js';\nimport * as lib from './src/lib/index.js';\n\nconst setupDraw = function(options, api) {\n  options = setupOptions(options);\n\n  const ctx = {\n    options\n  };\n\n  api = setupAPI(ctx, api);\n  ctx.api = api;\n\n  const setup = runSetup(ctx);\n\n  api.onAdd = setup.onAdd;\n  api.onRemove = setup.onRemove;\n  api.types = Constants.types;\n  api.options = options;\n\n  return api;\n};\n\nfunction MapboxDraw(options) {\n  setupDraw(options, this);\n}\n\nMapboxDraw.modes = modes;\nMapboxDraw.constants = Constants;\nMapboxDraw.lib = lib;\n\nexport default MapboxDraw;\n","import DirectSelect from '../../../../node_modules/@mapbox/mapbox-gl-draw/src/modes/direct_select'\nimport DrawPolygon from '../../../../node_modules/@mapbox/mapbox-gl-draw/src/modes/draw_polygon'\nimport createVertex from '../../../../node_modules/@mapbox/mapbox-gl-draw/src/lib/create_vertex'\n\nconst markerSVG = `\n  <svg width='38' height='38' viewBox='0 0 38 38' fill-rule='evenodd' fill='currentColor' style='display:none;position:absolute;top:50%;left:50%;margin:-19px 0 0 -19px' class='vertex-target' data-vertex-target>\n    <path d='M5.035 20H1v-2h4.035C5.525 11.069 11.069 5.525 18 5.035V1h2v4.035c6.931.49 12.475 6.034 12.965 12.965H37v2h-4.035c-.49 6.931-6.034 12.475-12.965 12.965V37h-2v-4.035C11.069 32.475 5.525 26.931 5.035 20zM19 7A12.01 12.01 0 0 0 7 19a12.01 12.01 0 0 0 12 12 12.01 12.01 0 0 0 12-12A12.01 12.01 0 0 0 19 7z'/>\n    <circle cx='19' cy='19' r='2'/>\n  </svg>\n`\n\nconst spatialNavigate = (start, pixels, direction) => {\n  const quadrant = pixels.filter((p, i) => {\n    const offsetX = Math.abs(p[0] - start[0])\n    const offsetY = Math.abs(p[1] - start[1])\n    let isQuadrant = false\n    if (direction === 'ArrowUp') {\n      isQuadrant = p[1] <= start[1] && offsetY >= offsetX\n    } else if (direction === 'ArrowDown') {\n      isQuadrant = p[1] > start[1] && offsetY >= offsetX\n    } else if (direction === 'ArrowLeft') {\n      isQuadrant = p[0] <= start[0] && offsetY < offsetX\n    } else if (direction === 'ArrowRight') {\n      isQuadrant = p[0] > start[0] && offsetY < offsetX\n    } else {\n      isQuadrant = true\n    }\n    return isQuadrant && (JSON.stringify(p) !== JSON.stringify(start))\n  })\n\n  if (!quadrant.length) {\n    quadrant.push(start)\n  }\n\n  const pythagorean = (a, b) => Math.sqrt(Math.pow(a, 2) + Math.pow(b, 2))\n  const distances = quadrant.map(p => pythagorean(Math.abs(start[0] - p[0]), Math.abs(start[1] - p[1])))\n  const closest = quadrant[distances.indexOf(Math.min(...distances))]\n  return pixels.findIndex(i => JSON.stringify(i) === JSON.stringify(closest))\n}\n\nconst NUDGE = 1\n\nconst STEP = 5\n\nconst ARROW_KEYS = ['ArrowLeft', 'ArrowRight', 'ArrowUp', 'ArrowDown']\n\nexport const DisabledMode = {\n  onSetup () {\n    return {} // Return empty state\n  },\n\n  onClick () {\n    // Prevent feature selection\n    return false\n  },\n\n  onKeyUp () {\n    return false\n  },\n\n  onDrag () {\n    return false\n  },\n\n  toDisplayFeatures (state, geojson, display) {\n    geojson.properties.active = 'false'\n    display(geojson)\n  }\n}\n\nexport const EditVertexMode = {\n  ...DirectSelect,\n\n  onSetup (options) {\n    const state = DirectSelect.onSetup.call(this, options)\n    const { container, featureId, selectedIndex, selectedType, isPanEnabled } = options\n    state.container = container\n    state.isPanEnabled = isPanEnabled\n    state.featureId = featureId\n    state.vertecies = this.getVerticies(featureId) // Store vertecies\n    state.midpoints = this.getMidpoints(featureId) // Store midpoints\n    state.selectedIndex = selectedIndex !== undefined ? selectedIndex : -1 // Tracks selected vertex/midpoint\n    state.selectedType = selectedType // Tracks select type vertex or midpoint\n\n    // Bind events as default events require map container to have focus\n    this.keydownHandler = (e) => this.onKeyDown(state, e)\n    this.keyupHandler = (e) => this.onKeyUp(state, e)\n    container.addEventListener('keydown', this.keydownHandler)\n    container.addEventListener('keyup', this.keyupHandler)\n\n    // Selection change event\n    this.selectionChangeHandler = (e) => this.onSelectionChange(state, e)\n    this.map.on('draw.selectionchange', this.selectionChangeHandler)\n\n    // Feature or vertex update event\n    const updateHandler = (e) => this.onUpdate(state, e)\n    this.map.on('draw.update', updateHandler)\n\n    // Add midpoint\n    if (selectedType === 'midpoint') {\n      const coords = state.midpoints[selectedIndex - state.vertecies.length]\n      this.updateMidpoint(coords)\n    }\n\n    return state\n  },\n\n  onSelectionChange (state, e) {\n    const vertexCoord = e.points[e.points.length - 1]?.geometry.coordinates\n    const coords = e.features[0].geometry.coordinates.flat(1)\n    const selectedIndex = coords.findIndex(c => vertexCoord && c[0] === vertexCoord[0] && c[1] === vertexCoord[1])\n    state.selectedIndex = state.selectedIndex < 0 ? selectedIndex : state.selectedIndex\n    state.selectedType ??= selectedIndex >= 0 ? 'vertex' : null\n  },\n\n  onUpdate (state, e) {\n    const selectedIndex = parseInt(state.selectedCoordPaths[0]?.split('.')[1], 10)\n    state.selectedIndex = !isNaN(selectedIndex) ? selectedIndex : state.selectedIndex\n  },\n\n  onKeyDown (state, e) {\n    // Set selected index and type\n    if (e.key === ' ' && state.selectedIndex < 0) {\n      state.isPanEnabled = false\n      this.updateVertex(state)\n    }\n\n    // Move vertex\n    if (!e.altKey && ARROW_KEYS.includes(e.key) && state.selectedIndex >= 0) {\n      e.preventDefault()\n      e.stopPropagation()\n\n      if (state.selectedType === 'midpoint') {\n        this.insertVertex(state, e)\n      }\n\n      if (state.selectedType === 'vertex') {\n        this.moveVertex(state, e)\n      }\n    }\n\n    // Navigate points\n    if (e.altKey && ARROW_KEYS.includes(e.key) && state.selectedIndex >= 0) {\n      this.updateVertex(state, e.key)\n    }\n\n    // Clear selected index and type\n    if (e.key === 'Escape') {\n      state.isPanEnabled = true\n      state.selectedIndex = -1\n      state.selectedType = null\n\n      const draw = this._ctx.api\n      draw.changeMode('edit_vertex', { container: state.container, isPanEnabled: true, featureId: state.featureId })\n    }\n  },\n\n  onKeyUp (state, e) {\n    // Arrow keys propogating to container\n    if (ARROW_KEYS.includes(e.key) && state.selectedIndex >= 0) {\n      e.stopPropagation()\n    }\n\n    // Delete a vertex\n    if (e.key === 'Delete') {\n      this.deleteVertex(state)\n    }\n  },\n\n  getVerticies (featureId) {\n    const feature = this.getFeature(featureId)\n    return feature?.coordinates?.flat(1) || []\n  },\n\n  getMidpoints (featureId) {\n    const feature = this.getFeature(featureId)\n    if (!feature) {\n      return []\n    }\n\n    const coords = feature.coordinates.flat(1)\n    const midpoints = []\n\n    for (let i = 0; i < coords.length; i++) {\n      const nextIndex = (i + 1) % coords.length // Ensure it loops back to the start\n      const midX = (coords[i][0] + coords[nextIndex][0]) / 2\n      const midY = (coords[i][1] + coords[nextIndex][1]) / 2\n      midpoints.push([midX, midY])\n    }\n\n    return midpoints\n  },\n\n  getVertexOrMidpoint (state, direction) {\n    const { map } = this\n    const vertexPixels = state.vertecies.map(p => Object.values(map.project(p)))\n    const midpointPixels = state.midpoints.map(p => Object.values(map.project(p)))\n    const pixels = [...vertexPixels, ...midpointPixels]\n    const startPixel = pixels[state.selectedIndex]\n    const start = startPixel || Object.values(map.project(map.getCenter()))\n\n    const index = spatialNavigate(start, pixels, direction)\n\n    const type = index < state.vertecies.length ? 'vertex' : 'midpoint'\n\n    return [index, type]\n  },\n\n  updateMidpoint (coordinates) {\n    const { map } = this\n\n    // Shouldn't add to layer directly but can't get this._ctx.api.add(feature) to work\n    setTimeout(() => {\n      map.getSource('mapbox-gl-draw-hot').setData({\n        type: 'Feature',\n        properties: {\n          meta: 'midpoint',\n          active: 'true',\n          id: 'active-midpoint'\n        },\n        geometry: {\n          type: 'Point',\n          coordinates\n        }\n      })\n    }, 0)\n  },\n\n  updateVertex (state, direction) {\n    const { container, isPanEnabled, featureId } = state\n    const [index, type] = this.getVertexOrMidpoint(state, direction)\n\n    this._ctx.api.changeMode('edit_vertex', {\n      container,\n      isPanEnabled,\n      featureId,\n      selectedIndex: index,\n      selectedType: type,\n      ...(type === 'vertex' ? { coordPath: `0.${index}` } : {})\n    })\n  },\n\n  getOffset (coord, e) {\n    const { map } = this\n    const pixel = map.project(coord)\n    const offset = e.shiftKey ? NUDGE : STEP\n    if (e.key === 'ArrowUp') {\n      pixel.y -= offset\n    } else if (e.key === 'ArrowDown') {\n      pixel.y += offset\n    } else if (e.key === 'ArrowLeft') {\n      pixel.x -= offset\n    } else {\n      pixel.x += offset\n    }\n    return map.unproject(pixel)\n  },\n\n  insertVertex (state, e) {\n    const feature = this.getFeature(state.featureId)\n    const midpointIndex = state.selectedIndex - state.vertecies.length\n\n    // Get the midpoint coordinates\n    let midpointCoord = state.midpoints[midpointIndex]\n\n    // Add the offset\n    const newMidpointCoord = this.getOffset(midpointCoord, e)\n    midpointCoord = [newMidpointCoord.lng, newMidpointCoord.lat]\n\n    // Calculate the index where the new vertex should be inserted\n    // For a polygon/line, this is typically after the vertex that comes before the midpoint\n    const vertexIndex = midpointIndex\n\n    // Get the feature's GeoJSON\n    const geojson = feature.toGeoJSON()\n\n    // For a polygon, insert into the first ring (assuming simple polygons)\n    if (geojson.geometry.type === 'Polygon') {\n      const coordinates = geojson.geometry.coordinates[0]\n      coordinates.splice(vertexIndex + 1, 0, midpointCoord)\n\n      // Update the feature with the new coordinates\n      this._ctx.api.add(geojson)\n    }\n\n    // For a line, insert directly into the coordinates array\n    if (geojson.geometry.type === 'LineString') {\n      geojson.geometry.coordinates.splice(vertexIndex + 1, 0, midpointCoord)\n\n      // Update the feature\n      this._ctx.api.add(geojson)\n    }\n\n    // Update the vertices and midpoints arrays\n    state.vertecies = this.getVerticies(state.featureId)\n    state.midpoints = this.getMidpoints(state.featureId)\n\n    // Select the newly added vertex\n    const newVertexIndex = vertexIndex + 1\n\n    // Change mode to select the new vertex\n    this._ctx.api.changeMode('edit_vertex', {\n      container: state.container,\n      isPanEnabled: state.isPanEnabled,\n      featureId: state.featureId,\n      selectedIndex: newVertexIndex,\n      selectedType: 'vertex',\n      coordPath: `0.${newVertexIndex}`\n    })\n  },\n\n  moveVertex (state, e) {\n    const feature = this.getFeature(state.featureId)\n    const coords = feature.coordinates.flat(1)\n\n    // Get current coordinate and its pixel position\n    const currentCoord = coords[state.selectedIndex]\n\n    // Calculate new coord based on direction\n    const newCoord = this.getOffset(currentCoord, e)\n\n    // Directly update the coordinates in the feature's internal structure\n    // This depends on your feature type (point, line, polygon)\n    const geojson = feature.toGeoJSON()\n\n    // For polygon: find the right ring and position (Assuming first ring (outer boundary) for simplicity)\n    if (geojson.geometry.type === 'Polygon') {\n      geojson.geometry.coordinates[0][state.selectedIndex] = [newCoord.lng, newCoord.lat]\n    }\n\n    // For LineString: directly update the position\n    if (geojson.geometry.type === 'LineString') {\n      geojson.geometry.coordinates[state.selectedIndex] = [newCoord.lng, newCoord.lat]\n    }\n\n    // Update the feature with the modified GeoJSON\n    this._ctx.api.add(geojson)\n\n    // Update the vertices and midpoints arrays\n    state.vertecies = this.getVerticies(state.featureId)\n    state.midpoints = this.getMidpoints(state.featureId)\n  },\n\n  deleteVertex (state) {\n    const draw = this._ctx.api\n    const feature = this.getFeature(state.featureId)\n    const featureType = feature.type\n    const numCoords = state.vertecies.length\n\n    // Return if too few coords\n    if ((featureType === 'Polygon' && numCoords <= 3) || (featureType === 'LineString' && numCoords <= 2)) {\n      return\n    }\n\n    draw.trash()\n\n    // Get next vertexIndex after deletion\n    const nextVertexIndex = state.selectedIndex >= (state.vertecies.length - 1) ? 0 : state.selectedIndex\n\n    // Reenter the mode to refresh the state\n    draw.changeMode('edit_vertex', {\n      container: state.container,\n      isPanEnabled: state.isPanEnabled,\n      featureId: state.featureId,\n      selectedIndex: nextVertexIndex,\n      selectedType: 'vertex',\n      coordPath: `0.${nextVertexIndex}`\n    })\n  },\n\n  onStop (state) {\n    this.map.off('draw.selectionchange', this.selectionChangeHandler)\n    state.container.removeEventListener('keydown', this.keydownHandler)\n    state.container.removeEventListener('keyup', this.keyupHandler)\n  }\n}\n\nexport const DrawVertexMode = {\n  ...DrawPolygon,\n\n  onSetup (options) {\n    const { map } = this\n    const state = DrawPolygon.onSetup.call(this, options)\n    const { interfaceType, container, featureId } = options\n    state.interfaceType = interfaceType\n    state.container = container\n    state.featureId = featureId\n\n    // Add vertex target\n    if (!container.querySelector('[data-vertex-target]')) {\n      container.insertAdjacentHTML('beforeend', markerSVG)\n    }\n\n    // Set initial visiblity\n    const vertexMarker = container.lastElementChild\n    vertexMarker.style.display = interfaceType === 'keyboard' ? 'block' : 'none'\n    state.vertexMarker = vertexMarker\n\n    // Bind events as default events require map container to have focus\n    this.keydownHandler = (e) => this.onKeyDown(state, e)\n    this.keyupHandler = (e) => this.onKeyUp(state, e)\n    this.pointerdownHandler = (e) => this.onPointerDown(state, e)\n    this.focusHandler = (e) => this.onFocus(state, e)\n    this.blurHandler = (e) => this.onBlur(state, e)\n    this.createHandler = (e) => this.onCreate(state, e)\n    this.moveHandler = (e) => this.onMove(state, e)\n    this.pointermoveHandler = (e) => this.onPointerMove(state, e)\n    container.addEventListener('keydown', this.keydownHandler)\n    container.addEventListener('keyup', this.keyupHandler)\n    container.addEventListener('pointerdown', this.pointerdownHandler)\n    container.addEventListener('focus', this.focusHandler)\n    container.addEventListener('blur', this.blurHandler)\n    container.addEventListener('pointermove', this.pointermoveHandler)\n    map.on('draw.create', this.createHandler)\n    map.on('move', this.moveHandler)\n\n    return state\n  },\n\n  onCreate (state, e) {\n    const draw = this._ctx.api\n    const feature = e.features[0]\n    draw.delete(feature.id)\n    feature.id = state.featureId\n    draw.add(feature)\n  },\n\n  onKeyDown (state, e) {\n    // Enter keypress\n    if (e.key === 'Escape') {\n      return\n    }\n\n    // Update line when switching interfaceType\n    if (state.interfaceType === 'keyboard') {\n      this.onMove(state, e)\n    }\n    state.interfaceType = 'keyboard'\n\n    // Show vertex marker\n    state.vertexMarker.style.display = 'block'\n  },\n\n  onKeyUp (state, e) {\n    // Enter keypress\n    if (e.key === 'Escape') {\n      return\n    }\n\n    // Update line when switching interfaceType\n    if (state.interfaceType === 'keyboard') {\n      this.onMove(state, e)\n    }\n    state.interfaceType = 'keyboard'\n\n    // Enter keypress\n    if (e.key === 'Enter') {\n      this.doClick(state)\n    }\n\n    // Show vertex marker\n    state.vertexMarker.style.display = 'block'\n  },\n\n  onPointerDown (state, e) {\n    state.interfaceType = 'pointer'\n    state.vertexMarker.style.display = 'none'\n  },\n\n  onFocus (state, e) {\n    const { vertexMarker, interfaceType } = state\n    vertexMarker.style.display = interfaceType === 'keyboard' ? 'block' : 'none'\n  },\n\n  onBlur (state, e) {\n    state.vertexMarker.style.display = 'none'\n  },\n\n  doClick (state) {\n    const { map } = this\n    const center = map.getCenter()\n    const point = map.project(center)\n    const simulatedClickEvent = {\n      lngLat: center,\n      point,\n      originalEvent: new window.MouseEvent('click', {\n        clientX: point.x,\n        clientY: point.y,\n        bubbles: true,\n        cancelable: true\n      })\n    }\n    DrawPolygon.onClick.call(this, state, simulatedClickEvent)\n    this._ctx.store.render()\n  },\n\n  onMove (state, e) {\n    // Clear vertex marker\n    if (state.interfaceType === 'keyboard') {\n      const { map } = this\n      const center = map.getCenter()\n      const point = map.project(center)\n      const simulatedMouseMoveEvent = {\n        lngLat: center,\n        point,\n        originalEvent: new window.MouseEvent('mousemove', {\n          clientX: point.x,\n          clientY: point.y,\n          bubbles: true,\n          cancelable: true\n        })\n      }\n      // Show vertex marker\n      DrawPolygon.onMouseMove.call(this, state, simulatedMouseMoveEvent)\n      this._ctx.store.render()\n    }\n  },\n\n  onPointerMove (state, e) {\n    state.vertexMarker.style.display = 'none'\n  },\n\n  toDisplayFeatures (state, geojson, display) {\n    DrawPolygon.toDisplayFeatures.call(this, state, geojson, display)\n\n    if (geojson.geometry.type === 'Polygon') {\n      const ring = geojson.geometry.coordinates[0]\n      // Add extra verticies between first and last\n      for (let i = 1; i < ring.length - 2; i++) {\n        const coordPath = `0.${i}`\n        display(createVertex(geojson.id, ring[i], coordPath))\n      }\n    }\n  },\n\n  onStop (state) {\n    DrawPolygon.onStop.call(this, state)\n\n    const { container } = state\n    container.removeEventListener('keydown', this.keydownHandler)\n    container.removeEventListener('keyup', this.keyupHandler)\n    container.removeEventListener('pointerdown', this.pointerdownHandler)\n    container.removeEventListener('focus', this.focusHandler)\n    container.removeEventListener('blur', this.blurHandler)\n    container.removeEventListener('pointermove', this.pointermoveHandler)\n    this.map.off('draw.create', this.createHandler)\n    this.map.off('move', this.moveHandler)\n\n    // Remove vertex target\n    container.querySelector('[data-vertex-target]')?.remove()\n  }\n}\n","export const draw = (styleName) => {\n  const fgColor = styleName === 'dark' ? '#ffffff' : '#0b0c0c'\n  const bgColor = styleName === 'dark' ? '#373737' : '#ffffff'\n  const hColor = styleName === 'dark' ? '#ffffff' : '#0b0c0c'\n\n  return [\n    fillActive(fgColor),\n    strokeActive(fgColor),\n    strokeInactive(fgColor),\n    drawPreviewLine(fgColor),\n    midpoint(fgColor),\n    vertex(fgColor),\n    vertexHalo(bgColor, hColor),\n    vertexActive(fgColor),\n    midpointHalo(bgColor, hColor),\n    midpointActive(fgColor),\n    circle(fgColor)\n  ]\n}\n\nconst fillActive = (fgColor) => ({\n  id: 'fill-active',\n  type: 'fill',\n  filter: ['all', ['==', '$type', 'Polygon'], ['==', 'active', 'true']],\n  paint: {\n    'fill-color': fgColor,\n    'fill-opacity': 0.1\n  }\n})\n\nconst strokeActive = (fgColor) => ({\n  id: 'stroke-active',\n  type: 'line',\n  filter: ['all', ['==', '$type', 'Polygon'], ['==', 'active', 'true']],\n  layout: {\n    'line-cap': 'round',\n    'line-join': 'round'\n  },\n  paint: {\n    'line-color': fgColor,\n    'line-width': 2,\n    'line-opacity': 1\n  }\n})\n\nconst strokeInactive = (fgColor) => ({\n  id: 'stroke-inactive',\n  type: 'line',\n  filter: ['all', ['==', '$type', 'Polygon'], ['==', 'active', 'false']],\n  layout: {\n    'line-cap': 'round',\n    'line-join': 'round'\n  },\n  paint: {\n    'line-color': fgColor,\n    'line-width': 2,\n    'line-opacity': 0.8\n  }\n})\n\nconst drawPreviewLine = (fgColor) => ({\n  id: 'stroke-preview-line',\n  type: 'line',\n  filter: ['all', ['==', '$type', 'LineString'], ['==', 'active', 'true']],\n  layout: {\n    'line-cap': 'round',\n    'line-join': 'round'\n  },\n  paint: {\n    'line-color': fgColor,\n    'line-width': 2,\n    'line-dasharray': [0.2, 2],\n    'line-opacity': 1\n  }\n})\n\nconst midpoint = (fgColor) => ({\n  id: 'midpoint',\n  type: 'circle',\n  filter: ['all', ['==', '$type', 'Point'], ['==', 'meta', 'midpoint']],\n  paint: {\n    'circle-radius': 5,\n    'circle-color': fgColor\n  }\n})\n\nconst vertex = (fgColor) => ({\n  id: 'vertex',\n  type: 'circle',\n  filter: ['all', ['==', '$type', 'Point'], ['==', 'meta', 'vertex']],\n  paint: {\n    'circle-radius': 7,\n    'circle-color': fgColor\n  }\n})\n\nconst vertexHalo = (bgColor, hColor) => ({\n  id: 'vertex-halo',\n  type: 'circle',\n  filter: ['all', ['==', '$type', 'Point'], ['==', 'meta', 'vertex'], ['==', 'active', 'true']],\n  paint: {\n    'circle-radius': 9,\n    'circle-stroke-width': 3,\n    'circle-color': bgColor,\n    'circle-stroke-color': hColor\n  }\n})\n\nconst vertexActive = (fgColor) => ({\n  id: 'vertex-active',\n  type: 'circle',\n  filter: ['all', ['==', '$type', 'Point'], ['==', 'meta', 'vertex'], ['==', 'active', 'true']],\n  paint: {\n    'circle-radius': 7,\n    'circle-color': fgColor\n  }\n})\n\nconst midpointHalo = (bgColor, hColor) => ({\n  id: 'midpoint-halo',\n  type: 'circle',\n  filter: ['all', ['==', '$type', 'Point'], ['==', 'meta', 'midpoint'], ['==', 'active', 'true']],\n  paint: {\n    'circle-radius': 7,\n    'circle-stroke-width': 3,\n    'circle-color': bgColor,\n    'circle-stroke-color': hColor\n  }\n})\n\nconst midpointActive = (fgColor) => ({\n  id: 'midpoint-active',\n  type: 'circle',\n  filter: ['all', ['==', '$type', 'Point'], ['==', 'meta', 'midpoint'], ['==', 'active', 'true']],\n  paint: {\n    'circle-radius': 5,\n    'circle-color': fgColor\n  }\n})\n\nconst circle = (fgColor) => ({\n  id: 'circle',\n  type: 'line',\n  filter: ['==', 'id', 'circle'],\n  paint: {\n    'line-color': fgColor,\n    'line-width': 2,\n    'line-opacity': 0.8\n  }\n})\n","// index.ts\nimport {\n  degreesToRadians,\n  lengthToRadians,\n  point,\n  radiansToDegrees\n} from \"@turf/helpers\";\nimport { getCoord } from \"@turf/invariant\";\nfunction destination(origin, distance, bearing, options = {}) {\n  const coordinates1 = getCoord(origin);\n  const longitude1 = degreesToRadians(coordinates1[0]);\n  const latitude1 = degreesToRadians(coordinates1[1]);\n  const bearingRad = degreesToRadians(bearing);\n  const radians = lengthToRadians(distance, options.units);\n  const latitude2 = Math.asin(\n    Math.sin(latitude1) * Math.cos(radians) + Math.cos(latitude1) * Math.sin(radians) * Math.cos(bearingRad)\n  );\n  const longitude2 = longitude1 + Math.atan2(\n    Math.sin(bearingRad) * Math.sin(radians) * Math.cos(latitude1),\n    Math.cos(radians) - Math.sin(latitude1) * Math.sin(latitude2)\n  );\n  const lng = radiansToDegrees(longitude2);\n  const lat = radiansToDegrees(latitude2);\n  return point([lng, lat], options.properties);\n}\nvar turf_destination_default = destination;\nexport {\n  turf_destination_default as default,\n  destination\n};\n//# sourceMappingURL=index.js.map","// index.ts\nimport { destination } from \"@turf/destination\";\nimport { polygon } from \"@turf/helpers\";\nfunction circle(center, radius, options = {}) {\n  const steps = options.steps || 64;\n  const properties = options.properties ? options.properties : !Array.isArray(center) && center.type === \"Feature\" && center.properties ? center.properties : {};\n  const coordinates = [];\n  for (let i = 0; i < steps; i++) {\n    coordinates.push(\n      destination(center, radius, i * -360 / steps, options).geometry.coordinates\n    );\n  }\n  coordinates.push(coordinates[0]);\n  return polygon([coordinates], properties);\n}\nvar turf_circle_default = circle;\nexport {\n  circle,\n  turf_circle_default as default\n};\n//# sourceMappingURL=index.js.map","import MapboxDraw from '@mapbox/mapbox-gl-draw'\nimport { DisabledMode, EditVertexMode, DrawVertexMode } from './modes'\nimport { draw as drawStyles } from './styles'\nimport { getFocusPadding, getDistance } from '../../lib/viewport'\nimport { circle as TurfCircle } from '@turf/circle'\nimport { defaults } from './constants'\n\nexport class Draw {\n  constructor (provider, options) {\n    const { container, map, style } = provider\n    Object.assign(this, options)\n\n    const { drawMode, shape, feature } = options\n    this.provider = provider\n    this.shape = shape\n\n    // Provider also needs ref to draw moudule and draw needs ref to provider\n    provider.draw = this\n\n    const initialFeature = feature ? { ...feature, id: shape } : null\n    this.oFeature = initialFeature\n\n    // Create draw instance\n    MapboxDraw.constants.classes.CONTROL_BASE = 'maplibregl-ctrl'\n    MapboxDraw.constants.classes.CONTROL_PREFIX = 'maplibregl-ctrl-'\n    MapboxDraw.constants.classes.CONTROL_GROUP = 'maplibregl-ctrl-group'\n\n    const modes = MapboxDraw.modes\n    modes.disabled = DisabledMode\n    modes.edit_vertex = EditVertexMode\n    modes.draw_vertex = DrawVertexMode\n\n    const draw = new MapboxDraw({\n      modes,\n      styles: drawStyles(style.name),\n      displayControlsDefault: false,\n      userProperties: true\n    })\n\n    map.addControl(draw)\n    this.draw = draw\n\n    // Add existing feature\n    if (initialFeature && drawMode === 'default') {\n      this.addFeature(initialFeature)\n      return\n    }\n\n    // Disable simple_select mode\n    map.on('draw.modechange', e => {\n      if (e.mode === 'simple_select') {\n        draw.changeMode('edit_vertex', { container: container.parentNode, featureId: this.shape })\n      }\n    })\n\n    // Pass vertex selected event to provider\n    map.on('draw.vertexselected', e => {\n      provider.dispatchEvent(new CustomEvent('vertex', {\n        detail: {\n          isSelected: e.isSelected\n        }\n      }))\n    })\n\n    map.on('click', e => {\n      // console.log(e)\n    })\n\n    // Start new\n    this.add(drawMode, shape)\n  }\n\n  // Add new shape\n  add (drawMode, shape) {\n    const { draw } = this\n    const { container } = this.provider\n    this.shape = shape\n\n    // Remove existing drawn features\n    if (drawMode === 'frame') {\n      draw.deleteAll()\n      draw.changeMode('disabled')\n    }\n\n    // Start a new polygon\n    if (drawMode === 'vertex' && !draw.get(shape)) {\n      draw.changeMode('draw_vertex', { container: container.parentNode, featureId: shape })\n    }\n  }\n\n  // Edit existing shape\n  edit (drawMode, shape) {\n    const { oFeature, draw } = this\n    const { map, container } = this.provider\n    this.shape = shape\n\n    // Zoom to extent if we have an existing graphic\n    if (oFeature) {\n      const coords = oFeature.geometry.coordinates\n      const bounds = this.getBoundsFromCoordinates(coords[0])\n      map.fitBounds(bounds, { animate: false })\n    }\n\n    // Remove existing drawn features\n    if (drawMode === 'frame') {\n      draw.deleteAll()\n      draw.changeMode('disabled')\n    }\n\n    // Edit existing feature\n    if (drawMode === 'vertex' && draw.get(shape)) {\n      draw.changeMode('edit_vertex', { container: container.parentNode, featureId: shape })\n    }\n  }\n\n  // Convert paddingBox to sqaure polygon and edit\n  editPolygon () {\n    this.addFeature(null, 'polygon')\n    this.edit('vertex', 'polygon')\n  }\n\n  // Cancel update\n  cancel () {\n    const { draw, oFeature } = this\n\n    // Remove any drawn features\n    draw.deleteAll()\n\n    // Reinstate original\n    if (oFeature) {\n      draw.add(oFeature)\n    }\n\n    // Set disabled mode\n    draw.changeMode('disabled')\n  }\n\n  // Confirm or update\n  finish (shape) {\n    const { draw } = this\n    const { paddingBox } = this.provider\n\n    // Draw feature from padding box and shape\n    if (['square', 'circle'].includes(shape)) {\n      const elFeature = this.getFeatureFromElement(paddingBox, shape)\n      this.addFeature(elFeature)\n    }\n\n    // Set ref to feature\n    this.oFeature = draw.get(shape)\n\n    // Set disabled mode\n    draw.changeMode('disabled')\n\n    return this.oFeature\n  }\n\n  // Delete feature\n  delete () {\n    const { draw } = this\n\n    // Remove feature and clear original feature\n    draw.deleteAll()\n    this.oFeature = null\n  }\n\n  // Add feature to map\n  addFeature (feature, shape) {\n    const { paddingBox } = this.provider\n\n    // Default feature if none provided\n    feature ??= this.getFeatureFromElement(paddingBox, shape)\n\n    this.draw.add(feature)\n    this.draw.changeMode('disabled')\n  }\n\n  getBoundsFromCoordinates (coords) {\n    let minX = Infinity; let minY = Infinity; let maxX = -Infinity; let maxY = -Infinity\n    coords.forEach(coord => {\n      const x = coord[0]\n      const y = coord[1]\n      minX = x < minX ? x : minX\n      minY = y < minY ? y : minY\n      maxX = x > maxX ? x : maxX\n      maxY = y > maxY ? y : maxY\n    })\n    return [minX, minY, maxX, maxY]\n  }\n\n  getFeatureFromElement (el, shape) {\n    const { map, scale } = this.provider\n    const box = el.getBoundingClientRect()\n    const padding = getFocusPadding(el, scale)\n    const nw = map.unproject([padding.left, padding.top])\n    const se = map.unproject([padding.left + (box.width / scale), padding.top + (box.height / scale)])\n    const feature = { id: shape, type: 'Feature', geometry: { type: 'Polygon' } }\n\n    if (shape === 'circle') {\n      // Circle\n      const c = map.getCenter()\n      const coords = [c.lng, c.lat]\n      const radius = getDistance([nw.lng, nw.lat], [se.lng, nw.lat]) / 2\n      const turfFeature = new TurfCircle(coords, radius, { units: 'meters' })\n      const roundedCoords = turfFeature.geometry.coordinates[0].map(([lng, lat]) => [+(lng.toFixed(defaults.PRECISION)), +(lat.toFixed(defaults.PRECISION))])\n      feature.geometry.coordinates = [roundedCoords]\n    } else {\n      // Polygon\n      const b = [nw.lng, nw.lat, se.lng, se.lat]\n      const coords = [[[b[0], b[1]], [b[2], b[1]], [b[2], b[3]], [b[0], b[3]], [b[0], b[1]]]]\n      feature.geometry.coordinates = coords\n    }\n\n    return feature\n  }\n\n  setStyle () {\n    const { draw, shape } = this\n\n    if (draw?.getMode() === 'edit_vertex') {\n      // Need to switch to another mode first to call onStop\n      draw.changeMode('simple_select')\n\n      // Call edit again to reinstate the mode\n      this.edit('vertex', shape)\n    }\n  }\n}\n\nexport default Draw\n","module.exports = normalize;\n\nvar types = {\n    Point: 'geometry',\n    MultiPoint: 'geometry',\n    LineString: 'geometry',\n    MultiLineString: 'geometry',\n    Polygon: 'geometry',\n    MultiPolygon: 'geometry',\n    GeometryCollection: 'geometry',\n    Feature: 'feature',\n    FeatureCollection: 'featurecollection'\n};\n\n/**\n * Normalize a GeoJSON feature into a FeatureCollection.\n *\n * @param {object} gj geojson data\n * @returns {object} normalized geojson data\n */\nfunction normalize(gj) {\n    if (!gj || !gj.type) return null;\n    var type = types[gj.type];\n    if (!type) return null;\n\n    if (type === 'geometry') {\n        return {\n            type: 'FeatureCollection',\n            features: [{\n                type: 'Feature',\n                properties: {},\n                geometry: gj\n            }]\n        };\n    } else if (type === 'feature') {\n        return {\n            type: 'FeatureCollection',\n            features: [gj]\n        };\n    } else if (type === 'featurecollection') {\n        return gj;\n    }\n}\n","module.exports.RADIUS = 6378137;\nmodule.exports.FLATTENING = 1/298.257223563;\nmodule.exports.POLAR_RADIUS = 6356752.3142;\n","var wgs84 = require('wgs84');\n\nmodule.exports.geometry = geometry;\nmodule.exports.ring = ringArea;\n\nfunction geometry(_) {\n    var area = 0, i;\n    switch (_.type) {\n        case 'Polygon':\n            return polygonArea(_.coordinates);\n        case 'MultiPolygon':\n            for (i = 0; i < _.coordinates.length; i++) {\n                area += polygonArea(_.coordinates[i]);\n            }\n            return area;\n        case 'Point':\n        case 'MultiPoint':\n        case 'LineString':\n        case 'MultiLineString':\n            return 0;\n        case 'GeometryCollection':\n            for (i = 0; i < _.geometries.length; i++) {\n                area += geometry(_.geometries[i]);\n            }\n            return area;\n    }\n}\n\nfunction polygonArea(coords) {\n    var area = 0;\n    if (coords && coords.length > 0) {\n        area += Math.abs(ringArea(coords[0]));\n        for (var i = 1; i < coords.length; i++) {\n            area -= Math.abs(ringArea(coords[i]));\n        }\n    }\n    return area;\n}\n\n/**\n * Calculate the approximate area of the polygon were it projected onto\n *     the earth.  Note that this area will be positive if ring is oriented\n *     clockwise, otherwise it will be negative.\n *\n * Reference:\n * Robert. G. Chamberlain and William H. Duquette, \"Some Algorithms for\n *     Polygons on a Sphere\", JPL Publication 07-03, Jet Propulsion\n *     Laboratory, Pasadena, CA, June 2007 http://trs-new.jpl.nasa.gov/dspace/handle/2014/40409\n *\n * Returns:\n * {float} The approximate signed geodesic area of the polygon in square\n *     meters.\n */\n\nfunction ringArea(coords) {\n    var p1, p2, p3, lowerIndex, middleIndex, upperIndex, i,\n    area = 0,\n    coordsLength = coords.length;\n\n    if (coordsLength > 2) {\n        for (i = 0; i < coordsLength; i++) {\n            if (i === coordsLength - 2) {// i = N-2\n                lowerIndex = coordsLength - 2;\n                middleIndex = coordsLength -1;\n                upperIndex = 0;\n            } else if (i === coordsLength - 1) {// i = N-1\n                lowerIndex = coordsLength - 1;\n                middleIndex = 0;\n                upperIndex = 1;\n            } else { // i = 0 to N-3\n                lowerIndex = i;\n                middleIndex = i+1;\n                upperIndex = i+2;\n            }\n            p1 = coords[lowerIndex];\n            p2 = coords[middleIndex];\n            p3 = coords[upperIndex];\n            area += ( rad(p3[0]) - rad(p1[0]) ) * Math.sin( rad(p2[1]));\n        }\n\n        area = area * wgs84.RADIUS * wgs84.RADIUS / 2;\n    }\n\n    return area;\n}\n\nfunction rad(_) {\n    return _ * Math.PI / 180;\n}"],"names":["module","exports","equal","a","b","constructor","length","i","keys","Array","isArray","RegExp","source","flags","valueOf","Object","prototype","toString","hasOwnProperty","call","key","mode","DrawContext","handlers","drag","click","mousemove","mousedown","mouseup","mouseout","keydown","keyup","touchstart","touchmove","touchend","tap","ctx","on","event","selector","fn","undefined","Error","push","render","id","store","featureChanged","delegate","eventName","handles","iHandle","handle","ui","updateMapClasses","start","stop","trash","combineFeatures","uncombineFeatures","classes","CANVAS","CONTROL_BASE","CONTROL_PREFIX","CONTROL_BUTTON","CONTROL_BUTTON_LINE","CONTROL_BUTTON_POLYGON","CONTROL_BUTTON_POINT","CONTROL_BUTTON_TRASH","CONTROL_BUTTON_COMBINE_FEATURES","CONTROL_BUTTON_UNCOMBINE_FEATURES","CONTROL_GROUP","ATTRIBUTION","ACTIVE_BUTTON","BOX_SELECT","sources","HOT","COLD","cursors","ADD","MOVE","DRAG","POINTER","NONE","types","POLYGON","LINE","POINT","geojsonTypes","FEATURE","LINE_STRING","FEATURE_COLLECTION","MULTI_PREFIX","MULTI_POINT","MULTI_LINE_STRING","MULTI_POLYGON","DRAW_LINE_STRING","DRAW_POLYGON","DRAW_POINT","SIMPLE_SELECT","DIRECT_SELECT","CREATE","DELETE","UPDATE","SELECTION_CHANGE","MODE_CHANGE","ACTIONABLE","RENDER","COMBINE_FEATURES","UNCOMBINE_FEATURES","updateActions","CHANGE_PROPERTIES","CHANGE_COORDINATES","meta","MIDPOINT","VERTEX","activeStates","ACTIVE","INACTIVE","interactions","LAT_MIN","LAT_RENDERED_MIN","LAT_MAX","LAT_RENDERED_MAX","LNG_MIN","LNG_MAX","FEATURE_SORT_RANKS","Point","LineString","MultiLineString","Polygon","comparator","score","geometry","type","area","features","map","feature","property","sort","mapEvent","buffer","point","x","y","StringSet","items","this","_items","_nums","_length","l","add","has","delete","values","forEach","k","v","JSON","parse","clear","META_TYPES","bbox","featuresAt","options","clickBuffer","touch","touchBuffer","box","queryParams","styles","layers","s","filter","getLayer","queryRenderedFeatures","indexOf","properties","featureIds","uniqueFeatures","featureId","getFeatureAtAndSetCursors","mouse","active","events","currentModeName","queueMapClasses","Math","sqrt","FINE_TOLERANCE","GROSS_TOLERANCE","INTERVAL","isClick","end","fineTolerance","grossTolerance","interval","time","moveDistance","TAP_TOLERANCE","TAP_INTERVAL","isTap","tolerance","alphabet","defaultSize","size","random","customAlphabet","generateID","Feature","geojson","coordinates","changed","incomingCoords","coords","setCoordinates","getCoordinates","stringify","setProperty","value","toGeoJSON","internal","userProperties","name","create","isValid","updateCoordinate","pathOrLng","lngOrLat","lat","arguments","getCoordinate","addCoordinate","path","lng","parseInt","splice","removeCoordinate","ring","slice","every","ids","split","concat","parts","ringId","coordId","models","MultiPoint","MultiPolygon","takeAction","action","idx","tail","join","MultiFeature","model","TypeError","_coordinatesToFeatures","Model","bind","replace","f","getFeatures","ModeInterface","drawConfig","_ctx","setSelected","setSelectedCoordinates","reduce","m","c","feature_id","get","getSelected","getSelectedIds","isSelected","getFeature","select","deselect","deleteFeature","opts","addFeature","clearSelectedFeatures","clearSelected","clearSelectedCoordinates","setActionableState","actions","newSet","actionable","changeMode","eventOpts","fire","eventData","updateUIClasses","activateUIButton","setActiveButton","bufferType","newFeature","isInstanceOf","doRender","onSetup","onDrag","onClick","onMouseMove","onMouseDown","onMouseUp","onMouseOut","onKeyUp","onKeyDown","onTouchStart","onTouchMove","onTouchEnd","onTap","onStop","onTrash","onCombineFeature","onUncombineFeature","toDisplayFeatures","eventMapper","eventKeys","getSource","cleanup","newHotIds","newColdIds","isDirty","getAllIds","getChangedIds","hot","lastColdCount","cold","parent","coldChanged","renderFeature","featureInternal","currentModeRender","clearChangedIds","setData","Store","renderRequest","_features","_featureIds","_selectedFeatureIds","_selectedCoordinates","_changedFeatureIds","_emitSelectionChange","_mapInitialConfig","requestAnimationFrame","points","getSelectedCoordinates","coordinate","refreshSelectedCoordinates","newSelectedCoordinates","silent","createRenderBatch","holdRender","numRenders","setDirty","featureCreated","suppressAPIEvents","deletedFeaturesToEmit","getAll","coord_path","setFeatureProperty","storeMapConfig","interaction","isEnabled","restoreMapConfig","enable","disable","getInitialConfigValue","classTypes","controlContainer","mapLoadedInterval","setup","onRemove","off","connect","clearInterval","removeLayers","removeButtons","removeEventListeners","clearMapClasses","boxZoomInitial","boxZoom","container","parentNode","removeChild","addLayers","addEventListeners","onAdd","modes","modeObject","modeObjectKeys","startOpts","state","modeHandler","eh","e","onCombineFeatures","onUncombineFeatures","mouseDownInfo","touchStartInfo","currentMode","isDrag","Date","getTime","originalEvent","stopPropagation","mousedrag","endInfo","touchdrag","buttons","which","target","featureTarget","touchEnabled","preventDefault","isKeyModeValid","code","modename","nextModeOptions","eventOptions","modebuilder","srcElement","classList","contains","keyCode","controls","line_string","polygon","zoomend","changeZoom","data","dataType","some","style","actionState","defaultMode","addEventListener","keybindings","removeEventListener","getMode","buttonElements","activeButton","currentMapClasses","nextMapClasses","assign","classesToRemove","classesToAdd","remove","createControlButton","button","document","createElement","className","setAttribute","title","appendChild","deactivateButtons","onDeactivate","onActivate","addButtons","controlGroup","combine_features","uncombine_features","buttonId","getContainer","boxSelect","dragPanIsEnabled","dragPan","loaded","setInterval","addSource","addLayer","removeLayer","removeSource","blue","orange","white","isOfMetaType","isShiftMousedown","shiftKey","isActiveFeature","isInactiveFeature","noTarget","isVertex","isShiftDown","isEscapeKey","isEnterKey","isTrue","clone","p","_add","sub","_sub","multByPoint","_multByPoint","divByPoint","_divByPoint","mult","_mult","div","_div","rotate","_rotate","rotateAround","_rotateAround","matMult","_matMult","unit","_unit","perp","_perp","round","_round","mag","equals","other","dist","distSqr","dx","dy","angle","atan2","angleTo","angleWith","angleWithSep","cos","sin","convert","mouseEvent","rect","getBoundingClientRect","clientX","left","clientLeft","clientY","top","clientTop","parentId","selected","startVertex","endVertex","startCoord","endCoord","mid","createSupplementaryPoints","basePath","supplementaryPoints","processLine","line","lineBasePath","firstPointString","lastVertex","pointIndex","pointPath","String","vertex","isSelectedPath","midpoints","midpoint","stringifiedPoint","selectedPaths","lineIndex","subType","subCoordinates","index","subFeature","processMultiGeometry","setTimeout","doubleClickZoom","geojsonFeatures","delta","northInnerEdge","southInnerEdge","northOuterEdge","southOuterEdge","westEdge","eastEdge","bounds","depth","flat","lngs","coord","lats","min","vals","apply","max","extent","featureSouthEdge","featureNorthEdge","featureWestEdge","featureEastEdge","constrainedDelta","ceil","abs","currentCoordinates","moveCoordinate","moveRing","nextCoordinates","multi","SimpleSelect","dragMoveLocation","boxSelectStartLocation","boxSelectElement","boxSelecting","canBoxSelect","dragMoving","canDragMove","initialDragPanState","initiallySelectedFeatureIds","fireActionable","selectedFeatures","multiFeatures","featureType","allFeatures","memo","fireUpdate","stopExtendedInteractions","clickAnywhere","clickOnVertex","clickOnFeature","wasSelected","coordPath","startPos","lngLat","startOnActiveFeature","isShiftClick","selectedFeatureIds","isFeatureSelected","startBoxSelect","dragMove","whileBoxSelect","current","minX","maxX","minY","maxY","translateValue","transform","WebkitTransform","width","height","featuresInBox","idsToSelect","getUniqueIds","display","featuresCombined","includes","subcoords","multiFeature","createdFeatures","deletedFeatures","featuresUncombined","isMidpoint","DirectSelect","selectedCoordPaths","startDragging","about","selectedIndex","selectedCoordinates","pathsToCoordinates","paths","stopDragging","selectedCoords","localeCompare","numeric","isFeature","onVertex","isMidPoint","noCoords","onFeature","onMidpoint","dragVertex","dragFeature","clickNoTarget","clickActiveFeature","clickInactive","DrawPoint","isActivePoint","stopDrawingAndRemove","DrawPolygon","currentVertexPosition","isActivePolygon","coordinateCount","endPos","lineCoordinates","DrawLineString","direction","from","lastCoord","isActiveLine","simple_select","direct_select","draw_point","draw_polygon","draw_line_string","defaultOptions","displayControlsDefault","showControls","hideControls","addSources","sourceBucket","featureTypes","MapboxDraw","api","withDefaults","getFeatureIdsAt","getSelectedPoints","set","featureCollection","renderBatch","toDelete","newIds","newIdsLookup","internalFeature","originalProperties","deleteAll","modeOptions","setupDraw","constants","lib","ARROW_KEYS","DisabledMode","EditVertexMode","_objectSpread","_this","selectedType","isPanEnabled","vertecies","getVerticies","getMidpoints","keydownHandler","keyupHandler","selectionChangeHandler","onSelectionChange","onUpdate","updateMidpoint","_e$points","_state$selectedType","vertexCoord","findIndex","_state$selectedCoordP","isNaN","updateVertex","altKey","insertVertex","moveVertex","deleteVertex","_feature$coordinates","nextIndex","midX","midY","getVertexOrMidpoint","vertexPixels","project","midpointPixels","pixels","_toConsumableArray","quadrant","offsetX","offsetY","distances","pow","closest","spatialNavigate","getCenter","_this$getVertexOrMidp2","getOffset","pixel","offset","unproject","midpointIndex","midpointCoord","newMidpointCoord","vertexIndex","newVertexIndex","currentCoord","newCoord","draw","numCoords","nextVertexIndex","DrawVertexMode","_this2","interfaceType","querySelector","insertAdjacentHTML","vertexMarker","lastElementChild","pointerdownHandler","onPointerDown","focusHandler","onFocus","blurHandler","onBlur","createHandler","onCreate","moveHandler","onMove","pointermoveHandler","onPointerMove","doClick","center","simulatedClickEvent","window","MouseEvent","bubbles","cancelable","simulatedMouseMoveEvent","createVertex","_container$querySelec","fillActive","fgColor","paint","strokeActive","layout","strokeInactive","drawPreviewLine","vertexHalo","bgColor","hColor","vertexActive","midpointHalo","midpointActive","circle","destination","origin","distance","bearing","coordinates1","longitude1","latitude1","bearingRad","radians","units","latitude2","asin","longitude2","radius","steps","Draw","provider","_classCallCheck","drawMode","shape","initialFeature","oFeature","disabled","edit_vertex","draw_vertex","styleName","addControl","dispatchEvent","CustomEvent","detail","_this$provider","getBoundsFromCoordinates","fitBounds","animate","edit","paddingBox","elFeature","getFeatureFromElement","Infinity","el","_this$provider2","scale","padding","getFocusPadding","nw","se","roundedCoords","TurfCircle","getDistance","_ref","_ref2","_slicedToArray","toFixed","defaults","PRECISION","gj","GeometryCollection","FeatureCollection","RADIUS","FLATTENING","POLAR_RADIUS","wgs84","polygonArea","ringArea","p1","p2","lowerIndex","middleIndex","upperIndex","coordsLength","rad","_","PI","geometries"],"sourceRoot":""}