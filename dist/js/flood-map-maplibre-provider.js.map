{"version":3,"file":"flood-map-maplibre-provider.js","mappings":"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","sources":["webpack://defra/./node_modules/@turf/helpers/dist/esm/index.js","webpack://defra/./node_modules/computed-style-to-inline-style/dist/index.js","webpack://defra/./src/js/provider/maplibre/constants.js","webpack://defra/./node_modules/@turf/area/dist/esm/index.js","webpack://defra/./src/js/lib/symbols.js","webpack://defra/./node_modules/@turf/invariant/dist/esm/index.js","webpack://defra/./node_modules/@turf/distance/dist/esm/index.js","webpack://defra/./src/js/lib/debounce.js","webpack://defra/./node_modules/@turf/meta/dist/esm/index.js","webpack://defra/./src/js/lib/viewport.js","webpack://defra/./node_modules/tinyqueue/index.js","webpack://defra/./node_modules/polylabel/polylabel.js","webpack://defra/./node_modules/@turf/bbox-clip/dist/esm/index.js","webpack://defra/./src/js/provider/maplibre/query.js","webpack://defra/./src/js/provider/maplibre/marker.js","webpack://defra/./src/js/provider/maplibre/symbols.js","webpack://defra/./src/js/provider/maplibre/events.js","webpack://defra/./src/js/provider/maplibre/maplibre-provider.js","webpack://defra/./src/js/lib/throttle.js"],"sourcesContent":["// index.ts\nvar earthRadius = 63710088e-1;\nvar factors = {\n  centimeters: earthRadius * 100,\n  centimetres: earthRadius * 100,\n  degrees: 360 / (2 * Math.PI),\n  feet: earthRadius * 3.28084,\n  inches: earthRadius * 39.37,\n  kilometers: earthRadius / 1e3,\n  kilometres: earthRadius / 1e3,\n  meters: earthRadius,\n  metres: earthRadius,\n  miles: earthRadius / 1609.344,\n  millimeters: earthRadius * 1e3,\n  millimetres: earthRadius * 1e3,\n  nauticalmiles: earthRadius / 1852,\n  radians: 1,\n  yards: earthRadius * 1.0936\n};\nvar areaFactors = {\n  acres: 247105e-9,\n  centimeters: 1e4,\n  centimetres: 1e4,\n  feet: 10.763910417,\n  hectares: 1e-4,\n  inches: 1550.003100006,\n  kilometers: 1e-6,\n  kilometres: 1e-6,\n  meters: 1,\n  metres: 1,\n  miles: 386e-9,\n  nauticalmiles: 29155334959812285e-23,\n  millimeters: 1e6,\n  millimetres: 1e6,\n  yards: 1.195990046\n};\nfunction feature(geom, properties, options = {}) {\n  const feat = { type: \"Feature\" };\n  if (options.id === 0 || options.id) {\n    feat.id = options.id;\n  }\n  if (options.bbox) {\n    feat.bbox = options.bbox;\n  }\n  feat.properties = properties || {};\n  feat.geometry = geom;\n  return feat;\n}\nfunction geometry(type, coordinates, _options = {}) {\n  switch (type) {\n    case \"Point\":\n      return point(coordinates).geometry;\n    case \"LineString\":\n      return lineString(coordinates).geometry;\n    case \"Polygon\":\n      return polygon(coordinates).geometry;\n    case \"MultiPoint\":\n      return multiPoint(coordinates).geometry;\n    case \"MultiLineString\":\n      return multiLineString(coordinates).geometry;\n    case \"MultiPolygon\":\n      return multiPolygon(coordinates).geometry;\n    default:\n      throw new Error(type + \" is invalid\");\n  }\n}\nfunction point(coordinates, properties, options = {}) {\n  if (!coordinates) {\n    throw new Error(\"coordinates is required\");\n  }\n  if (!Array.isArray(coordinates)) {\n    throw new Error(\"coordinates must be an Array\");\n  }\n  if (coordinates.length < 2) {\n    throw new Error(\"coordinates must be at least 2 numbers long\");\n  }\n  if (!isNumber(coordinates[0]) || !isNumber(coordinates[1])) {\n    throw new Error(\"coordinates must contain numbers\");\n  }\n  const geom = {\n    type: \"Point\",\n    coordinates\n  };\n  return feature(geom, properties, options);\n}\nfunction points(coordinates, properties, options = {}) {\n  return featureCollection(\n    coordinates.map((coords) => {\n      return point(coords, properties);\n    }),\n    options\n  );\n}\nfunction polygon(coordinates, properties, options = {}) {\n  for (const ring of coordinates) {\n    if (ring.length < 4) {\n      throw new Error(\n        \"Each LinearRing of a Polygon must have 4 or more Positions.\"\n      );\n    }\n    if (ring[ring.length - 1].length !== ring[0].length) {\n      throw new Error(\"First and last Position are not equivalent.\");\n    }\n    for (let j = 0; j < ring[ring.length - 1].length; j++) {\n      if (ring[ring.length - 1][j] !== ring[0][j]) {\n        throw new Error(\"First and last Position are not equivalent.\");\n      }\n    }\n  }\n  const geom = {\n    type: \"Polygon\",\n    coordinates\n  };\n  return feature(geom, properties, options);\n}\nfunction polygons(coordinates, properties, options = {}) {\n  return featureCollection(\n    coordinates.map((coords) => {\n      return polygon(coords, properties);\n    }),\n    options\n  );\n}\nfunction lineString(coordinates, properties, options = {}) {\n  if (coordinates.length < 2) {\n    throw new Error(\"coordinates must be an array of two or more positions\");\n  }\n  const geom = {\n    type: \"LineString\",\n    coordinates\n  };\n  return feature(geom, properties, options);\n}\nfunction lineStrings(coordinates, properties, options = {}) {\n  return featureCollection(\n    coordinates.map((coords) => {\n      return lineString(coords, properties);\n    }),\n    options\n  );\n}\nfunction featureCollection(features, options = {}) {\n  const fc = { type: \"FeatureCollection\" };\n  if (options.id) {\n    fc.id = options.id;\n  }\n  if (options.bbox) {\n    fc.bbox = options.bbox;\n  }\n  fc.features = features;\n  return fc;\n}\nfunction multiLineString(coordinates, properties, options = {}) {\n  const geom = {\n    type: \"MultiLineString\",\n    coordinates\n  };\n  return feature(geom, properties, options);\n}\nfunction multiPoint(coordinates, properties, options = {}) {\n  const geom = {\n    type: \"MultiPoint\",\n    coordinates\n  };\n  return feature(geom, properties, options);\n}\nfunction multiPolygon(coordinates, properties, options = {}) {\n  const geom = {\n    type: \"MultiPolygon\",\n    coordinates\n  };\n  return feature(geom, properties, options);\n}\nfunction geometryCollection(geometries, properties, options = {}) {\n  const geom = {\n    type: \"GeometryCollection\",\n    geometries\n  };\n  return feature(geom, properties, options);\n}\nfunction round(num, precision = 0) {\n  if (precision && !(precision >= 0)) {\n    throw new Error(\"precision must be a positive number\");\n  }\n  const multiplier = Math.pow(10, precision || 0);\n  return Math.round(num * multiplier) / multiplier;\n}\nfunction radiansToLength(radians, units = \"kilometers\") {\n  const factor = factors[units];\n  if (!factor) {\n    throw new Error(units + \" units is invalid\");\n  }\n  return radians * factor;\n}\nfunction lengthToRadians(distance, units = \"kilometers\") {\n  const factor = factors[units];\n  if (!factor) {\n    throw new Error(units + \" units is invalid\");\n  }\n  return distance / factor;\n}\nfunction lengthToDegrees(distance, units) {\n  return radiansToDegrees(lengthToRadians(distance, units));\n}\nfunction bearingToAzimuth(bearing) {\n  let angle = bearing % 360;\n  if (angle < 0) {\n    angle += 360;\n  }\n  return angle;\n}\nfunction azimuthToBearing(angle) {\n  angle = angle % 360;\n  if (angle > 180) {\n    return angle - 360;\n  } else if (angle < -180) {\n    return angle + 360;\n  }\n  return angle;\n}\nfunction radiansToDegrees(radians) {\n  const normalisedRadians = radians % (2 * Math.PI);\n  return normalisedRadians * 180 / Math.PI;\n}\nfunction degreesToRadians(degrees) {\n  const normalisedDegrees = degrees % 360;\n  return normalisedDegrees * Math.PI / 180;\n}\nfunction convertLength(length, originalUnit = \"kilometers\", finalUnit = \"kilometers\") {\n  if (!(length >= 0)) {\n    throw new Error(\"length must be a positive number\");\n  }\n  return radiansToLength(lengthToRadians(length, originalUnit), finalUnit);\n}\nfunction convertArea(area, originalUnit = \"meters\", finalUnit = \"kilometers\") {\n  if (!(area >= 0)) {\n    throw new Error(\"area must be a positive number\");\n  }\n  const startFactor = areaFactors[originalUnit];\n  if (!startFactor) {\n    throw new Error(\"invalid original units\");\n  }\n  const finalFactor = areaFactors[finalUnit];\n  if (!finalFactor) {\n    throw new Error(\"invalid final units\");\n  }\n  return area / startFactor * finalFactor;\n}\nfunction isNumber(num) {\n  return !isNaN(num) && num !== null && !Array.isArray(num);\n}\nfunction isObject(input) {\n  return input !== null && typeof input === \"object\" && !Array.isArray(input);\n}\nfunction validateBBox(bbox) {\n  if (!bbox) {\n    throw new Error(\"bbox is required\");\n  }\n  if (!Array.isArray(bbox)) {\n    throw new Error(\"bbox must be an Array\");\n  }\n  if (bbox.length !== 4 && bbox.length !== 6) {\n    throw new Error(\"bbox must be an Array of 4 or 6 numbers\");\n  }\n  bbox.forEach((num) => {\n    if (!isNumber(num)) {\n      throw new Error(\"bbox must only contain numbers\");\n    }\n  });\n}\nfunction validateId(id) {\n  if (!id) {\n    throw new Error(\"id is required\");\n  }\n  if ([\"string\", \"number\"].indexOf(typeof id) === -1) {\n    throw new Error(\"id must be a number or a string\");\n  }\n}\nexport {\n  areaFactors,\n  azimuthToBearing,\n  bearingToAzimuth,\n  convertArea,\n  convertLength,\n  degreesToRadians,\n  earthRadius,\n  factors,\n  feature,\n  featureCollection,\n  geometry,\n  geometryCollection,\n  isNumber,\n  isObject,\n  lengthToDegrees,\n  lengthToRadians,\n  lineString,\n  lineStrings,\n  multiLineString,\n  multiPoint,\n  multiPolygon,\n  point,\n  points,\n  polygon,\n  polygons,\n  radiansToDegrees,\n  radiansToLength,\n  round,\n  validateBBox,\n  validateId\n};\n//# sourceMappingURL=index.js.map","!function(e,t){\"object\"==typeof exports&&\"object\"==typeof module?module.exports=t():\"function\"==typeof define&&define.amd?define([],t):\"object\"==typeof exports?exports.computedStyleToInlineStyle=t():e.computedStyleToInlineStyle=t()}(this,(()=>(()=>{\"use strict\";var e={};return(()=>{var t=e;Object.defineProperty(t,\"__esModule\",{value:!0}),t.default=function e(t,o){if(!t)throw new Error(\"No element specified.\");(null==o?void 0:o.recursive)&&Array.prototype.forEach.call(t.children,(t=>{e(t,o)}));const r=getComputedStyle(t);Array.prototype.forEach.call((null==o?void 0:o.properties)||r,(e=>{t.style[e]=r.getPropertyValue(e)}))}})(),e})()));","export const defaults = {\n  PRECISION: 6,\n  ANIMATION: {\n    duration: 500,\n    curve: 0\n  },\n  DELAY: 500,\n  THROTTLE: 100,\n  MAX_FEATURES: 9,\n  SHORTCUT_LABEL_OFFSET: -30\n}\n\nexport const css = {\n  MARKER_VISIBLE: 'fm-c-marker--visible'\n}\n","// index.ts\nimport { earthRadius } from \"@turf/helpers\";\nimport { geomReduce } from \"@turf/meta\";\nfunction area(geojson) {\n  return geomReduce(\n    geojson,\n    (value, geom) => {\n      return value + calculateArea(geom);\n    },\n    0\n  );\n}\nfunction calculateArea(geom) {\n  let total = 0;\n  let i;\n  switch (geom.type) {\n    case \"Polygon\":\n      return polygonArea(geom.coordinates);\n    case \"MultiPolygon\":\n      for (i = 0; i < geom.coordinates.length; i++) {\n        total += polygonArea(geom.coordinates[i]);\n      }\n      return total;\n    case \"Point\":\n    case \"MultiPoint\":\n    case \"LineString\":\n    case \"MultiLineString\":\n      return 0;\n  }\n  return 0;\n}\nfunction polygonArea(coords) {\n  let total = 0;\n  if (coords && coords.length > 0) {\n    total += Math.abs(ringArea(coords[0]));\n    for (let i = 1; i < coords.length; i++) {\n      total -= Math.abs(ringArea(coords[i]));\n    }\n  }\n  return total;\n}\nvar FACTOR = earthRadius * earthRadius / 2;\nvar PI_OVER_180 = Math.PI / 180;\nfunction ringArea(coords) {\n  const coordsLength = coords.length - 1;\n  if (coordsLength <= 2) return 0;\n  let total = 0;\n  let i = 0;\n  while (i < coordsLength) {\n    const lower = coords[i];\n    const middle = coords[i + 1 === coordsLength ? 0 : i + 1];\n    const upper = coords[i + 2 >= coordsLength ? (i + 2) % coordsLength : i + 2];\n    const lowerX = lower[0] * PI_OVER_180;\n    const middleY = middle[1] * PI_OVER_180;\n    const upperX = upper[0] * PI_OVER_180;\n    total += (upperX - lowerX) * Math.sin(middleY);\n    i++;\n  }\n  return total * FACTOR;\n}\nvar turf_area_default = area;\nexport {\n  area,\n  turf_area_default as default\n};\n//# sourceMappingURL=index.js.map","const { DOMParser } = window\n\nexport const parseSVG = (icon, fill, text, isDarkBasemap = false, scale = 1) => {\n  const isSelected = icon.includes('selected')\n  // let styled = text.replace(/#0f0|#00ff00|#0F0|#00FF00/g, isSelected ? isDarkBasemap ? '#ffffff' : '#0b0c0c' : 'transparent')\n  // styled = styled.replace(/#00f|#0000ff|#00F|#0000FF/g, isDarkBasemap ? '#162232' : '#ffffff')\n  const parser = new DOMParser()\n  const dom = parser.parseFromString(text, 'text/html')\n  const svg = dom.querySelector('svg')\n  // Add xmlns attribute and class to svg\n  // svg.setAttribute('xmlns', 'http://www.w3.org/2000/svg')\n  svg.classList.add('fm-c-symbol')\n  svg.classList.toggle('fm-c-symbol--selected', isSelected)\n  svg.classList.toggle('fm-c-symbol--dark', isDarkBasemap)\n  // Set svg height and width\n  const viewBox = svg.getAttribute('viewBox')\n  const width = parseInt(viewBox.split(' ')[2], 10) * scale\n  const height = parseInt(viewBox.split(' ')[3], 10) * scale\n  svg.setAttribute('width', width)\n  svg.setAttribute('height', height)\n  // Conditionally add fill\n  if (fill) {\n    svg.setAttribute('fill', fill)\n  }\n  // Add classnames\n  const olFill = svg.querySelectorAll('[fill=\"#0b0c0c\" i], [style*=\"fill:#0b0c0c\" i]')\n  const olStroke = svg.querySelectorAll('[stroke=\"#0b0c0c\" i], [style*=\"stroke:#0b0c0c\" i]')\n  olFill.forEach(n => n.classList.add('fm-c-symbol__ol-fill'))\n  olStroke.forEach(n => n.classList.add('fm-c-symbol__ol-stroke'))\n  const bgFill = svg.querySelectorAll('[fill=\"#fff\" i], [fill=\"#ffffff\" i], [style*=\"fill:#fff\" i], [style*=\"fill:#ffffff\" i]')\n  const bgStroke = svg.querySelectorAll('[stroke*=\"#fff\" i], [stroke*=\"#ffffff\" i], [style*=\"stroke:#fff\" i], [style*=\"stroke:#ffffff\" i]')\n  bgFill.forEach(n => n.classList.add('fm-c-symbol__bg-fill'))\n  bgStroke.forEach(n => n.classList.add('fm-c-symbol__bg-stroke'))\n  const fgFill = svg.querySelectorAll(':not(.fm-c-symbol__ol-fill):not(.fm-c-symbol__bg-fill)[fill], :not(.fm-c-symbol__ol-fill):not(.fm-c-symbol__bg-fill)[style*=\"fill\"]')\n  const fgStroke = svg.querySelectorAll(':not(.fm-c-symbol__ol-stroke):not(.fm-c-symbol__bg-stroke)[stroke], :not(.fm-c-symbol__ol-stroke):not(.fm-c-symbol__bg-stroke)[style*=\"stroke\"]')\n  fgFill.forEach(n => n.classList.add('fm-c-symbol__fg-fill'))\n  fgStroke.forEach(n => n.classList.add('fm-c-symbol__fg-stroke'))\n  return dom.body.innerHTML\n}\n","// index.ts\nimport { isNumber } from \"@turf/helpers\";\nfunction getCoord(coord) {\n  if (!coord) {\n    throw new Error(\"coord is required\");\n  }\n  if (!Array.isArray(coord)) {\n    if (coord.type === \"Feature\" && coord.geometry !== null && coord.geometry.type === \"Point\") {\n      return [...coord.geometry.coordinates];\n    }\n    if (coord.type === \"Point\") {\n      return [...coord.coordinates];\n    }\n  }\n  if (Array.isArray(coord) && coord.length >= 2 && !Array.isArray(coord[0]) && !Array.isArray(coord[1])) {\n    return [...coord];\n  }\n  throw new Error(\"coord must be GeoJSON Point or an Array of numbers\");\n}\nfunction getCoords(coords) {\n  if (Array.isArray(coords)) {\n    return coords;\n  }\n  if (coords.type === \"Feature\") {\n    if (coords.geometry !== null) {\n      return coords.geometry.coordinates;\n    }\n  } else {\n    if (coords.coordinates) {\n      return coords.coordinates;\n    }\n  }\n  throw new Error(\n    \"coords must be GeoJSON Feature, Geometry Object or an Array\"\n  );\n}\nfunction containsNumber(coordinates) {\n  if (coordinates.length > 1 && isNumber(coordinates[0]) && isNumber(coordinates[1])) {\n    return true;\n  }\n  if (Array.isArray(coordinates[0]) && coordinates[0].length) {\n    return containsNumber(coordinates[0]);\n  }\n  throw new Error(\"coordinates must only contain numbers\");\n}\nfunction geojsonType(value, type, name) {\n  if (!type || !name) {\n    throw new Error(\"type and name required\");\n  }\n  if (!value || value.type !== type) {\n    throw new Error(\n      \"Invalid input to \" + name + \": must be a \" + type + \", given \" + value.type\n    );\n  }\n}\nfunction featureOf(feature, type, name) {\n  if (!feature) {\n    throw new Error(\"No feature passed\");\n  }\n  if (!name) {\n    throw new Error(\".featureOf() requires a name\");\n  }\n  if (!feature || feature.type !== \"Feature\" || !feature.geometry) {\n    throw new Error(\n      \"Invalid input to \" + name + \", Feature with geometry required\"\n    );\n  }\n  if (!feature.geometry || feature.geometry.type !== type) {\n    throw new Error(\n      \"Invalid input to \" + name + \": must be a \" + type + \", given \" + feature.geometry.type\n    );\n  }\n}\nfunction collectionOf(featureCollection, type, name) {\n  if (!featureCollection) {\n    throw new Error(\"No featureCollection passed\");\n  }\n  if (!name) {\n    throw new Error(\".collectionOf() requires a name\");\n  }\n  if (!featureCollection || featureCollection.type !== \"FeatureCollection\") {\n    throw new Error(\n      \"Invalid input to \" + name + \", FeatureCollection required\"\n    );\n  }\n  for (const feature of featureCollection.features) {\n    if (!feature || feature.type !== \"Feature\" || !feature.geometry) {\n      throw new Error(\n        \"Invalid input to \" + name + \", Feature with geometry required\"\n      );\n    }\n    if (!feature.geometry || feature.geometry.type !== type) {\n      throw new Error(\n        \"Invalid input to \" + name + \": must be a \" + type + \", given \" + feature.geometry.type\n      );\n    }\n  }\n}\nfunction getGeom(geojson) {\n  if (geojson.type === \"Feature\") {\n    return geojson.geometry;\n  }\n  return geojson;\n}\nfunction getType(geojson, _name) {\n  if (geojson.type === \"FeatureCollection\") {\n    return \"FeatureCollection\";\n  }\n  if (geojson.type === \"GeometryCollection\") {\n    return \"GeometryCollection\";\n  }\n  if (geojson.type === \"Feature\" && geojson.geometry !== null) {\n    return geojson.geometry.type;\n  }\n  return geojson.type;\n}\nexport {\n  collectionOf,\n  containsNumber,\n  featureOf,\n  geojsonType,\n  getCoord,\n  getCoords,\n  getGeom,\n  getType\n};\n//# sourceMappingURL=index.js.map","// index.ts\nimport { getCoord } from \"@turf/invariant\";\nimport { radiansToLength, degreesToRadians } from \"@turf/helpers\";\nfunction distance(from, to, options = {}) {\n  var coordinates1 = getCoord(from);\n  var coordinates2 = getCoord(to);\n  var dLat = degreesToRadians(coordinates2[1] - coordinates1[1]);\n  var dLon = degreesToRadians(coordinates2[0] - coordinates1[0]);\n  var lat1 = degreesToRadians(coordinates1[1]);\n  var lat2 = degreesToRadians(coordinates2[1]);\n  var a = Math.pow(Math.sin(dLat / 2), 2) + Math.pow(Math.sin(dLon / 2), 2) * Math.cos(lat1) * Math.cos(lat2);\n  return radiansToLength(\n    2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a)),\n    options.units\n  );\n}\nvar turf_distance_default = distance;\nexport {\n  turf_distance_default as default,\n  distance\n};\n//# sourceMappingURL=index.js.map","export const debounce = (fn, wait) => {\n  let timeoutId = null\n  return (...args) => {\n    window.clearTimeout(timeoutId)\n    timeoutId = window.setTimeout(() => {\n      fn(...args)\n    }, wait)\n  }\n}\n","// index.js\nimport { feature, point, lineString, isObject } from \"@turf/helpers\";\nfunction coordEach(geojson, callback, excludeWrapCoord) {\n  if (geojson === null) return;\n  var j, k, l, geometry, stopG, coords, geometryMaybeCollection, wrapShrink = 0, coordIndex = 0, isGeometryCollection, type = geojson.type, isFeatureCollection = type === \"FeatureCollection\", isFeature = type === \"Feature\", stop = isFeatureCollection ? geojson.features.length : 1;\n  for (var featureIndex = 0; featureIndex < stop; featureIndex++) {\n    geometryMaybeCollection = isFeatureCollection ? geojson.features[featureIndex].geometry : isFeature ? geojson.geometry : geojson;\n    isGeometryCollection = geometryMaybeCollection ? geometryMaybeCollection.type === \"GeometryCollection\" : false;\n    stopG = isGeometryCollection ? geometryMaybeCollection.geometries.length : 1;\n    for (var geomIndex = 0; geomIndex < stopG; geomIndex++) {\n      var multiFeatureIndex = 0;\n      var geometryIndex = 0;\n      geometry = isGeometryCollection ? geometryMaybeCollection.geometries[geomIndex] : geometryMaybeCollection;\n      if (geometry === null) continue;\n      coords = geometry.coordinates;\n      var geomType = geometry.type;\n      wrapShrink = excludeWrapCoord && (geomType === \"Polygon\" || geomType === \"MultiPolygon\") ? 1 : 0;\n      switch (geomType) {\n        case null:\n          break;\n        case \"Point\":\n          if (callback(\n            coords,\n            coordIndex,\n            featureIndex,\n            multiFeatureIndex,\n            geometryIndex\n          ) === false)\n            return false;\n          coordIndex++;\n          multiFeatureIndex++;\n          break;\n        case \"LineString\":\n        case \"MultiPoint\":\n          for (j = 0; j < coords.length; j++) {\n            if (callback(\n              coords[j],\n              coordIndex,\n              featureIndex,\n              multiFeatureIndex,\n              geometryIndex\n            ) === false)\n              return false;\n            coordIndex++;\n            if (geomType === \"MultiPoint\") multiFeatureIndex++;\n          }\n          if (geomType === \"LineString\") multiFeatureIndex++;\n          break;\n        case \"Polygon\":\n        case \"MultiLineString\":\n          for (j = 0; j < coords.length; j++) {\n            for (k = 0; k < coords[j].length - wrapShrink; k++) {\n              if (callback(\n                coords[j][k],\n                coordIndex,\n                featureIndex,\n                multiFeatureIndex,\n                geometryIndex\n              ) === false)\n                return false;\n              coordIndex++;\n            }\n            if (geomType === \"MultiLineString\") multiFeatureIndex++;\n            if (geomType === \"Polygon\") geometryIndex++;\n          }\n          if (geomType === \"Polygon\") multiFeatureIndex++;\n          break;\n        case \"MultiPolygon\":\n          for (j = 0; j < coords.length; j++) {\n            geometryIndex = 0;\n            for (k = 0; k < coords[j].length; k++) {\n              for (l = 0; l < coords[j][k].length - wrapShrink; l++) {\n                if (callback(\n                  coords[j][k][l],\n                  coordIndex,\n                  featureIndex,\n                  multiFeatureIndex,\n                  geometryIndex\n                ) === false)\n                  return false;\n                coordIndex++;\n              }\n              geometryIndex++;\n            }\n            multiFeatureIndex++;\n          }\n          break;\n        case \"GeometryCollection\":\n          for (j = 0; j < geometry.geometries.length; j++)\n            if (coordEach(geometry.geometries[j], callback, excludeWrapCoord) === false)\n              return false;\n          break;\n        default:\n          throw new Error(\"Unknown Geometry Type\");\n      }\n    }\n  }\n}\nfunction coordReduce(geojson, callback, initialValue, excludeWrapCoord) {\n  var previousValue = initialValue;\n  coordEach(\n    geojson,\n    function(currentCoord, coordIndex, featureIndex, multiFeatureIndex, geometryIndex) {\n      if (coordIndex === 0 && initialValue === void 0)\n        previousValue = currentCoord;\n      else\n        previousValue = callback(\n          previousValue,\n          currentCoord,\n          coordIndex,\n          featureIndex,\n          multiFeatureIndex,\n          geometryIndex\n        );\n    },\n    excludeWrapCoord\n  );\n  return previousValue;\n}\nfunction propEach(geojson, callback) {\n  var i;\n  switch (geojson.type) {\n    case \"FeatureCollection\":\n      for (i = 0; i < geojson.features.length; i++) {\n        if (callback(geojson.features[i].properties, i) === false) break;\n      }\n      break;\n    case \"Feature\":\n      callback(geojson.properties, 0);\n      break;\n  }\n}\nfunction propReduce(geojson, callback, initialValue) {\n  var previousValue = initialValue;\n  propEach(geojson, function(currentProperties, featureIndex) {\n    if (featureIndex === 0 && initialValue === void 0)\n      previousValue = currentProperties;\n    else\n      previousValue = callback(previousValue, currentProperties, featureIndex);\n  });\n  return previousValue;\n}\nfunction featureEach(geojson, callback) {\n  if (geojson.type === \"Feature\") {\n    callback(geojson, 0);\n  } else if (geojson.type === \"FeatureCollection\") {\n    for (var i = 0; i < geojson.features.length; i++) {\n      if (callback(geojson.features[i], i) === false) break;\n    }\n  }\n}\nfunction featureReduce(geojson, callback, initialValue) {\n  var previousValue = initialValue;\n  featureEach(geojson, function(currentFeature, featureIndex) {\n    if (featureIndex === 0 && initialValue === void 0)\n      previousValue = currentFeature;\n    else previousValue = callback(previousValue, currentFeature, featureIndex);\n  });\n  return previousValue;\n}\nfunction coordAll(geojson) {\n  var coords = [];\n  coordEach(geojson, function(coord) {\n    coords.push(coord);\n  });\n  return coords;\n}\nfunction geomEach(geojson, callback) {\n  var i, j, g, geometry, stopG, geometryMaybeCollection, isGeometryCollection, featureProperties, featureBBox, featureId, featureIndex = 0, isFeatureCollection = geojson.type === \"FeatureCollection\", isFeature = geojson.type === \"Feature\", stop = isFeatureCollection ? geojson.features.length : 1;\n  for (i = 0; i < stop; i++) {\n    geometryMaybeCollection = isFeatureCollection ? geojson.features[i].geometry : isFeature ? geojson.geometry : geojson;\n    featureProperties = isFeatureCollection ? geojson.features[i].properties : isFeature ? geojson.properties : {};\n    featureBBox = isFeatureCollection ? geojson.features[i].bbox : isFeature ? geojson.bbox : void 0;\n    featureId = isFeatureCollection ? geojson.features[i].id : isFeature ? geojson.id : void 0;\n    isGeometryCollection = geometryMaybeCollection ? geometryMaybeCollection.type === \"GeometryCollection\" : false;\n    stopG = isGeometryCollection ? geometryMaybeCollection.geometries.length : 1;\n    for (g = 0; g < stopG; g++) {\n      geometry = isGeometryCollection ? geometryMaybeCollection.geometries[g] : geometryMaybeCollection;\n      if (geometry === null) {\n        if (callback(\n          null,\n          featureIndex,\n          featureProperties,\n          featureBBox,\n          featureId\n        ) === false)\n          return false;\n        continue;\n      }\n      switch (geometry.type) {\n        case \"Point\":\n        case \"LineString\":\n        case \"MultiPoint\":\n        case \"Polygon\":\n        case \"MultiLineString\":\n        case \"MultiPolygon\": {\n          if (callback(\n            geometry,\n            featureIndex,\n            featureProperties,\n            featureBBox,\n            featureId\n          ) === false)\n            return false;\n          break;\n        }\n        case \"GeometryCollection\": {\n          for (j = 0; j < geometry.geometries.length; j++) {\n            if (callback(\n              geometry.geometries[j],\n              featureIndex,\n              featureProperties,\n              featureBBox,\n              featureId\n            ) === false)\n              return false;\n          }\n          break;\n        }\n        default:\n          throw new Error(\"Unknown Geometry Type\");\n      }\n    }\n    featureIndex++;\n  }\n}\nfunction geomReduce(geojson, callback, initialValue) {\n  var previousValue = initialValue;\n  geomEach(\n    geojson,\n    function(currentGeometry, featureIndex, featureProperties, featureBBox, featureId) {\n      if (featureIndex === 0 && initialValue === void 0)\n        previousValue = currentGeometry;\n      else\n        previousValue = callback(\n          previousValue,\n          currentGeometry,\n          featureIndex,\n          featureProperties,\n          featureBBox,\n          featureId\n        );\n    }\n  );\n  return previousValue;\n}\nfunction flattenEach(geojson, callback) {\n  geomEach(geojson, function(geometry, featureIndex, properties, bbox, id) {\n    var type = geometry === null ? null : geometry.type;\n    switch (type) {\n      case null:\n      case \"Point\":\n      case \"LineString\":\n      case \"Polygon\":\n        if (callback(\n          feature(geometry, properties, { bbox, id }),\n          featureIndex,\n          0\n        ) === false)\n          return false;\n        return;\n    }\n    var geomType;\n    switch (type) {\n      case \"MultiPoint\":\n        geomType = \"Point\";\n        break;\n      case \"MultiLineString\":\n        geomType = \"LineString\";\n        break;\n      case \"MultiPolygon\":\n        geomType = \"Polygon\";\n        break;\n    }\n    for (var multiFeatureIndex = 0; multiFeatureIndex < geometry.coordinates.length; multiFeatureIndex++) {\n      var coordinate = geometry.coordinates[multiFeatureIndex];\n      var geom = {\n        type: geomType,\n        coordinates: coordinate\n      };\n      if (callback(feature(geom, properties), featureIndex, multiFeatureIndex) === false)\n        return false;\n    }\n  });\n}\nfunction flattenReduce(geojson, callback, initialValue) {\n  var previousValue = initialValue;\n  flattenEach(\n    geojson,\n    function(currentFeature, featureIndex, multiFeatureIndex) {\n      if (featureIndex === 0 && multiFeatureIndex === 0 && initialValue === void 0)\n        previousValue = currentFeature;\n      else\n        previousValue = callback(\n          previousValue,\n          currentFeature,\n          featureIndex,\n          multiFeatureIndex\n        );\n    }\n  );\n  return previousValue;\n}\nfunction segmentEach(geojson, callback) {\n  flattenEach(geojson, function(feature2, featureIndex, multiFeatureIndex) {\n    var segmentIndex = 0;\n    if (!feature2.geometry) return;\n    var type = feature2.geometry.type;\n    if (type === \"Point\" || type === \"MultiPoint\") return;\n    var previousCoords;\n    var previousFeatureIndex = 0;\n    var previousMultiIndex = 0;\n    var prevGeomIndex = 0;\n    if (coordEach(\n      feature2,\n      function(currentCoord, coordIndex, featureIndexCoord, multiPartIndexCoord, geometryIndex) {\n        if (previousCoords === void 0 || featureIndex > previousFeatureIndex || multiPartIndexCoord > previousMultiIndex || geometryIndex > prevGeomIndex) {\n          previousCoords = currentCoord;\n          previousFeatureIndex = featureIndex;\n          previousMultiIndex = multiPartIndexCoord;\n          prevGeomIndex = geometryIndex;\n          segmentIndex = 0;\n          return;\n        }\n        var currentSegment = lineString(\n          [previousCoords, currentCoord],\n          feature2.properties\n        );\n        if (callback(\n          currentSegment,\n          featureIndex,\n          multiFeatureIndex,\n          geometryIndex,\n          segmentIndex\n        ) === false)\n          return false;\n        segmentIndex++;\n        previousCoords = currentCoord;\n      }\n    ) === false)\n      return false;\n  });\n}\nfunction segmentReduce(geojson, callback, initialValue) {\n  var previousValue = initialValue;\n  var started = false;\n  segmentEach(\n    geojson,\n    function(currentSegment, featureIndex, multiFeatureIndex, geometryIndex, segmentIndex) {\n      if (started === false && initialValue === void 0)\n        previousValue = currentSegment;\n      else\n        previousValue = callback(\n          previousValue,\n          currentSegment,\n          featureIndex,\n          multiFeatureIndex,\n          geometryIndex,\n          segmentIndex\n        );\n      started = true;\n    }\n  );\n  return previousValue;\n}\nfunction lineEach(geojson, callback) {\n  if (!geojson) throw new Error(\"geojson is required\");\n  flattenEach(geojson, function(feature2, featureIndex, multiFeatureIndex) {\n    if (feature2.geometry === null) return;\n    var type = feature2.geometry.type;\n    var coords = feature2.geometry.coordinates;\n    switch (type) {\n      case \"LineString\":\n        if (callback(feature2, featureIndex, multiFeatureIndex, 0, 0) === false)\n          return false;\n        break;\n      case \"Polygon\":\n        for (var geometryIndex = 0; geometryIndex < coords.length; geometryIndex++) {\n          if (callback(\n            lineString(coords[geometryIndex], feature2.properties),\n            featureIndex,\n            multiFeatureIndex,\n            geometryIndex\n          ) === false)\n            return false;\n        }\n        break;\n    }\n  });\n}\nfunction lineReduce(geojson, callback, initialValue) {\n  var previousValue = initialValue;\n  lineEach(\n    geojson,\n    function(currentLine, featureIndex, multiFeatureIndex, geometryIndex) {\n      if (featureIndex === 0 && initialValue === void 0)\n        previousValue = currentLine;\n      else\n        previousValue = callback(\n          previousValue,\n          currentLine,\n          featureIndex,\n          multiFeatureIndex,\n          geometryIndex\n        );\n    }\n  );\n  return previousValue;\n}\nfunction findSegment(geojson, options) {\n  options = options || {};\n  if (!isObject(options)) throw new Error(\"options is invalid\");\n  var featureIndex = options.featureIndex || 0;\n  var multiFeatureIndex = options.multiFeatureIndex || 0;\n  var geometryIndex = options.geometryIndex || 0;\n  var segmentIndex = options.segmentIndex || 0;\n  var properties = options.properties;\n  var geometry;\n  switch (geojson.type) {\n    case \"FeatureCollection\":\n      if (featureIndex < 0)\n        featureIndex = geojson.features.length + featureIndex;\n      properties = properties || geojson.features[featureIndex].properties;\n      geometry = geojson.features[featureIndex].geometry;\n      break;\n    case \"Feature\":\n      properties = properties || geojson.properties;\n      geometry = geojson.geometry;\n      break;\n    case \"Point\":\n    case \"MultiPoint\":\n      return null;\n    case \"LineString\":\n    case \"Polygon\":\n    case \"MultiLineString\":\n    case \"MultiPolygon\":\n      geometry = geojson;\n      break;\n    default:\n      throw new Error(\"geojson is invalid\");\n  }\n  if (geometry === null) return null;\n  var coords = geometry.coordinates;\n  switch (geometry.type) {\n    case \"Point\":\n    case \"MultiPoint\":\n      return null;\n    case \"LineString\":\n      if (segmentIndex < 0) segmentIndex = coords.length + segmentIndex - 1;\n      return lineString(\n        [coords[segmentIndex], coords[segmentIndex + 1]],\n        properties,\n        options\n      );\n    case \"Polygon\":\n      if (geometryIndex < 0) geometryIndex = coords.length + geometryIndex;\n      if (segmentIndex < 0)\n        segmentIndex = coords[geometryIndex].length + segmentIndex - 1;\n      return lineString(\n        [\n          coords[geometryIndex][segmentIndex],\n          coords[geometryIndex][segmentIndex + 1]\n        ],\n        properties,\n        options\n      );\n    case \"MultiLineString\":\n      if (multiFeatureIndex < 0)\n        multiFeatureIndex = coords.length + multiFeatureIndex;\n      if (segmentIndex < 0)\n        segmentIndex = coords[multiFeatureIndex].length + segmentIndex - 1;\n      return lineString(\n        [\n          coords[multiFeatureIndex][segmentIndex],\n          coords[multiFeatureIndex][segmentIndex + 1]\n        ],\n        properties,\n        options\n      );\n    case \"MultiPolygon\":\n      if (multiFeatureIndex < 0)\n        multiFeatureIndex = coords.length + multiFeatureIndex;\n      if (geometryIndex < 0)\n        geometryIndex = coords[multiFeatureIndex].length + geometryIndex;\n      if (segmentIndex < 0)\n        segmentIndex = coords[multiFeatureIndex][geometryIndex].length - segmentIndex - 1;\n      return lineString(\n        [\n          coords[multiFeatureIndex][geometryIndex][segmentIndex],\n          coords[multiFeatureIndex][geometryIndex][segmentIndex + 1]\n        ],\n        properties,\n        options\n      );\n  }\n  throw new Error(\"geojson is invalid\");\n}\nfunction findPoint(geojson, options) {\n  options = options || {};\n  if (!isObject(options)) throw new Error(\"options is invalid\");\n  var featureIndex = options.featureIndex || 0;\n  var multiFeatureIndex = options.multiFeatureIndex || 0;\n  var geometryIndex = options.geometryIndex || 0;\n  var coordIndex = options.coordIndex || 0;\n  var properties = options.properties;\n  var geometry;\n  switch (geojson.type) {\n    case \"FeatureCollection\":\n      if (featureIndex < 0)\n        featureIndex = geojson.features.length + featureIndex;\n      properties = properties || geojson.features[featureIndex].properties;\n      geometry = geojson.features[featureIndex].geometry;\n      break;\n    case \"Feature\":\n      properties = properties || geojson.properties;\n      geometry = geojson.geometry;\n      break;\n    case \"Point\":\n    case \"MultiPoint\":\n      return null;\n    case \"LineString\":\n    case \"Polygon\":\n    case \"MultiLineString\":\n    case \"MultiPolygon\":\n      geometry = geojson;\n      break;\n    default:\n      throw new Error(\"geojson is invalid\");\n  }\n  if (geometry === null) return null;\n  var coords = geometry.coordinates;\n  switch (geometry.type) {\n    case \"Point\":\n      return point(coords, properties, options);\n    case \"MultiPoint\":\n      if (multiFeatureIndex < 0)\n        multiFeatureIndex = coords.length + multiFeatureIndex;\n      return point(coords[multiFeatureIndex], properties, options);\n    case \"LineString\":\n      if (coordIndex < 0) coordIndex = coords.length + coordIndex;\n      return point(coords[coordIndex], properties, options);\n    case \"Polygon\":\n      if (geometryIndex < 0) geometryIndex = coords.length + geometryIndex;\n      if (coordIndex < 0)\n        coordIndex = coords[geometryIndex].length + coordIndex;\n      return point(coords[geometryIndex][coordIndex], properties, options);\n    case \"MultiLineString\":\n      if (multiFeatureIndex < 0)\n        multiFeatureIndex = coords.length + multiFeatureIndex;\n      if (coordIndex < 0)\n        coordIndex = coords[multiFeatureIndex].length + coordIndex;\n      return point(coords[multiFeatureIndex][coordIndex], properties, options);\n    case \"MultiPolygon\":\n      if (multiFeatureIndex < 0)\n        multiFeatureIndex = coords.length + multiFeatureIndex;\n      if (geometryIndex < 0)\n        geometryIndex = coords[multiFeatureIndex].length + geometryIndex;\n      if (coordIndex < 0)\n        coordIndex = coords[multiFeatureIndex][geometryIndex].length - coordIndex;\n      return point(\n        coords[multiFeatureIndex][geometryIndex][coordIndex],\n        properties,\n        options\n      );\n  }\n  throw new Error(\"geojson is invalid\");\n}\nexport {\n  coordAll,\n  coordEach,\n  coordReduce,\n  featureEach,\n  featureReduce,\n  findPoint,\n  findSegment,\n  flattenEach,\n  flattenReduce,\n  geomEach,\n  geomReduce,\n  lineEach,\n  lineReduce,\n  propEach,\n  propReduce,\n  segmentEach,\n  segmentReduce\n};\n//# sourceMappingURL=index.js.map","import { distance as turfDistance } from '@turf/distance'\nimport { point as TurfPoint } from '@turf/helpers'\nimport { defaults } from '../store/constants'\n\nconst getBearing = (coord1, coord2) => {\n  const east = coord1[0] < coord2[0] && 'east'\n  const west = coord1[0] > coord2[0] && 'west'\n  const north = coord1[1] < coord2[1] && 'north'\n  const south = coord1[1] > coord2[1] && 'south'\n  return [east, west, north, south].filter(b => b && typeof b === 'string')\n}\n\nconst getUnits = (metres) => {\n  const MAX_METRES = 800\n  const MAX_MILES = 5000\n  const RATIO = 0.621371\n  let units\n  if (metres < MAX_METRES) {\n    units = `${metres} metres`\n  } else if (metres < MAX_MILES) {\n    units = (metres / 1000 * RATIO).toFixed(1) + ' miles'\n  } else {\n    units = Math.round((metres / 1000) * RATIO) + ' miles'\n  }\n  return units\n}\n\nconst getDirection = (coord1, coord2) => {\n  coord1 = coord1.map(n => n > 1000 ? Math.round(n) : Math.round(n * 100000) / 100000)\n  coord2 = coord2.map(n => n > 1000 ? Math.round(n) : Math.round(n * 100000) / 100000)\n  const ns1 = [coord1[0], coord1[1]]\n  const ns2 = [coord1[0], coord2[1]]\n  const ew1 = [coord1[0], coord1[1]]\n  const ew2 = [coord2[0], coord1[1]]\n  const nsd = getDistance(ns1, ns2)\n  const ewd = getDistance(ew1, ew2)\n  const bearing = getBearing(coord1, coord2)\n  const ewc = bearing.filter(b => ['east', 'west'].includes(b)).join('')\n  const nsc = bearing.filter(b => ['north', 'south'].includes(b)).join('')\n  const ew = ewc ? `${ewc} ${getUnits(ewd)}` : ''\n  const ns = nsc ? `${nsc} ${getUnits(nsd)}` : ''\n  return `${ns + (ewc && nsc ? ', ' : '') + ew}`\n}\n\nconst getArea = (bounds) => {\n  const ew = getDistance([bounds[0], bounds[1]], [bounds[2], bounds[1]])\n  const ns = getDistance([bounds[0], bounds[1]], [bounds[0], bounds[3]])\n  return `${getUnits(ew)} by ${getUnits(ns)}`\n}\n\nconst getBoundsChange = (oCentre, originalZoom, isMaxZoom, isMinZoom, center, zoom) => {\n  const isSameCentre = JSON.stringify(oCentre) === JSON.stringify(center)\n  const isSameZoom = originalZoom === zoom\n  const isMove = oCentre && originalZoom && !(isSameCentre && isSameZoom)\n  const maxZoom = isMaxZoom ? ' (Maximum zoom reached)' : ''\n  const minZoom = isMinZoom ? ' (Minimum zoom reached)' : ''\n  let change = ''\n  if (isMove) {\n    if (!isSameCentre && !isSameZoom) {\n      change = `New area${maxZoom}${minZoom}. `\n    } else if (!isSameCentre) {\n      change = `Map move: ${getDirection(oCentre, center)}. `\n    } else {\n      const direction = zoom > originalZoom ? 'in' : 'out'\n      change = `Zoomed ${direction}${maxZoom}${minZoom}. `\n    }\n  }\n  return change\n}\n\nconst getSelectedStatus = (featuresInViewport, id) => {\n  const total = featuresInViewport.length\n  const index = featuresInViewport.findIndex(f => f.id === id)\n  return index >= 0 && `${total} feature${total !== 1 ? 's' : ''} in this area. ${featuresInViewport[index].name}. ${index + 1} of ${total} highlighted.`\n}\n\nconst getOffsetBoundingClientRect = (el) => {\n  const offsetParent = el.closest('[data-fm-main]') || document.body\n  return offsetParent.getBoundingClientRect()\n}\n\nconst isCirclePolygon = (geometry) => {\n  const coordinates = geometry?.coordinates?.[0]\n\n  // Expect exactly 64 points\n  if (coordinates?.length !== 65) {\n    return false\n  }\n\n  // Compute approximate centre using two opposite points\n  const [x1, y1] = coordinates[0]\n  const [x2, y2] = coordinates[32]\n  const center = [(x1 + x2) / 2, (y1 + y2) / 2]\n\n  let minDist = Infinity; let maxDist = -Infinity\n  let minEdge = Infinity; let maxEdge = -Infinity\n\n  for (let i = 0; i < 64; i++) {\n    const [xA, yA] = coordinates[i]\n    const [xB, yB] = coordinates[(i + 1) % 64]\n\n    // Distance from center\n    const dist = Math.hypot(xA - center[0], yA - center[1])\n    minDist = Math.min(minDist, dist)\n    maxDist = Math.max(maxDist, dist)\n\n    // Distance to next vertex (edge length)\n    const edgeDist = Math.hypot(xB - xA, yB - yA)\n    minEdge = Math.min(minEdge, edgeDist)\n    maxEdge = Math.max(maxEdge, edgeDist)\n  }\n\n  // Need to revist tolerance as they depend on size too\n  const WSG84_TOLERANCE = 0.3\n  const BNG_TOLERANCE = 0.3\n  const tolerance = detectCoordinateType(center) === 'WSG84' ? WSG84_TOLERANCE : BNG_TOLERANCE\n\n  return Math.abs(maxDist - minDist) < tolerance && Math.abs(maxEdge - minEdge) < tolerance\n}\n\n// const metresToImperial = (metres) => {\n//   const MILE = 1609.344\n//   const YARD = 0.9144\n//   const pluralize = (value, singular, plural) => `${value} ${value === 1 ? singular : plural}`\n//   if (metres >= MILE) {\n//     const miles = Math.floor(metres / MILE)\n//     const remainder = metres % MILE\n//     const yards = Math.floor(remainder / YARD)\n//     return `${pluralize(miles, 'mile', 'miles')}, ${pluralize(yards, 'yard', 'yards')}`\n//   } else {\n//     const yards = Math.floor(metres / YARD)\n//     return `${pluralize(yards, 'yard', 'yards')}`\n//   }\n// }\n\nconst metresToKilometres = (metres) => {\n  const KILOMETRE = 1000\n  // const pluralize = (value, singular, plural) => `${value} ${value === 1 ? singular : plural}`\n  if (metres >= KILOMETRE) {\n    const kilometres = metres / KILOMETRE\n    const roundedKm = Math.round(kilometres * 100) / 100\n    return `${roundedKm}km`\n  } else {\n    // return `${pluralize(Math.round(metres), 'metre', 'metres')}`\n    return `${Math.round(metres)}m`\n  }\n}\n\nexport const squareMetresToKm = (metres) => {\n  const SQ_KM = 1_000_000\n  if (metres >= SQ_KM) {\n    let km2 = (metres / SQ_KM).toFixed(2)\n    km2 = Number(km2).toLocaleString(undefined, { minimumFractionDigits: 0, maximumFractionDigits: 2 })\n    return `${km2}km²`\n  } else {\n    return `${Math.ceil(metres).toLocaleString()}m²`\n  }\n}\n\nexport const parseDimensions = (dimensions) => {\n  const { area, center, width, radius } = dimensions\n  const areaDisplay = area ? squareMetresToKm(area) : null\n  const centerDisplay = center ? center.map(c => Math.round(c)).join(', ') : null\n  const widthDisplay = width ? metresToKilometres(width) : null\n  const radiusDisplay = radius ? metresToKilometres(radius) : null\n  return { ...dimensions, areaDisplay, centerDisplay, widthDisplay, radiusDisplay }\n}\n\nexport const detectCoordinateType = (coords) => {\n  if (coords.length === 3) {\n    return 'BNG' // If a third value exists (zone), it's UTM\n  }\n  const [x, y] = coords\n  if (x >= -180 && x <= 180 && y >= -90 && y <= 90) {\n    return 'WSG84'\n  }\n  if (x > 180 && y > 90) {\n    return 'BNG'\n  }\n  return 'Unknown'\n}\n\nexport const getDistance = (coord1, coord2) => {\n  let distance\n  if (coord1[0] > 1000) {\n    const x = Math.abs(coord1[0] - coord2[0])\n    const y = Math.abs(coord1[1] - coord2[1])\n    const dist = Math.sqrt((Math.pow(x, 2)) + (Math.pow(y, 2)))\n    distance = dist\n  } else {\n    const p1 = new TurfPoint(coord1)\n    const p2 = new TurfPoint(coord2)\n    distance = turfDistance(p1, p2, { units: 'metres' })\n  }\n  return Math.round(distance)\n}\n\nexport const getFocusPadding = (el, scale) => {\n  let padding\n  if (el) {\n    const parent = getOffsetBoundingClientRect(el)\n    const box = el.getBoundingClientRect()\n    const boxX = box.x || box.left\n    const boxY = box.y || box.top\n    const parentX = parent.x || parent.left\n    const parentY = parent.y || parent.top\n    padding = {\n      top: (boxY - parentY) / scale,\n      left: (boxX - parentX) / scale,\n      right: (parent.width - box.width - (boxX - parentX)) / scale,\n      bottom: (parent.height - box.height - (boxY - parentY)) / scale\n    }\n  }\n  // Addresses repid browser resizing\n  const isValid = Object.values(padding).every(i => i >= 0)\n  return isValid && padding\n}\n\nexport const getFocusBounds = (el, scale) => {\n  let bounds\n  if (el) {\n    const parent = getOffsetBoundingClientRect(el)\n    const box = el.getBoundingClientRect()\n    const m = 10\n    bounds = [[\n      ((box.x || box.left) - (parent.x || parent.left) + m) / scale,\n      (((box.y || box.top) - (parent.y || parent.top)) + box.height - m) / scale\n    ], [\n      (box.width + ((box.x || box.left) - (parent.x || parent.left)) - m) / scale,\n      ((box.y || box.top) - (parent.y || parent.top) + m) / scale\n    ]]\n  }\n  return bounds\n}\n\nexport const getMapPixel = (el, scale) => {\n  const parent = getOffsetBoundingClientRect(el)\n  const box = el.getBoundingClientRect()\n  const left = ((box.x || box.left) - (parent.x || parent.left)) / scale\n  const top = ((box.y || box.top) - (parent.y || parent.top)) / scale\n  const offsetLeft = (box.width / 2) / scale\n  const offsetTop = (box.height / 2) / scale\n  const point = [left + offsetLeft, top + offsetTop]\n  return point\n}\n\nexport const getDescription = (place, bounds, focusBounds, features, isFocusArea) => {\n  const { featuresTotal, featuresFocusTotal, isFeaturesInMap, isPixelFeaturesAtPixel, isPixelFeaturesInMap } = features || {}\n  const activeFeaturesTotal = isFocusArea ? featuresFocusTotal : featuresTotal\n  const activeBounds = isFocusArea ? focusBounds : bounds\n  let text = ''\n  if (activeFeaturesTotal) {\n    text = `${activeFeaturesTotal} feature${activeFeaturesTotal === 1 ? '' : 's'} in this area. `\n  } else if (isPixelFeaturesAtPixel) {\n    text = 'Data visible at the center coordinate. '\n  } else if (isPixelFeaturesInMap) {\n    text = 'No data visible at the center coordinate. '\n  } else if (isFeaturesInMap) {\n    text = 'No feature data in this area. '\n  } else {\n    // Null\n  }\n\n  const display = isFocusArea ? 'Focus area ' : ''\n  const newPlace = place ? `Approximate centre ${place}. ` : ''\n  const newArea = `Covering ${getArea(activeBounds)}. `\n  const findPlace = place ? '' : 'Use ALT plus I to find closest place'\n\n  return `${display}${newPlace}${newArea}${text}${findPlace}`\n}\n\nexport const getStatus = ({ action, isBoundsChange, place, isFocusArea, prevZoom, prevCenter, center, bounds, focusBounds, zoom, isMaxZoom, isMinZoom, features, label, featureId }) => {\n  let status = null\n  if (label) {\n    status = label\n  } else if (featureId) {\n    const selected = getSelectedStatus(features?.featuresInViewport, featureId)\n    status = selected\n  } else if (action === 'GEOCODE') {\n    status = getDescription(place, bounds, focusBounds, features, isFocusArea)\n  } else if (action === 'DATA') {\n    status = 'Map change: new data. Use ALT plus I to get new details'\n  } else if (isBoundsChange) {\n    const direction = getBoundsChange(prevCenter, prevZoom, isMaxZoom, isMinZoom, center, zoom)\n    const description = getDescription(place, bounds, focusBounds, features, isFocusArea)\n    status = `${direction}${description}`\n  } else {\n    status = ''\n  }\n  return status\n}\n\nexport const getPlace = (isUserInitiated, action, oPlace, newPlace) => {\n  let place\n  if (!isUserInitiated) {\n    if (action === 'RESET') {\n      place = oPlace\n    } else {\n      place = newPlace\n    }\n  }\n  return place\n}\n\nexport const parseCentre = (value, srid) => {\n  const mb = defaults[`MAX_BOUNDS_${srid}`]\n  let isInRange\n  let coords = value?.split(',')\n  // Query string formed correctly\n  if (!(Array.isArray(coords) && coords?.length === 3)) {\n    return null\n  }\n  // Coords are numbers\n  coords = coords.slice(0, 2).map(x => parseFloat(x))\n  coords = !coords.some(isNaN) && coords\n  if (!coords) {\n    return null\n  }\n  // Coords are within the valid range\n  if (srid === '27700') {\n    isInRange = !!coords.filter(c => c >= 0).length\n  } else {\n    isInRange = (coords[0] > mb[0] && coords[0] < mb[2]) && (coords[1] > mb[1] && coords[1] < mb[3])\n  }\n  return isInRange ? coords : null\n}\n\nexport const parseZoom = value => {\n  const coords = value?.split(',')\n  if (!(Array.isArray(coords) && coords?.length === 3)) {\n    return null\n  }\n  const zoom = parseFloat(coords[2])\n  return !zoom.isNaN ? zoom : null\n}\n\nexport const getShortcutKey = (e, featuresViewport) => {\n  const number = e.code.slice(-1)\n  const hasFeature = featuresViewport.length >= number\n  const id = hasFeature ? featuresViewport[number - 1].id : ''\n  return id\n}\n\nexport const getFeatureShape = (feature) => {\n  if (isCirclePolygon(feature?.geometry)) {\n    return 'circle'\n  }\n  if (feature?.geometry?.type?.toLowerCase() === 'polygon') {\n    const coords = feature.geometry?.coordinates\n    const flatCoords = (coords && Array.from(new Set(coords.flat(2)))) || null\n    return flatCoords?.length === 4 ? 'square' : 'polygon'\n  }\n  return null\n}\n\nexport const spatialNavigate = (direction, start, pixels) => {\n  const quadrant = pixels.filter(p => {\n    const offsetX = Math.abs(p[0] - start[0])\n    const offsetY = Math.abs(p[1] - start[1])\n    let isQuadrant = false\n    if (direction === 'up') {\n      isQuadrant = p[1] <= start[1] && offsetY >= offsetX\n    } else if (direction === 'down') {\n      isQuadrant = p[1] > start[1] && offsetY >= offsetX\n    } else if (direction === 'left') {\n      isQuadrant = p[0] <= start[0] && offsetY < offsetX\n    } else {\n      isQuadrant = p[0] > start[0] && offsetY < offsetX\n    }\n    return isQuadrant && (JSON.stringify(p) !== JSON.stringify(start))\n  })\n  if (!quadrant.length) {\n    quadrant.push(start)\n  }\n  const pythagorean = (a, b) => Math.sqrt(Math.pow(a, 2) + Math.pow(b, 2))\n  const distances = quadrant.map(p => pythagorean(Math.abs(start[0] - p[0]), Math.abs(start[1] - p[1])))\n  const closest = quadrant[distances.indexOf(Math.min(...distances))]\n  return pixels.findIndex(i => JSON.stringify(i) === JSON.stringify(closest))\n}\n\nexport const getScale = (size) => {\n  return { small: 1, medium: 1.5, large: 2 }[size] || 1\n}\n\nexport const getPoint = (el, e, scale) => {\n  const { left, top } = el.getBoundingClientRect()\n  const { clientX, clientY } = e.nativeEvent\n  const x = clientX - left\n  const y = clientY - top\n  return [x / scale, y / scale]\n}\n\nexport const getStyle = (styles = []) => {\n  const validStyles = styles.filter(s => defaults.STYLES.includes(s.name))\n  const style = window.localStorage.getItem('style')\n  return validStyles.find(s => s.name === style) || validStyles.find(s => s.name === 'default')\n}\n","\nexport default class TinyQueue {\n    constructor(data = [], compare = (a, b) => (a < b ? -1 : a > b ? 1 : 0)) {\n        this.data = data;\n        this.length = this.data.length;\n        this.compare = compare;\n\n        if (this.length > 0) {\n            for (let i = (this.length >> 1) - 1; i >= 0; i--) this._down(i);\n        }\n    }\n\n    push(item) {\n        this.data.push(item);\n        this._up(this.length++);\n    }\n\n    pop() {\n        if (this.length === 0) return undefined;\n\n        const top = this.data[0];\n        const bottom = this.data.pop();\n\n        if (--this.length > 0) {\n            this.data[0] = bottom;\n            this._down(0);\n        }\n\n        return top;\n    }\n\n    peek() {\n        return this.data[0];\n    }\n\n    _up(pos) {\n        const {data, compare} = this;\n        const item = data[pos];\n\n        while (pos > 0) {\n            const parent = (pos - 1) >> 1;\n            const current = data[parent];\n            if (compare(item, current) >= 0) break;\n            data[pos] = current;\n            pos = parent;\n        }\n\n        data[pos] = item;\n    }\n\n    _down(pos) {\n        const {data, compare} = this;\n        const halfLength = this.length >> 1;\n        const item = data[pos];\n\n        while (pos < halfLength) {\n            let bestChild = (pos << 1) + 1; // initially it is the left child\n            const right = bestChild + 1;\n\n            if (right < this.length && compare(data[right], data[bestChild]) < 0) {\n                bestChild = right;\n            }\n            if (compare(data[bestChild], item) >= 0) break;\n\n            data[pos] = data[bestChild];\n            pos = bestChild;\n        }\n\n        data[pos] = item;\n    }\n}\n","\nimport Queue from 'tinyqueue';\n\nexport default function polylabel(polygon, precision = 1.0, debug = false) {\n    // find the bounding box of the outer ring\n    let minX = Infinity;\n    let minY = Infinity;\n    let maxX = -Infinity;\n    let maxY = -Infinity;\n\n    for (const [x, y] of polygon[0]) {\n        if (x < minX) minX = x;\n        if (y < minY) minY = y;\n        if (x > maxX) maxX = x;\n        if (y > maxY) maxY = y;\n    }\n\n    const width = maxX - minX;\n    const height = maxY - minY;\n    const cellSize = Math.max(precision, Math.min(width, height));\n\n    if (cellSize === precision) {\n        const result = [minX, minY];\n        result.distance = 0;\n        return result;\n    }\n\n    // a priority queue of cells in order of their \"potential\" (max distance to polygon)\n    const cellQueue = new Queue([], (a, b) => b.max - a.max);\n\n    // take centroid as the first best guess\n    let bestCell = getCentroidCell(polygon);\n\n    // second guess: bounding box centroid\n    const bboxCell = new Cell(minX + width / 2, minY + height / 2, 0, polygon);\n    if (bboxCell.d > bestCell.d) bestCell = bboxCell;\n\n    let numProbes = 2;\n\n    function potentiallyQueue(x, y, h) {\n        const cell = new Cell(x, y, h, polygon);\n        numProbes++;\n        if (cell.max > bestCell.d + precision) cellQueue.push(cell);\n\n        // update the best cell if we found a better one\n        if (cell.d > bestCell.d) {\n            bestCell = cell;\n            if (debug) console.log(`found best ${Math.round(1e4 * cell.d) / 1e4} after ${numProbes} probes`);\n        }\n    }\n\n    // cover polygon with initial cells\n    let h = cellSize / 2;\n    for (let x = minX; x < maxX; x += cellSize) {\n        for (let y = minY; y < maxY; y += cellSize) {\n            potentiallyQueue(x + h, y + h, h);\n        }\n    }\n\n    while (cellQueue.length) {\n        // pick the most promising cell from the queue\n        const {max, x, y, h: ch} = cellQueue.pop();\n\n        // do not drill down further if there's no chance of a better solution\n        if (max - bestCell.d <= precision) break;\n\n        // split the cell into four cells\n        h = ch / 2;\n        potentiallyQueue(x - h, y - h, h);\n        potentiallyQueue(x + h, y - h, h);\n        potentiallyQueue(x - h, y + h, h);\n        potentiallyQueue(x + h, y + h, h);\n    }\n\n    if (debug) {\n        console.log(`num probes: ${numProbes}\\nbest distance: ${bestCell.d}`);\n    }\n\n    const result = [bestCell.x, bestCell.y];\n    result.distance = bestCell.d;\n    return result;\n}\n\nfunction Cell(x, y, h, polygon) {\n    this.x = x; // cell center x\n    this.y = y; // cell center y\n    this.h = h; // half the cell size\n    this.d = pointToPolygonDist(x, y, polygon); // distance from cell center to polygon\n    this.max = this.d + this.h * Math.SQRT2; // max distance to polygon within a cell\n}\n\n// signed distance from point to polygon outline (negative if point is outside)\nfunction pointToPolygonDist(x, y, polygon) {\n    let inside = false;\n    let minDistSq = Infinity;\n\n    for (const ring of polygon) {\n        for (let i = 0, len = ring.length, j = len - 1; i < len; j = i++) {\n            const a = ring[i];\n            const b = ring[j];\n\n            if ((a[1] > y !== b[1] > y) &&\n                (x < (b[0] - a[0]) * (y - a[1]) / (b[1] - a[1]) + a[0])) inside = !inside;\n\n            minDistSq = Math.min(minDistSq, getSegDistSq(x, y, a, b));\n        }\n    }\n\n    return minDistSq === 0 ? 0 : (inside ? 1 : -1) * Math.sqrt(minDistSq);\n}\n\n// get polygon centroid\nfunction getCentroidCell(polygon) {\n    let area = 0;\n    let x = 0;\n    let y = 0;\n    const points = polygon[0];\n\n    for (let i = 0, len = points.length, j = len - 1; i < len; j = i++) {\n        const a = points[i];\n        const b = points[j];\n        const f = a[0] * b[1] - b[0] * a[1];\n        x += (a[0] + b[0]) * f;\n        y += (a[1] + b[1]) * f;\n        area += f * 3;\n    }\n    const centroid = new Cell(x / area, y / area, 0, polygon);\n    if (area === 0 || centroid.d < 0) return new Cell(points[0][0], points[0][1], 0, polygon);\n    return centroid;\n}\n\n// get squared distance from a point to a segment\nfunction getSegDistSq(px, py, a, b) {\n    let x = a[0];\n    let y = a[1];\n    let dx = b[0] - x;\n    let dy = b[1] - y;\n\n    if (dx !== 0 || dy !== 0) {\n        const t = ((px - x) * dx + (py - y) * dy) / (dx * dx + dy * dy);\n\n        if (t > 1) {\n            x = b[0];\n            y = b[1];\n\n        } else if (t > 0) {\n            x += dx * t;\n            y += dy * t;\n        }\n    }\n\n    dx = px - x;\n    dy = py - y;\n\n    return dx * dx + dy * dy;\n}\n","// index.ts\nimport {\n  lineString,\n  multiLineString,\n  multiPolygon,\n  polygon\n} from \"@turf/helpers\";\nimport { getGeom } from \"@turf/invariant\";\n\n// lib/lineclip.ts\nfunction lineclip(points, bbox, result) {\n  var len = points.length, codeA = bitCode(points[0], bbox), part = [], i, codeB, lastCode;\n  let a;\n  let b;\n  if (!result) result = [];\n  for (i = 1; i < len; i++) {\n    a = points[i - 1];\n    b = points[i];\n    codeB = lastCode = bitCode(b, bbox);\n    while (true) {\n      if (!(codeA | codeB)) {\n        part.push(a);\n        if (codeB !== lastCode) {\n          part.push(b);\n          if (i < len - 1) {\n            result.push(part);\n            part = [];\n          }\n        } else if (i === len - 1) {\n          part.push(b);\n        }\n        break;\n      } else if (codeA & codeB) {\n        break;\n      } else if (codeA) {\n        a = intersect(a, b, codeA, bbox);\n        codeA = bitCode(a, bbox);\n      } else {\n        b = intersect(a, b, codeB, bbox);\n        codeB = bitCode(b, bbox);\n      }\n    }\n    codeA = lastCode;\n  }\n  if (part.length) result.push(part);\n  return result;\n}\nfunction polygonclip(points, bbox) {\n  var result, edge, prev, prevInside, i, p, inside;\n  for (edge = 1; edge <= 8; edge *= 2) {\n    result = [];\n    prev = points[points.length - 1];\n    prevInside = !(bitCode(prev, bbox) & edge);\n    for (i = 0; i < points.length; i++) {\n      p = points[i];\n      inside = !(bitCode(p, bbox) & edge);\n      if (inside !== prevInside) result.push(intersect(prev, p, edge, bbox));\n      if (inside) result.push(p);\n      prev = p;\n      prevInside = inside;\n    }\n    points = result;\n    if (!points.length) break;\n  }\n  return result;\n}\nfunction intersect(a, b, edge, bbox) {\n  return edge & 8 ? [a[0] + (b[0] - a[0]) * (bbox[3] - a[1]) / (b[1] - a[1]), bbox[3]] : edge & 4 ? [a[0] + (b[0] - a[0]) * (bbox[1] - a[1]) / (b[1] - a[1]), bbox[1]] : edge & 2 ? [bbox[2], a[1] + (b[1] - a[1]) * (bbox[2] - a[0]) / (b[0] - a[0])] : edge & 1 ? [bbox[0], a[1] + (b[1] - a[1]) * (bbox[0] - a[0]) / (b[0] - a[0])] : null;\n}\nfunction bitCode(p, bbox) {\n  var code = 0;\n  if (p[0] < bbox[0]) code |= 1;\n  else if (p[0] > bbox[2]) code |= 2;\n  if (p[1] < bbox[1]) code |= 4;\n  else if (p[1] > bbox[3]) code |= 8;\n  return code;\n}\n\n// index.ts\nfunction bboxClip(feature, bbox) {\n  const geom = getGeom(feature);\n  const type = geom.type;\n  const properties = feature.type === \"Feature\" ? feature.properties : {};\n  let coords = geom.coordinates;\n  switch (type) {\n    case \"LineString\":\n    case \"MultiLineString\": {\n      const lines = [];\n      if (type === \"LineString\") {\n        coords = [coords];\n      }\n      coords.forEach((line) => {\n        lineclip(line, bbox, lines);\n      });\n      if (lines.length === 1) {\n        return lineString(lines[0], properties);\n      }\n      return multiLineString(lines, properties);\n    }\n    case \"Polygon\":\n      return polygon(clipPolygon(coords, bbox), properties);\n    case \"MultiPolygon\":\n      return multiPolygon(\n        coords.map((poly) => {\n          return clipPolygon(poly, bbox);\n        }),\n        properties\n      );\n    default:\n      throw new Error(\"geometry \" + type + \" not supported\");\n  }\n}\nfunction clipPolygon(rings, bbox) {\n  const outRings = [];\n  for (const ring of rings) {\n    const clipped = polygonclip(ring, bbox);\n    if (clipped.length > 0) {\n      if (clipped[0][0] !== clipped[clipped.length - 1][0] || clipped[0][1] !== clipped[clipped.length - 1][1]) {\n        clipped.push(clipped[0]);\n      }\n      if (clipped.length >= 4) {\n        outRings.push(clipped);\n      }\n    }\n  }\n  return outRings;\n}\nvar turf_bbox_clip_default = bboxClip;\nexport {\n  bboxClip,\n  turf_bbox_clip_default as default\n};\n//# sourceMappingURL=index.js.map","import polylabel from 'polylabel'\nimport { area as turfArea } from '@turf/area'\nimport { distance as turfDistance } from '@turf/distance'\nimport { point as TurfPoint, polygon as TurfPolygon, multiPolygon as TurfMultiPolygon } from '@turf/helpers'\nimport { bboxClip as TurfBboxClip } from '@turf/bbox-clip'\nimport { getFocusBounds } from '../../lib/viewport'\nimport { defaults } from './constants'\n\nfunction getPaddedBounds () {\n  const { map } = this\n  const padding = map.getPadding()\n  const bounds = map.getBounds()\n\n  // Get the pixel coordinates for the current bounds\n  const sw = map.project([bounds.getWest(), bounds.getSouth()])\n  const ne = map.project([bounds.getEast(), bounds.getNorth()])\n\n  // Adjust for padding\n  sw.x += padding.left\n  sw.y -= padding.bottom\n  ne.x -= padding.right\n  ne.y += padding.top\n\n  // Convert back to geographical coordinates\n  const paddedSW = map.unproject(sw)\n  const paddedNE = map.unproject(ne)\n\n  // Create new bounds\n  const paddedBounds = [[paddedSW.lng, paddedSW.lat], [paddedNE.lng, paddedNE.lat]]\n\n  return paddedBounds.flat(1)\n}\n\nfunction addFeatureProperties (features) {\n  const { map } = this\n  return features.map(f => {\n    const { lng, lat } = map.getCenter()\n    const coord = f.geometry.type === 'Polygon' ? polylabel(f.geometry.coordinates, 0.00001) : f.geometry.coordinates\n    const p1 = new TurfPoint([coord[0], coord[1]])\n    const p2 = new TurfPoint([lng, lat])\n    const distance = turfDistance(p1, p2, { units: 'metres' })\n    return {\n      ...f.properties,\n      id: f.properties.id || f.id,\n      geometryType: f.geometry.type,\n      coord,\n      distance\n    }\n  })\n}\n\nfunction intersectFeatures (bounds, features) {\n  features = features.map(f => {\n    if (['Polygon', 'MultiPolygon'].includes(f.geometry.type)) {\n      const polygon = f.geometry.type === 'Polygon' ? new TurfPolygon(f.geometry.coordinates) : new TurfMultiPolygon(f.geometry.coordinates)\n      const clipped = TurfBboxClip(polygon, bounds)\n      // Remove empty rings\n      clipped.geometry.coordinates = clipped.geometry.coordinates.filter(c => c.length)\n      // const clippedGeometry = martinez.intersection(boundsPolygon.geometry.coordinates, f.geometry.coordinates)\n      f.geometry = clipped.geometry\n    }\n    return f\n  })\n  return features\n}\n\nfunction combineFeatures (features) {\n  const combined = []\n  features.forEach(f => {\n    const group = combined.find(c => c.length && ((f.id && f.id === c[0].id) || (f.properties.id && f.properties.id === c[0].properties.id)))\n    if (f.geometry.type === 'MultiPolygon') {\n      // Get largest single polygon, outer shape (excluding holes) and add area\n      const parts = f.geometry.coordinates.map(c => {\n        const polygon = new TurfPolygon([c[0]])\n        polygon.properties = { area: turfArea(polygon) }\n        return polygon\n      })\n      const largest = parts.find(p => p.properties.area === Math.max(...parts.map(b => b.properties.area)))\n      f.geometry = largest.geometry\n      f.properties.area = largest.properties.area\n    } else if (f.geometry.type === 'Polygon') {\n      // Get out shape (excluding holes) and add area\n      const polygon = new TurfPolygon([f.geometry.coordinates[0]])\n      f.properties.area = turfArea(polygon)\n      f.geometry = polygon.geometry\n    } else {\n      f.properties.area = 0\n    }\n    group?.push(f) || combined.push([f])\n  })\n  // Return largest single polygon\n  return combined.map(g => g.find(f => f.properties.area === Math.max(...g.map(b => b.properties.area))))\n}\n\nfunction getViewport () {\n  const { map } = this\n  const bounds = map.getBounds().toArray().flat(1)\n  const focusBounds = getPaddedBounds.bind(this)()\n  let center = map.getCenter()\n  let zoom = map.getZoom()\n  center = center.toArray().map(n => parseFloat(n.toFixed(defaults.PRECISION)))\n  zoom = parseFloat(zoom.toFixed(defaults.PRECISION))\n  const isMaxZoom = map.getZoom() >= map.getMaxZoom()\n  const isMinZoom = map.getZoom() <= map.getMinZoom()\n\n  return {\n    bounds,\n    focusBounds,\n    center,\n    zoom,\n    isMaxZoom,\n    isMinZoom\n  }\n}\n\nexport function addMapHoverBehaviour () {\n  const { map, featureLayers, labelLayers } = this\n\n  // Toggle cursor style for features\n  map.on('mousemove', [...featureLayers, ...labelLayers], e => {\n    const features = map.queryRenderedFeatures(e.point, { layers: [...featureLayers, ...labelLayers] })\n    const isFeature = !e.originalEvent.altKey && features && !!features.find(f => featureLayers.includes(f.layer.id))\n    const isLabel = e.originalEvent.altKey && features && !!features.find(f => labelLayers.includes(f.layer.id))\n    map.getCanvas().style.cursor = isFeature || isLabel ? 'pointer' : ''\n  })\n\n  // Revert cursor on mouseout\n  map.on('mouseout', [...featureLayers, ...labelLayers], () => { map.getCanvas().style.cursor = '' })\n}\n\nexport async function getDetail (pixel) {\n  const { selectedLayers } = this\n  const viewport = getViewport.bind(this)()\n  const features = getFeatures.bind(this)(pixel)\n  const label = getHighlightedLabel.bind(this)()\n  const selectedId = getSelectedFeatureId.bind(this)(selectedLayers)\n\n  return {\n    ...viewport,\n    resultType: features.resultType,\n    coord: features.coord,\n    selectedId,\n    features,\n    label\n  }\n}\n\nexport function getFeatures (pixel) {\n  const { map, featureLayers, locationLayers, paddingBox, scale } = this\n  const bounds = getFocusBounds(paddingBox, scale)\n\n  // Get all visible feature and pixel layers\n  let layers = [...featureLayers, ...locationLayers]\n  layers = map.getStyle()?.layers.filter(l => layers.includes(l?.id) && l?.layout?.visibility !== 'none').map(l => l.id)\n\n  // Get all features at given pixel\n  let featuresAtPixel = map.queryRenderedFeatures(pixel, { layers })\n\n  featuresAtPixel = (featuresAtPixel.map(f => {\n    return {\n      ...f.properties,\n      id: f.properties.id || f.id,\n      name: f.properties.name,\n      layer: f.layer.id\n    }\n  }))\n\n  // Get all 'featureLayer' features in the viewport\n  const renderedFeaturesInViewport = map.queryRenderedFeatures({ layers: featureLayers })\n\n  // Get total 'featureLayer' features in viewport (May be more than 9)\n  const featuresTotal = Array.from(new Set(renderedFeaturesInViewport.map(f => f.properties.id || f.id))).length\n\n  // Get all 'featureLayer' features in the padded bounds\n  const renderedFeaturesInPadding = map.queryRenderedFeatures(bounds, { layers: featureLayers })\n\n  // Get total 'featureLayer' features in padding bounds (May be more than 9)\n  const featuresFocusTotal = Array.from(new Set(renderedFeaturesInPadding.map(f => f.properties.id || f.id))).length\n\n  // Get geometry that intersects bounds\n  const intersectingFocusFeatures = intersectFeatures(getPaddedBounds.bind(this)(), renderedFeaturesInPadding)\n\n  // Split multi polygons and combine duplicate features\n  const viewportPolygonFeatures = featuresFocusTotal <= defaults.MAX_FEATURES ? combineFeatures(renderedFeaturesInViewport) : []\n  const focusPolygonFeatures = featuresFocusTotal <= defaults.MAX_FEATURES ? combineFeatures(intersectingFocusFeatures) : []\n\n  // Add props and sort features\n  const featuresInViewport = renderedFeaturesInViewport.length <= defaults.MAX_FEATURES ? addFeatureProperties.bind(this)(viewportPolygonFeatures) : []\n  const featuresInFocus = addFeatureProperties.bind(this)(focusPolygonFeatures).sort((a, b) => a.distance - b.distance)\n\n  // Get long lat of query\n  let lngLat\n  if (pixel) {\n    lngLat = map.unproject(pixel)\n    lngLat = [lngLat.lng, lngLat.lat]\n    lngLat = lngLat.map(c => Math.round(c * Math.pow(10, defaults.PRECISION)) / Math.pow(10, defaults.PRECISION))\n  }\n\n  // Set 'features' result type\n  const feature = featuresAtPixel.length ? featuresAtPixel[0] : null\n  const featureType = (featureLayers?.includes(feature?.layer) && 'feature') || (locationLayers?.includes(feature?.layer) && 'pixel')\n  const hasFeatureLayers = layers?.some(l => featureLayers?.includes(l))\n  const hasPixelLayers = layers?.some(l => locationLayers?.includes(l))\n  const resultType = featureType || (hasPixelLayers ? 'pixel' : null)\n\n  return {\n    resultType,\n    items: featuresAtPixel,\n    featuresTotal,\n    featuresInViewport,\n    featuresFocusTotal,\n    featuresInFocus,\n    isFeaturesInMap: hasFeatureLayers,\n    isPixelFeaturesAtPixel: locationLayers?.includes(feature?.layer),\n    isPixelFeaturesInMap: hasPixelLayers,\n    coord: lngLat\n  }\n}\n\nexport function toggleSelectedFeature (id) {\n  const { map, selectedLayers } = this\n  if (map?.getStyle()) {\n    for (const layer of selectedLayers) {\n      map.setLayoutProperty(layer, 'visibility', id ? 'visible' : 'none')\n      map.setFilter(layer, [\n        'any',\n        ['==', ['id'], id || ''],\n        ['==', ['get', 'id'], id || '']\n      ])\n    }\n  }\n}\n\nexport function getHighlightedLabel () {\n  const { map } = this\n  const features = map.queryRenderedFeatures({ layers: ['label'] })\n  let text\n  if (features?.length) {\n    const label = map.getStyle()?.layers.find(l => l.id === 'label')?.layout['text-field']\n    text = `${label} (${features[0].properties.layer})`\n  }\n  return text\n}\n\nexport function getSelectedFeatureId (selectedLayers) {\n  const { map } = this\n  const features = map.queryRenderedFeatures({ layers: selectedLayers })\n  return features.length ? (features[0].properties?.id || features[0]?.id) : null\n}\n\nexport function getLabel (pixel) {\n  const { map, labelLayers } = this\n  const feature = map.queryRenderedFeatures(pixel, { layers: labelLayers })[0]\n  return feature\n}\n\nexport function getLabels () {\n  const { map, paddingBox, scale } = this\n  const bounds = getFocusBounds(paddingBox, scale)\n  const features = map.queryRenderedFeatures(bounds, { layers: this.labelLayers })\n  const labels = features.map(f => {\n    let pixel = f.geometry.type === 'Point' && map.project(f.geometry.coordinates)\n    if (f.geometry.type !== 'Point') {\n      const coordinates = f.geometry.coordinates.flat(f.geometry.type === 'MultiLineString' ? 1 : 0)\n      const pixels = coordinates.map(c => map.project(c))\n      const xS = pixels.map(p => p.x)\n      const yS = pixels.map(p => p.y)\n      const centerX = ((Math.max(...xS) - Math.min(...xS)) / 2) + Math.min(...xS)\n      const centerY = ((Math.max(...yS) - Math.min(...yS)) / 2) + Math.min(...yS)\n      pixel = { x: centerX, y: centerY }\n    }\n    return {\n      feature: f,\n      pixel: [pixel.x, pixel.y]\n    }\n  })\n  return labels\n}\n","export const locationMarkerHTML = () => {\n  const el = document.createElement('div')\n  el.className = 'fm-c-marker fm-c-marker--location'\n  el.innerHTML = '<div class=\"fm-c-marker__inner\"><svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" fill=\"currentColor\"><circle cx=\"10\" cy=\"10\" r=\"8\" stroke=\"#fff\" stroke-width=\"3\"/></svg></div>'\n  return el\n}\n\nexport const targetMarkerHTML = () => {\n  const el = document.createElement('div')\n  el.className = 'fm-c-marker fm-c-marker--target'\n  el.innerHTML = `<div class=\"fm-c-marker__inner\">\n    <svg width=\"38\" height=\"38\" viewBox=\"0 0 38 38\" fill-rule=\"evenodd\" fill=\"currentColor\">\n      <path d=\"M5.035 20H1v-2h4.035C5.525 11.069 11.069 5.525 18 5.035V1h2v4.035c6.931.49 12.475 6.034 12.965 12.965H37v2h-4.035c-.49 6.931-6.034 12.475-12.965 12.965V37h-2v-4.035C11.069 32.475 5.525 26.931 5.035 20zM19 7A12.01 12.01 0 0 0 7 19a12.01 12.01 0 0 0 12 12 12.01 12.01 0 0 0 12-12A12.01 12.01 0 0 0 19 7zm0 10a2 2 0 1 1 0 4 2 2 0 1 1 0-4z\"/>\n      <path d=\"M5.035 20H1v-2h4.035a14.02 14.02 0 0 1 .246-1.8l1.96.399C7.083 17.375 7 18.178 7 19s.083 1.625.241 2.401l-1.96.399a14.02 14.02 0 0 1-.246-1.8zM20 5.035a14.02 14.02 0 0 1 1.8.246l-.399 1.96C20.625 7.083 19.822 7 19 7s-1.625.083-2.401.241l-.399-1.96a14.02 14.02 0 0 1 1.8-.246V1h2v4.035zm-2 27.93a14.02 14.02 0 0 1-1.8-.246l.399-1.96c.776.158 1.579.241 2.401.241s1.625-.083 2.401-.241l.399 1.96a14.02 14.02 0 0 1-1.8.246V37h-2v-4.035zM32.965 20a14.02 14.02 0 0 1-.246 1.8l-1.96-.399c.158-.776.241-1.579.241-2.401s-.083-1.625-.241-2.401l1.96-.399a14.02 14.02 0 0 1 .246 1.8H37v2h-4.035zM19 17a2 2 0 1 1 0 4 2 2 0 1 1 0-4zm3.8-9.385l.634-1.897a13.98 13.98 0 0 1 4.848 2.805l-1.327 1.496c-1.196-1.06-2.605-1.886-4.155-2.404zm5.181 3.43l1.496-1.327a13.98 13.98 0 0 1 2.805 4.848l-1.897.634c-.518-1.55-1.344-2.959-2.404-4.155zM30.385 22.8l1.897.634a13.98 13.98 0 0 1-2.805 4.848l-1.496-1.327c1.06-1.196 1.886-2.605 2.404-4.155zm-3.43 5.181l1.327 1.496a13.98 13.98 0 0 1-4.848 2.805l-.634-1.897c1.55-.518 2.959-1.344 4.155-2.404zM15.2 30.385l-.634 1.897a13.98 13.98 0 0 1-4.848-2.805l1.327-1.496c1.196 1.06 2.605 1.886 4.155 2.404zm-5.181-3.43l-1.496 1.327a13.98 13.98 0 0 1-2.805-4.848l1.897-.634c.518 1.55 1.344 2.959 2.404 4.155zM7.615 15.2l-1.897-.634a13.98 13.98 0 0 1 2.805-4.848l1.496 1.327c-1.06 1.196-1.886 2.605-2.404 4.155zm3.43-5.181L9.718 8.523a13.98 13.98 0 0 1 4.848-2.805l.634 1.897c-1.55.518-2.959 1.344-4.155 2.404z\"/>\n    </svg>\n  </div>`\n  return el\n}\n\nexport const shortcutMarkerHTML = (key) => {\n  const el = document.createElement('div')\n  el.className = 'fm-c-marker fm-c-marker--shortcut'\n  el.innerHTML = `<div class=\"fm-c-marker__inner\">${key}</div>`\n  return el\n}\n","import computedStyleToInlineStyle from 'computed-style-to-inline-style'\nimport { defaults } from './constants'\nimport { shortcutMarkerHTML } from './marker'\nimport { parseSVG } from '../../lib/symbols'\n\nconst SYMBOL_PLACEMENT = 'symbol-placement'\nconst TEXT_FIELD = 'text-field'\nconst SCALE_FACTOR_SMALL = 1.5\nconst SCALE_FACTOR_LARGE = 1.25\n\nexport function amendLineSymbolLayers () {\n  const { map } = this\n  const lineSymbolLayers = map.getStyle().layers.filter(l => l.layout && (SYMBOL_PLACEMENT in l.layout) && l.layout[SYMBOL_PLACEMENT] === 'line')\n  lineSymbolLayers.forEach(l => map.setLayoutProperty(l.id, SYMBOL_PLACEMENT, 'line-center'))\n}\n\nexport function addHighlightedLabelLayer () {\n  const { map } = this\n  const layers = map.getStyle().layers\n  this.labelLayers = layers.filter(l => l.id !== 'label' && l.layout ? l.layout[TEXT_FIELD] : null).map(l => l.id)\n  map.addSource('label', { type: 'geojson', data: { type: 'FeatureCollection', features: [] } })\n  map.addLayer({\n    id: 'label',\n    type: 'symbol',\n    source: 'label',\n    layout: {\n      'text-allow-overlap': true,\n      'text-ignore-placement': true\n    },\n    paint: {\n      'text-halo-width': 3,\n      'text-halo-blur': 1,\n      'text-opacity': 1\n    }\n  })\n}\n\nexport function addShortcutMarkers (features) {\n  const { map, shortcutMarkers } = this\n  const { Marker } = this.modules\n  shortcutMarkers.forEach(m => m.remove())\n  features.forEach((f, i) => {\n    const offset = f.geometryType === 'Point' ? [0, defaults.SHORTCUT_LABEL_OFFSET] : [0, 0]\n    shortcutMarkers.push(new Marker({ element: shortcutMarkerHTML(i + 1), offset }).setLngLat(f.coord).addTo(map))\n  })\n}\n\nexport function highlightLabel (feature) {\n  const { map, scale, style } = this\n\n  if (!map.style) {\n    return\n  }\n\n  if (feature) {\n    map.moveLayer('label')\n    map.getSource('label').setData({\n      type: 'Feature',\n      geometry: feature.geometry,\n      properties: {\n        ...feature.properties,\n        layer: feature.layer.id\n      }\n    })\n    // Clone layout properties\n    const textScale = scale === 1 ? SCALE_FACTOR_SMALL : SCALE_FACTOR_LARGE\n    const textField = feature.layer.layout[TEXT_FIELD]\n    map.setLayoutProperty('label', SYMBOL_PLACEMENT, feature.layer.layout[SYMBOL_PLACEMENT])\n    map.setLayoutProperty('label', TEXT_FIELD, textField.sections ? textField.sections[0].text : textField)\n    map.setLayoutProperty('label', 'text-font', feature.layer.layout['text-font'])\n    map.setLayoutProperty('label', 'text-letter-spacing', feature.layer.layout['text-letter-spacing'])\n    map.setLayoutProperty('label', 'text-size', feature.layer.layout['text-size'] * textScale)\n    map.setLayoutProperty('label', 'text-anchor', feature.layer.layout['text-anchor'])\n    map.setLayoutProperty('label', 'text-justify', feature.layer.layout['text-justify'])\n    map.setLayoutProperty('label', 'text-offset', feature.layer.layout['text-offset']?.map(o => o / textScale))\n    // Clone paint properties\n    map.setPaintProperty('label', 'text-color', (style === 'dark' ? '#ffffff' : '#000000'))\n    map.setPaintProperty('label', 'text-halo-color', (style === 'dark' ? '#000000' : '#ffffff'))\n  } else {\n    map?.getSource('label')?.setData({\n      type: 'FeatureCollection',\n      features: []\n    })\n  }\n}\n\nexport function addSelectedLayers (layers, selectedId, isDarkBasemap) {\n  const { map } = this\n  const selectedLayers = []\n  for (const layer of layers) {\n    layer.id = `${layer.id}-selected`\n    layer.filter = ['==', 'id', selectedId || '']\n    if (layer.type === 'symbol') {\n      layer.layout['icon-image'] = ['concat', layer.layout['icon-image'], '-selected']\n    }\n    if (layer.type === 'fill') {\n      layer.paint = { 'line-color': isDarkBasemap ? '#ffffff' : '#0b0c0c', 'line-width': 2 }\n      layer.type = 'line'\n    }\n    if (map.getLayer(layer.id)) {\n      map.removeLayer(layer.id)\n    }\n    selectedLayers.push(layer.id)\n    setTimeout(() => map.addLayer(layer), 0)\n  }\n  return selectedLayers\n}\n\nexport function loadSymbols () {\n  let fn\n  if (this.symbols?.length) {\n    const { map, symbols, style } = this\n    const isDarkBasemap = ['dark', 'aerial'].includes(style.name)\n\n    fn = Promise.all(symbols.map(u => fetch(u))).then(responses =>\n      Promise.all(responses.map(r => r.text()))\n    ).then(texts => Promise.all(texts.map((t, i) => loadImage(getName(symbols[i]), t, map, isDarkBasemap))\n      .concat(texts.map((t, i) => loadImage(`${getName(symbols[i])}-selected`, t, map, isDarkBasemap)))\n    ))\n  }\n  return fn\n}\n\nconst getName = path => {\n  const extNumChars = 4\n  return path.split('\\\\').pop().split('/').pop().slice(0, -Math.abs(extNumChars))\n}\n\nconst loadImage = (name, text, map, isDarkBasemap) => {\n  const parsed = parseSVG(name, null, text, isDarkBasemap, 2)\n  const container = map.getCanvasContainer()\n  container.insertAdjacentHTML('beforeend', parsed)\n  const el = container.lastChild\n  computedStyleToInlineStyle(el, { recursive: true, properties: ['stroke', 'fill'] })\n  const base64 = 'data:image/svg+xml;base64,' + btoa(container.lastChild.outerHTML)\n  const img = document.createElement('img')\n  el?.remove()\n  return new Promise((resolve, reject) => {\n    img.onload = () => {\n      try {\n        if (map?.hasImage(name)) {\n          return\n        }\n        map.addImage(name, img)\n        resolve(img)\n      } catch (err) {\n        console.log(err)\n      }\n    }\n    img.onerror = reject\n    img.src = base64\n  })\n}\n","import { getDetail, addMapHoverBehaviour } from './query'\nimport { loadSymbols, addHighlightedLabelLayer, amendLineSymbolLayers, addShortcutMarkers, addSelectedLayers } from './symbols'\n\nexport const getResolution = (map) => {\n  const center = map.getCenter()\n  const zoom = map.getZoom()\n  const lat = center.lat\n  const EARTH_CIRCUMFERENCE = 40075016.686\n  const TILE_SIZE = 512\n  const scale = Math.pow(2, zoom)\n  const resolution = (EARTH_CIRCUMFERENCE * Math.cos((lat * Math.PI) / 180)) / (scale * TILE_SIZE)\n  return resolution\n}\n\nexport const getAttributions = (map) => {\n  const style = map.getStyle()\n  if (!style) {\n    return []\n  }\n\n  const currentZoom = map.getZoom()\n  const activeAttributions = new Set()\n\n  // Check each layer for visibility at current zoom\n  style.layers.forEach(layer => {\n    // Skip layers without a source\n    if (!layer.source) return\n\n    // Check if layer is visible based on zoom and visibility property\n    const minZoom = layer.minzoom !== undefined ? layer.minzoom : 0\n    const maxZoom = layer.maxzoom !== undefined ? layer.maxzoom : 24\n    const isVisible = currentZoom >= minZoom && currentZoom < maxZoom && (!layer.layout || layer.layout.visibility !== 'none')\n\n    // If layer is visible, get attribution from its source\n    if (isVisible) {\n      const source = style.sources[layer.source]\n      if (source && source.attribution) {\n        activeAttributions.add(source.attribution)\n      }\n    }\n  })\n\n  return Array.from(activeAttributions)\n}\n\nexport async function handleLoad () {\n  const { map } = this\n  await loadSymbols.bind(this)()\n  this.isLoaded = true\n  const resolution = getResolution(map)\n  const zoom = map.getZoom()\n  const attributions = getAttributions(map)\n  this.dispatchEvent(new CustomEvent('load', {\n    detail: {\n      framework: { map },\n      resolution,\n      zoom,\n      attributions\n    }\n  }))\n}\n\nexport async function handleStyleLoad () {\n  const { map } = this\n  // Store ref to baselayers when a new style is loaded\n  this.baseLayers = map.getStyle().layers\n  // Amend symbol-placement prop so labels have a coordinate\n  amendLineSymbolLayers.bind(this)()\n  // Add highlighted label layer and source\n  addHighlightedLabelLayer.bind(this)()\n  // Change cursor type on feature hover\n  addMapHoverBehaviour.bind(this)(this.featureLayers, this.labelLayers)\n  if (this.isLoaded) {\n    await loadSymbols.bind(this)()\n    this.dispatchEvent(new CustomEvent('style', {\n      detail: {\n        type: 'style'\n      }\n    }))\n  }\n}\n\nexport async function handleIdle () {\n  if (this.map) {\n    const { map, paddingBox, selectedId, scale } = this\n    const { offsetTop, offsetLeft, offsetWidth, offsetHeight } = paddingBox\n    const { offsetTop: parentOffsetTop, offsetLeft: parentOffsetLeft } = paddingBox.parentNode\n    const pixel = [offsetLeft + parentOffsetLeft + (offsetWidth / 2), offsetTop + parentOffsetTop + (offsetHeight / 2)].map(c => c / scale)\n    const detail = await getDetail.bind(this)(selectedId ? null : pixel)\n    const attributions = getAttributions(map)\n    addShortcutMarkers.bind(this)(detail?.features?.featuresInFocus)\n    this.dispatchEvent(new CustomEvent('update', {\n      detail: {\n        ...detail,\n        attributions\n      }\n    }))\n  }\n}\n\nexport async function handleMoveStart (e) {\n  this.hideLabel()\n  this.dispatchEvent(new CustomEvent('movestart', {\n    detail: {\n      isUserInitiated: e.isUserInitiated || !!e.originalEvent\n    }\n  }))\n}\n\nexport function handleMove () {\n  const { map } = this\n  const isMaxZoom = map.getZoom() >= map.getMaxZoom()\n  const isMinZoom = map.getZoom() <= map.getMinZoom()\n  const zoom = map.getZoom()\n  const resolution = getResolution(map)\n  const attributions = getAttributions(map)\n\n  // Need to include maxBounds check as this can also constrain zoom\n  this.dispatchEvent(new CustomEvent('move', {\n    detail: {\n      isMaxZoom,\n      isMinZoom,\n      zoom,\n      resolution,\n      attributions\n    }\n  }))\n}\n\nexport function handleStyleData (e) {\n  if (this.baseLayers.length) {\n    const { map, style, selectedId } = this\n    const featureLayers = e.target.getStyle().layers.filter(l => this.featureLayers.includes(l.id))\n    const selectedLayers = map.getStyle().layers.filter(l => l.id.includes('selected'))\n    if (selectedLayers.length !== featureLayers.length) {\n      const isDarkBasemap = ['dark', 'aerial'].includes(style.name)\n      this.selectedLayers = addSelectedLayers.bind(this)(featureLayers, selectedId, isDarkBasemap)\n    }\n  }\n}\n\nexport function handleError (err) {\n  console.log(err)\n}\n","import { handleLoad, handleMoveStart, handleMove, handleIdle, handleStyleData, handleStyleLoad, handleError } from './events.js'\nimport { toggleSelectedFeature, getDetail, getLabels, getLabel } from './query.js'\nimport { locationMarkerHTML, targetMarkerHTML } from './marker.js'\nimport { highlightLabel } from './symbols.js'\nimport { getFocusPadding, spatialNavigate, getScale } from '../../lib/viewport.js'\nimport { debounce } from '../../lib/debounce.js'\nimport { throttle } from '../../lib/throttle.js'\nimport { defaults, css } from './constants.js'\nimport { defaults as storeDefaults } from '../../store/constants.js'\n\nclass MapLibreProvider extends EventTarget {\n  constructor ({ capabilities, transformRequest, symbols }) {\n    super()\n    this.srid = 4326\n    this.capabilities = capabilities\n    this.transformRequest = transformRequest\n    this.symbols = symbols\n    this.baseLayers = []\n    this.selectedId = ''\n    this.selectedCoordinate = null\n    this.isLoaded = false\n  }\n\n  init (options) {\n    if (this.capabilities.isLatest) {\n      import(/* webpackChunkName: \"maplibre\", webpackExports: [\"Map\", \"Marker\", \"LngLatBounds\"] */ 'maplibre-gl').then(module => {\n        this.addMap(module, options)\n      })\n    } else {\n      Promise.all([\n        import(/* webpackChunkName: \"maplibre-legacy\", webpackExports: [\"Map\", \"Marker\", \"LngLatBounds\"] */ 'maplibre-gl-legacy'),\n        import(/* webpackChunkName: \"maplibre-legacy\", webpackExports: [\"install\"] */ 'resize-observer'),\n        import(/* webpackChunkName: \"maplibre-legacy\" */ 'array-flat-polyfill')\n      ]).then(promises => {\n        if (!window.ResizeObserver) {\n          promises[1].install()\n        }\n        this.addMap(promises[0], options)\n      })\n    }\n  }\n\n  remove () {\n    this.map?.remove()\n    this.map = null\n  }\n\n  addMap (module, options) {\n    const { container, paddingBox, bounds, maxBounds, center, zoom, minZoom, maxZoom, style, size, featureLayers, locationLayers, callBack } = options\n    const { Map: MaplibreMap, Marker, LngLatBounds } = module.default\n    const scale = getScale(size)\n\n    const map = new MaplibreMap({\n      ...options,\n      container,\n      style: style?.url,\n      maxBounds: maxBounds || storeDefaults.MAX_BOUNDS_4326,\n      bounds,\n      center,\n      zoom,\n      minZoom,\n      maxZoom,\n      fadeDuration: 0,\n      attributionControl: false,\n      dragRotate: false\n    })\n\n    // Set initial padding, bounds and center (*No option to set in constructor)\n    // map.showPadding = true\n\n    map.setPadding(getFocusPadding(paddingBox, scale))\n    if (bounds) {\n      map.fitBounds(bounds, { animate: false })\n    } else {\n      map.flyTo({ center, zoom, animate: false })\n    }\n\n    // Disable rotation\n    map.touchZoomRotate.disableRotation()\n\n    // Overide device pixel ratio\n    if (map.setPixelRatio) {\n      map.setPixelRatio(window.devicePixelRatio * scale)\n    }\n\n    // Tidy up canvas\n    const canvas = map.getCanvas()\n    canvas.removeAttribute('role')\n    canvas.removeAttribute('tabindex')\n    canvas.removeAttribute('aria-label')\n    canvas.style.display = 'block'\n\n    this.container = container\n    this.map = map\n    this.featureLayers = featureLayers || []\n    this.locationLayers = locationLayers || []\n    this.selectedLayers = []\n    this.paddingBox = paddingBox\n    this.style = style\n    this.scale = scale\n\n    // Add markers\n    this.targetMarker = new Marker({ element: targetMarkerHTML() }).setLngLat([0, 0]).addTo(map)\n    this.locationMarker = new Marker({ element: locationMarkerHTML() }).setLngLat([0, 0]).addTo(map)\n    this.shortcutMarkers = []\n\n    // Return ref to dynamically loaded modules and framework functions\n    this.modules = { MaplibreMap, Marker, LngLatBounds }\n    this.framework = { map }\n\n    // Map ready event (first load)\n    map.on('load', handleLoad.bind(this))\n\n    // Map movestart\n    map.on('movestart', handleMoveStart.bind(this))\n\n    // Detect max/min zoom on move\n    const throttleHandleMove = throttle(() => { handleMove.bind(this)() }, defaults.THROTTLE)\n    map.on('move', throttleHandleMove)\n\n    // Detect map layer addition\n    map.on('styledata', handleStyleData.bind(this))\n\n    // All render/changes/animations complete. Must debounce, min 500ms\n    const debounceHandleIdle = debounce(() => { handleIdle.bind(this)() }, defaults.DELAY)\n    map.on('idle', debounceHandleIdle)\n\n    // Map style change\n    map.on('style.load', handleStyleLoad.bind(this))\n\n    // Capture errors\n    map.on('error', handleError.bind(this))\n\n    // Implementation callback after initialisation\n    if (callBack) {\n      callBack(this)\n    }\n  }\n\n  getPixel (coord) {\n    let pixel\n    if (this.map && coord) {\n      pixel = this.map.project(coord)\n      pixel = [Math.round(pixel.x), Math.round(pixel.y)]\n    }\n    return pixel\n  }\n\n  panBy (offset, isUserInitiated = true) {\n    if (this.map) {\n      this.map.panBy(offset, { ...defaults.ANIMATION }, { isUserInitiated })\n    }\n  }\n\n  panTo (coord) {\n    this.map.flyTo({ center: coord, ...defaults.ANIMATION })\n  }\n\n  zoomIn () {\n    if (this.map) {\n      this.map.zoomIn(defaults.ANIMATION)\n    }\n  }\n\n  zoomOut () {\n    if (this.map) {\n      this.map.zoomOut(defaults.ANIMATION)\n    }\n  }\n\n  setStyle (style) {\n    this.style = style\n    this.map.setStyle(style.url, { diff: false })\n\n    // Udate draw style\n    this.draw?.setStyle?.()\n  }\n\n  setPadding (coord, isAnimate) {\n    if (this.map) {\n      const { map, paddingBox, scale } = this\n      const padding = getFocusPadding(paddingBox, scale)\n      // Search needs to set padding first before fitBounds\n      this.map.setPadding(padding || map.getPadding())\n      // Ease map to new when coord is obscured\n      coord && this.map.easeTo({ center: coord, animate: isAnimate, ...defaults.ANIMATION })\n    }\n  }\n\n  setSize (size) {\n    const scale = getScale(size)\n    this.scale = scale\n    this.setPadding()\n    if (this.map.setPixelRatio) {\n      this.map?.setPixelRatio(window.devicePixelRatio * scale)\n    }\n    setTimeout(() => {\n      this.map.resize()\n      this.dispatchEvent(new CustomEvent('style', {\n        detail: {\n          type: 'size'\n        }\n      }))\n    }, defaults.DELAY)\n  }\n\n  fitBounds (bounds, isAnimate = true) {\n    bounds = [[bounds[0], bounds[1]], [bounds[2], bounds[3]]]\n    this.map.fitBounds(bounds, { animate: isAnimate, linear: true, duration: defaults.ANIMATION.duration })\n  }\n\n  setCentre (coord, _zoom) {\n    if (this.map) {\n      this.map.flyTo({ center: coord, ...defaults.ANIMATION })\n    }\n  }\n\n  initDraw (options) {\n    import(/* webpackChunkName: \"maplibre-draw\" */ './draw.js').then(module => {\n      const Draw = module.default\n      this.draw = new Draw(this, options)\n    })\n  }\n\n  setTargetMarker (coord, hasData, isVisible) {\n    const { targetMarker } = this\n    if (targetMarker) {\n      targetMarker.setLngLat(coord || [0, 0])\n      const el = targetMarker.getElement() // addClassName not supported in v1.15\n      el.classList.toggle('fm-c-marker--has-data', hasData)\n      el.classList.toggle(css.MARKER_VISIBLE, isVisible && coord)\n    }\n  }\n\n  selectFeature (id) {\n    this.selectedId = id\n    toggleSelectedFeature.bind(this)(id)\n  }\n\n  selectCoordinate (coord) {\n    this.selectedCoordinate = coord\n  }\n\n  async queryFeature (id) {\n    if (id) {\n      const detail = await getDetail.bind(this)(null, false)\n      detail.features.items = [detail.features.items.find(f => f.id === id)]\n      this.dispatchEvent(new CustomEvent('mapquery', { detail }))\n    }\n  }\n\n  async queryPoint (point) {\n    const detail = await getDetail.bind(this)(point, this.selectedLayers)\n    this.hideLabel()\n    this.dispatchEvent(new CustomEvent('mapquery', {\n      detail: {\n        resultType: detail.features.resultType,\n        ...detail\n      }\n    }))\n  }\n\n  getGeoLocation (success, error) {\n    navigator.geolocation.getCurrentPosition(async (position) => {\n      let coord = [position.coords.longitude, position.coords.latitude]\n      coord = coord.map(n => parseFloat(n.toFixed(defaults.PRECISION)))\n      // const place = this.getNearest ? await this.getNearest(coord) : null\n      success(coord, null)\n    }, (err) => {\n      console.log(err)\n      error(err)\n    }, {\n      enableHighAccuracy: false\n    })\n  }\n\n  showLocation (coord) {\n    const { locationMarker } = this\n    locationMarker.setLngLat(coord).addClassName(css.MARKER_VISIBLE)\n  }\n\n  showNextLabel (pixel, direction) {\n    const labels = getLabels.bind(this)()\n    const { lng, lat } = this.map.getCenter()\n    const center = this.map.project([lng, lat])\n    const pixels = labels.map(c => c.pixel)\n    const index = spatialNavigate(direction, pixel || [center.x, center.y], pixels)\n    const feature = labels[index]?.feature\n    highlightLabel.bind(this)(feature)\n    return labels[index]?.pixel\n  }\n\n  showLabel (point) {\n    const feature = getLabel.bind(this)(point)\n    highlightLabel.bind(this)(feature)\n    return point\n  }\n\n  hideLabel () {\n    if (this.map) {\n      highlightLabel.bind(this)()\n    }\n  }\n}\n\nexport default MapLibreProvider\n","export const throttle = (fn, wait) => {\n  let lastCallTime = 0\n  return (...args) => {\n    const now = Date.now()\n    if (now - lastCallTime >= wait) {\n      lastCallTime = now\n      fn(...args)\n    }\n  }\n}\n"],"names":["earthRadius","factors","centimeters","centimetres","degrees","Math","PI","feet","inches","kilometers","kilometres","meters","metres","miles","millimeters","millimetres","nauticalmiles","radians","yards","feature","geom","properties","options","feat","type","id","bbox","geometry","point","coordinates","Error","Array","isArray","length","isNumber","polygon","ring","j","lineString","featureCollection","features","fc","multiLineString","multiPolygon","radiansToLength","units","factor","lengthToRadians","distance","radiansToDegrees","degreesToRadians","num","isNaN","module","exports","t","e","Object","defineProperty","value","default","o","recursive","prototype","forEach","call","children","r","getComputedStyle","style","getPropertyValue","defaults","PRECISION","ANIMATION","duration","curve","DELAY","THROTTLE","MAX_FEATURES","SHORTCUT_LABEL_OFFSET","css","MARKER_VISIBLE","area","geojson","i","total","polygonArea","calculateArea","coords","abs","ringArea","FACTOR","PI_OVER_180","coordsLength","lower","middle","upper","lowerX","middleY","sin","turf_area_default","DOMParser","window","parseSVG","icon","fill","text","isDarkBasemap","arguments","undefined","scale","isSelected","includes","dom","parseFromString","svg","querySelector","classList","add","toggle","viewBox","getAttribute","width","parseInt","split","height","setAttribute","olFill","querySelectorAll","olStroke","n","bgFill","bgStroke","fgFill","fgStroke","body","innerHTML","getCoord","coord","getCoords","getGeom","from","to","coordinates1","coordinates2","dLat","dLon","lat1","lat2","a","pow","cos","atan2","sqrt","debounce","fn","wait","timeoutId","_len","args","_key","clearTimeout","setTimeout","apply","geomEach","callback","g","stopG","geometryMaybeCollection","isGeometryCollection","featureProperties","featureBBox","featureId","featureIndex","isFeatureCollection","isFeature","stop","geometries","geomReduce","initialValue","previousValue","currentGeometry","flattenEach","geomType","multiFeatureIndex","getUnits","RATIO","concat","toFixed","round","getOffsetBoundingClientRect","el","closest","document","getBoundingClientRect","metresToKilometres","roundedKm","squareMetresToKm","SQ_KM","km2","Number","toLocaleString","minimumFractionDigits","maximumFractionDigits","ceil","parseDimensions","dimensions","center","radius","areaDisplay","centerDisplay","map","c","join","widthDisplay","radiusDisplay","_objectSpread","detectCoordinateType","_coords","_slicedToArray","x","y","getDistance","coord1","coord2","p1","TurfPoint","p2","turfDistance","getFocusPadding","padding","parent","box","boxX","left","boxY","top","parentX","parentY","right","bottom","values","every","getFocusBounds","bounds","getMapPixel","getDescription","place","focusBounds","isFocusArea","_ref","featuresTotal","featuresFocusTotal","isFeaturesInMap","isPixelFeaturesAtPixel","isPixelFeaturesInMap","activeFeaturesTotal","activeBounds","display","newPlace","newArea","ew","ns","getArea","findPlace","getStatus","_ref2","featuresInViewport","index","action","isBoundsChange","prevZoom","prevCenter","zoom","isMaxZoom","isMinZoom","label","status","findIndex","f","name","direction","oCentre","originalZoom","isSameCentre","JSON","stringify","isSameZoom","maxZoom","minZoom","change","ns1","ns2","ew1","ew2","nsd","ewd","bearing","filter","b","getBearing","ewc","nsc","getDirection","getBoundsChange","description","getPlace","isUserInitiated","oPlace","parseCentre","srid","_coords2","mb","slice","parseFloat","some","parseZoom","getShortcutKey","featuresViewport","number","code","getFeatureShape","_feature$geometry","_geometry$coordinates","_coordinates$","x1","y1","_coordinates$2","minDist","Infinity","maxDist","minEdge","maxEdge","_coordinates$i","xA","yA","_coordinates","xB","yB","dist","hypot","min","max","edgeDist","tolerance","isCirclePolygon","toLowerCase","_feature$geometry2","flatCoords","Set","flat","spatialNavigate","start","pixels","quadrant","p","offsetX","offsetY","push","distances","indexOf","getScale","size","small","medium","large","getPoint","_el$getBoundingClient","_e$nativeEvent","nativeEvent","clientX","clientY","getStyle","validStyles","s","STYLES","localStorage","getItem","find","TinyQueue","constructor","data","compare","this","_down","item","_up","pop","peek","pos","current","halfLength","bestChild","Cell","h","d","inside","minDistSq","len","getSegDistSq","pointToPolygonDist","SQRT2","px","py","dx","dy","polygonclip","points","result","edge","prev","prevInside","bitCode","intersect","clipPolygon","rings","outRings","clipped","_regeneratorRuntime","hasOwnProperty","Symbol","iterator","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","arg","l","GeneratorFunction","GeneratorFunctionPrototype","getPrototypeOf","v","defineIteratorMethods","_invoke","AsyncIterator","invoke","_typeof","resolve","__await","then","callInvokeWithMethodAndArg","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","return","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","reset","displayName","isGeneratorFunction","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","charAt","rval","handle","complete","finish","catch","delegateYield","asyncGeneratorStep","_toConsumableArray","_arrayLikeToArray","_arrayWithoutHoles","_iterableToArray","_unsupportedIterableToArray","_nonIterableSpread","toString","test","ownKeys","getOwnPropertySymbols","getOwnPropertyDescriptor","_defineProperty","getOwnPropertyDescriptors","defineProperties","toPrimitive","String","_toPrimitive","_toPropertyKey","getPaddedBounds","getPadding","getBounds","sw","project","getWest","getSouth","ne","getEast","getNorth","paddedSW","unproject","paddedNE","lng","lat","addFeatureProperties","_map$getCenter","getCenter","precision","debug","minX","minY","maxX","maxY","cellSize","cellQueue","bestCell","centroid","getCentroidCell","bboxCell","numProbes","potentiallyQueue","cell","console","log","ch","polylabel","geometryType","combineFeatures","combined","group","parts","TurfPolygon","turfArea","largest","getViewport","toArray","bind","getZoom","getMaxZoom","getMinZoom","addMapHoverBehaviour","featureLayers","labelLayers","on","queryRenderedFeatures","layers","originalEvent","altKey","layer","isLabel","getCanvas","cursor","getDetail","_x","_getDetail","_callee","pixel","selectedLayers","viewport","selectedId","_context","getFeatures","getHighlightedLabel","getSelectedFeatureId","resultType","_next","_throw","_map$getStyle","_layers","_layers2","locationLayers","paddingBox","_l$layout","layout","visibility","featuresAtPixel","lngLat","renderedFeaturesInViewport","renderedFeaturesInPadding","intersectingFocusFeatures","lines","line","codeB","lastCode","codeA","part","lineclip","poly","TurfBboxClip","TurfMultiPolygon","intersectFeatures","viewportPolygonFeatures","focusPolygonFeatures","featuresInFocus","sort","featureType","hasFeatureLayers","hasPixelLayers","items","toggleSelectedFeature","_step","_iterator","_n","F","_createForOfIteratorHelper","setLayoutProperty","setFilter","err","_map$getStyle2","_features$0$propertie","_features$","getLabel","getLabels","xS","yS","locationMarkerHTML","createElement","className","SYMBOL_PLACEMENT","TEXT_FIELD","amendLineSymbolLayers","addHighlightedLabelLayer","addSource","addLayer","source","paint","addShortcutMarkers","shortcutMarkers","Marker","modules","m","remove","key","offset","element","setLngLat","addTo","highlightLabel","_feature$layer$layout","moveLayer","getSource","setData","textScale","textField","sections","setPaintProperty","_map$getSource","addSelectedLayers","_loop","getLayer","removeLayer","loadSymbols","_this$symbols","symbols","all","fetch","responses","texts","loadImage","getName","path","parsed","container","getCanvasContainer","insertAdjacentHTML","lastChild","computedStyleToInlineStyle","base64","btoa","outerHTML","img","reject","onload","hasImage","addImage","onerror","src","_asyncToGenerator","getResolution","getAttributions","currentZoom","activeAttributions","minzoom","maxzoom","sources","attribution","handleLoad","_handleLoad","resolution","attributions","isLoaded","dispatchEvent","CustomEvent","detail","framework","handleStyleLoad","_handleStyleLoad","_callee2","_context2","baseLayers","handleIdle","_handleIdle","_callee3","_detail$features","offsetTop","offsetLeft","offsetWidth","offsetHeight","_paddingBox$parentNod","parentOffsetTop","parentOffsetLeft","_context3","parentNode","handleMoveStart","_handleMoveStart","_callee4","_context4","hideLabel","handleMove","handleStyleData","_this","target","handleError","_defineProperties","_wrapNativeSuper","Map","Function","_isNativeFunction","has","get","set","Wrapper","_isNativeReflectConstruct","Reflect","construct","_setPrototypeOf","_construct","_getPrototypeOf","Boolean","valueOf","MapLibreProvider","_EventTarget","capabilities","transformRequest","_classCallCheck","ReferenceError","_assertThisInitialized","_possibleConstructorReturn","_callSuper","selectedCoordinate","_inherits","_this2","isLatest","addMap","promises","ResizeObserver","install","_this$map","_this3","maxBounds","callBack","_module$default","MaplibreMap","LngLatBounds","url","storeDefaults","MAX_BOUNDS_4326","fadeDuration","attributionControl","dragRotate","setPadding","fitBounds","animate","flyTo","touchZoomRotate","disableRotation","setPixelRatio","devicePixelRatio","canvas","removeAttribute","targetMarker","locationMarker","lastCallTime","throttleHandleMove","now","Date","debounceHandleIdle","panBy","zoomIn","zoomOut","_this$draw","_this$draw$setStyle","setStyle","diff","draw","isAnimate","easeTo","_this$map2","_this4","resize","linear","_zoom","_this5","Draw","hasData","isVisible","getElement","_queryFeature","_queryPoint","_x2","success","error","navigator","geolocation","getCurrentPosition","position","longitude","latitude","_x3","enableHighAccuracy","addClassName","_labels$index","_labels$index2","labels","_this$map$getCenter","EventTarget"],"sourceRoot":""}