{"version":3,"file":"flood-map-maplibre-provider.js","mappings":"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","sources":["webpack://@defra/flood-map/./node_modules/@turf/invariant/dist/esm/index.js","webpack://@defra/flood-map/./src/js/lib/debounce.js","webpack://@defra/flood-map/./src/js/provider/maplibre/constants.js","webpack://@defra/flood-map/./node_modules/@turf/helpers/dist/esm/index.js","webpack://@defra/flood-map/./node_modules/computed-style-to-inline-style/dist/index.js","webpack://@defra/flood-map/./src/js/lib/symbols.js","webpack://@defra/flood-map/./node_modules/@turf/distance/dist/esm/index.js","webpack://@defra/flood-map/./node_modules/tinyqueue/index.js","webpack://@defra/flood-map/./node_modules/polylabel/polylabel.js","webpack://@defra/flood-map/./node_modules/@turf/bbox-clip/dist/esm/index.js","webpack://@defra/flood-map/./src/js/provider/maplibre/query.js","webpack://@defra/flood-map/./src/js/provider/maplibre/marker.js","webpack://@defra/flood-map/./src/js/provider/maplibre/symbols.js","webpack://@defra/flood-map/./src/js/provider/maplibre/events.js","webpack://@defra/flood-map/./src/js/provider/maplibre/framework.js","webpack://@defra/flood-map/./src/js/lib/throttle.js","webpack://@defra/flood-map/./node_modules/@turf/area/dist/esm/index.js","webpack://@defra/flood-map/./src/js/lib/viewport.js","webpack://@defra/flood-map/./node_modules/@turf/meta/dist/esm/index.js"],"sourcesContent":["// index.ts\nimport { isNumber } from \"@turf/helpers\";\nfunction getCoord(coord) {\n  if (!coord) {\n    throw new Error(\"coord is required\");\n  }\n  if (!Array.isArray(coord)) {\n    if (coord.type === \"Feature\" && coord.geometry !== null && coord.geometry.type === \"Point\") {\n      return [...coord.geometry.coordinates];\n    }\n    if (coord.type === \"Point\") {\n      return [...coord.coordinates];\n    }\n  }\n  if (Array.isArray(coord) && coord.length >= 2 && !Array.isArray(coord[0]) && !Array.isArray(coord[1])) {\n    return [...coord];\n  }\n  throw new Error(\"coord must be GeoJSON Point or an Array of numbers\");\n}\nfunction getCoords(coords) {\n  if (Array.isArray(coords)) {\n    return coords;\n  }\n  if (coords.type === \"Feature\") {\n    if (coords.geometry !== null) {\n      return coords.geometry.coordinates;\n    }\n  } else {\n    if (coords.coordinates) {\n      return coords.coordinates;\n    }\n  }\n  throw new Error(\n    \"coords must be GeoJSON Feature, Geometry Object or an Array\"\n  );\n}\nfunction containsNumber(coordinates) {\n  if (coordinates.length > 1 && isNumber(coordinates[0]) && isNumber(coordinates[1])) {\n    return true;\n  }\n  if (Array.isArray(coordinates[0]) && coordinates[0].length) {\n    return containsNumber(coordinates[0]);\n  }\n  throw new Error(\"coordinates must only contain numbers\");\n}\nfunction geojsonType(value, type, name) {\n  if (!type || !name) {\n    throw new Error(\"type and name required\");\n  }\n  if (!value || value.type !== type) {\n    throw new Error(\n      \"Invalid input to \" + name + \": must be a \" + type + \", given \" + value.type\n    );\n  }\n}\nfunction featureOf(feature, type, name) {\n  if (!feature) {\n    throw new Error(\"No feature passed\");\n  }\n  if (!name) {\n    throw new Error(\".featureOf() requires a name\");\n  }\n  if (!feature || feature.type !== \"Feature\" || !feature.geometry) {\n    throw new Error(\n      \"Invalid input to \" + name + \", Feature with geometry required\"\n    );\n  }\n  if (!feature.geometry || feature.geometry.type !== type) {\n    throw new Error(\n      \"Invalid input to \" + name + \": must be a \" + type + \", given \" + feature.geometry.type\n    );\n  }\n}\nfunction collectionOf(featureCollection, type, name) {\n  if (!featureCollection) {\n    throw new Error(\"No featureCollection passed\");\n  }\n  if (!name) {\n    throw new Error(\".collectionOf() requires a name\");\n  }\n  if (!featureCollection || featureCollection.type !== \"FeatureCollection\") {\n    throw new Error(\n      \"Invalid input to \" + name + \", FeatureCollection required\"\n    );\n  }\n  for (const feature of featureCollection.features) {\n    if (!feature || feature.type !== \"Feature\" || !feature.geometry) {\n      throw new Error(\n        \"Invalid input to \" + name + \", Feature with geometry required\"\n      );\n    }\n    if (!feature.geometry || feature.geometry.type !== type) {\n      throw new Error(\n        \"Invalid input to \" + name + \": must be a \" + type + \", given \" + feature.geometry.type\n      );\n    }\n  }\n}\nfunction getGeom(geojson) {\n  if (geojson.type === \"Feature\") {\n    return geojson.geometry;\n  }\n  return geojson;\n}\nfunction getType(geojson, _name) {\n  if (geojson.type === \"FeatureCollection\") {\n    return \"FeatureCollection\";\n  }\n  if (geojson.type === \"GeometryCollection\") {\n    return \"GeometryCollection\";\n  }\n  if (geojson.type === \"Feature\" && geojson.geometry !== null) {\n    return geojson.geometry.type;\n  }\n  return geojson.type;\n}\nexport {\n  collectionOf,\n  containsNumber,\n  featureOf,\n  geojsonType,\n  getCoord,\n  getCoords,\n  getGeom,\n  getType\n};\n//# sourceMappingURL=index.js.map","export const debounce = (fn, wait) => {\n  let timeoutId = null\n  return (...args) => {\n    window.clearTimeout(timeoutId)\n    timeoutId = window.setTimeout(() => {\n      fn(...args)\n    }, wait)\n  }\n}\n","export const defaults = {\n  PRECISION: 6,\n  ANIMATION: {\n    duration: 500,\n    curve: 0\n  },\n  DELAY: 500,\n  THROTTLE: 100,\n  MAX_FEATURES: 9,\n  SHORTCUT_LABEL_OFFSET: -30\n}\n\nexport const css = {\n  MARKER_VISIBLE: 'fm-c-marker--visible'\n}\n","// index.ts\nvar earthRadius = 63710088e-1;\nvar factors = {\n  centimeters: earthRadius * 100,\n  centimetres: earthRadius * 100,\n  degrees: 360 / (2 * Math.PI),\n  feet: earthRadius * 3.28084,\n  inches: earthRadius * 39.37,\n  kilometers: earthRadius / 1e3,\n  kilometres: earthRadius / 1e3,\n  meters: earthRadius,\n  metres: earthRadius,\n  miles: earthRadius / 1609.344,\n  millimeters: earthRadius * 1e3,\n  millimetres: earthRadius * 1e3,\n  nauticalmiles: earthRadius / 1852,\n  radians: 1,\n  yards: earthRadius * 1.0936\n};\nvar areaFactors = {\n  acres: 247105e-9,\n  centimeters: 1e4,\n  centimetres: 1e4,\n  feet: 10.763910417,\n  hectares: 1e-4,\n  inches: 1550.003100006,\n  kilometers: 1e-6,\n  kilometres: 1e-6,\n  meters: 1,\n  metres: 1,\n  miles: 386e-9,\n  nauticalmiles: 29155334959812285e-23,\n  millimeters: 1e6,\n  millimetres: 1e6,\n  yards: 1.195990046\n};\nfunction feature(geom, properties, options = {}) {\n  const feat = { type: \"Feature\" };\n  if (options.id === 0 || options.id) {\n    feat.id = options.id;\n  }\n  if (options.bbox) {\n    feat.bbox = options.bbox;\n  }\n  feat.properties = properties || {};\n  feat.geometry = geom;\n  return feat;\n}\nfunction geometry(type, coordinates, _options = {}) {\n  switch (type) {\n    case \"Point\":\n      return point(coordinates).geometry;\n    case \"LineString\":\n      return lineString(coordinates).geometry;\n    case \"Polygon\":\n      return polygon(coordinates).geometry;\n    case \"MultiPoint\":\n      return multiPoint(coordinates).geometry;\n    case \"MultiLineString\":\n      return multiLineString(coordinates).geometry;\n    case \"MultiPolygon\":\n      return multiPolygon(coordinates).geometry;\n    default:\n      throw new Error(type + \" is invalid\");\n  }\n}\nfunction point(coordinates, properties, options = {}) {\n  if (!coordinates) {\n    throw new Error(\"coordinates is required\");\n  }\n  if (!Array.isArray(coordinates)) {\n    throw new Error(\"coordinates must be an Array\");\n  }\n  if (coordinates.length < 2) {\n    throw new Error(\"coordinates must be at least 2 numbers long\");\n  }\n  if (!isNumber(coordinates[0]) || !isNumber(coordinates[1])) {\n    throw new Error(\"coordinates must contain numbers\");\n  }\n  const geom = {\n    type: \"Point\",\n    coordinates\n  };\n  return feature(geom, properties, options);\n}\nfunction points(coordinates, properties, options = {}) {\n  return featureCollection(\n    coordinates.map((coords) => {\n      return point(coords, properties);\n    }),\n    options\n  );\n}\nfunction polygon(coordinates, properties, options = {}) {\n  for (const ring of coordinates) {\n    if (ring.length < 4) {\n      throw new Error(\n        \"Each LinearRing of a Polygon must have 4 or more Positions.\"\n      );\n    }\n    if (ring[ring.length - 1].length !== ring[0].length) {\n      throw new Error(\"First and last Position are not equivalent.\");\n    }\n    for (let j = 0; j < ring[ring.length - 1].length; j++) {\n      if (ring[ring.length - 1][j] !== ring[0][j]) {\n        throw new Error(\"First and last Position are not equivalent.\");\n      }\n    }\n  }\n  const geom = {\n    type: \"Polygon\",\n    coordinates\n  };\n  return feature(geom, properties, options);\n}\nfunction polygons(coordinates, properties, options = {}) {\n  return featureCollection(\n    coordinates.map((coords) => {\n      return polygon(coords, properties);\n    }),\n    options\n  );\n}\nfunction lineString(coordinates, properties, options = {}) {\n  if (coordinates.length < 2) {\n    throw new Error(\"coordinates must be an array of two or more positions\");\n  }\n  const geom = {\n    type: \"LineString\",\n    coordinates\n  };\n  return feature(geom, properties, options);\n}\nfunction lineStrings(coordinates, properties, options = {}) {\n  return featureCollection(\n    coordinates.map((coords) => {\n      return lineString(coords, properties);\n    }),\n    options\n  );\n}\nfunction featureCollection(features, options = {}) {\n  const fc = { type: \"FeatureCollection\" };\n  if (options.id) {\n    fc.id = options.id;\n  }\n  if (options.bbox) {\n    fc.bbox = options.bbox;\n  }\n  fc.features = features;\n  return fc;\n}\nfunction multiLineString(coordinates, properties, options = {}) {\n  const geom = {\n    type: \"MultiLineString\",\n    coordinates\n  };\n  return feature(geom, properties, options);\n}\nfunction multiPoint(coordinates, properties, options = {}) {\n  const geom = {\n    type: \"MultiPoint\",\n    coordinates\n  };\n  return feature(geom, properties, options);\n}\nfunction multiPolygon(coordinates, properties, options = {}) {\n  const geom = {\n    type: \"MultiPolygon\",\n    coordinates\n  };\n  return feature(geom, properties, options);\n}\nfunction geometryCollection(geometries, properties, options = {}) {\n  const geom = {\n    type: \"GeometryCollection\",\n    geometries\n  };\n  return feature(geom, properties, options);\n}\nfunction round(num, precision = 0) {\n  if (precision && !(precision >= 0)) {\n    throw new Error(\"precision must be a positive number\");\n  }\n  const multiplier = Math.pow(10, precision || 0);\n  return Math.round(num * multiplier) / multiplier;\n}\nfunction radiansToLength(radians, units = \"kilometers\") {\n  const factor = factors[units];\n  if (!factor) {\n    throw new Error(units + \" units is invalid\");\n  }\n  return radians * factor;\n}\nfunction lengthToRadians(distance, units = \"kilometers\") {\n  const factor = factors[units];\n  if (!factor) {\n    throw new Error(units + \" units is invalid\");\n  }\n  return distance / factor;\n}\nfunction lengthToDegrees(distance, units) {\n  return radiansToDegrees(lengthToRadians(distance, units));\n}\nfunction bearingToAzimuth(bearing) {\n  let angle = bearing % 360;\n  if (angle < 0) {\n    angle += 360;\n  }\n  return angle;\n}\nfunction azimuthToBearing(angle) {\n  angle = angle % 360;\n  if (angle > 180) {\n    return angle - 360;\n  } else if (angle < -180) {\n    return angle + 360;\n  }\n  return angle;\n}\nfunction radiansToDegrees(radians) {\n  const normalisedRadians = radians % (2 * Math.PI);\n  return normalisedRadians * 180 / Math.PI;\n}\nfunction degreesToRadians(degrees) {\n  const normalisedDegrees = degrees % 360;\n  return normalisedDegrees * Math.PI / 180;\n}\nfunction convertLength(length, originalUnit = \"kilometers\", finalUnit = \"kilometers\") {\n  if (!(length >= 0)) {\n    throw new Error(\"length must be a positive number\");\n  }\n  return radiansToLength(lengthToRadians(length, originalUnit), finalUnit);\n}\nfunction convertArea(area, originalUnit = \"meters\", finalUnit = \"kilometers\") {\n  if (!(area >= 0)) {\n    throw new Error(\"area must be a positive number\");\n  }\n  const startFactor = areaFactors[originalUnit];\n  if (!startFactor) {\n    throw new Error(\"invalid original units\");\n  }\n  const finalFactor = areaFactors[finalUnit];\n  if (!finalFactor) {\n    throw new Error(\"invalid final units\");\n  }\n  return area / startFactor * finalFactor;\n}\nfunction isNumber(num) {\n  return !isNaN(num) && num !== null && !Array.isArray(num);\n}\nfunction isObject(input) {\n  return input !== null && typeof input === \"object\" && !Array.isArray(input);\n}\nfunction validateBBox(bbox) {\n  if (!bbox) {\n    throw new Error(\"bbox is required\");\n  }\n  if (!Array.isArray(bbox)) {\n    throw new Error(\"bbox must be an Array\");\n  }\n  if (bbox.length !== 4 && bbox.length !== 6) {\n    throw new Error(\"bbox must be an Array of 4 or 6 numbers\");\n  }\n  bbox.forEach((num) => {\n    if (!isNumber(num)) {\n      throw new Error(\"bbox must only contain numbers\");\n    }\n  });\n}\nfunction validateId(id) {\n  if (!id) {\n    throw new Error(\"id is required\");\n  }\n  if ([\"string\", \"number\"].indexOf(typeof id) === -1) {\n    throw new Error(\"id must be a number or a string\");\n  }\n}\nexport {\n  areaFactors,\n  azimuthToBearing,\n  bearingToAzimuth,\n  convertArea,\n  convertLength,\n  degreesToRadians,\n  earthRadius,\n  factors,\n  feature,\n  featureCollection,\n  geometry,\n  geometryCollection,\n  isNumber,\n  isObject,\n  lengthToDegrees,\n  lengthToRadians,\n  lineString,\n  lineStrings,\n  multiLineString,\n  multiPoint,\n  multiPolygon,\n  point,\n  points,\n  polygon,\n  polygons,\n  radiansToDegrees,\n  radiansToLength,\n  round,\n  validateBBox,\n  validateId\n};\n//# sourceMappingURL=index.js.map","!function(e,t){\"object\"==typeof exports&&\"object\"==typeof module?module.exports=t():\"function\"==typeof define&&define.amd?define([],t):\"object\"==typeof exports?exports.computedStyleToInlineStyle=t():e.computedStyleToInlineStyle=t()}(this,(()=>(()=>{\"use strict\";var e={};return(()=>{var t=e;Object.defineProperty(t,\"__esModule\",{value:!0}),t.default=function e(t,o){if(!t)throw new Error(\"No element specified.\");(null==o?void 0:o.recursive)&&Array.prototype.forEach.call(t.children,(t=>{e(t,o)}));const r=getComputedStyle(t);Array.prototype.forEach.call((null==o?void 0:o.properties)||r,(e=>{t.style[e]=r.getPropertyValue(e)}))}})(),e})()));","const { DOMParser } = window\n\nexport const parseSVG = (icon, fill, text, isDarkBasemap = false, scale = 1) => {\n  const isSelected = icon.includes('selected')\n  // let styled = text.replace(/#0f0|#00ff00|#0F0|#00FF00/g, isSelected ? isDarkBasemap ? '#ffffff' : '#0b0c0c' : 'transparent')\n  // styled = styled.replace(/#00f|#0000ff|#00F|#0000FF/g, isDarkBasemap ? '#162232' : '#ffffff')\n  const parser = new DOMParser()\n  const dom = parser.parseFromString(text, 'text/html')\n  const svg = dom.querySelector('svg')\n  // Add xmlns attribute and class to svg\n  // svg.setAttribute('xmlns', 'http://www.w3.org/2000/svg')\n  svg.classList.add('fm-c-symbol')\n  svg.classList.toggle('fm-c-symbol--selected', isSelected)\n  svg.classList.toggle('fm-c-symbol--dark', isDarkBasemap)\n  // Set svg height and width\n  const viewBox = svg.getAttribute('viewBox')\n  const width = parseInt(viewBox.split(' ')[2], 10) * scale\n  const height = parseInt(viewBox.split(' ')[3], 10) * scale\n  svg.setAttribute('width', width)\n  svg.setAttribute('height', height)\n  // Conditionally add fill\n  if (fill) {\n    svg.setAttribute('fill', fill)\n  }\n  // Add classnames\n  const olFill = svg.querySelectorAll('[fill=\"#0b0c0c\" i], [style*=\"fill:#0b0c0c\" i]')\n  const olStroke = svg.querySelectorAll('[stroke=\"#0b0c0c\" i], [style*=\"stroke:#0b0c0c\" i]')\n  olFill.forEach(n => n.classList.add('fm-c-symbol__ol-fill'))\n  olStroke.forEach(n => n.classList.add('fm-c-symbol__ol-stroke'))\n  const bgFill = svg.querySelectorAll('[fill=\"#fff\" i], [fill=\"#ffffff\" i], [style*=\"fill:#fff\" i], [style*=\"fill:#ffffff\" i]')\n  const bgStroke = svg.querySelectorAll('[stroke*=\"#fff\" i], [stroke*=\"#ffffff\" i], [style*=\"stroke:#fff\" i], [style*=\"stroke:#ffffff\" i]')\n  bgFill.forEach(n => n.classList.add('fm-c-symbol__bg-fill'))\n  bgStroke.forEach(n => n.classList.add('fm-c-symbol__bg-stroke'))\n  const fgFill = svg.querySelectorAll(':not(.fm-c-symbol__ol-fill):not(.fm-c-symbol__bg-fill)[fill], :not(.fm-c-symbol__ol-fill):not(.fm-c-symbol__bg-fill)[style*=\"fill\"]')\n  const fgStroke = svg.querySelectorAll(':not(.fm-c-symbol__ol-stroke):not(.fm-c-symbol__bg-stroke)[stroke], :not(.fm-c-symbol__ol-stroke):not(.fm-c-symbol__bg-stroke)[style*=\"stroke\"]')\n  fgFill.forEach(n => n.classList.add('fm-c-symbol__fg-fill'))\n  fgStroke.forEach(n => n.classList.add('fm-c-symbol__fg-stroke'))\n  return dom.body.innerHTML\n}\n","// index.ts\nimport { getCoord } from \"@turf/invariant\";\nimport { radiansToLength, degreesToRadians } from \"@turf/helpers\";\nfunction distance(from, to, options = {}) {\n  var coordinates1 = getCoord(from);\n  var coordinates2 = getCoord(to);\n  var dLat = degreesToRadians(coordinates2[1] - coordinates1[1]);\n  var dLon = degreesToRadians(coordinates2[0] - coordinates1[0]);\n  var lat1 = degreesToRadians(coordinates1[1]);\n  var lat2 = degreesToRadians(coordinates2[1]);\n  var a = Math.pow(Math.sin(dLat / 2), 2) + Math.pow(Math.sin(dLon / 2), 2) * Math.cos(lat1) * Math.cos(lat2);\n  return radiansToLength(\n    2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a)),\n    options.units\n  );\n}\nvar turf_distance_default = distance;\nexport {\n  turf_distance_default as default,\n  distance\n};\n//# sourceMappingURL=index.js.map","\nexport default class TinyQueue {\n    constructor(data = [], compare = (a, b) => (a < b ? -1 : a > b ? 1 : 0)) {\n        this.data = data;\n        this.length = this.data.length;\n        this.compare = compare;\n\n        if (this.length > 0) {\n            for (let i = (this.length >> 1) - 1; i >= 0; i--) this._down(i);\n        }\n    }\n\n    push(item) {\n        this.data.push(item);\n        this._up(this.length++);\n    }\n\n    pop() {\n        if (this.length === 0) return undefined;\n\n        const top = this.data[0];\n        const bottom = this.data.pop();\n\n        if (--this.length > 0) {\n            this.data[0] = bottom;\n            this._down(0);\n        }\n\n        return top;\n    }\n\n    peek() {\n        return this.data[0];\n    }\n\n    _up(pos) {\n        const {data, compare} = this;\n        const item = data[pos];\n\n        while (pos > 0) {\n            const parent = (pos - 1) >> 1;\n            const current = data[parent];\n            if (compare(item, current) >= 0) break;\n            data[pos] = current;\n            pos = parent;\n        }\n\n        data[pos] = item;\n    }\n\n    _down(pos) {\n        const {data, compare} = this;\n        const halfLength = this.length >> 1;\n        const item = data[pos];\n\n        while (pos < halfLength) {\n            let bestChild = (pos << 1) + 1; // initially it is the left child\n            const right = bestChild + 1;\n\n            if (right < this.length && compare(data[right], data[bestChild]) < 0) {\n                bestChild = right;\n            }\n            if (compare(data[bestChild], item) >= 0) break;\n\n            data[pos] = data[bestChild];\n            pos = bestChild;\n        }\n\n        data[pos] = item;\n    }\n}\n","\nimport Queue from 'tinyqueue';\n\nexport default function polylabel(polygon, precision = 1.0, debug = false) {\n    // find the bounding box of the outer ring\n    let minX = Infinity;\n    let minY = Infinity;\n    let maxX = -Infinity;\n    let maxY = -Infinity;\n\n    for (const [x, y] of polygon[0]) {\n        if (x < minX) minX = x;\n        if (y < minY) minY = y;\n        if (x > maxX) maxX = x;\n        if (y > maxY) maxY = y;\n    }\n\n    const width = maxX - minX;\n    const height = maxY - minY;\n    const cellSize = Math.max(precision, Math.min(width, height));\n\n    if (cellSize === precision) {\n        const result = [minX, minY];\n        result.distance = 0;\n        return result;\n    }\n\n    // a priority queue of cells in order of their \"potential\" (max distance to polygon)\n    const cellQueue = new Queue([], (a, b) => b.max - a.max);\n\n    // take centroid as the first best guess\n    let bestCell = getCentroidCell(polygon);\n\n    // second guess: bounding box centroid\n    const bboxCell = new Cell(minX + width / 2, minY + height / 2, 0, polygon);\n    if (bboxCell.d > bestCell.d) bestCell = bboxCell;\n\n    let numProbes = 2;\n\n    function potentiallyQueue(x, y, h) {\n        const cell = new Cell(x, y, h, polygon);\n        numProbes++;\n        if (cell.max > bestCell.d + precision) cellQueue.push(cell);\n\n        // update the best cell if we found a better one\n        if (cell.d > bestCell.d) {\n            bestCell = cell;\n            if (debug) console.log(`found best ${Math.round(1e4 * cell.d) / 1e4} after ${numProbes} probes`);\n        }\n    }\n\n    // cover polygon with initial cells\n    let h = cellSize / 2;\n    for (let x = minX; x < maxX; x += cellSize) {\n        for (let y = minY; y < maxY; y += cellSize) {\n            potentiallyQueue(x + h, y + h, h);\n        }\n    }\n\n    while (cellQueue.length) {\n        // pick the most promising cell from the queue\n        const {max, x, y, h: ch} = cellQueue.pop();\n\n        // do not drill down further if there's no chance of a better solution\n        if (max - bestCell.d <= precision) break;\n\n        // split the cell into four cells\n        h = ch / 2;\n        potentiallyQueue(x - h, y - h, h);\n        potentiallyQueue(x + h, y - h, h);\n        potentiallyQueue(x - h, y + h, h);\n        potentiallyQueue(x + h, y + h, h);\n    }\n\n    if (debug) {\n        console.log(`num probes: ${numProbes}\\nbest distance: ${bestCell.d}`);\n    }\n\n    const result = [bestCell.x, bestCell.y];\n    result.distance = bestCell.d;\n    return result;\n}\n\nfunction Cell(x, y, h, polygon) {\n    this.x = x; // cell center x\n    this.y = y; // cell center y\n    this.h = h; // half the cell size\n    this.d = pointToPolygonDist(x, y, polygon); // distance from cell center to polygon\n    this.max = this.d + this.h * Math.SQRT2; // max distance to polygon within a cell\n}\n\n// signed distance from point to polygon outline (negative if point is outside)\nfunction pointToPolygonDist(x, y, polygon) {\n    let inside = false;\n    let minDistSq = Infinity;\n\n    for (const ring of polygon) {\n        for (let i = 0, len = ring.length, j = len - 1; i < len; j = i++) {\n            const a = ring[i];\n            const b = ring[j];\n\n            if ((a[1] > y !== b[1] > y) &&\n                (x < (b[0] - a[0]) * (y - a[1]) / (b[1] - a[1]) + a[0])) inside = !inside;\n\n            minDistSq = Math.min(minDistSq, getSegDistSq(x, y, a, b));\n        }\n    }\n\n    return minDistSq === 0 ? 0 : (inside ? 1 : -1) * Math.sqrt(minDistSq);\n}\n\n// get polygon centroid\nfunction getCentroidCell(polygon) {\n    let area = 0;\n    let x = 0;\n    let y = 0;\n    const points = polygon[0];\n\n    for (let i = 0, len = points.length, j = len - 1; i < len; j = i++) {\n        const a = points[i];\n        const b = points[j];\n        const f = a[0] * b[1] - b[0] * a[1];\n        x += (a[0] + b[0]) * f;\n        y += (a[1] + b[1]) * f;\n        area += f * 3;\n    }\n    const centroid = new Cell(x / area, y / area, 0, polygon);\n    if (area === 0 || centroid.d < 0) return new Cell(points[0][0], points[0][1], 0, polygon);\n    return centroid;\n}\n\n// get squared distance from a point to a segment\nfunction getSegDistSq(px, py, a, b) {\n    let x = a[0];\n    let y = a[1];\n    let dx = b[0] - x;\n    let dy = b[1] - y;\n\n    if (dx !== 0 || dy !== 0) {\n        const t = ((px - x) * dx + (py - y) * dy) / (dx * dx + dy * dy);\n\n        if (t > 1) {\n            x = b[0];\n            y = b[1];\n\n        } else if (t > 0) {\n            x += dx * t;\n            y += dy * t;\n        }\n    }\n\n    dx = px - x;\n    dy = py - y;\n\n    return dx * dx + dy * dy;\n}\n","// index.ts\nimport {\n  lineString,\n  multiLineString,\n  multiPolygon,\n  polygon\n} from \"@turf/helpers\";\nimport { getGeom } from \"@turf/invariant\";\n\n// lib/lineclip.ts\nfunction lineclip(points, bbox, result) {\n  var len = points.length, codeA = bitCode(points[0], bbox), part = [], i, codeB, lastCode;\n  let a;\n  let b;\n  if (!result) result = [];\n  for (i = 1; i < len; i++) {\n    a = points[i - 1];\n    b = points[i];\n    codeB = lastCode = bitCode(b, bbox);\n    while (true) {\n      if (!(codeA | codeB)) {\n        part.push(a);\n        if (codeB !== lastCode) {\n          part.push(b);\n          if (i < len - 1) {\n            result.push(part);\n            part = [];\n          }\n        } else if (i === len - 1) {\n          part.push(b);\n        }\n        break;\n      } else if (codeA & codeB) {\n        break;\n      } else if (codeA) {\n        a = intersect(a, b, codeA, bbox);\n        codeA = bitCode(a, bbox);\n      } else {\n        b = intersect(a, b, codeB, bbox);\n        codeB = bitCode(b, bbox);\n      }\n    }\n    codeA = lastCode;\n  }\n  if (part.length) result.push(part);\n  return result;\n}\nfunction polygonclip(points, bbox) {\n  var result, edge, prev, prevInside, i, p, inside;\n  for (edge = 1; edge <= 8; edge *= 2) {\n    result = [];\n    prev = points[points.length - 1];\n    prevInside = !(bitCode(prev, bbox) & edge);\n    for (i = 0; i < points.length; i++) {\n      p = points[i];\n      inside = !(bitCode(p, bbox) & edge);\n      if (inside !== prevInside) result.push(intersect(prev, p, edge, bbox));\n      if (inside) result.push(p);\n      prev = p;\n      prevInside = inside;\n    }\n    points = result;\n    if (!points.length) break;\n  }\n  return result;\n}\nfunction intersect(a, b, edge, bbox) {\n  return edge & 8 ? [a[0] + (b[0] - a[0]) * (bbox[3] - a[1]) / (b[1] - a[1]), bbox[3]] : edge & 4 ? [a[0] + (b[0] - a[0]) * (bbox[1] - a[1]) / (b[1] - a[1]), bbox[1]] : edge & 2 ? [bbox[2], a[1] + (b[1] - a[1]) * (bbox[2] - a[0]) / (b[0] - a[0])] : edge & 1 ? [bbox[0], a[1] + (b[1] - a[1]) * (bbox[0] - a[0]) / (b[0] - a[0])] : null;\n}\nfunction bitCode(p, bbox) {\n  var code = 0;\n  if (p[0] < bbox[0]) code |= 1;\n  else if (p[0] > bbox[2]) code |= 2;\n  if (p[1] < bbox[1]) code |= 4;\n  else if (p[1] > bbox[3]) code |= 8;\n  return code;\n}\n\n// index.ts\nfunction bboxClip(feature, bbox) {\n  const geom = getGeom(feature);\n  const type = geom.type;\n  const properties = feature.type === \"Feature\" ? feature.properties : {};\n  let coords = geom.coordinates;\n  switch (type) {\n    case \"LineString\":\n    case \"MultiLineString\": {\n      const lines = [];\n      if (type === \"LineString\") {\n        coords = [coords];\n      }\n      coords.forEach((line) => {\n        lineclip(line, bbox, lines);\n      });\n      if (lines.length === 1) {\n        return lineString(lines[0], properties);\n      }\n      return multiLineString(lines, properties);\n    }\n    case \"Polygon\":\n      return polygon(clipPolygon(coords, bbox), properties);\n    case \"MultiPolygon\":\n      return multiPolygon(\n        coords.map((poly) => {\n          return clipPolygon(poly, bbox);\n        }),\n        properties\n      );\n    default:\n      throw new Error(\"geometry \" + type + \" not supported\");\n  }\n}\nfunction clipPolygon(rings, bbox) {\n  const outRings = [];\n  for (const ring of rings) {\n    const clipped = polygonclip(ring, bbox);\n    if (clipped.length > 0) {\n      if (clipped[0][0] !== clipped[clipped.length - 1][0] || clipped[0][1] !== clipped[clipped.length - 1][1]) {\n        clipped.push(clipped[0]);\n      }\n      if (clipped.length >= 4) {\n        outRings.push(clipped);\n      }\n    }\n  }\n  return outRings;\n}\nvar turf_bbox_clip_default = bboxClip;\nexport {\n  bboxClip,\n  turf_bbox_clip_default as default\n};\n//# sourceMappingURL=index.js.map","import polylabel from 'polylabel'\nimport { area as turfArea } from '@turf/area'\nimport { distance as turfDistance } from '@turf/distance'\nimport { point as TurfPoint, polygon as TurfPolygon, multiPolygon as TurfMultiPolygon } from '@turf/helpers'\nimport { bboxClip as TurfBboxClip } from '@turf/bbox-clip'\nimport { getFocusBounds } from '../../lib/viewport'\nimport { defaults } from './constants'\n\nfunction getPaddedBounds () {\n  const { map } = this\n  const padding = map.getPadding()\n  const bounds = map.getBounds()\n\n  // Get the pixel coordinates for the current bounds\n  const sw = map.project([bounds.getWest(), bounds.getSouth()])\n  const ne = map.project([bounds.getEast(), bounds.getNorth()])\n\n  // Adjust for padding\n  sw.x += padding.left\n  sw.y -= padding.bottom\n  ne.x -= padding.right\n  ne.y += padding.top\n\n  // Convert back to geographical coordinates\n  const paddedSW = map.unproject(sw)\n  const paddedNE = map.unproject(ne)\n\n  // Create new bounds\n  const paddedBounds = [[paddedSW.lng, paddedSW.lat], [paddedNE.lng, paddedNE.lat]]\n\n  return paddedBounds.flat(1)\n}\n\nfunction addFeatureProperties (features) {\n  const { map } = this\n  return features.map(f => {\n    const { lng, lat } = map.getCenter()\n    const coord = f.geometry.type === 'Polygon' ? polylabel(f.geometry.coordinates, 0.00001) : f.geometry.coordinates\n    const p1 = new TurfPoint([coord[0], coord[1]])\n    const p2 = new TurfPoint([lng, lat])\n    const distance = turfDistance(p1, p2, { units: 'metres' })\n    return {\n      ...f.properties,\n      id: f.properties.id || f.id,\n      geometryType: f.geometry.type,\n      coord,\n      distance\n    }\n  })\n}\n\nfunction intersectFeatures (bounds, features) {\n  features = features.map(f => {\n    if (['Polygon', 'MultiPolygon'].includes(f.geometry.type)) {\n      const polygon = f.geometry.type === 'Polygon' ? new TurfPolygon(f.geometry.coordinates) : new TurfMultiPolygon(f.geometry.coordinates)\n      const clipped = TurfBboxClip(polygon, bounds)\n      // Remove empty rings\n      clipped.geometry.coordinates = clipped.geometry.coordinates.filter(c => c.length)\n      // const clippedGeometry = martinez.intersection(boundsPolygon.geometry.coordinates, f.geometry.coordinates)\n      f.geometry = clipped.geometry\n    }\n    return f\n  })\n  return features\n}\n\nfunction combineFeatures (features) {\n  const combined = []\n  features.forEach(f => {\n    const group = combined.find(c => c.length && ((f.id && f.id === c[0].id) || (f.properties.id && f.properties.id === c[0].properties.id)))\n    if (f.geometry.type === 'MultiPolygon') {\n      // Get largest single polygon, outer shape (excluding holes) and add area\n      const parts = f.geometry.coordinates.map(c => {\n        const polygon = new TurfPolygon([c[0]])\n        polygon.properties = { area: turfArea(polygon) }\n        return polygon\n      })\n      const largest = parts.find(p => p.properties.area === Math.max(...parts.map(b => b.properties.area)))\n      f.geometry = largest.geometry\n      f.properties.area = largest.properties.area\n    } else if (f.geometry.type === 'Polygon') {\n      // Get out shape (excluding holes) and add area\n      const polygon = new TurfPolygon([f.geometry.coordinates[0]])\n      f.properties.area = turfArea(polygon)\n      f.geometry = polygon.geometry\n    } else {\n      f.properties.area = 0\n    }\n    group?.push(f) || combined.push([f])\n  })\n  // Return largest single polygon\n  return combined.map(g => g.find(f => f.properties.area === Math.max(...g.map(b => b.properties.area))))\n}\n\nfunction getViewport () {\n  const { map } = this\n  const bounds = map.getBounds().toArray().flat(1)\n  const focusBounds = getPaddedBounds.bind(this)()\n  let center = map.getCenter()\n  let zoom = map.getZoom()\n  center = center.toArray().map(n => parseFloat(n.toFixed(defaults.PRECISION)))\n  zoom = parseFloat(zoom.toFixed(defaults.PRECISION))\n  const isMaxZoom = map.getZoom() >= map.getMaxZoom()\n  const isMinZoom = map.getZoom() <= map.getMinZoom()\n\n  return {\n    bounds,\n    focusBounds,\n    center,\n    zoom,\n    isMaxZoom,\n    isMinZoom\n  }\n}\n\nexport function addMapHoverBehaviour () {\n  const { map, featureLayers, labelLayers } = this\n\n  // Toggle cursor style for features\n  map.on('mousemove', [...featureLayers, ...labelLayers], e => {\n    const features = map.queryRenderedFeatures(e.point, { layers: [...featureLayers, ...labelLayers] })\n    const isFeature = !e.originalEvent.altKey && features && !!features.find(f => featureLayers.includes(f.layer.id))\n    const isLabel = e.originalEvent.altKey && features && !!features.find(f => labelLayers.includes(f.layer.id))\n    map.getCanvas().style.cursor = isFeature || isLabel ? 'pointer' : ''\n  })\n\n  // Revert cursor on mouseout\n  map.on('mouseout', [...featureLayers, ...labelLayers], () => { map.getCanvas().style.cursor = '' })\n}\n\nexport async function getDetail (pixel) {\n  const { selectedLayers } = this\n  const viewport = getViewport.bind(this)()\n  const features = getFeatures.bind(this)(pixel)\n  const label = getHighlightedLabel.bind(this)()\n  const selectedId = getSelectedFeatureId.bind(this)(selectedLayers)\n\n  return {\n    ...viewport,\n    resultType: features.resultType,\n    coord: features.coord,\n    selectedId,\n    features,\n    label\n  }\n}\n\nexport function getFeatures (pixel) {\n  const { map, featureLayers, locationLayers, paddingBox, scale } = this\n  const bounds = getFocusBounds(paddingBox, scale)\n\n  // Get all visible feature and pixel layers\n  let layers = [...featureLayers, ...locationLayers]\n  layers = map.getStyle()?.layers.filter(l => layers.includes(l?.id) && l?.layout?.visibility !== 'none').map(l => l.id)\n\n  // Get all features at given pixel\n  let featuresAtPixel = map.queryRenderedFeatures(pixel, { layers })\n\n  featuresAtPixel = (featuresAtPixel.map(f => {\n    return {\n      ...f.properties,\n      id: f.properties.id || f.id,\n      name: f.properties.name,\n      layer: f.layer.id\n    }\n  }))\n\n  // Get all 'featureLayer' features in the viewport\n  const renderedFeaturesInViewport = map.queryRenderedFeatures({ layers: featureLayers })\n\n  // Get total 'featureLayer' features in viewport (May be more than 9)\n  const featuresTotal = Array.from(new Set(renderedFeaturesInViewport.map(f => f.properties.id || f.id))).length\n\n  // Get all 'featureLayer' features in the padded bounds\n  const renderedFeaturesInPadding = map.queryRenderedFeatures(bounds, { layers: featureLayers })\n\n  // Get total 'featureLayer' features in padding bounds (May be more than 9)\n  const featuresFocusTotal = Array.from(new Set(renderedFeaturesInPadding.map(f => f.properties.id || f.id))).length\n\n  // Get geometry that intersects bounds\n  const intersectingFocusFeatures = intersectFeatures(getPaddedBounds.bind(this)(), renderedFeaturesInPadding)\n\n  // Split multi polygons and combine duplicate features\n  const viewportPolygonFeatures = featuresFocusTotal <= defaults.MAX_FEATURES ? combineFeatures(renderedFeaturesInViewport) : []\n  const focusPolygonFeatures = featuresFocusTotal <= defaults.MAX_FEATURES ? combineFeatures(intersectingFocusFeatures) : []\n\n  // Add props and sort features\n  const featuresInViewport = renderedFeaturesInViewport.length <= defaults.MAX_FEATURES ? addFeatureProperties.bind(this)(viewportPolygonFeatures) : []\n  const featuresInFocus = addFeatureProperties.bind(this)(focusPolygonFeatures).sort((a, b) => a.distance - b.distance)\n\n  // Get long lat of query\n  let lngLat\n  if (pixel) {\n    lngLat = map.unproject(pixel)\n    lngLat = [lngLat.lng, lngLat.lat]\n    lngLat = lngLat.map(c => Math.round(c * Math.pow(10, defaults.PRECISION)) / Math.pow(10, defaults.PRECISION))\n  }\n\n  // Set 'features' result type\n  const feature = featuresAtPixel.length ? featuresAtPixel[0] : null\n  const featureType = (featureLayers?.includes(feature?.layer) && 'feature') || (locationLayers?.includes(feature?.layer) && 'pixel')\n  const hasFeatureLayers = layers?.some(l => featureLayers?.includes(l))\n  const hasPixelLayers = layers?.some(l => locationLayers?.includes(l))\n  const resultType = featureType || (hasPixelLayers ? 'pixel' : null)\n\n  return {\n    resultType,\n    items: featuresAtPixel,\n    featuresTotal,\n    featuresInViewport,\n    featuresFocusTotal,\n    featuresInFocus,\n    isFeaturesInMap: hasFeatureLayers,\n    isPixelFeaturesAtPixel: locationLayers?.includes(feature?.layer),\n    isPixelFeaturesInMap: hasPixelLayers,\n    coord: lngLat\n  }\n}\n\nexport function toggleSelectedFeature (id) {\n  const { map, selectedLayers } = this\n  if (map?.getStyle()) {\n    for (const layer of selectedLayers) {\n      map.setLayoutProperty(layer, 'visibility', id ? 'visible' : 'none')\n      map.setFilter(layer, [\n        'any',\n        ['==', ['id'], id || ''],\n        ['==', ['get', 'id'], id || '']\n      ])\n    }\n  }\n}\n\nexport function getHighlightedLabel () {\n  const { map } = this\n  const features = map.queryRenderedFeatures({ layers: ['label'] })\n  let text\n  if (features?.length) {\n    const label = map.getStyle()?.layers.find(l => l.id === 'label')?.layout['text-field']\n    text = `${label} (${features[0].properties.layer})`\n  }\n  return text\n}\n\nexport function getSelectedFeatureId (selectedLayers) {\n  const { map } = this\n  const features = map.queryRenderedFeatures({ layers: selectedLayers })\n  return features.length ? (features[0].properties?.id || features[0]?.id) : null\n}\n\nexport function getLabel (pixel) {\n  const { map, labelLayers } = this\n  const feature = map.queryRenderedFeatures(pixel, { layers: labelLayers })[0]\n  return feature\n}\n\nexport function getLabels () {\n  const { map, paddingBox, scale } = this\n  const bounds = getFocusBounds(paddingBox, scale)\n  const features = map.queryRenderedFeatures(bounds, { layers: this.labelLayers })\n  const labels = features.map(f => {\n    let pixel = f.geometry.type === 'Point' && map.project(f.geometry.coordinates)\n    if (f.geometry.type !== 'Point') {\n      const coordinates = f.geometry.coordinates.flat(f.geometry.type === 'MultiLineString' ? 1 : 0)\n      const pixels = coordinates.map(c => map.project(c))\n      const xS = pixels.map(p => p.x)\n      const yS = pixels.map(p => p.y)\n      const centerX = ((Math.max(...xS) - Math.min(...xS)) / 2) + Math.min(...xS)\n      const centerY = ((Math.max(...yS) - Math.min(...yS)) / 2) + Math.min(...yS)\n      pixel = { x: centerX, y: centerY }\n    }\n    return {\n      feature: f,\n      pixel: [pixel.x, pixel.y]\n    }\n  })\n  return labels\n}\n","export const locationMarkerHTML = () => {\n  const el = document.createElement('div')\n  el.className = 'fm-c-marker fm-c-marker--location'\n  el.innerHTML = '<div class=\"fm-c-marker__inner\"><svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" fill=\"currentColor\"><circle cx=\"10\" cy=\"10\" r=\"8\" stroke=\"#fff\" stroke-width=\"3\"/></svg></div>'\n  return el\n}\n\nexport const targetMarkerHTML = () => {\n  const el = document.createElement('div')\n  el.className = 'fm-c-marker fm-c-marker--target'\n  el.innerHTML = `<div class=\"fm-c-marker__inner\">\n    <svg width=\"38\" height=\"38\" viewBox=\"0 0 38 38\" fill-rule=\"evenodd\" fill=\"currentColor\">\n      <path d=\"M5.035 20H1v-2h4.035C5.525 11.069 11.069 5.525 18 5.035V1h2v4.035c6.931.49 12.475 6.034 12.965 12.965H37v2h-4.035c-.49 6.931-6.034 12.475-12.965 12.965V37h-2v-4.035C11.069 32.475 5.525 26.931 5.035 20zM19 7A12.01 12.01 0 0 0 7 19a12.01 12.01 0 0 0 12 12 12.01 12.01 0 0 0 12-12A12.01 12.01 0 0 0 19 7zm0 10a2 2 0 1 1 0 4 2 2 0 1 1 0-4z\"/>\n      <path d=\"M5.035 20H1v-2h4.035a14.02 14.02 0 0 1 .246-1.8l1.96.399C7.083 17.375 7 18.178 7 19s.083 1.625.241 2.401l-1.96.399a14.02 14.02 0 0 1-.246-1.8zM20 5.035a14.02 14.02 0 0 1 1.8.246l-.399 1.96C20.625 7.083 19.822 7 19 7s-1.625.083-2.401.241l-.399-1.96a14.02 14.02 0 0 1 1.8-.246V1h2v4.035zm-2 27.93a14.02 14.02 0 0 1-1.8-.246l.399-1.96c.776.158 1.579.241 2.401.241s1.625-.083 2.401-.241l.399 1.96a14.02 14.02 0 0 1-1.8.246V37h-2v-4.035zM32.965 20a14.02 14.02 0 0 1-.246 1.8l-1.96-.399c.158-.776.241-1.579.241-2.401s-.083-1.625-.241-2.401l1.96-.399a14.02 14.02 0 0 1 .246 1.8H37v2h-4.035zM19 17a2 2 0 1 1 0 4 2 2 0 1 1 0-4zm3.8-9.385l.634-1.897a13.98 13.98 0 0 1 4.848 2.805l-1.327 1.496c-1.196-1.06-2.605-1.886-4.155-2.404zm5.181 3.43l1.496-1.327a13.98 13.98 0 0 1 2.805 4.848l-1.897.634c-.518-1.55-1.344-2.959-2.404-4.155zM30.385 22.8l1.897.634a13.98 13.98 0 0 1-2.805 4.848l-1.496-1.327c1.06-1.196 1.886-2.605 2.404-4.155zm-3.43 5.181l1.327 1.496a13.98 13.98 0 0 1-4.848 2.805l-.634-1.897c1.55-.518 2.959-1.344 4.155-2.404zM15.2 30.385l-.634 1.897a13.98 13.98 0 0 1-4.848-2.805l1.327-1.496c1.196 1.06 2.605 1.886 4.155 2.404zm-5.181-3.43l-1.496 1.327a13.98 13.98 0 0 1-2.805-4.848l1.897-.634c.518 1.55 1.344 2.959 2.404 4.155zM7.615 15.2l-1.897-.634a13.98 13.98 0 0 1 2.805-4.848l1.496 1.327c-1.06 1.196-1.886 2.605-2.404 4.155zm3.43-5.181L9.718 8.523a13.98 13.98 0 0 1 4.848-2.805l.634 1.897c-1.55.518-2.959 1.344-4.155 2.404z\"/>\n    </svg>\n  </div>`\n  return el\n}\n\nexport const shortcutMarkerHTML = (key) => {\n  const el = document.createElement('div')\n  el.className = 'fm-c-marker fm-c-marker--shortcut'\n  el.innerHTML = `<div class=\"fm-c-marker__inner\">${key}</div>`\n  return el\n}\n","import computedStyleToInlineStyle from 'computed-style-to-inline-style'\nimport { defaults } from './constants'\nimport { shortcutMarkerHTML } from './marker'\nimport { parseSVG } from '../../lib/symbols'\n\nconst SYMBOL_PLACEMENT = 'symbol-placement'\nconst TEXT_FIELD = 'text-field'\nconst SCALE_FACTOR_SMALL = 1.5\nconst SCALE_FACTOR_LARGE = 1.25\n\nexport function amendLineSymbolLayers () {\n  const { map } = this\n  const lineSymbolLayers = map.getStyle().layers.filter(l => l.layout && (SYMBOL_PLACEMENT in l.layout) && l.layout[SYMBOL_PLACEMENT] === 'line')\n  lineSymbolLayers.forEach(l => map.setLayoutProperty(l.id, SYMBOL_PLACEMENT, 'line-center'))\n}\n\nexport function addHighlightedLabelLayer () {\n  const { map } = this\n  const layers = map.getStyle().layers\n  this.labelLayers = layers.filter(l => l.id !== 'label' && l.layout ? l.layout[TEXT_FIELD] : null).map(l => l.id)\n  map.addSource('label', { type: 'geojson', data: { type: 'FeatureCollection', features: [] } })\n  map.addLayer({\n    id: 'label',\n    type: 'symbol',\n    source: 'label',\n    layout: {\n      'text-allow-overlap': true,\n      'text-ignore-placement': true\n    },\n    paint: {\n      'text-halo-width': 3,\n      'text-halo-blur': 1,\n      'text-opacity': 1\n    }\n  })\n}\n\nexport function addShortcutMarkers (features) {\n  const { map, shortcutMarkers } = this\n  const { Marker } = this.modules\n  shortcutMarkers.forEach(m => m.remove())\n  features.forEach((f, i) => {\n    const offset = f.geometryType === 'Point' ? [0, defaults.SHORTCUT_LABEL_OFFSET] : [0, 0]\n    shortcutMarkers.push(new Marker({ element: shortcutMarkerHTML(i + 1), offset }).setLngLat(f.coord).addTo(map))\n  })\n}\n\nexport function highlightLabel (feature) {\n  const { map, scale, style } = this\n\n  if (!map.style) {\n    return\n  }\n\n  if (feature) {\n    map.moveLayer('label')\n    map.getSource('label').setData({\n      type: 'Feature',\n      geometry: feature.geometry,\n      properties: {\n        ...feature.properties,\n        layer: feature.layer.id\n      }\n    })\n    // Clone layout properties\n    const textScale = scale === 1 ? SCALE_FACTOR_SMALL : SCALE_FACTOR_LARGE\n    const textField = feature.layer.layout[TEXT_FIELD]\n    map.setLayoutProperty('label', SYMBOL_PLACEMENT, feature.layer.layout[SYMBOL_PLACEMENT])\n    map.setLayoutProperty('label', TEXT_FIELD, textField.sections ? textField.sections[0].text : textField)\n    map.setLayoutProperty('label', 'text-font', feature.layer.layout['text-font'])\n    map.setLayoutProperty('label', 'text-letter-spacing', feature.layer.layout['text-letter-spacing'])\n    map.setLayoutProperty('label', 'text-size', feature.layer.layout['text-size'] * textScale)\n    map.setLayoutProperty('label', 'text-anchor', feature.layer.layout['text-anchor'])\n    map.setLayoutProperty('label', 'text-justify', feature.layer.layout['text-justify'])\n    map.setLayoutProperty('label', 'text-offset', feature.layer.layout['text-offset']?.map(o => o / textScale))\n    // Clone paint properties\n    map.setPaintProperty('label', 'text-color', (style === 'dark' ? '#ffffff' : '#000000'))\n    map.setPaintProperty('label', 'text-halo-color', (style === 'dark' ? '#000000' : '#ffffff'))\n  } else {\n    map?.getSource('label')?.setData({\n      type: 'FeatureCollection',\n      features: []\n    })\n  }\n}\n\nexport function addSelectedLayers (layers, selectedId, isDarkBasemap) {\n  const { map } = this\n  const selectedLayers = []\n  for (const layer of layers) {\n    layer.id = `${layer.id}-selected`\n    layer.filter = ['==', 'id', selectedId || '']\n    if (layer.type === 'symbol') {\n      layer.layout['icon-image'] = ['concat', layer.layout['icon-image'], '-selected']\n    }\n    if (layer.type === 'fill') {\n      layer.paint = { 'line-color': isDarkBasemap ? '#ffffff' : '#0b0c0c', 'line-width': 2 }\n      layer.type = 'line'\n    }\n    if (map.getLayer(layer.id)) {\n      map.removeLayer(layer.id)\n    }\n    selectedLayers.push(layer.id)\n    setTimeout(() => map.addLayer(layer), 0)\n  }\n  return selectedLayers\n}\n\nexport function loadSymbols () {\n  let fn\n  if (this.symbols?.length) {\n    const { map, symbols, style } = this\n    const isDarkBasemap = ['dark', 'aerial'].includes(style.name)\n\n    fn = Promise.all(symbols.map(u => fetch(u))).then(responses =>\n      Promise.all(responses.map(r => r.text()))\n    ).then(texts => Promise.all(texts.map((t, i) => loadImage(getName(symbols[i]), t, map, isDarkBasemap))\n      .concat(texts.map((t, i) => loadImage(`${getName(symbols[i])}-selected`, t, map, isDarkBasemap)))\n    ))\n  }\n  return fn\n}\n\nconst getName = path => {\n  const extNumChars = 4\n  return path.split('\\\\').pop().split('/').pop().slice(0, -Math.abs(extNumChars))\n}\n\nconst loadImage = (name, text, map, isDarkBasemap) => {\n  const parsed = parseSVG(name, null, text, isDarkBasemap, 2)\n  const container = map.getCanvasContainer()\n  container.insertAdjacentHTML('beforeend', parsed)\n  const el = container.lastChild\n  computedStyleToInlineStyle(el, { recursive: true, properties: ['stroke', 'fill'] })\n  const base64 = 'data:image/svg+xml;base64,' + btoa(container.lastChild.outerHTML)\n  const img = document.createElement('img')\n  el?.remove()\n  return new Promise((resolve, reject) => {\n    img.onload = () => {\n      try {\n        if (map?.hasImage(name)) {\n          return\n        }\n        map.addImage(name, img)\n        resolve(img)\n      } catch (err) {\n        console.log(err)\n      }\n    }\n    img.onerror = reject\n    img.src = base64\n  })\n}\n","import { getDetail, addMapHoverBehaviour } from './query'\nimport { loadSymbols, addHighlightedLabelLayer, amendLineSymbolLayers, addShortcutMarkers, addSelectedLayers } from './symbols'\n\nexport const getResolution = (map) => {\n  const center = map.getCenter()\n  const zoom = map.getZoom()\n  const lat = center.lat\n  const EARTH_CIRCUMFERENCE = 40075016.686\n  const TILE_SIZE = 512\n  const scale = Math.pow(2, zoom)\n  const resolution = (EARTH_CIRCUMFERENCE * Math.cos((lat * Math.PI) / 180)) / (scale * TILE_SIZE)\n  return resolution\n}\n\nexport const getAttributions = (map) => {\n  const style = map.getStyle()\n  if (!style) {\n    return []\n  }\n\n  const currentZoom = map.getZoom()\n  const activeAttributions = new Set()\n\n  // Check each layer for visibility at current zoom\n  style.layers.forEach(layer => {\n    // Skip layers without a source\n    if (!layer.source) return\n\n    // Check if layer is visible based on zoom and visibility property\n    const minZoom = layer.minzoom !== undefined ? layer.minzoom : 0\n    const maxZoom = layer.maxzoom !== undefined ? layer.maxzoom : 24\n    const isVisible = currentZoom >= minZoom && currentZoom < maxZoom && (!layer.layout || layer.layout.visibility !== 'none')\n\n    // If layer is visible, get attribution from its source\n    if (isVisible) {\n      const source = style.sources[layer.source]\n      if (source && source.attribution) {\n        activeAttributions.add(source.attribution)\n      }\n    }\n  })\n\n  return Array.from(activeAttributions)\n}\n\nexport async function handleLoad () {\n  const { map } = this\n  await loadSymbols.bind(this)()\n  this.isLoaded = true\n  const resolution = getResolution(map)\n  const zoom = map.getZoom()\n  const attributions = getAttributions(map)\n  this.dispatchEvent(new CustomEvent('load', {\n    detail: {\n      framework: { map },\n      resolution,\n      zoom,\n      attributions\n    }\n  }))\n}\n\nexport async function handleStyleLoad () {\n  const { map } = this\n  // Store ref to baselayers when a new style is loaded\n  this.baseLayers = map.getStyle().layers\n  // Amend symbol-placement prop so labels have a coordinate\n  amendLineSymbolLayers.bind(this)()\n  // Add highlighted label layer and source\n  addHighlightedLabelLayer.bind(this)()\n  // Change cursor type on feature hover\n  addMapHoverBehaviour.bind(this)(this.featureLayers, this.labelLayers)\n  if (this.isLoaded) {\n    await loadSymbols.bind(this)()\n    this.dispatchEvent(new CustomEvent('style', {\n      detail: {\n        type: 'style'\n      }\n    }))\n  }\n}\n\nexport async function handleIdle () {\n  if (this.map) {\n    const { map, paddingBox, selectedId, scale } = this\n    const { offsetTop, offsetLeft, offsetWidth, offsetHeight } = paddingBox\n    const { offsetTop: parentOffsetTop, offsetLeft: parentOffsetLeft } = paddingBox.parentNode\n    const pixel = [offsetLeft + parentOffsetLeft + (offsetWidth / 2), offsetTop + parentOffsetTop + (offsetHeight / 2)].map(c => c / scale)\n    const detail = await getDetail.bind(this)(selectedId ? null : pixel)\n    const attributions = getAttributions(map)\n    addShortcutMarkers.bind(this)(detail?.features?.featuresInFocus)\n    this.dispatchEvent(new CustomEvent('update', {\n      detail: {\n        ...detail,\n        attributions\n      }\n    }))\n  }\n}\n\nexport async function handleMoveStart (e) {\n  this.hideLabel()\n  this.dispatchEvent(new CustomEvent('movestart', {\n    detail: {\n      isUserInitiated: e.isUserInitiated || !!e.originalEvent\n    }\n  }))\n}\n\nexport function handleMove () {\n  const { map } = this\n  const isMaxZoom = map.getZoom() >= map.getMaxZoom()\n  const isMinZoom = map.getZoom() <= map.getMinZoom()\n  const zoom = map.getZoom()\n  const resolution = getResolution(map)\n  const attributions = getAttributions(map)\n\n  // Need to include maxBounds check as this can also constrain zoom\n  this.dispatchEvent(new CustomEvent('move', {\n    detail: {\n      isMaxZoom,\n      isMinZoom,\n      zoom,\n      resolution,\n      attributions\n    }\n  }))\n}\n\nexport function handleStyleData (e) {\n  if (this.baseLayers.length) {\n    const { map, style, selectedId } = this\n    const featureLayers = e.target.getStyle().layers.filter(l => this.featureLayers.includes(l.id))\n    const selectedLayers = map.getStyle().layers.filter(l => l.id.includes('selected'))\n    if (selectedLayers.length !== featureLayers.length) {\n      const isDarkBasemap = ['dark', 'aerial'].includes(style.name)\n      this.selectedLayers = addSelectedLayers.bind(this)(featureLayers, selectedId, isDarkBasemap)\n    }\n  }\n}\n\nexport function handleDrawModeChange (e) {\n  const actions = {\n    edit_vertex: 'delete',\n    draw_vertex: 'add'\n  }\n  this.dispatchEvent(new CustomEvent('draw', {\n    detail: {\n      action: actions[e.mode] || null,\n      feature: e.feature\n    }\n  }))\n}\n\nexport function handleDrawVertexChange (e) {\n  this.dispatchEvent(new CustomEvent('draw', {\n    detail: {\n      action: 'change',\n      numVertecies: e.numVertecies\n    }\n  }))\n}\n\nexport function handleError (err) {\n  console.log(err)\n}\n","import { handleLoad, handleMoveStart, handleMove, handleIdle, handleStyleData, handleStyleLoad, handleDrawModeChange, handleDrawVertexChange, handleError } from './events.js'\nimport { toggleSelectedFeature, getDetail, getLabels, getLabel } from './query.js'\nimport { locationMarkerHTML, targetMarkerHTML } from './marker.js'\nimport { highlightLabel } from './symbols.js'\nimport { getFocusPadding, spatialNavigate, getScale } from '../../lib/viewport.js'\nimport { debounce } from '../../lib/debounce.js'\nimport { throttle } from '../../lib/throttle.js'\nimport { defaults, css } from './constants.js'\nimport { defaults as storeDefaults } from '../../store/constants.js'\n\nclass Framework extends EventTarget {\n  constructor ({ capabilities, transformRequest, symbols }) {\n    super()\n    this.srid = 4326\n    this.capabilities = capabilities\n    this.transformRequest = transformRequest\n    this.symbols = symbols\n    this.baseLayers = []\n    this.selectedId = ''\n    this.selectedCoordinate = null\n    this.isLoaded = false\n  }\n\n  init (options) {\n    if (this.capabilities.isLatest) {\n      import(/* webpackChunkName: \"maplibre\", webpackExports: [\"Map\", \"Marker\", \"LngLatBounds\"] */ 'maplibre-gl').then(module => {\n        this.addMap(module, options)\n      })\n    } else {\n      Promise.all([\n        import(/* webpackChunkName: \"maplibre-legacy\", webpackExports: [\"Map\", \"Marker\", \"LngLatBounds\"] */ 'maplibre-gl-legacy'),\n        import(/* webpackChunkName: \"maplibre-legacy\", webpackExports: [\"install\"] */ 'resize-observer'),\n        import(/* webpackChunkName: \"maplibre-legacy\" */ 'array-flat-polyfill')\n      ]).then(promises => {\n        if (!window.ResizeObserver) {\n          promises[1].install()\n        }\n        this.addMap(promises[0], options)\n      })\n    }\n  }\n\n  remove () {\n    this.map?.remove()\n    this.map = null\n  }\n\n  addMap (module, options) {\n    const { container, paddingBox, bounds, maxBounds, center, zoom, minZoom, maxZoom, style, size, featureLayers, locationLayers, callBack } = options\n    const { Map: MaplibreMap, Marker, LngLatBounds } = module.default\n    const scale = getScale(size)\n\n    const map = new MaplibreMap({\n      ...options,\n      container,\n      style: style?.url,\n      maxBounds: maxBounds || storeDefaults.MAX_BOUNDS_4326,\n      bounds,\n      center,\n      zoom,\n      minZoom,\n      maxZoom,\n      fadeDuration: 0,\n      attributionControl: false,\n      dragRotate: false\n    })\n\n    // Set initial padding, bounds and center (*No option to set in constructor)\n    // map.showPadding = true\n\n    map.setPadding(getFocusPadding(paddingBox, scale))\n    if (bounds) {\n      map.fitBounds(bounds, { animate: false })\n    } else {\n      map.flyTo({ center, zoom, animate: false })\n    }\n\n    // Disable rotation\n    map.touchZoomRotate.disableRotation()\n\n    // Overide device pixel ratio\n    if (map.setPixelRatio) {\n      map.setPixelRatio(window.devicePixelRatio * scale)\n    }\n\n    // Tidy up canvas\n    const canvas = map.getCanvas()\n    canvas.removeAttribute('role')\n    canvas.removeAttribute('tabindex')\n    canvas.removeAttribute('aria-label')\n    canvas.style.display = 'block'\n\n    this.container = container\n    this.map = map\n    this.featureLayers = featureLayers || []\n    this.locationLayers = locationLayers || []\n    this.selectedLayers = []\n    this.paddingBox = paddingBox\n    this.style = style\n    this.scale = scale\n\n    // Add markers\n    this.targetMarker = new Marker({ element: targetMarkerHTML() }).setLngLat([0, 0]).addTo(map)\n    this.locationMarker = new Marker({ element: locationMarkerHTML() }).setLngLat([0, 0]).addTo(map)\n    this.shortcutMarkers = []\n\n    // Return ref to dynamically loaded modules and framework functions\n    this.modules = { MaplibreMap, Marker, LngLatBounds }\n    this.framework = { map }\n\n    // Map ready event (first load)\n    map.on('load', handleLoad.bind(this))\n\n    // Map movestart\n    map.on('movestart', handleMoveStart.bind(this))\n\n    // Detect max/min zoom on move\n    const throttleHandleMove = throttle(() => { handleMove.bind(this)() }, defaults.THROTTLE)\n    map.on('move', throttleHandleMove)\n\n    // Detect map layer addition\n    map.on('styledata', handleStyleData.bind(this))\n\n    // All render/changes/animations complete. Must debounce, min 500ms\n    const debounceHandleIdle = debounce(() => { handleIdle.bind(this)() }, defaults.DELAY)\n    map.on('idle', debounceHandleIdle)\n\n    // Map style change\n    map.on('style.load', handleStyleLoad.bind(this))\n\n    // Draw events\n    map.on('draw.modechange', handleDrawModeChange.bind(this))\n\n    // Draw events\n    map.on('draw.modechange', handleDrawModeChange.bind(this))\n    map.on('draw.vertexchange', handleDrawVertexChange.bind(this))\n\n    // Capture errors\n    map.on('error', handleError.bind(this))\n\n    // Implementation callback after initialisation\n    if (callBack) {\n      callBack(this)\n    }\n  }\n\n  getPixel (coord) {\n    let pixel\n    if (this.map && coord) {\n      pixel = this.map.project(coord)\n      pixel = [Math.round(pixel.x), Math.round(pixel.y)]\n    }\n    return pixel\n  }\n\n  panBy (offset, isUserInitiated = true) {\n    if (this.map) {\n      this.map.panBy(offset, { ...defaults.ANIMATION }, { isUserInitiated })\n    }\n  }\n\n  panTo (coord) {\n    this.map.flyTo({ center: coord, ...defaults.ANIMATION })\n  }\n\n  zoomIn () {\n    if (this.map) {\n      this.map.zoomIn(defaults.ANIMATION)\n    }\n  }\n\n  zoomOut () {\n    if (this.map) {\n      this.map.zoomOut(defaults.ANIMATION)\n    }\n  }\n\n  setStyle (style) {\n    this.style = style\n    this.map.setStyle(style.url, { diff: false })\n\n    // Udate draw style\n    this.draw?.setStyle?.()\n  }\n\n  setPadding (coord, isAnimate) {\n    if (this.map) {\n      const { map, paddingBox, scale } = this\n      const padding = getFocusPadding(paddingBox, scale)\n      // Search needs to set padding first before fitBounds\n      this.map.setPadding(padding || map.getPadding())\n      // Ease map to new when coord is obscured\n      coord && this.map.easeTo({ center: coord, animate: isAnimate, ...defaults.ANIMATION })\n    }\n  }\n\n  setSize (size) {\n    const scale = getScale(size)\n    this.scale = scale\n    this.setPadding()\n    if (this.map.setPixelRatio) {\n      this.map?.setPixelRatio(window.devicePixelRatio * scale)\n    }\n    setTimeout(() => {\n      this.map.resize()\n      this.dispatchEvent(new CustomEvent('style', {\n        detail: {\n          type: 'size'\n        }\n      }))\n    }, defaults.DELAY)\n  }\n\n  fitBounds (bounds, isAnimate = true) {\n    bounds = [[bounds[0], bounds[1]], [bounds[2], bounds[3]]]\n    this.map.fitBounds(bounds, { animate: isAnimate, linear: true, duration: defaults.ANIMATION.duration })\n  }\n\n  setCentre (coord, _zoom) {\n    if (this.map) {\n      this.map.flyTo({ center: coord, ...defaults.ANIMATION })\n    }\n  }\n\n  initDraw (options) {\n    import(/* webpackChunkName: \"maplibre-draw\" */ './draw.js').then(module => {\n      const Draw = module.default\n      this.draw = new Draw(this, options)\n    })\n  }\n\n  setTargetMarker (coord, hasData, isVisible) {\n    const { targetMarker } = this\n    if (targetMarker) {\n      targetMarker.setLngLat(coord || [0, 0])\n      const el = targetMarker.getElement() // addClassName not supported in v1.15\n      el.classList.toggle('fm-c-marker--has-data', hasData)\n      el.classList.toggle(css.MARKER_VISIBLE, isVisible && coord)\n    }\n  }\n\n  selectFeature (id) {\n    this.selectedId = id\n    toggleSelectedFeature.bind(this)(id)\n  }\n\n  selectCoordinate (coord) {\n    this.selectedCoordinate = coord\n  }\n\n  async queryFeature (id) {\n    if (id) {\n      const detail = await getDetail.bind(this)(null, false)\n      detail.features.items = [detail.features.items.find(f => f.id === id)]\n      this.dispatchEvent(new CustomEvent('mapquery', { detail }))\n    }\n  }\n\n  async queryPoint (point) {\n    const detail = await getDetail.bind(this)(point, this.selectedLayers)\n    this.hideLabel()\n    this.dispatchEvent(new CustomEvent('mapquery', {\n      detail: {\n        resultType: detail.features.resultType,\n        ...detail\n      }\n    }))\n  }\n\n  getGeoLocation (success, error) {\n    navigator.geolocation.getCurrentPosition(async (position) => {\n      let coord = [position.coords.longitude, position.coords.latitude]\n      coord = coord.map(n => parseFloat(n.toFixed(defaults.PRECISION)))\n      // const place = this.getNearest ? await this.getNearest(coord) : null\n      success(coord, null)\n    }, (err) => {\n      console.log(err)\n      error(err)\n    }, {\n      enableHighAccuracy: false\n    })\n  }\n\n  showLocation (coord) {\n    const { locationMarker } = this\n    locationMarker.setLngLat(coord).addClassName(css.MARKER_VISIBLE)\n  }\n\n  showNextLabel (pixel, direction) {\n    const labels = getLabels.bind(this)()\n    const { lng, lat } = this.map.getCenter()\n    const center = this.map.project([lng, lat])\n    const pixels = labels.map(c => c.pixel)\n    const index = spatialNavigate(direction, pixel || [center.x, center.y], pixels)\n    const feature = labels[index]?.feature\n    highlightLabel.bind(this)(feature)\n    return labels[index]?.pixel\n  }\n\n  showLabel (point) {\n    const feature = getLabel.bind(this)(point)\n    highlightLabel.bind(this)(feature)\n    return point\n  }\n\n  hideLabel () {\n    if (this.map) {\n      highlightLabel.bind(this)()\n    }\n  }\n}\n\nexport default Framework\n","export const throttle = (fn, wait) => {\n  let lastCallTime = 0\n  return (...args) => {\n    const now = Date.now()\n    if (now - lastCallTime >= wait) {\n      lastCallTime = now\n      fn(...args)\n    }\n  }\n}\n","// index.ts\nimport { earthRadius } from \"@turf/helpers\";\nimport { geomReduce } from \"@turf/meta\";\nfunction area(geojson) {\n  return geomReduce(\n    geojson,\n    (value, geom) => {\n      return value + calculateArea(geom);\n    },\n    0\n  );\n}\nfunction calculateArea(geom) {\n  let total = 0;\n  let i;\n  switch (geom.type) {\n    case \"Polygon\":\n      return polygonArea(geom.coordinates);\n    case \"MultiPolygon\":\n      for (i = 0; i < geom.coordinates.length; i++) {\n        total += polygonArea(geom.coordinates[i]);\n      }\n      return total;\n    case \"Point\":\n    case \"MultiPoint\":\n    case \"LineString\":\n    case \"MultiLineString\":\n      return 0;\n  }\n  return 0;\n}\nfunction polygonArea(coords) {\n  let total = 0;\n  if (coords && coords.length > 0) {\n    total += Math.abs(ringArea(coords[0]));\n    for (let i = 1; i < coords.length; i++) {\n      total -= Math.abs(ringArea(coords[i]));\n    }\n  }\n  return total;\n}\nvar FACTOR = earthRadius * earthRadius / 2;\nvar PI_OVER_180 = Math.PI / 180;\nfunction ringArea(coords) {\n  const coordsLength = coords.length - 1;\n  if (coordsLength <= 2) return 0;\n  let total = 0;\n  let i = 0;\n  while (i < coordsLength) {\n    const lower = coords[i];\n    const middle = coords[i + 1 === coordsLength ? 0 : i + 1];\n    const upper = coords[i + 2 >= coordsLength ? (i + 2) % coordsLength : i + 2];\n    const lowerX = lower[0] * PI_OVER_180;\n    const middleY = middle[1] * PI_OVER_180;\n    const upperX = upper[0] * PI_OVER_180;\n    total += (upperX - lowerX) * Math.sin(middleY);\n    i++;\n  }\n  return total * FACTOR;\n}\nvar turf_area_default = area;\nexport {\n  area,\n  turf_area_default as default\n};\n//# sourceMappingURL=index.js.map","import { distance as turfDistance } from '@turf/distance'\nimport { point as TurfPoint } from '@turf/helpers'\nimport { defaults } from '../store/constants'\n\nconst getBearing = (coord1, coord2) => {\n  const east = coord1[0] < coord2[0] && 'east'\n  const west = coord1[0] > coord2[0] && 'west'\n  const north = coord1[1] < coord2[1] && 'north'\n  const south = coord1[1] > coord2[1] && 'south'\n  return [east, west, north, south].filter(b => b && typeof b === 'string')\n}\n\nconst getUnits = (metres) => {\n  const MAX_METRES = 800\n  const MAX_MILES = 5000\n  const RATIO = 0.621371\n  let units\n  if (metres < MAX_METRES) {\n    units = `${metres} metres`\n  } else if (metres < MAX_MILES) {\n    units = (metres / 1000 * RATIO).toFixed(1) + ' miles'\n  } else {\n    units = Math.round((metres / 1000) * RATIO) + ' miles'\n  }\n  return units\n}\n\nconst getDirection = (coord1, coord2) => {\n  coord1 = coord1.map(n => n > 1000 ? Math.round(n) : Math.round(n * 100000) / 100000)\n  coord2 = coord2.map(n => n > 1000 ? Math.round(n) : Math.round(n * 100000) / 100000)\n  const ns1 = [coord1[0], coord1[1]]\n  const ns2 = [coord1[0], coord2[1]]\n  const ew1 = [coord1[0], coord1[1]]\n  const ew2 = [coord2[0], coord1[1]]\n  const nsd = getDistance(ns1, ns2)\n  const ewd = getDistance(ew1, ew2)\n  const bearing = getBearing(coord1, coord2)\n  const ewc = bearing.filter(b => ['east', 'west'].includes(b)).join('')\n  const nsc = bearing.filter(b => ['north', 'south'].includes(b)).join('')\n  const ew = ewc ? `${ewc} ${getUnits(ewd)}` : ''\n  const ns = nsc ? `${nsc} ${getUnits(nsd)}` : ''\n  return `${ns + (ewc && nsc ? ', ' : '') + ew}`\n}\n\nconst getArea = (bounds) => {\n  const ew = getDistance([bounds[0], bounds[1]], [bounds[2], bounds[1]])\n  const ns = getDistance([bounds[0], bounds[1]], [bounds[0], bounds[3]])\n  return `${getUnits(ew)} by ${getUnits(ns)}`\n}\n\nconst getBoundsChange = (oCentre, originalZoom, isMaxZoom, isMinZoom, center, zoom) => {\n  const isSameCentre = JSON.stringify(oCentre) === JSON.stringify(center)\n  const isSameZoom = originalZoom === zoom\n  const isMove = oCentre && originalZoom && !(isSameCentre && isSameZoom)\n  const maxZoom = isMaxZoom ? ' (Maximum zoom reached)' : ''\n  const minZoom = isMinZoom ? ' (Minimum zoom reached)' : ''\n  let change = ''\n  if (isMove) {\n    if (!isSameCentre && !isSameZoom) {\n      change = `New area${maxZoom}${minZoom}. `\n    } else if (!isSameCentre) {\n      change = `Map move: ${getDirection(oCentre, center)}. `\n    } else {\n      const direction = zoom > originalZoom ? 'in' : 'out'\n      change = `Zoomed ${direction}${maxZoom}${minZoom}. `\n    }\n  }\n  return change\n}\n\nconst getSelectedStatus = (featuresInViewport, id) => {\n  const total = featuresInViewport.length\n  const index = featuresInViewport.findIndex(f => f.id === id)\n  return index >= 0 && `${total} feature${total !== 1 ? 's' : ''} in this area. ${featuresInViewport[index].name}. ${index + 1} of ${total} highlighted.`\n}\n\nconst getOffsetBoundingClientRect = (el) => {\n  const offsetParent = el.closest('[data-fm-main]') || document.body\n  return offsetParent.getBoundingClientRect()\n}\n\nconst isCirclePolygon = (geometry) => {\n  const coordinates = geometry?.coordinates?.[0]\n\n  // Expect exactly 64 points\n  if (coordinates?.length !== 65) {\n    return false\n  }\n\n  // Compute approximate centre using two opposite points\n  const [x1, y1] = coordinates[0]\n  const [x2, y2] = coordinates[32]\n  const center = [(x1 + x2) / 2, (y1 + y2) / 2]\n\n  let minDist = Infinity; let maxDist = -Infinity\n  let minEdge = Infinity; let maxEdge = -Infinity\n\n  for (let i = 0; i < 64; i++) {\n    const [xA, yA] = coordinates[i]\n    const [xB, yB] = coordinates[(i + 1) % 64]\n\n    // Distance from center\n    const dist = Math.hypot(xA - center[0], yA - center[1])\n    minDist = Math.min(minDist, dist)\n    maxDist = Math.max(maxDist, dist)\n\n    // Distance to next vertex (edge length)\n    const edgeDist = Math.hypot(xB - xA, yB - yA)\n    minEdge = Math.min(minEdge, edgeDist)\n    maxEdge = Math.max(maxEdge, edgeDist)\n  }\n\n  // Need to revist tolerance as they depend on size too\n  const WSG84_TOLERANCE = 0.3\n  const BNG_TOLERANCE = 0.3\n  const tolerance = detectCoordinateType(center) === 'WSG84' ? WSG84_TOLERANCE : BNG_TOLERANCE\n\n  return Math.abs(maxDist - minDist) < tolerance && Math.abs(maxEdge - minEdge) < tolerance\n}\n\n// const metresToImperial = (metres) => {\n//   const MILE = 1609.344\n//   const YARD = 0.9144\n//   const pluralize = (value, singular, plural) => `${value} ${value === 1 ? singular : plural}`\n//   if (metres >= MILE) {\n//     const miles = Math.floor(metres / MILE)\n//     const remainder = metres % MILE\n//     const yards = Math.floor(remainder / YARD)\n//     return `${pluralize(miles, 'mile', 'miles')}, ${pluralize(yards, 'yard', 'yards')}`\n//   } else {\n//     const yards = Math.floor(metres / YARD)\n//     return `${pluralize(yards, 'yard', 'yards')}`\n//   }\n// }\n\nconst metresToKilometres = (metres) => {\n  const KILOMETRE = 1000\n  // const pluralize = (value, singular, plural) => `${value} ${value === 1 ? singular : plural}`\n  if (metres >= KILOMETRE) {\n    const kilometres = metres / KILOMETRE\n    const roundedKm = Math.round(kilometres * 100) / 100\n    return `${roundedKm}km`\n  } else {\n    // return `${pluralize(Math.round(metres), 'metre', 'metres')}`\n    return `${Math.round(metres)}m`\n  }\n}\n\nexport const squareMetresToKm = (metres) => {\n  const SQ_KM = 1_000_000\n  if (metres >= SQ_KM) {\n    let km2 = (metres / SQ_KM).toFixed(2)\n    km2 = Number(km2).toLocaleString(undefined, { minimumFractionDigits: 0, maximumFractionDigits: 2 })\n    return `${km2}km²`\n  } else {\n    return `${Math.ceil(metres).toLocaleString()}m²`\n  }\n}\n\nexport const parseDimensions = (dimensions) => {\n  const { area, center, width, radius } = dimensions\n  const areaDisplay = area ? squareMetresToKm(area) : null\n  const centerDisplay = center ? center.map(c => Math.round(c)).join(', ') : null\n  const widthDisplay = width ? metresToKilometres(width) : null\n  const radiusDisplay = radius ? metresToKilometres(radius) : null\n  return { ...dimensions, areaDisplay, centerDisplay, widthDisplay, radiusDisplay }\n}\n\nexport const detectCoordinateType = (coords) => {\n  if (coords.length === 3) {\n    return 'BNG' // If a third value exists (zone), it's UTM\n  }\n  const [x, y] = coords\n  if (x >= -180 && x <= 180 && y >= -90 && y <= 90) {\n    return 'WSG84'\n  }\n  if (x > 180 && y > 90) {\n    return 'BNG'\n  }\n  return 'Unknown'\n}\n\nexport const getDistance = (coord1, coord2) => {\n  let distance\n  if (coord1[0] > 1000) {\n    const x = Math.abs(coord1[0] - coord2[0])\n    const y = Math.abs(coord1[1] - coord2[1])\n    const dist = Math.sqrt((Math.pow(x, 2)) + (Math.pow(y, 2)))\n    distance = dist\n  } else {\n    const p1 = new TurfPoint(coord1)\n    const p2 = new TurfPoint(coord2)\n    distance = turfDistance(p1, p2, { units: 'metres' })\n  }\n  return Math.round(distance)\n}\n\nexport const getFocusPadding = (el, scale) => {\n  let padding\n  if (el) {\n    const parent = getOffsetBoundingClientRect(el)\n    const box = el.getBoundingClientRect()\n    const boxX = box.x || box.left\n    const boxY = box.y || box.top\n    const parentX = parent.x || parent.left\n    const parentY = parent.y || parent.top\n    padding = {\n      top: (boxY - parentY) / scale,\n      left: (boxX - parentX) / scale,\n      right: (parent.width - box.width - (boxX - parentX)) / scale,\n      bottom: (parent.height - box.height - (boxY - parentY)) / scale\n    }\n  }\n  // Addresses repid browser resizing\n  const isValid = Object.values(padding).every(i => i >= 0)\n  return isValid && padding\n}\n\nexport const getFocusBounds = (el, scale) => {\n  let bounds\n  if (el) {\n    const parent = getOffsetBoundingClientRect(el)\n    const box = el.getBoundingClientRect()\n    const m = 10\n    bounds = [[\n      ((box.x || box.left) - (parent.x || parent.left) + m) / scale,\n      (((box.y || box.top) - (parent.y || parent.top)) + box.height - m) / scale\n    ], [\n      (box.width + ((box.x || box.left) - (parent.x || parent.left)) - m) / scale,\n      ((box.y || box.top) - (parent.y || parent.top) + m) / scale\n    ]]\n  }\n  return bounds\n}\n\nexport const getMapPixel = (el, scale) => {\n  const parent = getOffsetBoundingClientRect(el)\n  const box = el.getBoundingClientRect()\n  const left = ((box.x || box.left) - (parent.x || parent.left)) / scale\n  const top = ((box.y || box.top) - (parent.y || parent.top)) / scale\n  const offsetLeft = (box.width / 2) / scale\n  const offsetTop = (box.height / 2) / scale\n  const point = [left + offsetLeft, top + offsetTop]\n  return point\n}\n\nexport const getDescription = (place, bounds, focusBounds, features, isFocusArea) => {\n  const { featuresTotal, featuresFocusTotal, isFeaturesInMap, isPixelFeaturesAtPixel, isPixelFeaturesInMap } = features || {}\n  const activeFeaturesTotal = isFocusArea ? featuresFocusTotal : featuresTotal\n  const activeBounds = isFocusArea ? focusBounds : bounds\n  let text = ''\n  if (activeFeaturesTotal) {\n    text = `${activeFeaturesTotal} feature${activeFeaturesTotal === 1 ? '' : 's'} in this area. `\n  } else if (isPixelFeaturesAtPixel) {\n    text = 'Data visible at the center coordinate. '\n  } else if (isPixelFeaturesInMap) {\n    text = 'No data visible at the center coordinate. '\n  } else if (isFeaturesInMap) {\n    text = 'No feature data in this area. '\n  } else {\n    // Null\n  }\n\n  const display = isFocusArea ? 'Focus area ' : ''\n  const newPlace = place ? `Approximate centre ${place}. ` : ''\n  const newArea = `Covering ${getArea(activeBounds)}. `\n  const findPlace = place ? '' : 'Use ALT plus I to find closest place'\n\n  return `${display}${newPlace}${newArea}${text}${findPlace}`\n}\n\nexport const getStatus = ({ action, isBoundsChange, place, isFocusArea, prevZoom, prevCenter, center, bounds, focusBounds, zoom, isMaxZoom, isMinZoom, features, label, featureId }) => {\n  let status = null\n  if (label) {\n    status = label\n  } else if (featureId) {\n    const selected = getSelectedStatus(features?.featuresInViewport, featureId)\n    status = selected\n  } else if (action === 'GEOCODE') {\n    status = getDescription(place, bounds, focusBounds, features, isFocusArea)\n  } else if (action === 'DATA') {\n    status = 'Map change: new data. Use ALT plus I to get new details'\n  } else if (isBoundsChange) {\n    const direction = getBoundsChange(prevCenter, prevZoom, isMaxZoom, isMinZoom, center, zoom)\n    const description = getDescription(place, bounds, focusBounds, features, isFocusArea)\n    status = `${direction}${description}`\n  } else {\n    status = ''\n  }\n  return status\n}\n\nexport const getPlace = (isUserInitiated, action, oPlace, newPlace) => {\n  let place\n  if (!isUserInitiated) {\n    if (action === 'RESET') {\n      place = oPlace\n    } else {\n      place = newPlace\n    }\n  }\n  return place\n}\n\nexport const parseCentre = (value, srid) => {\n  const mb = defaults[`MAX_BOUNDS_${srid}`]\n  let isInRange\n  let coords = value?.split(',')\n  // Query string formed correctly\n  if (!(Array.isArray(coords) && coords?.length === 3)) {\n    return null\n  }\n  // Coords are numbers\n  coords = coords.slice(0, 2).map(x => parseFloat(x))\n  coords = !coords.some(isNaN) && coords\n  if (!coords) {\n    return null\n  }\n  // Coords are within the valid range\n  if (srid === '27700') {\n    isInRange = !!coords.filter(c => c >= 0).length\n  } else {\n    isInRange = (coords[0] > mb[0] && coords[0] < mb[2]) && (coords[1] > mb[1] && coords[1] < mb[3])\n  }\n  return isInRange ? coords : null\n}\n\nexport const parseZoom = value => {\n  const coords = value?.split(',')\n  if (!(Array.isArray(coords) && coords?.length === 3)) {\n    return null\n  }\n  const zoom = parseFloat(coords[2])\n  return !zoom.isNaN ? zoom : null\n}\n\nexport const getShortcutKey = (e, featuresViewport) => {\n  const number = e.code.slice(-1)\n  const hasFeature = featuresViewport.length >= number\n  const id = hasFeature ? featuresViewport[number - 1].id : ''\n  return id\n}\n\nexport const getFeatureShape = (feature) => {\n  if (isCirclePolygon(feature?.geometry)) {\n    return 'circle'\n  }\n  if (feature?.geometry?.type?.toLowerCase() === 'polygon') {\n    const coords = feature.geometry?.coordinates\n    const flatCoords = (coords && Array.from(new Set(coords.flat(2)))) || null\n    return flatCoords?.length === 4 ? 'square' : 'polygon'\n  }\n  return null\n}\n\nexport const spatialNavigate = (direction, start, pixels) => {\n  const quadrant = pixels.filter(p => {\n    const offsetX = Math.abs(p[0] - start[0])\n    const offsetY = Math.abs(p[1] - start[1])\n    let isQuadrant = false\n    if (direction === 'up') {\n      isQuadrant = p[1] <= start[1] && offsetY >= offsetX\n    } else if (direction === 'down') {\n      isQuadrant = p[1] > start[1] && offsetY >= offsetX\n    } else if (direction === 'left') {\n      isQuadrant = p[0] <= start[0] && offsetY < offsetX\n    } else {\n      isQuadrant = p[0] > start[0] && offsetY < offsetX\n    }\n    return isQuadrant && (JSON.stringify(p) !== JSON.stringify(start))\n  })\n  if (!quadrant.length) {\n    quadrant.push(start)\n  }\n  const pythagorean = (a, b) => Math.sqrt(Math.pow(a, 2) + Math.pow(b, 2))\n  const distances = quadrant.map(p => pythagorean(Math.abs(start[0] - p[0]), Math.abs(start[1] - p[1])))\n  const closest = quadrant[distances.indexOf(Math.min(...distances))]\n  return pixels.findIndex(i => JSON.stringify(i) === JSON.stringify(closest))\n}\n\nexport const getScale = (size) => {\n  return { small: 1, medium: 1.5, large: 2 }[size] || 1\n}\n\nexport const getPoint = (el, e, scale) => {\n  const { left, top } = el.getBoundingClientRect()\n  const { clientX, clientY } = e.nativeEvent\n  const x = clientX - left\n  const y = clientY - top\n  return [x / scale, y / scale]\n}\n\nexport const getStyle = (styles = []) => {\n  const validStyles = styles.filter(s => defaults.STYLES.includes(s.name))\n  const style = window.localStorage.getItem('style')\n  return validStyles.find(s => s.name === style) || validStyles.find(s => s.name === 'default')\n}\n","// index.js\nimport { feature, point, lineString, isObject } from \"@turf/helpers\";\nfunction coordEach(geojson, callback, excludeWrapCoord) {\n  if (geojson === null) return;\n  var j, k, l, geometry, stopG, coords, geometryMaybeCollection, wrapShrink = 0, coordIndex = 0, isGeometryCollection, type = geojson.type, isFeatureCollection = type === \"FeatureCollection\", isFeature = type === \"Feature\", stop = isFeatureCollection ? geojson.features.length : 1;\n  for (var featureIndex = 0; featureIndex < stop; featureIndex++) {\n    geometryMaybeCollection = isFeatureCollection ? geojson.features[featureIndex].geometry : isFeature ? geojson.geometry : geojson;\n    isGeometryCollection = geometryMaybeCollection ? geometryMaybeCollection.type === \"GeometryCollection\" : false;\n    stopG = isGeometryCollection ? geometryMaybeCollection.geometries.length : 1;\n    for (var geomIndex = 0; geomIndex < stopG; geomIndex++) {\n      var multiFeatureIndex = 0;\n      var geometryIndex = 0;\n      geometry = isGeometryCollection ? geometryMaybeCollection.geometries[geomIndex] : geometryMaybeCollection;\n      if (geometry === null) continue;\n      coords = geometry.coordinates;\n      var geomType = geometry.type;\n      wrapShrink = excludeWrapCoord && (geomType === \"Polygon\" || geomType === \"MultiPolygon\") ? 1 : 0;\n      switch (geomType) {\n        case null:\n          break;\n        case \"Point\":\n          if (callback(\n            coords,\n            coordIndex,\n            featureIndex,\n            multiFeatureIndex,\n            geometryIndex\n          ) === false)\n            return false;\n          coordIndex++;\n          multiFeatureIndex++;\n          break;\n        case \"LineString\":\n        case \"MultiPoint\":\n          for (j = 0; j < coords.length; j++) {\n            if (callback(\n              coords[j],\n              coordIndex,\n              featureIndex,\n              multiFeatureIndex,\n              geometryIndex\n            ) === false)\n              return false;\n            coordIndex++;\n            if (geomType === \"MultiPoint\") multiFeatureIndex++;\n          }\n          if (geomType === \"LineString\") multiFeatureIndex++;\n          break;\n        case \"Polygon\":\n        case \"MultiLineString\":\n          for (j = 0; j < coords.length; j++) {\n            for (k = 0; k < coords[j].length - wrapShrink; k++) {\n              if (callback(\n                coords[j][k],\n                coordIndex,\n                featureIndex,\n                multiFeatureIndex,\n                geometryIndex\n              ) === false)\n                return false;\n              coordIndex++;\n            }\n            if (geomType === \"MultiLineString\") multiFeatureIndex++;\n            if (geomType === \"Polygon\") geometryIndex++;\n          }\n          if (geomType === \"Polygon\") multiFeatureIndex++;\n          break;\n        case \"MultiPolygon\":\n          for (j = 0; j < coords.length; j++) {\n            geometryIndex = 0;\n            for (k = 0; k < coords[j].length; k++) {\n              for (l = 0; l < coords[j][k].length - wrapShrink; l++) {\n                if (callback(\n                  coords[j][k][l],\n                  coordIndex,\n                  featureIndex,\n                  multiFeatureIndex,\n                  geometryIndex\n                ) === false)\n                  return false;\n                coordIndex++;\n              }\n              geometryIndex++;\n            }\n            multiFeatureIndex++;\n          }\n          break;\n        case \"GeometryCollection\":\n          for (j = 0; j < geometry.geometries.length; j++)\n            if (coordEach(geometry.geometries[j], callback, excludeWrapCoord) === false)\n              return false;\n          break;\n        default:\n          throw new Error(\"Unknown Geometry Type\");\n      }\n    }\n  }\n}\nfunction coordReduce(geojson, callback, initialValue, excludeWrapCoord) {\n  var previousValue = initialValue;\n  coordEach(\n    geojson,\n    function(currentCoord, coordIndex, featureIndex, multiFeatureIndex, geometryIndex) {\n      if (coordIndex === 0 && initialValue === void 0)\n        previousValue = currentCoord;\n      else\n        previousValue = callback(\n          previousValue,\n          currentCoord,\n          coordIndex,\n          featureIndex,\n          multiFeatureIndex,\n          geometryIndex\n        );\n    },\n    excludeWrapCoord\n  );\n  return previousValue;\n}\nfunction propEach(geojson, callback) {\n  var i;\n  switch (geojson.type) {\n    case \"FeatureCollection\":\n      for (i = 0; i < geojson.features.length; i++) {\n        if (callback(geojson.features[i].properties, i) === false) break;\n      }\n      break;\n    case \"Feature\":\n      callback(geojson.properties, 0);\n      break;\n  }\n}\nfunction propReduce(geojson, callback, initialValue) {\n  var previousValue = initialValue;\n  propEach(geojson, function(currentProperties, featureIndex) {\n    if (featureIndex === 0 && initialValue === void 0)\n      previousValue = currentProperties;\n    else\n      previousValue = callback(previousValue, currentProperties, featureIndex);\n  });\n  return previousValue;\n}\nfunction featureEach(geojson, callback) {\n  if (geojson.type === \"Feature\") {\n    callback(geojson, 0);\n  } else if (geojson.type === \"FeatureCollection\") {\n    for (var i = 0; i < geojson.features.length; i++) {\n      if (callback(geojson.features[i], i) === false) break;\n    }\n  }\n}\nfunction featureReduce(geojson, callback, initialValue) {\n  var previousValue = initialValue;\n  featureEach(geojson, function(currentFeature, featureIndex) {\n    if (featureIndex === 0 && initialValue === void 0)\n      previousValue = currentFeature;\n    else previousValue = callback(previousValue, currentFeature, featureIndex);\n  });\n  return previousValue;\n}\nfunction coordAll(geojson) {\n  var coords = [];\n  coordEach(geojson, function(coord) {\n    coords.push(coord);\n  });\n  return coords;\n}\nfunction geomEach(geojson, callback) {\n  var i, j, g, geometry, stopG, geometryMaybeCollection, isGeometryCollection, featureProperties, featureBBox, featureId, featureIndex = 0, isFeatureCollection = geojson.type === \"FeatureCollection\", isFeature = geojson.type === \"Feature\", stop = isFeatureCollection ? geojson.features.length : 1;\n  for (i = 0; i < stop; i++) {\n    geometryMaybeCollection = isFeatureCollection ? geojson.features[i].geometry : isFeature ? geojson.geometry : geojson;\n    featureProperties = isFeatureCollection ? geojson.features[i].properties : isFeature ? geojson.properties : {};\n    featureBBox = isFeatureCollection ? geojson.features[i].bbox : isFeature ? geojson.bbox : void 0;\n    featureId = isFeatureCollection ? geojson.features[i].id : isFeature ? geojson.id : void 0;\n    isGeometryCollection = geometryMaybeCollection ? geometryMaybeCollection.type === \"GeometryCollection\" : false;\n    stopG = isGeometryCollection ? geometryMaybeCollection.geometries.length : 1;\n    for (g = 0; g < stopG; g++) {\n      geometry = isGeometryCollection ? geometryMaybeCollection.geometries[g] : geometryMaybeCollection;\n      if (geometry === null) {\n        if (callback(\n          null,\n          featureIndex,\n          featureProperties,\n          featureBBox,\n          featureId\n        ) === false)\n          return false;\n        continue;\n      }\n      switch (geometry.type) {\n        case \"Point\":\n        case \"LineString\":\n        case \"MultiPoint\":\n        case \"Polygon\":\n        case \"MultiLineString\":\n        case \"MultiPolygon\": {\n          if (callback(\n            geometry,\n            featureIndex,\n            featureProperties,\n            featureBBox,\n            featureId\n          ) === false)\n            return false;\n          break;\n        }\n        case \"GeometryCollection\": {\n          for (j = 0; j < geometry.geometries.length; j++) {\n            if (callback(\n              geometry.geometries[j],\n              featureIndex,\n              featureProperties,\n              featureBBox,\n              featureId\n            ) === false)\n              return false;\n          }\n          break;\n        }\n        default:\n          throw new Error(\"Unknown Geometry Type\");\n      }\n    }\n    featureIndex++;\n  }\n}\nfunction geomReduce(geojson, callback, initialValue) {\n  var previousValue = initialValue;\n  geomEach(\n    geojson,\n    function(currentGeometry, featureIndex, featureProperties, featureBBox, featureId) {\n      if (featureIndex === 0 && initialValue === void 0)\n        previousValue = currentGeometry;\n      else\n        previousValue = callback(\n          previousValue,\n          currentGeometry,\n          featureIndex,\n          featureProperties,\n          featureBBox,\n          featureId\n        );\n    }\n  );\n  return previousValue;\n}\nfunction flattenEach(geojson, callback) {\n  geomEach(geojson, function(geometry, featureIndex, properties, bbox, id) {\n    var type = geometry === null ? null : geometry.type;\n    switch (type) {\n      case null:\n      case \"Point\":\n      case \"LineString\":\n      case \"Polygon\":\n        if (callback(\n          feature(geometry, properties, { bbox, id }),\n          featureIndex,\n          0\n        ) === false)\n          return false;\n        return;\n    }\n    var geomType;\n    switch (type) {\n      case \"MultiPoint\":\n        geomType = \"Point\";\n        break;\n      case \"MultiLineString\":\n        geomType = \"LineString\";\n        break;\n      case \"MultiPolygon\":\n        geomType = \"Polygon\";\n        break;\n    }\n    for (var multiFeatureIndex = 0; multiFeatureIndex < geometry.coordinates.length; multiFeatureIndex++) {\n      var coordinate = geometry.coordinates[multiFeatureIndex];\n      var geom = {\n        type: geomType,\n        coordinates: coordinate\n      };\n      if (callback(feature(geom, properties), featureIndex, multiFeatureIndex) === false)\n        return false;\n    }\n  });\n}\nfunction flattenReduce(geojson, callback, initialValue) {\n  var previousValue = initialValue;\n  flattenEach(\n    geojson,\n    function(currentFeature, featureIndex, multiFeatureIndex) {\n      if (featureIndex === 0 && multiFeatureIndex === 0 && initialValue === void 0)\n        previousValue = currentFeature;\n      else\n        previousValue = callback(\n          previousValue,\n          currentFeature,\n          featureIndex,\n          multiFeatureIndex\n        );\n    }\n  );\n  return previousValue;\n}\nfunction segmentEach(geojson, callback) {\n  flattenEach(geojson, function(feature2, featureIndex, multiFeatureIndex) {\n    var segmentIndex = 0;\n    if (!feature2.geometry) return;\n    var type = feature2.geometry.type;\n    if (type === \"Point\" || type === \"MultiPoint\") return;\n    var previousCoords;\n    var previousFeatureIndex = 0;\n    var previousMultiIndex = 0;\n    var prevGeomIndex = 0;\n    if (coordEach(\n      feature2,\n      function(currentCoord, coordIndex, featureIndexCoord, multiPartIndexCoord, geometryIndex) {\n        if (previousCoords === void 0 || featureIndex > previousFeatureIndex || multiPartIndexCoord > previousMultiIndex || geometryIndex > prevGeomIndex) {\n          previousCoords = currentCoord;\n          previousFeatureIndex = featureIndex;\n          previousMultiIndex = multiPartIndexCoord;\n          prevGeomIndex = geometryIndex;\n          segmentIndex = 0;\n          return;\n        }\n        var currentSegment = lineString(\n          [previousCoords, currentCoord],\n          feature2.properties\n        );\n        if (callback(\n          currentSegment,\n          featureIndex,\n          multiFeatureIndex,\n          geometryIndex,\n          segmentIndex\n        ) === false)\n          return false;\n        segmentIndex++;\n        previousCoords = currentCoord;\n      }\n    ) === false)\n      return false;\n  });\n}\nfunction segmentReduce(geojson, callback, initialValue) {\n  var previousValue = initialValue;\n  var started = false;\n  segmentEach(\n    geojson,\n    function(currentSegment, featureIndex, multiFeatureIndex, geometryIndex, segmentIndex) {\n      if (started === false && initialValue === void 0)\n        previousValue = currentSegment;\n      else\n        previousValue = callback(\n          previousValue,\n          currentSegment,\n          featureIndex,\n          multiFeatureIndex,\n          geometryIndex,\n          segmentIndex\n        );\n      started = true;\n    }\n  );\n  return previousValue;\n}\nfunction lineEach(geojson, callback) {\n  if (!geojson) throw new Error(\"geojson is required\");\n  flattenEach(geojson, function(feature2, featureIndex, multiFeatureIndex) {\n    if (feature2.geometry === null) return;\n    var type = feature2.geometry.type;\n    var coords = feature2.geometry.coordinates;\n    switch (type) {\n      case \"LineString\":\n        if (callback(feature2, featureIndex, multiFeatureIndex, 0, 0) === false)\n          return false;\n        break;\n      case \"Polygon\":\n        for (var geometryIndex = 0; geometryIndex < coords.length; geometryIndex++) {\n          if (callback(\n            lineString(coords[geometryIndex], feature2.properties),\n            featureIndex,\n            multiFeatureIndex,\n            geometryIndex\n          ) === false)\n            return false;\n        }\n        break;\n    }\n  });\n}\nfunction lineReduce(geojson, callback, initialValue) {\n  var previousValue = initialValue;\n  lineEach(\n    geojson,\n    function(currentLine, featureIndex, multiFeatureIndex, geometryIndex) {\n      if (featureIndex === 0 && initialValue === void 0)\n        previousValue = currentLine;\n      else\n        previousValue = callback(\n          previousValue,\n          currentLine,\n          featureIndex,\n          multiFeatureIndex,\n          geometryIndex\n        );\n    }\n  );\n  return previousValue;\n}\nfunction findSegment(geojson, options) {\n  options = options || {};\n  if (!isObject(options)) throw new Error(\"options is invalid\");\n  var featureIndex = options.featureIndex || 0;\n  var multiFeatureIndex = options.multiFeatureIndex || 0;\n  var geometryIndex = options.geometryIndex || 0;\n  var segmentIndex = options.segmentIndex || 0;\n  var properties = options.properties;\n  var geometry;\n  switch (geojson.type) {\n    case \"FeatureCollection\":\n      if (featureIndex < 0)\n        featureIndex = geojson.features.length + featureIndex;\n      properties = properties || geojson.features[featureIndex].properties;\n      geometry = geojson.features[featureIndex].geometry;\n      break;\n    case \"Feature\":\n      properties = properties || geojson.properties;\n      geometry = geojson.geometry;\n      break;\n    case \"Point\":\n    case \"MultiPoint\":\n      return null;\n    case \"LineString\":\n    case \"Polygon\":\n    case \"MultiLineString\":\n    case \"MultiPolygon\":\n      geometry = geojson;\n      break;\n    default:\n      throw new Error(\"geojson is invalid\");\n  }\n  if (geometry === null) return null;\n  var coords = geometry.coordinates;\n  switch (geometry.type) {\n    case \"Point\":\n    case \"MultiPoint\":\n      return null;\n    case \"LineString\":\n      if (segmentIndex < 0) segmentIndex = coords.length + segmentIndex - 1;\n      return lineString(\n        [coords[segmentIndex], coords[segmentIndex + 1]],\n        properties,\n        options\n      );\n    case \"Polygon\":\n      if (geometryIndex < 0) geometryIndex = coords.length + geometryIndex;\n      if (segmentIndex < 0)\n        segmentIndex = coords[geometryIndex].length + segmentIndex - 1;\n      return lineString(\n        [\n          coords[geometryIndex][segmentIndex],\n          coords[geometryIndex][segmentIndex + 1]\n        ],\n        properties,\n        options\n      );\n    case \"MultiLineString\":\n      if (multiFeatureIndex < 0)\n        multiFeatureIndex = coords.length + multiFeatureIndex;\n      if (segmentIndex < 0)\n        segmentIndex = coords[multiFeatureIndex].length + segmentIndex - 1;\n      return lineString(\n        [\n          coords[multiFeatureIndex][segmentIndex],\n          coords[multiFeatureIndex][segmentIndex + 1]\n        ],\n        properties,\n        options\n      );\n    case \"MultiPolygon\":\n      if (multiFeatureIndex < 0)\n        multiFeatureIndex = coords.length + multiFeatureIndex;\n      if (geometryIndex < 0)\n        geometryIndex = coords[multiFeatureIndex].length + geometryIndex;\n      if (segmentIndex < 0)\n        segmentIndex = coords[multiFeatureIndex][geometryIndex].length - segmentIndex - 1;\n      return lineString(\n        [\n          coords[multiFeatureIndex][geometryIndex][segmentIndex],\n          coords[multiFeatureIndex][geometryIndex][segmentIndex + 1]\n        ],\n        properties,\n        options\n      );\n  }\n  throw new Error(\"geojson is invalid\");\n}\nfunction findPoint(geojson, options) {\n  options = options || {};\n  if (!isObject(options)) throw new Error(\"options is invalid\");\n  var featureIndex = options.featureIndex || 0;\n  var multiFeatureIndex = options.multiFeatureIndex || 0;\n  var geometryIndex = options.geometryIndex || 0;\n  var coordIndex = options.coordIndex || 0;\n  var properties = options.properties;\n  var geometry;\n  switch (geojson.type) {\n    case \"FeatureCollection\":\n      if (featureIndex < 0)\n        featureIndex = geojson.features.length + featureIndex;\n      properties = properties || geojson.features[featureIndex].properties;\n      geometry = geojson.features[featureIndex].geometry;\n      break;\n    case \"Feature\":\n      properties = properties || geojson.properties;\n      geometry = geojson.geometry;\n      break;\n    case \"Point\":\n    case \"MultiPoint\":\n      return null;\n    case \"LineString\":\n    case \"Polygon\":\n    case \"MultiLineString\":\n    case \"MultiPolygon\":\n      geometry = geojson;\n      break;\n    default:\n      throw new Error(\"geojson is invalid\");\n  }\n  if (geometry === null) return null;\n  var coords = geometry.coordinates;\n  switch (geometry.type) {\n    case \"Point\":\n      return point(coords, properties, options);\n    case \"MultiPoint\":\n      if (multiFeatureIndex < 0)\n        multiFeatureIndex = coords.length + multiFeatureIndex;\n      return point(coords[multiFeatureIndex], properties, options);\n    case \"LineString\":\n      if (coordIndex < 0) coordIndex = coords.length + coordIndex;\n      return point(coords[coordIndex], properties, options);\n    case \"Polygon\":\n      if (geometryIndex < 0) geometryIndex = coords.length + geometryIndex;\n      if (coordIndex < 0)\n        coordIndex = coords[geometryIndex].length + coordIndex;\n      return point(coords[geometryIndex][coordIndex], properties, options);\n    case \"MultiLineString\":\n      if (multiFeatureIndex < 0)\n        multiFeatureIndex = coords.length + multiFeatureIndex;\n      if (coordIndex < 0)\n        coordIndex = coords[multiFeatureIndex].length + coordIndex;\n      return point(coords[multiFeatureIndex][coordIndex], properties, options);\n    case \"MultiPolygon\":\n      if (multiFeatureIndex < 0)\n        multiFeatureIndex = coords.length + multiFeatureIndex;\n      if (geometryIndex < 0)\n        geometryIndex = coords[multiFeatureIndex].length + geometryIndex;\n      if (coordIndex < 0)\n        coordIndex = coords[multiFeatureIndex][geometryIndex].length - coordIndex;\n      return point(\n        coords[multiFeatureIndex][geometryIndex][coordIndex],\n        properties,\n        options\n      );\n  }\n  throw new Error(\"geojson is invalid\");\n}\nexport {\n  coordAll,\n  coordEach,\n  coordReduce,\n  featureEach,\n  featureReduce,\n  findPoint,\n  findSegment,\n  flattenEach,\n  flattenReduce,\n  geomEach,\n  geomReduce,\n  lineEach,\n  lineReduce,\n  propEach,\n  propReduce,\n  segmentEach,\n  segmentReduce\n};\n//# sourceMappingURL=index.js.map"],"names":["getCoord","coord","Error","Array","isArray","type","geometry","coordinates","length","getCoords","coords","getGeom","geojson","debounce","fn","wait","timeoutId","_len","arguments","args","_key","window","clearTimeout","setTimeout","apply","defaults","PRECISION","ANIMATION","duration","curve","DELAY","THROTTLE","MAX_FEATURES","SHORTCUT_LABEL_OFFSET","css","MARKER_VISIBLE","earthRadius","factors","centimeters","centimetres","degrees","Math","PI","feet","inches","kilometers","kilometres","meters","metres","miles","millimeters","millimetres","nauticalmiles","radians","yards","feature","geom","properties","options","feat","id","bbox","point","isNumber","polygon","ring","j","lineString","featureCollection","features","fc","multiLineString","multiPolygon","radiansToLength","units","factor","lengthToRadians","distance","radiansToDegrees","degreesToRadians","num","isNaN","t","e","module","exports","Object","defineProperty","value","default","o","recursive","prototype","forEach","call","children","r","getComputedStyle","style","getPropertyValue","DOMParser","parseSVG","icon","fill","text","isDarkBasemap","undefined","scale","isSelected","includes","dom","parseFromString","svg","querySelector","classList","add","toggle","viewBox","getAttribute","width","parseInt","split","height","setAttribute","olFill","querySelectorAll","olStroke","n","bgFill","bgStroke","fgFill","fgStroke","body","innerHTML","from","to","coordinates1","coordinates2","dLat","dLon","lat1","lat2","a","pow","sin","cos","atan2","sqrt","TinyQueue","constructor","data","compare","b","this","i","_down","push","item","_up","pop","top","bottom","peek","pos","parent","current","halfLength","bestChild","right","Cell","x","y","h","d","inside","minDistSq","Infinity","len","min","getSegDistSq","pointToPolygonDist","max","SQRT2","px","py","dx","dy","polygonclip","points","result","edge","prev","prevInside","p","bitCode","intersect","code","clipPolygon","rings","outRings","clipped","_regeneratorRuntime","hasOwnProperty","Symbol","iterator","c","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","arg","l","f","s","GeneratorFunction","GeneratorFunctionPrototype","getPrototypeOf","v","values","g","defineIteratorMethods","_invoke","AsyncIterator","invoke","_typeof","resolve","__await","then","callInvokeWithMethodAndArg","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","return","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","reset","displayName","isGeneratorFunction","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","charAt","slice","stop","rval","handle","complete","finish","catch","delegateYield","asyncGeneratorStep","_toConsumableArray","_arrayLikeToArray","_arrayWithoutHoles","_iterableToArray","_unsupportedIterableToArray","_nonIterableSpread","toString","test","ownKeys","getOwnPropertySymbols","filter","getOwnPropertyDescriptor","_objectSpread","_defineProperty","getOwnPropertyDescriptors","defineProperties","toPrimitive","String","_toPrimitive","_toPropertyKey","getPaddedBounds","map","padding","getPadding","bounds","getBounds","sw","project","getWest","getSouth","ne","getEast","getNorth","left","paddedSW","unproject","paddedNE","lng","lat","flat","addFeatureProperties","_map$getCenter","getCenter","precision","debug","minX","minY","maxX","maxY","cellSize","cellQueue","bestCell","area","centroid","getCentroidCell","bboxCell","numProbes","potentiallyQueue","cell","console","log","round","ch","polylabel","p1","TurfPoint","p2","turfDistance","geometryType","combineFeatures","combined","group","find","parts","TurfPolygon","turfArea","largest","getViewport","toArray","focusBounds","bind","center","zoom","getZoom","parseFloat","toFixed","isMaxZoom","getMaxZoom","isMinZoom","getMinZoom","addMapHoverBehaviour","featureLayers","labelLayers","on","concat","queryRenderedFeatures","layers","isFeature","originalEvent","altKey","layer","isLabel","getCanvas","cursor","getDetail","_x","_getDetail","_callee","pixel","selectedLayers","viewport","label","selectedId","_context","getFeatures","getHighlightedLabel","getSelectedFeatureId","resultType","_next","_throw","_map$getStyle","_layers","_layers2","locationLayers","paddingBox","getFocusBounds","getStyle","_l$layout","layout","visibility","featuresAtPixel","lngLat","renderedFeaturesInViewport","featuresTotal","Set","renderedFeaturesInPadding","featuresFocusTotal","intersectingFocusFeatures","lines","line","codeB","lastCode","codeA","part","lineclip","poly","TurfBboxClip","TurfMultiPolygon","intersectFeatures","viewportPolygonFeatures","focusPolygonFeatures","featuresInViewport","featuresInFocus","sort","featureType","hasFeatureLayers","some","hasPixelLayers","items","isFeaturesInMap","isPixelFeaturesAtPixel","isPixelFeaturesInMap","toggleSelectedFeature","_step","_iterator","_n","F","_createForOfIteratorHelper","setLayoutProperty","setFilter","err","_map$getStyle2","_features$0$propertie","_features$","getLabel","getLabels","pixels","xS","yS","locationMarkerHTML","el","document","createElement","className","SYMBOL_PLACEMENT","TEXT_FIELD","amendLineSymbolLayers","addHighlightedLabelLayer","addSource","addLayer","source","paint","addShortcutMarkers","shortcutMarkers","Marker","modules","m","remove","key","offset","element","setLngLat","addTo","highlightLabel","_feature$layer$layout","moveLayer","getSource","setData","textScale","textField","sections","setPaintProperty","_map$getSource","addSelectedLayers","_loop","getLayer","removeLayer","loadSymbols","_this$symbols","symbols","all","fetch","responses","texts","loadImage","getName","path","abs","parsed","container","getCanvasContainer","insertAdjacentHTML","lastChild","computedStyleToInlineStyle","base64","btoa","outerHTML","img","reject","onload","hasImage","addImage","onerror","src","_asyncToGenerator","getResolution","getAttributions","currentZoom","activeAttributions","minZoom","minzoom","maxZoom","maxzoom","sources","attribution","handleLoad","_handleLoad","resolution","attributions","isLoaded","dispatchEvent","CustomEvent","detail","framework","handleStyleLoad","_handleStyleLoad","_callee2","_context2","baseLayers","handleIdle","_handleIdle","_callee3","_detail$features","offsetTop","offsetLeft","offsetWidth","offsetHeight","_paddingBox$parentNod","parentOffsetTop","parentOffsetLeft","_context3","parentNode","handleMoveStart","_handleMoveStart","_callee4","_context4","hideLabel","isUserInitiated","handleMove","handleStyleData","_this","target","handleDrawModeChange","action","edit_vertex","draw_vertex","mode","handleDrawVertexChange","numVertecies","handleError","_defineProperties","_wrapNativeSuper","Map","Function","indexOf","_isNativeFunction","has","get","set","Wrapper","_isNativeReflectConstruct","Reflect","construct","_setPrototypeOf","_construct","_getPrototypeOf","Boolean","valueOf","Framework","_EventTarget","_ref","capabilities","transformRequest","_classCallCheck","ReferenceError","_assertThisInitialized","_possibleConstructorReturn","_callSuper","srid","selectedCoordinate","_inherits","_this2","isLatest","addMap","promises","ResizeObserver","install","_this$map","_this3","maxBounds","size","callBack","_module$default","MaplibreMap","LngLatBounds","getScale","url","storeDefaults","MAX_BOUNDS_4326","fadeDuration","attributionControl","dragRotate","setPadding","getFocusPadding","fitBounds","animate","flyTo","touchZoomRotate","disableRotation","setPixelRatio","devicePixelRatio","canvas","removeAttribute","display","targetMarker","locationMarker","lastCallTime","throttleHandleMove","now","Date","debounceHandleIdle","panBy","zoomIn","zoomOut","_this$draw","_this$draw$setStyle","setStyle","diff","draw","isAnimate","easeTo","_this$map2","_this4","resize","linear","_zoom","_this5","Draw","hasData","isVisible","getElement","_queryFeature","_queryPoint","_x2","success","error","navigator","geolocation","getCurrentPosition","_ref2","position","longitude","latitude","_x3","enableHighAccuracy","addClassName","direction","_labels$index","_labels$index2","labels","_this$map$getCenter","index","spatialNavigate","EventTarget","total","polygonArea","calculateArea","ringArea","FACTOR","PI_OVER_180","coordsLength","lower","middle","upper","lowerX","middleY","turf_area_default","getUnits","RATIO","getOffsetBoundingClientRect","closest","getBoundingClientRect","metresToKilometres","roundedKm","squareMetresToKm","SQ_KM","km2","Number","toLocaleString","minimumFractionDigits","maximumFractionDigits","ceil","parseDimensions","dimensions","radius","areaDisplay","centerDisplay","join","widthDisplay","radiusDisplay","detectCoordinateType","_coords","_slicedToArray","getDistance","coord1","coord2","box","boxX","boxY","parentX","parentY","every","getMapPixel","getDescription","place","isFocusArea","activeFeaturesTotal","activeBounds","newPlace","newArea","ew","ns","getArea","findPlace","getStatus","isBoundsChange","prevZoom","prevCenter","featureId","status","findIndex","oCentre","originalZoom","isSameCentre","JSON","stringify","isSameZoom","change","ns1","ns2","ew1","ew2","nsd","ewd","bearing","getBearing","ewc","nsc","getDirection","getBoundsChange","description","getPlace","oPlace","parseCentre","_coords2","mb","parseZoom","getShortcutKey","featuresViewport","number","getFeatureShape","_feature$geometry","_geometry$coordinates","_coordinates$","x1","y1","_coordinates$2","minDist","maxDist","minEdge","maxEdge","_coordinates$i","xA","yA","_coordinates","xB","yB","dist","hypot","edgeDist","tolerance","isCirclePolygon","toLowerCase","_feature$geometry2","flatCoords","start","quadrant","offsetX","offsetY","distances","small","medium","large","getPoint","_el$getBoundingClient","_e$nativeEvent","nativeEvent","clientX","clientY","validStyles","STYLES","localStorage","getItem","geomEach","callback","stopG","geometryMaybeCollection","isGeometryCollection","featureProperties","featureBBox","featureIndex","isFeatureCollection","geometries","geomReduce","initialValue","previousValue","currentGeometry","flattenEach","geomType","multiFeatureIndex"],"sourceRoot":""}