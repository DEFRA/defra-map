{"version":3,"file":"flood-map-provider.js","mappings":"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","sources":["webpack://@defra/flood-map/./node_modules/tinyqueue/index.js","webpack://@defra/flood-map/./node_modules/polylabel/polylabel.js","webpack://@defra/flood-map/./node_modules/@turf/area/dist/esm/index.js","webpack://@defra/flood-map/./node_modules/@turf/meta/dist/esm/index.js","webpack://@defra/flood-map/./node_modules/@turf/bbox-clip/dist/esm/index.js","webpack://@defra/flood-map/./src/js/provider/os-maplibre/query.js","webpack://@defra/flood-map/./src/js/provider/os-maplibre/marker.js","webpack://@defra/flood-map/./src/js/provider/os-maplibre/symbols.js","webpack://@defra/flood-map/./src/js/provider/os-maplibre/events.js","webpack://@defra/flood-map/./src/js/provider/os-maplibre/provider.js","webpack://@defra/flood-map/./src/js/lib/throttle.js","webpack://@defra/flood-map/./src/js/provider/os-maplibre/constants.js","webpack://@defra/flood-map/./node_modules/@turf/invariant/dist/esm/index.js","webpack://@defra/flood-map/./src/js/lib/debounce.js","webpack://@defra/flood-map/./node_modules/@turf/helpers/dist/esm/index.js","webpack://@defra/flood-map/./node_modules/computed-style-to-inline-style/dist/index.js","webpack://@defra/flood-map/./src/js/lib/symbols.js","webpack://@defra/flood-map/./node_modules/@turf/distance/dist/esm/index.js","webpack://@defra/flood-map/./src/js/lib/viewport.js"],"sourcesContent":["\nexport default class TinyQueue {\n    constructor(data = [], compare = (a, b) => (a < b ? -1 : a > b ? 1 : 0)) {\n        this.data = data;\n        this.length = this.data.length;\n        this.compare = compare;\n\n        if (this.length > 0) {\n            for (let i = (this.length >> 1) - 1; i >= 0; i--) this._down(i);\n        }\n    }\n\n    push(item) {\n        this.data.push(item);\n        this._up(this.length++);\n    }\n\n    pop() {\n        if (this.length === 0) return undefined;\n\n        const top = this.data[0];\n        const bottom = this.data.pop();\n\n        if (--this.length > 0) {\n            this.data[0] = bottom;\n            this._down(0);\n        }\n\n        return top;\n    }\n\n    peek() {\n        return this.data[0];\n    }\n\n    _up(pos) {\n        const {data, compare} = this;\n        const item = data[pos];\n\n        while (pos > 0) {\n            const parent = (pos - 1) >> 1;\n            const current = data[parent];\n            if (compare(item, current) >= 0) break;\n            data[pos] = current;\n            pos = parent;\n        }\n\n        data[pos] = item;\n    }\n\n    _down(pos) {\n        const {data, compare} = this;\n        const halfLength = this.length >> 1;\n        const item = data[pos];\n\n        while (pos < halfLength) {\n            let bestChild = (pos << 1) + 1; // initially it is the left child\n            const right = bestChild + 1;\n\n            if (right < this.length && compare(data[right], data[bestChild]) < 0) {\n                bestChild = right;\n            }\n            if (compare(data[bestChild], item) >= 0) break;\n\n            data[pos] = data[bestChild];\n            pos = bestChild;\n        }\n\n        data[pos] = item;\n    }\n}\n","\nimport Queue from 'tinyqueue';\n\nexport default function polylabel(polygon, precision = 1.0, debug = false) {\n    // find the bounding box of the outer ring\n    let minX = Infinity;\n    let minY = Infinity;\n    let maxX = -Infinity;\n    let maxY = -Infinity;\n\n    for (const [x, y] of polygon[0]) {\n        if (x < minX) minX = x;\n        if (y < minY) minY = y;\n        if (x > maxX) maxX = x;\n        if (y > maxY) maxY = y;\n    }\n\n    const width = maxX - minX;\n    const height = maxY - minY;\n    const cellSize = Math.max(precision, Math.min(width, height));\n\n    if (cellSize === precision) {\n        const result = [minX, minY];\n        result.distance = 0;\n        return result;\n    }\n\n    // a priority queue of cells in order of their \"potential\" (max distance to polygon)\n    const cellQueue = new Queue([], (a, b) => b.max - a.max);\n\n    // take centroid as the first best guess\n    let bestCell = getCentroidCell(polygon);\n\n    // second guess: bounding box centroid\n    const bboxCell = new Cell(minX + width / 2, minY + height / 2, 0, polygon);\n    if (bboxCell.d > bestCell.d) bestCell = bboxCell;\n\n    let numProbes = 2;\n\n    function potentiallyQueue(x, y, h) {\n        const cell = new Cell(x, y, h, polygon);\n        numProbes++;\n        if (cell.max > bestCell.d + precision) cellQueue.push(cell);\n\n        // update the best cell if we found a better one\n        if (cell.d > bestCell.d) {\n            bestCell = cell;\n            if (debug) console.log(`found best ${Math.round(1e4 * cell.d) / 1e4} after ${numProbes} probes`);\n        }\n    }\n\n    // cover polygon with initial cells\n    let h = cellSize / 2;\n    for (let x = minX; x < maxX; x += cellSize) {\n        for (let y = minY; y < maxY; y += cellSize) {\n            potentiallyQueue(x + h, y + h, h);\n        }\n    }\n\n    while (cellQueue.length) {\n        // pick the most promising cell from the queue\n        const {max, x, y, h: ch} = cellQueue.pop();\n\n        // do not drill down further if there's no chance of a better solution\n        if (max - bestCell.d <= precision) break;\n\n        // split the cell into four cells\n        h = ch / 2;\n        potentiallyQueue(x - h, y - h, h);\n        potentiallyQueue(x + h, y - h, h);\n        potentiallyQueue(x - h, y + h, h);\n        potentiallyQueue(x + h, y + h, h);\n    }\n\n    if (debug) {\n        console.log(`num probes: ${numProbes}\\nbest distance: ${bestCell.d}`);\n    }\n\n    const result = [bestCell.x, bestCell.y];\n    result.distance = bestCell.d;\n    return result;\n}\n\nfunction Cell(x, y, h, polygon) {\n    this.x = x; // cell center x\n    this.y = y; // cell center y\n    this.h = h; // half the cell size\n    this.d = pointToPolygonDist(x, y, polygon); // distance from cell center to polygon\n    this.max = this.d + this.h * Math.SQRT2; // max distance to polygon within a cell\n}\n\n// signed distance from point to polygon outline (negative if point is outside)\nfunction pointToPolygonDist(x, y, polygon) {\n    let inside = false;\n    let minDistSq = Infinity;\n\n    for (const ring of polygon) {\n        for (let i = 0, len = ring.length, j = len - 1; i < len; j = i++) {\n            const a = ring[i];\n            const b = ring[j];\n\n            if ((a[1] > y !== b[1] > y) &&\n                (x < (b[0] - a[0]) * (y - a[1]) / (b[1] - a[1]) + a[0])) inside = !inside;\n\n            minDistSq = Math.min(minDistSq, getSegDistSq(x, y, a, b));\n        }\n    }\n\n    return minDistSq === 0 ? 0 : (inside ? 1 : -1) * Math.sqrt(minDistSq);\n}\n\n// get polygon centroid\nfunction getCentroidCell(polygon) {\n    let area = 0;\n    let x = 0;\n    let y = 0;\n    const points = polygon[0];\n\n    for (let i = 0, len = points.length, j = len - 1; i < len; j = i++) {\n        const a = points[i];\n        const b = points[j];\n        const f = a[0] * b[1] - b[0] * a[1];\n        x += (a[0] + b[0]) * f;\n        y += (a[1] + b[1]) * f;\n        area += f * 3;\n    }\n    const centroid = new Cell(x / area, y / area, 0, polygon);\n    if (area === 0 || centroid.d < 0) return new Cell(points[0][0], points[0][1], 0, polygon);\n    return centroid;\n}\n\n// get squared distance from a point to a segment\nfunction getSegDistSq(px, py, a, b) {\n    let x = a[0];\n    let y = a[1];\n    let dx = b[0] - x;\n    let dy = b[1] - y;\n\n    if (dx !== 0 || dy !== 0) {\n        const t = ((px - x) * dx + (py - y) * dy) / (dx * dx + dy * dy);\n\n        if (t > 1) {\n            x = b[0];\n            y = b[1];\n\n        } else if (t > 0) {\n            x += dx * t;\n            y += dy * t;\n        }\n    }\n\n    dx = px - x;\n    dy = py - y;\n\n    return dx * dx + dy * dy;\n}\n","// index.ts\nimport { earthRadius } from \"@turf/helpers\";\nimport { geomReduce } from \"@turf/meta\";\nfunction area(geojson) {\n  return geomReduce(\n    geojson,\n    (value, geom) => {\n      return value + calculateArea(geom);\n    },\n    0\n  );\n}\nfunction calculateArea(geom) {\n  let total = 0;\n  let i;\n  switch (geom.type) {\n    case \"Polygon\":\n      return polygonArea(geom.coordinates);\n    case \"MultiPolygon\":\n      for (i = 0; i < geom.coordinates.length; i++) {\n        total += polygonArea(geom.coordinates[i]);\n      }\n      return total;\n    case \"Point\":\n    case \"MultiPoint\":\n    case \"LineString\":\n    case \"MultiLineString\":\n      return 0;\n  }\n  return 0;\n}\nfunction polygonArea(coords) {\n  let total = 0;\n  if (coords && coords.length > 0) {\n    total += Math.abs(ringArea(coords[0]));\n    for (let i = 1; i < coords.length; i++) {\n      total -= Math.abs(ringArea(coords[i]));\n    }\n  }\n  return total;\n}\nvar FACTOR = earthRadius * earthRadius / 2;\nvar PI_OVER_180 = Math.PI / 180;\nfunction ringArea(coords) {\n  const coordsLength = coords.length - 1;\n  if (coordsLength <= 2) return 0;\n  let total = 0;\n  let i = 0;\n  while (i < coordsLength) {\n    const lower = coords[i];\n    const middle = coords[i + 1 === coordsLength ? 0 : i + 1];\n    const upper = coords[i + 2 >= coordsLength ? (i + 2) % coordsLength : i + 2];\n    const lowerX = lower[0] * PI_OVER_180;\n    const middleY = middle[1] * PI_OVER_180;\n    const upperX = upper[0] * PI_OVER_180;\n    total += (upperX - lowerX) * Math.sin(middleY);\n    i++;\n  }\n  return total * FACTOR;\n}\nvar turf_area_default = area;\nexport {\n  area,\n  turf_area_default as default\n};\n//# sourceMappingURL=index.js.map","// index.js\nimport { feature, point, lineString, isObject } from \"@turf/helpers\";\nfunction coordEach(geojson, callback, excludeWrapCoord) {\n  if (geojson === null) return;\n  var j, k, l, geometry, stopG, coords, geometryMaybeCollection, wrapShrink = 0, coordIndex = 0, isGeometryCollection, type = geojson.type, isFeatureCollection = type === \"FeatureCollection\", isFeature = type === \"Feature\", stop = isFeatureCollection ? geojson.features.length : 1;\n  for (var featureIndex = 0; featureIndex < stop; featureIndex++) {\n    geometryMaybeCollection = isFeatureCollection ? geojson.features[featureIndex].geometry : isFeature ? geojson.geometry : geojson;\n    isGeometryCollection = geometryMaybeCollection ? geometryMaybeCollection.type === \"GeometryCollection\" : false;\n    stopG = isGeometryCollection ? geometryMaybeCollection.geometries.length : 1;\n    for (var geomIndex = 0; geomIndex < stopG; geomIndex++) {\n      var multiFeatureIndex = 0;\n      var geometryIndex = 0;\n      geometry = isGeometryCollection ? geometryMaybeCollection.geometries[geomIndex] : geometryMaybeCollection;\n      if (geometry === null) continue;\n      coords = geometry.coordinates;\n      var geomType = geometry.type;\n      wrapShrink = excludeWrapCoord && (geomType === \"Polygon\" || geomType === \"MultiPolygon\") ? 1 : 0;\n      switch (geomType) {\n        case null:\n          break;\n        case \"Point\":\n          if (callback(\n            coords,\n            coordIndex,\n            featureIndex,\n            multiFeatureIndex,\n            geometryIndex\n          ) === false)\n            return false;\n          coordIndex++;\n          multiFeatureIndex++;\n          break;\n        case \"LineString\":\n        case \"MultiPoint\":\n          for (j = 0; j < coords.length; j++) {\n            if (callback(\n              coords[j],\n              coordIndex,\n              featureIndex,\n              multiFeatureIndex,\n              geometryIndex\n            ) === false)\n              return false;\n            coordIndex++;\n            if (geomType === \"MultiPoint\") multiFeatureIndex++;\n          }\n          if (geomType === \"LineString\") multiFeatureIndex++;\n          break;\n        case \"Polygon\":\n        case \"MultiLineString\":\n          for (j = 0; j < coords.length; j++) {\n            for (k = 0; k < coords[j].length - wrapShrink; k++) {\n              if (callback(\n                coords[j][k],\n                coordIndex,\n                featureIndex,\n                multiFeatureIndex,\n                geometryIndex\n              ) === false)\n                return false;\n              coordIndex++;\n            }\n            if (geomType === \"MultiLineString\") multiFeatureIndex++;\n            if (geomType === \"Polygon\") geometryIndex++;\n          }\n          if (geomType === \"Polygon\") multiFeatureIndex++;\n          break;\n        case \"MultiPolygon\":\n          for (j = 0; j < coords.length; j++) {\n            geometryIndex = 0;\n            for (k = 0; k < coords[j].length; k++) {\n              for (l = 0; l < coords[j][k].length - wrapShrink; l++) {\n                if (callback(\n                  coords[j][k][l],\n                  coordIndex,\n                  featureIndex,\n                  multiFeatureIndex,\n                  geometryIndex\n                ) === false)\n                  return false;\n                coordIndex++;\n              }\n              geometryIndex++;\n            }\n            multiFeatureIndex++;\n          }\n          break;\n        case \"GeometryCollection\":\n          for (j = 0; j < geometry.geometries.length; j++)\n            if (coordEach(geometry.geometries[j], callback, excludeWrapCoord) === false)\n              return false;\n          break;\n        default:\n          throw new Error(\"Unknown Geometry Type\");\n      }\n    }\n  }\n}\nfunction coordReduce(geojson, callback, initialValue, excludeWrapCoord) {\n  var previousValue = initialValue;\n  coordEach(\n    geojson,\n    function(currentCoord, coordIndex, featureIndex, multiFeatureIndex, geometryIndex) {\n      if (coordIndex === 0 && initialValue === void 0)\n        previousValue = currentCoord;\n      else\n        previousValue = callback(\n          previousValue,\n          currentCoord,\n          coordIndex,\n          featureIndex,\n          multiFeatureIndex,\n          geometryIndex\n        );\n    },\n    excludeWrapCoord\n  );\n  return previousValue;\n}\nfunction propEach(geojson, callback) {\n  var i;\n  switch (geojson.type) {\n    case \"FeatureCollection\":\n      for (i = 0; i < geojson.features.length; i++) {\n        if (callback(geojson.features[i].properties, i) === false) break;\n      }\n      break;\n    case \"Feature\":\n      callback(geojson.properties, 0);\n      break;\n  }\n}\nfunction propReduce(geojson, callback, initialValue) {\n  var previousValue = initialValue;\n  propEach(geojson, function(currentProperties, featureIndex) {\n    if (featureIndex === 0 && initialValue === void 0)\n      previousValue = currentProperties;\n    else\n      previousValue = callback(previousValue, currentProperties, featureIndex);\n  });\n  return previousValue;\n}\nfunction featureEach(geojson, callback) {\n  if (geojson.type === \"Feature\") {\n    callback(geojson, 0);\n  } else if (geojson.type === \"FeatureCollection\") {\n    for (var i = 0; i < geojson.features.length; i++) {\n      if (callback(geojson.features[i], i) === false) break;\n    }\n  }\n}\nfunction featureReduce(geojson, callback, initialValue) {\n  var previousValue = initialValue;\n  featureEach(geojson, function(currentFeature, featureIndex) {\n    if (featureIndex === 0 && initialValue === void 0)\n      previousValue = currentFeature;\n    else previousValue = callback(previousValue, currentFeature, featureIndex);\n  });\n  return previousValue;\n}\nfunction coordAll(geojson) {\n  var coords = [];\n  coordEach(geojson, function(coord) {\n    coords.push(coord);\n  });\n  return coords;\n}\nfunction geomEach(geojson, callback) {\n  var i, j, g, geometry, stopG, geometryMaybeCollection, isGeometryCollection, featureProperties, featureBBox, featureId, featureIndex = 0, isFeatureCollection = geojson.type === \"FeatureCollection\", isFeature = geojson.type === \"Feature\", stop = isFeatureCollection ? geojson.features.length : 1;\n  for (i = 0; i < stop; i++) {\n    geometryMaybeCollection = isFeatureCollection ? geojson.features[i].geometry : isFeature ? geojson.geometry : geojson;\n    featureProperties = isFeatureCollection ? geojson.features[i].properties : isFeature ? geojson.properties : {};\n    featureBBox = isFeatureCollection ? geojson.features[i].bbox : isFeature ? geojson.bbox : void 0;\n    featureId = isFeatureCollection ? geojson.features[i].id : isFeature ? geojson.id : void 0;\n    isGeometryCollection = geometryMaybeCollection ? geometryMaybeCollection.type === \"GeometryCollection\" : false;\n    stopG = isGeometryCollection ? geometryMaybeCollection.geometries.length : 1;\n    for (g = 0; g < stopG; g++) {\n      geometry = isGeometryCollection ? geometryMaybeCollection.geometries[g] : geometryMaybeCollection;\n      if (geometry === null) {\n        if (callback(\n          null,\n          featureIndex,\n          featureProperties,\n          featureBBox,\n          featureId\n        ) === false)\n          return false;\n        continue;\n      }\n      switch (geometry.type) {\n        case \"Point\":\n        case \"LineString\":\n        case \"MultiPoint\":\n        case \"Polygon\":\n        case \"MultiLineString\":\n        case \"MultiPolygon\": {\n          if (callback(\n            geometry,\n            featureIndex,\n            featureProperties,\n            featureBBox,\n            featureId\n          ) === false)\n            return false;\n          break;\n        }\n        case \"GeometryCollection\": {\n          for (j = 0; j < geometry.geometries.length; j++) {\n            if (callback(\n              geometry.geometries[j],\n              featureIndex,\n              featureProperties,\n              featureBBox,\n              featureId\n            ) === false)\n              return false;\n          }\n          break;\n        }\n        default:\n          throw new Error(\"Unknown Geometry Type\");\n      }\n    }\n    featureIndex++;\n  }\n}\nfunction geomReduce(geojson, callback, initialValue) {\n  var previousValue = initialValue;\n  geomEach(\n    geojson,\n    function(currentGeometry, featureIndex, featureProperties, featureBBox, featureId) {\n      if (featureIndex === 0 && initialValue === void 0)\n        previousValue = currentGeometry;\n      else\n        previousValue = callback(\n          previousValue,\n          currentGeometry,\n          featureIndex,\n          featureProperties,\n          featureBBox,\n          featureId\n        );\n    }\n  );\n  return previousValue;\n}\nfunction flattenEach(geojson, callback) {\n  geomEach(geojson, function(geometry, featureIndex, properties, bbox, id) {\n    var type = geometry === null ? null : geometry.type;\n    switch (type) {\n      case null:\n      case \"Point\":\n      case \"LineString\":\n      case \"Polygon\":\n        if (callback(\n          feature(geometry, properties, { bbox, id }),\n          featureIndex,\n          0\n        ) === false)\n          return false;\n        return;\n    }\n    var geomType;\n    switch (type) {\n      case \"MultiPoint\":\n        geomType = \"Point\";\n        break;\n      case \"MultiLineString\":\n        geomType = \"LineString\";\n        break;\n      case \"MultiPolygon\":\n        geomType = \"Polygon\";\n        break;\n    }\n    for (var multiFeatureIndex = 0; multiFeatureIndex < geometry.coordinates.length; multiFeatureIndex++) {\n      var coordinate = geometry.coordinates[multiFeatureIndex];\n      var geom = {\n        type: geomType,\n        coordinates: coordinate\n      };\n      if (callback(feature(geom, properties), featureIndex, multiFeatureIndex) === false)\n        return false;\n    }\n  });\n}\nfunction flattenReduce(geojson, callback, initialValue) {\n  var previousValue = initialValue;\n  flattenEach(\n    geojson,\n    function(currentFeature, featureIndex, multiFeatureIndex) {\n      if (featureIndex === 0 && multiFeatureIndex === 0 && initialValue === void 0)\n        previousValue = currentFeature;\n      else\n        previousValue = callback(\n          previousValue,\n          currentFeature,\n          featureIndex,\n          multiFeatureIndex\n        );\n    }\n  );\n  return previousValue;\n}\nfunction segmentEach(geojson, callback) {\n  flattenEach(geojson, function(feature2, featureIndex, multiFeatureIndex) {\n    var segmentIndex = 0;\n    if (!feature2.geometry) return;\n    var type = feature2.geometry.type;\n    if (type === \"Point\" || type === \"MultiPoint\") return;\n    var previousCoords;\n    var previousFeatureIndex = 0;\n    var previousMultiIndex = 0;\n    var prevGeomIndex = 0;\n    if (coordEach(\n      feature2,\n      function(currentCoord, coordIndex, featureIndexCoord, multiPartIndexCoord, geometryIndex) {\n        if (previousCoords === void 0 || featureIndex > previousFeatureIndex || multiPartIndexCoord > previousMultiIndex || geometryIndex > prevGeomIndex) {\n          previousCoords = currentCoord;\n          previousFeatureIndex = featureIndex;\n          previousMultiIndex = multiPartIndexCoord;\n          prevGeomIndex = geometryIndex;\n          segmentIndex = 0;\n          return;\n        }\n        var currentSegment = lineString(\n          [previousCoords, currentCoord],\n          feature2.properties\n        );\n        if (callback(\n          currentSegment,\n          featureIndex,\n          multiFeatureIndex,\n          geometryIndex,\n          segmentIndex\n        ) === false)\n          return false;\n        segmentIndex++;\n        previousCoords = currentCoord;\n      }\n    ) === false)\n      return false;\n  });\n}\nfunction segmentReduce(geojson, callback, initialValue) {\n  var previousValue = initialValue;\n  var started = false;\n  segmentEach(\n    geojson,\n    function(currentSegment, featureIndex, multiFeatureIndex, geometryIndex, segmentIndex) {\n      if (started === false && initialValue === void 0)\n        previousValue = currentSegment;\n      else\n        previousValue = callback(\n          previousValue,\n          currentSegment,\n          featureIndex,\n          multiFeatureIndex,\n          geometryIndex,\n          segmentIndex\n        );\n      started = true;\n    }\n  );\n  return previousValue;\n}\nfunction lineEach(geojson, callback) {\n  if (!geojson) throw new Error(\"geojson is required\");\n  flattenEach(geojson, function(feature2, featureIndex, multiFeatureIndex) {\n    if (feature2.geometry === null) return;\n    var type = feature2.geometry.type;\n    var coords = feature2.geometry.coordinates;\n    switch (type) {\n      case \"LineString\":\n        if (callback(feature2, featureIndex, multiFeatureIndex, 0, 0) === false)\n          return false;\n        break;\n      case \"Polygon\":\n        for (var geometryIndex = 0; geometryIndex < coords.length; geometryIndex++) {\n          if (callback(\n            lineString(coords[geometryIndex], feature2.properties),\n            featureIndex,\n            multiFeatureIndex,\n            geometryIndex\n          ) === false)\n            return false;\n        }\n        break;\n    }\n  });\n}\nfunction lineReduce(geojson, callback, initialValue) {\n  var previousValue = initialValue;\n  lineEach(\n    geojson,\n    function(currentLine, featureIndex, multiFeatureIndex, geometryIndex) {\n      if (featureIndex === 0 && initialValue === void 0)\n        previousValue = currentLine;\n      else\n        previousValue = callback(\n          previousValue,\n          currentLine,\n          featureIndex,\n          multiFeatureIndex,\n          geometryIndex\n        );\n    }\n  );\n  return previousValue;\n}\nfunction findSegment(geojson, options) {\n  options = options || {};\n  if (!isObject(options)) throw new Error(\"options is invalid\");\n  var featureIndex = options.featureIndex || 0;\n  var multiFeatureIndex = options.multiFeatureIndex || 0;\n  var geometryIndex = options.geometryIndex || 0;\n  var segmentIndex = options.segmentIndex || 0;\n  var properties = options.properties;\n  var geometry;\n  switch (geojson.type) {\n    case \"FeatureCollection\":\n      if (featureIndex < 0)\n        featureIndex = geojson.features.length + featureIndex;\n      properties = properties || geojson.features[featureIndex].properties;\n      geometry = geojson.features[featureIndex].geometry;\n      break;\n    case \"Feature\":\n      properties = properties || geojson.properties;\n      geometry = geojson.geometry;\n      break;\n    case \"Point\":\n    case \"MultiPoint\":\n      return null;\n    case \"LineString\":\n    case \"Polygon\":\n    case \"MultiLineString\":\n    case \"MultiPolygon\":\n      geometry = geojson;\n      break;\n    default:\n      throw new Error(\"geojson is invalid\");\n  }\n  if (geometry === null) return null;\n  var coords = geometry.coordinates;\n  switch (geometry.type) {\n    case \"Point\":\n    case \"MultiPoint\":\n      return null;\n    case \"LineString\":\n      if (segmentIndex < 0) segmentIndex = coords.length + segmentIndex - 1;\n      return lineString(\n        [coords[segmentIndex], coords[segmentIndex + 1]],\n        properties,\n        options\n      );\n    case \"Polygon\":\n      if (geometryIndex < 0) geometryIndex = coords.length + geometryIndex;\n      if (segmentIndex < 0)\n        segmentIndex = coords[geometryIndex].length + segmentIndex - 1;\n      return lineString(\n        [\n          coords[geometryIndex][segmentIndex],\n          coords[geometryIndex][segmentIndex + 1]\n        ],\n        properties,\n        options\n      );\n    case \"MultiLineString\":\n      if (multiFeatureIndex < 0)\n        multiFeatureIndex = coords.length + multiFeatureIndex;\n      if (segmentIndex < 0)\n        segmentIndex = coords[multiFeatureIndex].length + segmentIndex - 1;\n      return lineString(\n        [\n          coords[multiFeatureIndex][segmentIndex],\n          coords[multiFeatureIndex][segmentIndex + 1]\n        ],\n        properties,\n        options\n      );\n    case \"MultiPolygon\":\n      if (multiFeatureIndex < 0)\n        multiFeatureIndex = coords.length + multiFeatureIndex;\n      if (geometryIndex < 0)\n        geometryIndex = coords[multiFeatureIndex].length + geometryIndex;\n      if (segmentIndex < 0)\n        segmentIndex = coords[multiFeatureIndex][geometryIndex].length - segmentIndex - 1;\n      return lineString(\n        [\n          coords[multiFeatureIndex][geometryIndex][segmentIndex],\n          coords[multiFeatureIndex][geometryIndex][segmentIndex + 1]\n        ],\n        properties,\n        options\n      );\n  }\n  throw new Error(\"geojson is invalid\");\n}\nfunction findPoint(geojson, options) {\n  options = options || {};\n  if (!isObject(options)) throw new Error(\"options is invalid\");\n  var featureIndex = options.featureIndex || 0;\n  var multiFeatureIndex = options.multiFeatureIndex || 0;\n  var geometryIndex = options.geometryIndex || 0;\n  var coordIndex = options.coordIndex || 0;\n  var properties = options.properties;\n  var geometry;\n  switch (geojson.type) {\n    case \"FeatureCollection\":\n      if (featureIndex < 0)\n        featureIndex = geojson.features.length + featureIndex;\n      properties = properties || geojson.features[featureIndex].properties;\n      geometry = geojson.features[featureIndex].geometry;\n      break;\n    case \"Feature\":\n      properties = properties || geojson.properties;\n      geometry = geojson.geometry;\n      break;\n    case \"Point\":\n    case \"MultiPoint\":\n      return null;\n    case \"LineString\":\n    case \"Polygon\":\n    case \"MultiLineString\":\n    case \"MultiPolygon\":\n      geometry = geojson;\n      break;\n    default:\n      throw new Error(\"geojson is invalid\");\n  }\n  if (geometry === null) return null;\n  var coords = geometry.coordinates;\n  switch (geometry.type) {\n    case \"Point\":\n      return point(coords, properties, options);\n    case \"MultiPoint\":\n      if (multiFeatureIndex < 0)\n        multiFeatureIndex = coords.length + multiFeatureIndex;\n      return point(coords[multiFeatureIndex], properties, options);\n    case \"LineString\":\n      if (coordIndex < 0) coordIndex = coords.length + coordIndex;\n      return point(coords[coordIndex], properties, options);\n    case \"Polygon\":\n      if (geometryIndex < 0) geometryIndex = coords.length + geometryIndex;\n      if (coordIndex < 0)\n        coordIndex = coords[geometryIndex].length + coordIndex;\n      return point(coords[geometryIndex][coordIndex], properties, options);\n    case \"MultiLineString\":\n      if (multiFeatureIndex < 0)\n        multiFeatureIndex = coords.length + multiFeatureIndex;\n      if (coordIndex < 0)\n        coordIndex = coords[multiFeatureIndex].length + coordIndex;\n      return point(coords[multiFeatureIndex][coordIndex], properties, options);\n    case \"MultiPolygon\":\n      if (multiFeatureIndex < 0)\n        multiFeatureIndex = coords.length + multiFeatureIndex;\n      if (geometryIndex < 0)\n        geometryIndex = coords[multiFeatureIndex].length + geometryIndex;\n      if (coordIndex < 0)\n        coordIndex = coords[multiFeatureIndex][geometryIndex].length - coordIndex;\n      return point(\n        coords[multiFeatureIndex][geometryIndex][coordIndex],\n        properties,\n        options\n      );\n  }\n  throw new Error(\"geojson is invalid\");\n}\nexport {\n  coordAll,\n  coordEach,\n  coordReduce,\n  featureEach,\n  featureReduce,\n  findPoint,\n  findSegment,\n  flattenEach,\n  flattenReduce,\n  geomEach,\n  geomReduce,\n  lineEach,\n  lineReduce,\n  propEach,\n  propReduce,\n  segmentEach,\n  segmentReduce\n};\n//# sourceMappingURL=index.js.map","// index.ts\nimport {\n  lineString,\n  multiLineString,\n  multiPolygon,\n  polygon\n} from \"@turf/helpers\";\nimport { getGeom } from \"@turf/invariant\";\n\n// lib/lineclip.ts\nfunction lineclip(points, bbox, result) {\n  var len = points.length, codeA = bitCode(points[0], bbox), part = [], i, codeB, lastCode;\n  let a;\n  let b;\n  if (!result) result = [];\n  for (i = 1; i < len; i++) {\n    a = points[i - 1];\n    b = points[i];\n    codeB = lastCode = bitCode(b, bbox);\n    while (true) {\n      if (!(codeA | codeB)) {\n        part.push(a);\n        if (codeB !== lastCode) {\n          part.push(b);\n          if (i < len - 1) {\n            result.push(part);\n            part = [];\n          }\n        } else if (i === len - 1) {\n          part.push(b);\n        }\n        break;\n      } else if (codeA & codeB) {\n        break;\n      } else if (codeA) {\n        a = intersect(a, b, codeA, bbox);\n        codeA = bitCode(a, bbox);\n      } else {\n        b = intersect(a, b, codeB, bbox);\n        codeB = bitCode(b, bbox);\n      }\n    }\n    codeA = lastCode;\n  }\n  if (part.length) result.push(part);\n  return result;\n}\nfunction polygonclip(points, bbox) {\n  var result, edge, prev, prevInside, i, p, inside;\n  for (edge = 1; edge <= 8; edge *= 2) {\n    result = [];\n    prev = points[points.length - 1];\n    prevInside = !(bitCode(prev, bbox) & edge);\n    for (i = 0; i < points.length; i++) {\n      p = points[i];\n      inside = !(bitCode(p, bbox) & edge);\n      if (inside !== prevInside) result.push(intersect(prev, p, edge, bbox));\n      if (inside) result.push(p);\n      prev = p;\n      prevInside = inside;\n    }\n    points = result;\n    if (!points.length) break;\n  }\n  return result;\n}\nfunction intersect(a, b, edge, bbox) {\n  return edge & 8 ? [a[0] + (b[0] - a[0]) * (bbox[3] - a[1]) / (b[1] - a[1]), bbox[3]] : edge & 4 ? [a[0] + (b[0] - a[0]) * (bbox[1] - a[1]) / (b[1] - a[1]), bbox[1]] : edge & 2 ? [bbox[2], a[1] + (b[1] - a[1]) * (bbox[2] - a[0]) / (b[0] - a[0])] : edge & 1 ? [bbox[0], a[1] + (b[1] - a[1]) * (bbox[0] - a[0]) / (b[0] - a[0])] : null;\n}\nfunction bitCode(p, bbox) {\n  var code = 0;\n  if (p[0] < bbox[0]) code |= 1;\n  else if (p[0] > bbox[2]) code |= 2;\n  if (p[1] < bbox[1]) code |= 4;\n  else if (p[1] > bbox[3]) code |= 8;\n  return code;\n}\n\n// index.ts\nfunction bboxClip(feature, bbox) {\n  const geom = getGeom(feature);\n  const type = geom.type;\n  const properties = feature.type === \"Feature\" ? feature.properties : {};\n  let coords = geom.coordinates;\n  switch (type) {\n    case \"LineString\":\n    case \"MultiLineString\": {\n      const lines = [];\n      if (type === \"LineString\") {\n        coords = [coords];\n      }\n      coords.forEach((line) => {\n        lineclip(line, bbox, lines);\n      });\n      if (lines.length === 1) {\n        return lineString(lines[0], properties);\n      }\n      return multiLineString(lines, properties);\n    }\n    case \"Polygon\":\n      return polygon(clipPolygon(coords, bbox), properties);\n    case \"MultiPolygon\":\n      return multiPolygon(\n        coords.map((poly) => {\n          return clipPolygon(poly, bbox);\n        }),\n        properties\n      );\n    default:\n      throw new Error(\"geometry \" + type + \" not supported\");\n  }\n}\nfunction clipPolygon(rings, bbox) {\n  const outRings = [];\n  for (const ring of rings) {\n    const clipped = polygonclip(ring, bbox);\n    if (clipped.length > 0) {\n      if (clipped[0][0] !== clipped[clipped.length - 1][0] || clipped[0][1] !== clipped[clipped.length - 1][1]) {\n        clipped.push(clipped[0]);\n      }\n      if (clipped.length >= 4) {\n        outRings.push(clipped);\n      }\n    }\n  }\n  return outRings;\n}\nvar turf_bbox_clip_default = bboxClip;\nexport {\n  bboxClip,\n  turf_bbox_clip_default as default\n};\n//# sourceMappingURL=index.js.map","import polylabel from 'polylabel'\nimport { area as turfArea } from '@turf/area'\nimport { distance as turfDistance } from '@turf/distance'\nimport { point as TurfPoint, polygon as TurfPolygon, multiPolygon as TurfMultiPolygon } from '@turf/helpers'\nimport { bboxClip as TurfBboxClip } from '@turf/bbox-clip'\nimport { getFocusBounds } from '../../lib/viewport'\nimport { defaults } from './constants'\n\nfunction getPaddedBounds () {\n  const { map } = this\n  const padding = map.getPadding()\n  const bounds = map.getBounds()\n\n  // Get the pixel coordinates for the current bounds\n  const sw = map.project([bounds.getWest(), bounds.getSouth()])\n  const ne = map.project([bounds.getEast(), bounds.getNorth()])\n\n  // Adjust for padding\n  sw.x += padding.left\n  sw.y -= padding.bottom\n  ne.x -= padding.right\n  ne.y += padding.top\n\n  // Convert back to geographical coordinates\n  const paddedSW = map.unproject(sw)\n  const paddedNE = map.unproject(ne)\n\n  // Create new bounds\n  return [[paddedSW.lng, paddedSW.lat], [paddedNE.lng, paddedNE.lat]]\n}\n\nfunction addFeatureProperties (features) {\n  const { map } = this\n  return features.map(f => {\n    const { lng, lat } = map.getCenter()\n    const coord = f.geometry.type === 'Polygon' ? polylabel(f.geometry.coordinates, 0.00001) : f.geometry.coordinates\n    const p1 = new TurfPoint([coord[0], coord[1]])\n    const p2 = new TurfPoint([lng, lat])\n    const distance = turfDistance(p1, p2, { units: 'metres' })\n    return {\n      ...f.properties,\n      id: f.properties.id || f.id,\n      geometryType: f.geometry.type,\n      coord,\n      distance\n    }\n  })\n}\n\nfunction intersectFeatures (bounds, features) {\n  features = features.map(f => {\n    if (['Polygon', 'MultiPolygon'].includes(f.geometry.type)) {\n      const polygon = f.geometry.type === 'Polygon' ? new TurfPolygon(f.geometry.coordinates) : new TurfMultiPolygon(f.geometry.coordinates)\n      const clipped = TurfBboxClip(polygon, bounds)\n      // Remove empty rings\n      clipped.geometry.coordinates = clipped.geometry.coordinates.filter(c => c.length)\n      // const clippedGeometry = martinez.intersection(boundsPolygon.geometry.coordinates, f.geometry.coordinates)\n      f.geometry = clipped.geometry\n    }\n    return f\n  })\n  return features\n}\n\nfunction combineFeatures (features) {\n  const combined = []\n  features.forEach(f => {\n    const group = combined.find(c => c.length && ((f.id && f.id === c[0].id) || (f.properties.id && f.properties.id === c[0].properties.id)))\n    if (f.geometry.type === 'MultiPolygon') {\n      // Get largest single polygon, outer shape (excluding holes) and add area\n      const parts = f.geometry.coordinates.map(c => {\n        const polygon = new TurfPolygon([c[0]])\n        polygon.properties = { area: turfArea(polygon) }\n        return polygon\n      })\n      const largest = parts.find(p => p.properties.area === Math.max(...parts.map(b => b.properties.area)))\n      f.geometry = largest.geometry\n      f.properties.area = largest.properties.area\n    } else if (f.geometry.type === 'Polygon') {\n      // Get out shape (excluding holes) and add area\n      const polygon = new TurfPolygon([f.geometry.coordinates[0]])\n      f.properties.area = turfArea(polygon)\n      f.geometry = polygon.geometry\n    } else {\n      f.properties.area = 0\n    }\n    group?.push(f) || combined.push([f])\n  })\n  // Return largest single polygon\n  return combined.map(g => g.find(f => f.properties.area === Math.max(...g.map(b => b.properties.area))))\n}\n\nfunction getViewport () {\n  const { map } = this\n  let bounds = getPaddedBounds.bind(this)()\n  bounds = bounds.flat(1).map(n => parseFloat(n.toFixed(defaults.PRECISION)))\n  let center = map.getCenter()\n  let zoom = map.getZoom()\n  center = center.toArray().map(n => parseFloat(n.toFixed(defaults.PRECISION)))\n  zoom = parseFloat(zoom.toFixed(defaults.PRECISION))\n  const isMaxZoom = map.getZoom() >= map.getMaxZoom()\n  const isMinZoom = map.getZoom() <= map.getMinZoom()\n\n  return {\n    bounds,\n    center,\n    zoom,\n    isMaxZoom,\n    isMinZoom\n  }\n}\n\nexport function addMapHoverBehaviour () {\n  const { map, featureLayers, labelLayers } = this\n\n  // Toggle cursor style for features\n  map.on('mousemove', [...featureLayers, ...labelLayers], e => {\n    const features = map.queryRenderedFeatures(e.point, { layers: [...featureLayers, ...labelLayers] })\n    const isFeature = !e.originalEvent.altKey && features && !!features.find(f => featureLayers.includes(f.layer.id))\n    const isLabel = e.originalEvent.altKey && features && !!features.find(f => labelLayers.includes(f.layer.id))\n    map.getCanvas().style.cursor = isFeature || isLabel ? 'pointer' : ''\n  })\n\n  // Revert cursor on mouseout\n  map.on('mouseout', [...featureLayers, ...labelLayers], () => { map.getCanvas().style.cursor = '' })\n}\n\nexport async function getDetail (pixel) {\n  const { selectedLayers } = this\n  const viewport = getViewport.bind(this)()\n  const features = getFeatures.bind(this)(pixel)\n  const label = getHighlightedLabel.bind(this)()\n  const selectedId = getSelectedFeatureId.bind(this)(selectedLayers)\n\n  return {\n    ...viewport,\n    resultType: features.resultType,\n    coord: features.coord,\n    selectedId,\n    features,\n    label\n  }\n}\n\nexport function getFeatures (pixel) {\n  const { map, featureLayers, locationLayers, paddingBox, scale } = this\n  const bounds = getFocusBounds(paddingBox, scale)\n\n  // Get all visible feature and pixel layers\n  let layers = [...featureLayers, ...locationLayers]\n  layers = map.getStyle()?.layers.filter(l => layers.includes(l?.id) && l?.layout?.visibility !== 'none').map(l => l.id)\n\n  // Get all features at given pixel\n  let featuresAtPixel = map.queryRenderedFeatures(pixel, { layers })\n\n  featuresAtPixel = (featuresAtPixel.map(f => {\n    return {\n      ...f.properties,\n      id: f.properties.id || f.id,\n      name: f.properties.name,\n      layer: f.layer.id\n    }\n  }))\n\n  // Get all 'featureLayer' features in the viewport\n  const renderedFeaturesInViewport = map.queryRenderedFeatures(bounds, { layers: featureLayers })\n\n  // Get total 'featureLayer' features in viewport (May be more than 9)\n  const featuresTotal = Array.from(new Set(renderedFeaturesInViewport.map(f => f.properties.id || f.id))).length\n\n  // Get geometry that intersects bounds\n  const intersectingFeatures = intersectFeatures(getPaddedBounds.bind(this)().flat(1), renderedFeaturesInViewport)\n\n  // Split multi polygons and combine duplicate features\n  const polygonFeatures = featuresTotal <= defaults.MAX_FEATURES ? combineFeatures(intersectingFeatures) : []\n\n  // Add props and sort features\n  const featuresInViewport = addFeatureProperties.bind(this)(polygonFeatures).sort((a, b) => a.distance - b.distance)\n\n  // Get long lat of query\n  let lngLat\n  if (pixel) {\n    lngLat = map.unproject(pixel)\n    lngLat = [lngLat.lng, lngLat.lat]\n    lngLat = lngLat.map(c => Math.round(c * Math.pow(10, defaults.PRECISION)) / Math.pow(10, defaults.PRECISION))\n  }\n\n  // Set 'features' result type\n  const feature = featuresAtPixel.length ? featuresAtPixel[0] : null\n  const featureType = (featureLayers?.includes(feature?.layer) && 'feature') || (locationLayers?.includes(feature?.layer) && 'pixel')\n  const hasPixelLayers = layers?.some(l => locationLayers?.includes(l))\n  const resultType = featureType || (hasPixelLayers ? 'pixel' : null)\n\n  return {\n    resultType,\n    items: featuresAtPixel,\n    featuresTotal,\n    featuresInViewport,\n    isFeaturesInMap: !!layers?.length,\n    isPixelFeaturesAtPixel: locationLayers?.includes(feature?.layer),\n    isPixelFeaturesInMap: hasPixelLayers,\n    coord: lngLat\n  }\n}\n\nexport function toggleSelectedFeature (id) {\n  const { map, selectedLayers } = this\n  if (map?.getStyle()) {\n    for (const layer of selectedLayers) {\n      map.setLayoutProperty(layer, 'visibility', id ? 'visible' : 'none')\n      map.setFilter(layer, [\n        'any',\n        ['==', ['id'], id || ''],\n        ['==', ['get', 'id'], id || '']\n      ])\n    }\n  }\n}\n\nexport function getHighlightedLabel () {\n  const { map } = this\n  const features = map.queryRenderedFeatures({ layers: ['label'] })\n  let text\n  if (features?.length) {\n    const label = map.getStyle()?.layers.find(l => l.id === 'label')?.layout['text-field']\n    text = `${label} (${features[0].properties.layer})`\n  }\n  return text\n}\n\nexport function getSelectedFeatureId (selectedLayers) {\n  const { map } = this\n  const features = map.queryRenderedFeatures({ layers: selectedLayers })\n  return features.length ? (features[0].properties?.id || features[0]?.id) : null\n}\n\nexport function getLabel (pixel) {\n  const { map, labelLayers } = this\n  const feature = map.queryRenderedFeatures(pixel, { layers: labelLayers })[0]\n  return feature\n}\n\nexport function getLabels () {\n  const { map, paddingBox, scale } = this\n  const bounds = getFocusBounds(paddingBox, scale)\n  const features = map.queryRenderedFeatures(bounds, { layers: this.labelLayers })\n  const labels = features.map(f => {\n    let pixel = f.geometry.type === 'Point' && map.project(f.geometry.coordinates)\n    if (f.geometry.type !== 'Point') {\n      const coordinates = f.geometry.coordinates.flat(f.geometry.type === 'MultiLineString' ? 1 : 0)\n      const pixels = coordinates.map(c => map.project(c))\n      const xS = pixels.map(p => p.x)\n      const yS = pixels.map(p => p.y)\n      const centerX = ((Math.max(...xS) - Math.min(...xS)) / 2) + Math.min(...xS)\n      const centerY = ((Math.max(...yS) - Math.min(...yS)) / 2) + Math.min(...yS)\n      pixel = { x: centerX, y: centerY }\n    }\n    return {\n      feature: f,\n      pixel: [pixel.x, pixel.y]\n    }\n  })\n  return labels\n}\n","export const locationMarkerHTML = () => {\n  const el = document.createElement('div')\n  el.className = 'fm-c-marker fm-c-marker--location'\n  el.innerHTML = '<div class=\"fm-c-marker__inner\"><svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" fill=\"currentColor\"><circle cx=\"10\" cy=\"10\" r=\"8\" stroke=\"#fff\" stroke-width=\"3\"/></svg></div>'\n  return el\n}\n\nexport const targetMarkerHTML = () => {\n  const el = document.createElement('div')\n  el.className = 'fm-c-marker fm-c-marker--target'\n  el.innerHTML = `<div class=\"fm-c-marker__inner\">\n    <svg width=\"38\" height=\"38\" viewBox=\"0 0 38 38\" fill-rule=\"evenodd\" fill=\"currentColor\">\n      <path d=\"M5.035 20H1v-2h4.035C5.525 11.069 11.069 5.525 18 5.035V1h2v4.035c6.931.49 12.475 6.034 12.965 12.965H37v2h-4.035c-.49 6.931-6.034 12.475-12.965 12.965V37h-2v-4.035C11.069 32.475 5.525 26.931 5.035 20zM19 7A12.01 12.01 0 0 0 7 19a12.01 12.01 0 0 0 12 12 12.01 12.01 0 0 0 12-12A12.01 12.01 0 0 0 19 7zm0 10a2 2 0 1 1 0 4 2 2 0 1 1 0-4z\"/>\n      <path d=\"M5.035 20H1v-2h4.035a14.02 14.02 0 0 1 .246-1.8l1.96.399C7.083 17.375 7 18.178 7 19s.083 1.625.241 2.401l-1.96.399a14.02 14.02 0 0 1-.246-1.8zM20 5.035a14.02 14.02 0 0 1 1.8.246l-.399 1.96C20.625 7.083 19.822 7 19 7s-1.625.083-2.401.241l-.399-1.96a14.02 14.02 0 0 1 1.8-.246V1h2v4.035zm-2 27.93a14.02 14.02 0 0 1-1.8-.246l.399-1.96c.776.158 1.579.241 2.401.241s1.625-.083 2.401-.241l.399 1.96a14.02 14.02 0 0 1-1.8.246V37h-2v-4.035zM32.965 20a14.02 14.02 0 0 1-.246 1.8l-1.96-.399c.158-.776.241-1.579.241-2.401s-.083-1.625-.241-2.401l1.96-.399a14.02 14.02 0 0 1 .246 1.8H37v2h-4.035zM19 17a2 2 0 1 1 0 4 2 2 0 1 1 0-4zm3.8-9.385l.634-1.897a13.98 13.98 0 0 1 4.848 2.805l-1.327 1.496c-1.196-1.06-2.605-1.886-4.155-2.404zm5.181 3.43l1.496-1.327a13.98 13.98 0 0 1 2.805 4.848l-1.897.634c-.518-1.55-1.344-2.959-2.404-4.155zM30.385 22.8l1.897.634a13.98 13.98 0 0 1-2.805 4.848l-1.496-1.327c1.06-1.196 1.886-2.605 2.404-4.155zm-3.43 5.181l1.327 1.496a13.98 13.98 0 0 1-4.848 2.805l-.634-1.897c1.55-.518 2.959-1.344 4.155-2.404zM15.2 30.385l-.634 1.897a13.98 13.98 0 0 1-4.848-2.805l1.327-1.496c1.196 1.06 2.605 1.886 4.155 2.404zm-5.181-3.43l-1.496 1.327a13.98 13.98 0 0 1-2.805-4.848l1.897-.634c.518 1.55 1.344 2.959 2.404 4.155zM7.615 15.2l-1.897-.634a13.98 13.98 0 0 1 2.805-4.848l1.496 1.327c-1.06 1.196-1.886 2.605-2.404 4.155zm3.43-5.181L9.718 8.523a13.98 13.98 0 0 1 4.848-2.805l.634 1.897c-1.55.518-2.959 1.344-4.155 2.404z\"/>\n    </svg>\n  </div>`\n  return el\n}\n\nexport const shortcutMarkerHTML = (key) => {\n  const el = document.createElement('div')\n  el.className = 'fm-c-marker fm-c-marker--shortcut'\n  el.innerHTML = `<div class=\"fm-c-marker__inner\">${key}</div>`\n  return el\n}\n","import computedStyleToInlineStyle from 'computed-style-to-inline-style'\nimport { defaults } from './constants'\nimport { shortcutMarkerHTML } from './marker'\nimport { parseSVG } from '../../lib/symbols'\n\nconst SYMBOL_PLACEMENT = 'symbol-placement'\nconst TEXT_FIELD = 'text-field'\nconst SCALE_FACTOR_SMALL = 1.5\nconst SCALE_FACTOR_LARGE = 1.25\n\nexport function amendLineSymbolLayers () {\n  const { map } = this\n  const lineSymbolLayers = map.getStyle().layers.filter(l => l.layout && (SYMBOL_PLACEMENT in l.layout) && l.layout[SYMBOL_PLACEMENT] === 'line')\n  lineSymbolLayers.forEach(l => map.setLayoutProperty(l.id, SYMBOL_PLACEMENT, 'line-center'))\n}\n\nexport function addHighlightedLabelLayer () {\n  const { map } = this\n  const layers = map.getStyle().layers\n  this.labelLayers = layers.filter(l => l.id !== 'label' && l.layout ? l.layout[TEXT_FIELD] : null).map(l => l.id)\n  map.addSource('label', { type: 'geojson', data: { type: 'FeatureCollection', features: [] } })\n  map.addLayer({\n    id: 'label',\n    type: 'symbol',\n    source: 'label',\n    layout: {\n      'text-allow-overlap': true,\n      'text-ignore-placement': true\n    },\n    paint: {\n      'text-halo-width': 3,\n      'text-halo-blur': 1,\n      'text-opacity': 1\n    }\n  })\n}\n\nexport function addShortcutMarkers (features) {\n  const { map, shortcutMarkers } = this\n  const { Marker } = this.modules\n  shortcutMarkers.forEach(m => m.remove())\n  features.forEach((f, i) => {\n    const offset = f.geometryType === 'Point' ? [0, defaults.SHORTCUT_LABEL_OFFSET] : [0, 0]\n    shortcutMarkers.push(new Marker({ element: shortcutMarkerHTML(i + 1), offset }).setLngLat(f.coord).addTo(map))\n  })\n}\n\nexport function highlightLabel (feature) {\n  const { map, scale, style } = this\n\n  if (!map.style) {\n    return\n  }\n\n  if (feature) {\n    map.moveLayer('label')\n    map.getSource('label').setData({\n      type: 'Feature',\n      geometry: feature.geometry,\n      properties: {\n        ...feature.properties,\n        layer: feature.layer.id\n      }\n    })\n    // Clone layout properties\n    const textScale = scale === 1 ? SCALE_FACTOR_SMALL : SCALE_FACTOR_LARGE\n    const textField = feature.layer.layout[TEXT_FIELD]\n    map.setLayoutProperty('label', SYMBOL_PLACEMENT, feature.layer.layout[SYMBOL_PLACEMENT])\n    map.setLayoutProperty('label', TEXT_FIELD, textField.sections ? textField.sections[0].text : textField)\n    map.setLayoutProperty('label', 'text-font', feature.layer.layout['text-font'])\n    map.setLayoutProperty('label', 'text-letter-spacing', feature.layer.layout['text-letter-spacing'])\n    map.setLayoutProperty('label', 'text-size', feature.layer.layout['text-size'] * textScale)\n    map.setLayoutProperty('label', 'text-anchor', feature.layer.layout['text-anchor'])\n    map.setLayoutProperty('label', 'text-justify', feature.layer.layout['text-justify'])\n    map.setLayoutProperty('label', 'text-offset', feature.layer.layout['text-offset']?.map(o => o / textScale))\n    // Clone paint properties\n    map.setPaintProperty('label', 'text-color', (style === 'dark' ? '#ffffff' : '#000000'))\n    map.setPaintProperty('label', 'text-halo-color', (style === 'dark' ? '#000000' : '#ffffff'))\n  } else {\n    map?.getSource('label')?.setData({\n      type: 'FeatureCollection',\n      features: []\n    })\n  }\n}\n\nexport function addSelectedLayers (layers, selectedId, isDarkBasemap) {\n  const { map } = this\n  const selectedLayers = []\n  for (const layer of layers) {\n    layer.id = `${layer.id}-selected`\n    layer.filter = ['==', 'id', selectedId || '']\n    if (layer.type === 'symbol') {\n      layer.layout['icon-image'] = ['concat', layer.layout['icon-image'], '-selected']\n    }\n    if (layer.type === 'fill') {\n      layer.paint = { 'line-color': isDarkBasemap ? '#ffffff' : '#0b0c0c', 'line-width': 2 }\n      layer.type = 'line'\n    }\n    if (map.getLayer(layer.id)) {\n      map.removeLayer(layer.id)\n    }\n    selectedLayers.push(layer.id)\n    setTimeout(() => map.addLayer(layer), 0)\n  }\n  return selectedLayers\n}\n\nexport function loadSymbols () {\n  let fn\n  if (this.symbols?.length) {\n    const { map, symbols, style } = this\n    const isDarkBasemap = ['dark', 'aerial'].includes(style.name)\n\n    fn = Promise.all(symbols.map(u => fetch(u))).then(responses =>\n      Promise.all(responses.map(r => r.text()))\n    ).then(texts => Promise.all(texts.map((t, i) => loadImage(getName(symbols[i]), t, map, isDarkBasemap))\n      .concat(texts.map((t, i) => loadImage(`${getName(symbols[i])}-selected`, t, map, isDarkBasemap)))\n    ))\n  }\n  return fn\n}\n\nconst getName = path => {\n  const extNumChars = 4\n  return path.split('\\\\').pop().split('/').pop().slice(0, -Math.abs(extNumChars))\n}\n\nconst loadImage = (name, text, map, isDarkBasemap) => {\n  const parsed = parseSVG(name, null, text, isDarkBasemap, 2)\n  const container = map.getCanvasContainer()\n  container.insertAdjacentHTML('beforeend', parsed)\n  const el = container.lastChild\n  computedStyleToInlineStyle(el, { recursive: true, properties: ['stroke', 'fill'] })\n  const base64 = 'data:image/svg+xml;base64,' + btoa(container.lastChild.outerHTML)\n  const img = document.createElement('img')\n  el?.remove()\n  return new Promise((resolve, reject) => {\n    img.onload = () => {\n      try {\n        if (map?.hasImage(name)) {\n          return\n        }\n        map.addImage(name, img)\n        resolve(img)\n      } catch (err) {\n        console.log(err)\n      }\n    }\n    img.onerror = reject\n    img.src = base64\n  })\n}\n","import { getDetail, addMapHoverBehaviour } from './query'\nimport { loadSymbols, addHighlightedLabelLayer, amendLineSymbolLayers, addShortcutMarkers, addSelectedLayers } from './symbols'\n\nexport const getResolution = (map) => {\n  const center = map.getCenter()\n  const zoom = map.getZoom()\n  const lat = center.lat\n  const EARTH_CIRCUMFERENCE = 40075016.686\n  const TILE_SIZE = 512\n  const scale = Math.pow(2, zoom)\n  const resolution = (EARTH_CIRCUMFERENCE * Math.cos((lat * Math.PI) / 180)) / (scale * TILE_SIZE)\n  return resolution\n}\n\nexport const getAttributions = (map) => {\n  const style = map.getStyle()\n  if (!style) {\n    return []\n  }\n\n  const currentZoom = map.getZoom()\n  const activeAttributions = new Set()\n\n  // Check each layer for visibility at current zoom\n  style.layers.forEach(layer => {\n    // Skip layers without a source\n    if (!layer.source) return\n\n    // Check if layer is visible based on zoom and visibility property\n    const minZoom = layer.minzoom !== undefined ? layer.minzoom : 0\n    const maxZoom = layer.maxzoom !== undefined ? layer.maxzoom : 24\n    const isVisible = currentZoom >= minZoom && currentZoom < maxZoom && (!layer.layout || layer.layout.visibility !== 'none')\n\n    // If layer is visible, get attribution from its source\n    if (isVisible) {\n      const source = style.sources[layer.source]\n      if (source && source.attribution) {\n        activeAttributions.add(source.attribution)\n      }\n    }\n  })\n\n  return Array.from(activeAttributions)\n}\n\nexport async function handleLoad () {\n  const { map } = this\n  await loadSymbols.bind(this)()\n  this.isLoaded = true\n  const resolution = getResolution(map)\n  const zoom = map.getZoom()\n  const attributions = getAttributions(map)\n  this.dispatchEvent(new CustomEvent('load', {\n    detail: {\n      framework: { map },\n      resolution,\n      zoom,\n      attributions\n    }\n  }))\n}\n\nexport async function handleStyleLoad () {\n  const { map } = this\n  // Store ref to baselayers when a new style is loaded\n  this.baseLayers = map.getStyle().layers\n  // Amend symbol-placement prop so labels have a coordinate\n  amendLineSymbolLayers.bind(this)()\n  // Add highlighted label layer and source\n  addHighlightedLabelLayer.bind(this)()\n  // Change cursor type on feature hover\n  addMapHoverBehaviour.bind(this)(this.featureLayers, this.labelLayers)\n  if (this.isLoaded) {\n    await loadSymbols.bind(this)()\n    this.dispatchEvent(new CustomEvent('style', {\n      detail: {\n        type: 'style'\n      }\n    }))\n  }\n}\n\nexport async function handleIdle () {\n  if (this.map) {\n    const { map, paddingBox, selectedId, scale } = this\n    const { offsetTop, offsetLeft, offsetWidth, offsetHeight } = paddingBox\n    const { offsetTop: parentOffsetTop, offsetLeft: parentOffsetLeft } = paddingBox.parentNode\n    const pixel = [offsetLeft + parentOffsetLeft + (offsetWidth / 2), offsetTop + parentOffsetTop + (offsetHeight / 2)].map(c => c / scale)\n    const detail = await getDetail.bind(this)(selectedId ? null : pixel)\n    const attributions = getAttributions(map)\n    addShortcutMarkers.bind(this)(detail?.features?.featuresInViewport)\n    this.dispatchEvent(new CustomEvent('update', {\n      detail: {\n        ...detail,\n        attributions\n      }\n    }))\n  }\n}\n\nexport async function handleMoveStart (e) {\n  this.hideLabel()\n  this.dispatchEvent(new CustomEvent('movestart', {\n    detail: {\n      isUserInitiated: e.isUserInitiated || !!e.originalEvent\n    }\n  }))\n}\n\nexport function handleMove () {\n  const { map } = this\n  const isMaxZoom = map.getZoom() >= map.getMaxZoom()\n  const isMinZoom = map.getZoom() <= map.getMinZoom()\n  const zoom = map.getZoom()\n  const resolution = getResolution(map)\n  const attributions = getAttributions(map)\n\n  // Need to include maxBounds check as this can also constrain zoom\n  this.dispatchEvent(new CustomEvent('move', {\n    detail: {\n      isMaxZoom,\n      isMinZoom,\n      zoom,\n      resolution,\n      attributions\n    }\n  }))\n}\n\nexport function handleStyleData (e) {\n  if (this.baseLayers.length) {\n    const { map, style, selectedId } = this\n    const featureLayers = e.target.getStyle().layers.filter(l => this.featureLayers.includes(l.id))\n    const selectedLayers = map.getStyle().layers.filter(l => l.id.includes('selected'))\n    if (selectedLayers.length !== featureLayers.length) {\n      const isDarkBasemap = ['dark', 'aerial'].includes(style.name)\n      this.selectedLayers = addSelectedLayers.bind(this)(featureLayers, selectedId, isDarkBasemap)\n    }\n  }\n}\n\nexport function handleError (err) {\n  console.log(err)\n}\n","import { handleLoad, handleMoveStart, handleMove, handleIdle, handleStyleData, handleStyleLoad, handleError } from './events'\nimport { toggleSelectedFeature, getDetail, getLabels, getLabel } from './query'\nimport { locationMarkerHTML, targetMarkerHTML } from './marker'\nimport { highlightLabel } from './symbols'\nimport { getFocusPadding, spatialNavigate, getScale } from '../../lib/viewport'\nimport { debounce } from '../../lib/debounce'\nimport { throttle } from '../../lib/throttle'\nimport { defaults, css } from './constants'\nimport { capabilities } from '../../lib/capabilities.js'\nimport { defaults as storeDefaults } from '../../store/constants.js'\n\nclass Provider extends EventTarget {\n  constructor ({ transformRequest, symbols }) {\n    super()\n    this.srid = 4326\n    this.capabilities = {\n      ...capabilities.default,\n      hasDraw: true,\n      hasSize: !!window.globalThis\n    }\n    this.transformRequest = transformRequest\n    this.symbols = symbols\n    this.baseLayers = []\n    this.selectedId = ''\n    this.selectedCoordinate = null\n    this.isLoaded = false\n  }\n\n  init (options) {\n    if (this.capabilities.isLatest) {\n      import(/* webpackChunkName: \"maplibre\", webpackExports: [\"Map\", \"Marker\"] */ 'maplibre-gl').then(module => {\n        this.addMap(module, options)\n      })\n    } else {\n      Promise.all([\n        import(/* webpackChunkName: \"maplibre-legacy\", webpackExports: [\"Map\", \"Marker\"] */ 'maplibre-gl-legacy'),\n        import(/* webpackChunkName: \"maplibre-legacy\", webpackExports: [\"install\"] */ 'resize-observer'),\n        import(/* webpackChunkName: \"maplibre-legacy\" */ 'array-flat-polyfill')\n      ]).then(promises => {\n        if (!window.ResizeObserver) {\n          promises[1].install()\n        }\n        this.addMap(promises[0], options)\n      })\n    }\n  }\n\n  remove () {\n    this.map?.remove()\n    this.map = null\n  }\n\n  addMap (module, options) {\n    const { container, paddingBox, bounds, maxBounds, center, zoom, minZoom, maxZoom, style, size, featureLayers, locationLayers, callBack } = options\n    const { Map: MaplibreMap, Marker } = module.default\n    const scale = getScale(size)\n\n    const map = new MaplibreMap({\n      ...options,\n      container,\n      style: style?.url,\n      maxBounds: maxBounds || storeDefaults.MAX_BOUNDS_4326,\n      bounds,\n      center,\n      zoom,\n      minZoom,\n      maxZoom,\n      fadeDuration: 0,\n      attributionControl: false,\n      dragRotate: false\n    })\n\n    // Set initial padding, bounds and center (*No option to set in constructor)\n    // map.showPadding = true\n    map.setPadding(getFocusPadding(paddingBox, scale))\n    if (bounds) {\n      map.fitBounds(bounds, { animate: false })\n    } else {\n      map.flyTo({ center, zoom, animate: false })\n    }\n\n    // Disable rotation\n    map.touchZoomRotate.disableRotation()\n\n    // Overide device pixel ratio\n    if (map.setPixelRatio) {\n      map.setPixelRatio(window.devicePixelRatio * scale)\n    }\n\n    // Tidy up canvas\n    const canvas = map.getCanvas()\n    canvas.removeAttribute('role')\n    canvas.removeAttribute('tabindex')\n    canvas.removeAttribute('aria-label')\n    canvas.style.display = 'block'\n\n    this.container = container\n    this.map = map\n    this.featureLayers = featureLayers || []\n    this.locationLayers = locationLayers || []\n    this.selectedLayers = []\n    this.paddingBox = paddingBox\n    this.style = style\n    this.scale = scale\n\n    // Add markers\n    this.targetMarker = new Marker({ element: targetMarkerHTML() }).setLngLat([0, 0]).addTo(map)\n    this.locationMarker = new Marker({ element: locationMarkerHTML() }).setLngLat([0, 0]).addTo(map)\n    this.shortcutMarkers = []\n\n    // Return ref to dynamically loaded modules and framework functions\n    this.modules = { MaplibreMap, Marker }\n    this.framework = { map }\n\n    // Map ready event (first load)\n    map.on('load', handleLoad.bind(this))\n\n    // Map movestart\n    map.on('movestart', handleMoveStart.bind(this))\n\n    // Detect max/min zoom on move\n    const throttleHandleMove = throttle(() => { handleMove.bind(this)() }, 100)\n    map.on('move', throttleHandleMove)\n\n    // Detect map layer addition\n    map.on('styledata', handleStyleData.bind(this))\n\n    // All render/changes/animations complete. Must debounce, min 500ms\n    const debounceHandleIdle = debounce(() => { handleIdle.bind(this)() }, defaults.DELAY)\n    map.on('idle', debounceHandleIdle)\n\n    // Map style change\n    map.on('style.load', handleStyleLoad.bind(this))\n\n    // Capture errors\n    map.on('error', handleError.bind(this))\n\n    // Implementation callback after initialisation\n    if (callBack) {\n      callBack(this)\n    }\n  }\n\n  getPixel (coord) {\n    let pixel\n    if (this.map && coord) {\n      pixel = this.map.project(coord)\n      pixel = [Math.round(pixel.x), Math.round(pixel.y)]\n    }\n    return pixel\n  }\n\n  panBy (offset, isUserInitiated = true) {\n    if (this.map) {\n      this.map.panBy(offset, { ...defaults.ANIMATION }, { isUserInitiated })\n    }\n  }\n\n  panTo (coord) {\n    this.map.flyTo({ center: coord, ...defaults.ANIMATION })\n  }\n\n  zoomIn () {\n    if (this.map) {\n      this.map.zoomIn(defaults.ANIMATION)\n    }\n  }\n\n  zoomOut () {\n    if (this.map) {\n      this.map.zoomOut(defaults.ANIMATION)\n    }\n  }\n\n  setStyle (style) {\n    this.style = style\n    this.map.setStyle(style.url, { diff: false })\n\n    // Udate draw style\n    this.draw?.setStyle?.()\n  }\n\n  setPadding (coord, isAnimate) {\n    if (this.map) {\n      const { map, paddingBox, scale } = this\n      const padding = getFocusPadding(paddingBox, scale)\n      // Search needs to set padding first before fitBounds\n      this.map.setPadding(padding || map.getPadding())\n      // Ease map to new when coord is obscured\n      coord && this.map.easeTo({ center: coord, animate: isAnimate, ...defaults.ANIMATION })\n    }\n  }\n\n  setSize (size) {\n    const scale = getScale(size)\n    this.scale = scale\n    this.setPadding()\n    if (this.map.setPixelRatio) {\n      this.map?.setPixelRatio(window.devicePixelRatio * scale)\n    }\n    setTimeout(() => {\n      this.map.resize()\n      this.dispatchEvent(new CustomEvent('style', {\n        detail: {\n          type: 'size'\n        }\n      }))\n    }, defaults.DELAY)\n  }\n\n  fitBounds (bounds, isAnimate = true) {\n    bounds = [[bounds[0], bounds[1]], [bounds[2], bounds[3]]]\n    this.map.fitBounds(bounds, { animate: isAnimate, linear: true, duration: defaults.ANIMATION.duration })\n  }\n\n  setCentre (coord, _zoom) {\n    if (this.map) {\n      this.map.flyTo({ center: coord, ...defaults.ANIMATION })\n    }\n  }\n\n  initDraw (options) {\n    import(/* webpackChunkName: \"maplibre-draw\" */ './draw.js').then(module => {\n      const Draw = module.default\n      this.draw = new Draw(this, options)\n    })\n  }\n\n  setTargetMarker (coord, hasData, isVisible) {\n    const { targetMarker } = this\n    if (targetMarker) {\n      targetMarker.setLngLat(coord || [0, 0])\n      const el = targetMarker.getElement() // addClassName not supported in v1.15\n      el.classList.toggle('fm-c-marker--has-data', hasData)\n      el.classList.toggle(css.MARKER_VISIBLE, isVisible && coord)\n    }\n  }\n\n  selectFeature (id) {\n    this.selectedId = id\n    toggleSelectedFeature.bind(this)(id)\n  }\n\n  selectCoordinate (coord) {\n    this.selectedCoordinate = coord\n  }\n\n  async queryFeature (id) {\n    if (id) {\n      const detail = await getDetail.bind(this)(null, false)\n      detail.features.items = [detail.features.items.find(f => f.id === id)]\n      this.dispatchEvent(new CustomEvent('mapquery', { detail }))\n    }\n  }\n\n  async queryPoint (point) {\n    const detail = await getDetail.bind(this)(point, this.selectedLayers)\n    this.hideLabel()\n    this.dispatchEvent(new CustomEvent('mapquery', {\n      detail: {\n        resultType: detail.features.resultType,\n        ...detail\n      }\n    }))\n  }\n\n  getGeoLocation (success, error) {\n    navigator.geolocation.getCurrentPosition(async (position) => {\n      let coord = [position.coords.longitude, position.coords.latitude]\n      coord = coord.map(n => parseFloat(n.toFixed(defaults.PRECISION)))\n      // const place = this.getNearest ? await this.getNearest(coord) : null\n      success(coord, null)\n    }, (err) => {\n      console.log(err)\n      error(err)\n    }, {\n      enableHighAccuracy: false\n    })\n  }\n\n  showLocation (coord) {\n    const { locationMarker } = this\n    locationMarker.setLngLat(coord).addClassName(css.MARKER_VISIBLE)\n  }\n\n  showNextLabel (pixel, direction) {\n    const labels = getLabels.bind(this)()\n    const { lng, lat } = this.map.getCenter()\n    const center = this.map.project([lng, lat])\n    const pixels = labels.map(c => c.pixel)\n    const index = spatialNavigate(direction, pixel || [center.x, center.y], pixels)\n    const feature = labels[index]?.feature\n    highlightLabel.bind(this)(feature)\n    return labels[index]?.pixel\n  }\n\n  showLabel (point) {\n    const feature = getLabel.bind(this)(point)\n    highlightLabel.bind(this)(feature)\n    return point\n  }\n\n  hideLabel () {\n    if (this.map) {\n      highlightLabel.bind(this)()\n    }\n  }\n}\n\nexport default Provider\n","export const throttle = (fn, wait) => {\n  let lastCallTime = 0\n  return (...args) => {\n    const now = Date.now()\n    if (now - lastCallTime >= wait) {\n      lastCallTime = now\n      fn(...args)\n    }\n  }\n}\n","export const defaults = {\n  PRECISION: 6,\n  ANIMATION: {\n    duration: 500,\n    curve: 0\n  },\n  DELAY: 300,\n  MAX_FEATURES: 9,\n  SHORTCUT_LABEL_OFFSET: -30\n}\n\nexport const css = {\n  MARKER_VISIBLE: 'fm-c-marker--visible'\n}\n","// index.ts\nimport { isNumber } from \"@turf/helpers\";\nfunction getCoord(coord) {\n  if (!coord) {\n    throw new Error(\"coord is required\");\n  }\n  if (!Array.isArray(coord)) {\n    if (coord.type === \"Feature\" && coord.geometry !== null && coord.geometry.type === \"Point\") {\n      return [...coord.geometry.coordinates];\n    }\n    if (coord.type === \"Point\") {\n      return [...coord.coordinates];\n    }\n  }\n  if (Array.isArray(coord) && coord.length >= 2 && !Array.isArray(coord[0]) && !Array.isArray(coord[1])) {\n    return [...coord];\n  }\n  throw new Error(\"coord must be GeoJSON Point or an Array of numbers\");\n}\nfunction getCoords(coords) {\n  if (Array.isArray(coords)) {\n    return coords;\n  }\n  if (coords.type === \"Feature\") {\n    if (coords.geometry !== null) {\n      return coords.geometry.coordinates;\n    }\n  } else {\n    if (coords.coordinates) {\n      return coords.coordinates;\n    }\n  }\n  throw new Error(\n    \"coords must be GeoJSON Feature, Geometry Object or an Array\"\n  );\n}\nfunction containsNumber(coordinates) {\n  if (coordinates.length > 1 && isNumber(coordinates[0]) && isNumber(coordinates[1])) {\n    return true;\n  }\n  if (Array.isArray(coordinates[0]) && coordinates[0].length) {\n    return containsNumber(coordinates[0]);\n  }\n  throw new Error(\"coordinates must only contain numbers\");\n}\nfunction geojsonType(value, type, name) {\n  if (!type || !name) {\n    throw new Error(\"type and name required\");\n  }\n  if (!value || value.type !== type) {\n    throw new Error(\n      \"Invalid input to \" + name + \": must be a \" + type + \", given \" + value.type\n    );\n  }\n}\nfunction featureOf(feature, type, name) {\n  if (!feature) {\n    throw new Error(\"No feature passed\");\n  }\n  if (!name) {\n    throw new Error(\".featureOf() requires a name\");\n  }\n  if (!feature || feature.type !== \"Feature\" || !feature.geometry) {\n    throw new Error(\n      \"Invalid input to \" + name + \", Feature with geometry required\"\n    );\n  }\n  if (!feature.geometry || feature.geometry.type !== type) {\n    throw new Error(\n      \"Invalid input to \" + name + \": must be a \" + type + \", given \" + feature.geometry.type\n    );\n  }\n}\nfunction collectionOf(featureCollection, type, name) {\n  if (!featureCollection) {\n    throw new Error(\"No featureCollection passed\");\n  }\n  if (!name) {\n    throw new Error(\".collectionOf() requires a name\");\n  }\n  if (!featureCollection || featureCollection.type !== \"FeatureCollection\") {\n    throw new Error(\n      \"Invalid input to \" + name + \", FeatureCollection required\"\n    );\n  }\n  for (const feature of featureCollection.features) {\n    if (!feature || feature.type !== \"Feature\" || !feature.geometry) {\n      throw new Error(\n        \"Invalid input to \" + name + \", Feature with geometry required\"\n      );\n    }\n    if (!feature.geometry || feature.geometry.type !== type) {\n      throw new Error(\n        \"Invalid input to \" + name + \": must be a \" + type + \", given \" + feature.geometry.type\n      );\n    }\n  }\n}\nfunction getGeom(geojson) {\n  if (geojson.type === \"Feature\") {\n    return geojson.geometry;\n  }\n  return geojson;\n}\nfunction getType(geojson, _name) {\n  if (geojson.type === \"FeatureCollection\") {\n    return \"FeatureCollection\";\n  }\n  if (geojson.type === \"GeometryCollection\") {\n    return \"GeometryCollection\";\n  }\n  if (geojson.type === \"Feature\" && geojson.geometry !== null) {\n    return geojson.geometry.type;\n  }\n  return geojson.type;\n}\nexport {\n  collectionOf,\n  containsNumber,\n  featureOf,\n  geojsonType,\n  getCoord,\n  getCoords,\n  getGeom,\n  getType\n};\n//# sourceMappingURL=index.js.map","export const debounce = (fn, wait) => {\n  let timeoutId = null\n  return (...args) => {\n    window.clearTimeout(timeoutId)\n    timeoutId = window.setTimeout(() => {\n      fn(...args)\n    }, wait)\n  }\n}\n","// index.ts\nvar earthRadius = 63710088e-1;\nvar factors = {\n  centimeters: earthRadius * 100,\n  centimetres: earthRadius * 100,\n  degrees: 360 / (2 * Math.PI),\n  feet: earthRadius * 3.28084,\n  inches: earthRadius * 39.37,\n  kilometers: earthRadius / 1e3,\n  kilometres: earthRadius / 1e3,\n  meters: earthRadius,\n  metres: earthRadius,\n  miles: earthRadius / 1609.344,\n  millimeters: earthRadius * 1e3,\n  millimetres: earthRadius * 1e3,\n  nauticalmiles: earthRadius / 1852,\n  radians: 1,\n  yards: earthRadius * 1.0936\n};\nvar areaFactors = {\n  acres: 247105e-9,\n  centimeters: 1e4,\n  centimetres: 1e4,\n  feet: 10.763910417,\n  hectares: 1e-4,\n  inches: 1550.003100006,\n  kilometers: 1e-6,\n  kilometres: 1e-6,\n  meters: 1,\n  metres: 1,\n  miles: 386e-9,\n  nauticalmiles: 29155334959812285e-23,\n  millimeters: 1e6,\n  millimetres: 1e6,\n  yards: 1.195990046\n};\nfunction feature(geom, properties, options = {}) {\n  const feat = { type: \"Feature\" };\n  if (options.id === 0 || options.id) {\n    feat.id = options.id;\n  }\n  if (options.bbox) {\n    feat.bbox = options.bbox;\n  }\n  feat.properties = properties || {};\n  feat.geometry = geom;\n  return feat;\n}\nfunction geometry(type, coordinates, _options = {}) {\n  switch (type) {\n    case \"Point\":\n      return point(coordinates).geometry;\n    case \"LineString\":\n      return lineString(coordinates).geometry;\n    case \"Polygon\":\n      return polygon(coordinates).geometry;\n    case \"MultiPoint\":\n      return multiPoint(coordinates).geometry;\n    case \"MultiLineString\":\n      return multiLineString(coordinates).geometry;\n    case \"MultiPolygon\":\n      return multiPolygon(coordinates).geometry;\n    default:\n      throw new Error(type + \" is invalid\");\n  }\n}\nfunction point(coordinates, properties, options = {}) {\n  if (!coordinates) {\n    throw new Error(\"coordinates is required\");\n  }\n  if (!Array.isArray(coordinates)) {\n    throw new Error(\"coordinates must be an Array\");\n  }\n  if (coordinates.length < 2) {\n    throw new Error(\"coordinates must be at least 2 numbers long\");\n  }\n  if (!isNumber(coordinates[0]) || !isNumber(coordinates[1])) {\n    throw new Error(\"coordinates must contain numbers\");\n  }\n  const geom = {\n    type: \"Point\",\n    coordinates\n  };\n  return feature(geom, properties, options);\n}\nfunction points(coordinates, properties, options = {}) {\n  return featureCollection(\n    coordinates.map((coords) => {\n      return point(coords, properties);\n    }),\n    options\n  );\n}\nfunction polygon(coordinates, properties, options = {}) {\n  for (const ring of coordinates) {\n    if (ring.length < 4) {\n      throw new Error(\n        \"Each LinearRing of a Polygon must have 4 or more Positions.\"\n      );\n    }\n    if (ring[ring.length - 1].length !== ring[0].length) {\n      throw new Error(\"First and last Position are not equivalent.\");\n    }\n    for (let j = 0; j < ring[ring.length - 1].length; j++) {\n      if (ring[ring.length - 1][j] !== ring[0][j]) {\n        throw new Error(\"First and last Position are not equivalent.\");\n      }\n    }\n  }\n  const geom = {\n    type: \"Polygon\",\n    coordinates\n  };\n  return feature(geom, properties, options);\n}\nfunction polygons(coordinates, properties, options = {}) {\n  return featureCollection(\n    coordinates.map((coords) => {\n      return polygon(coords, properties);\n    }),\n    options\n  );\n}\nfunction lineString(coordinates, properties, options = {}) {\n  if (coordinates.length < 2) {\n    throw new Error(\"coordinates must be an array of two or more positions\");\n  }\n  const geom = {\n    type: \"LineString\",\n    coordinates\n  };\n  return feature(geom, properties, options);\n}\nfunction lineStrings(coordinates, properties, options = {}) {\n  return featureCollection(\n    coordinates.map((coords) => {\n      return lineString(coords, properties);\n    }),\n    options\n  );\n}\nfunction featureCollection(features, options = {}) {\n  const fc = { type: \"FeatureCollection\" };\n  if (options.id) {\n    fc.id = options.id;\n  }\n  if (options.bbox) {\n    fc.bbox = options.bbox;\n  }\n  fc.features = features;\n  return fc;\n}\nfunction multiLineString(coordinates, properties, options = {}) {\n  const geom = {\n    type: \"MultiLineString\",\n    coordinates\n  };\n  return feature(geom, properties, options);\n}\nfunction multiPoint(coordinates, properties, options = {}) {\n  const geom = {\n    type: \"MultiPoint\",\n    coordinates\n  };\n  return feature(geom, properties, options);\n}\nfunction multiPolygon(coordinates, properties, options = {}) {\n  const geom = {\n    type: \"MultiPolygon\",\n    coordinates\n  };\n  return feature(geom, properties, options);\n}\nfunction geometryCollection(geometries, properties, options = {}) {\n  const geom = {\n    type: \"GeometryCollection\",\n    geometries\n  };\n  return feature(geom, properties, options);\n}\nfunction round(num, precision = 0) {\n  if (precision && !(precision >= 0)) {\n    throw new Error(\"precision must be a positive number\");\n  }\n  const multiplier = Math.pow(10, precision || 0);\n  return Math.round(num * multiplier) / multiplier;\n}\nfunction radiansToLength(radians, units = \"kilometers\") {\n  const factor = factors[units];\n  if (!factor) {\n    throw new Error(units + \" units is invalid\");\n  }\n  return radians * factor;\n}\nfunction lengthToRadians(distance, units = \"kilometers\") {\n  const factor = factors[units];\n  if (!factor) {\n    throw new Error(units + \" units is invalid\");\n  }\n  return distance / factor;\n}\nfunction lengthToDegrees(distance, units) {\n  return radiansToDegrees(lengthToRadians(distance, units));\n}\nfunction bearingToAzimuth(bearing) {\n  let angle = bearing % 360;\n  if (angle < 0) {\n    angle += 360;\n  }\n  return angle;\n}\nfunction azimuthToBearing(angle) {\n  angle = angle % 360;\n  if (angle > 180) {\n    return angle - 360;\n  } else if (angle < -180) {\n    return angle + 360;\n  }\n  return angle;\n}\nfunction radiansToDegrees(radians) {\n  const normalisedRadians = radians % (2 * Math.PI);\n  return normalisedRadians * 180 / Math.PI;\n}\nfunction degreesToRadians(degrees) {\n  const normalisedDegrees = degrees % 360;\n  return normalisedDegrees * Math.PI / 180;\n}\nfunction convertLength(length, originalUnit = \"kilometers\", finalUnit = \"kilometers\") {\n  if (!(length >= 0)) {\n    throw new Error(\"length must be a positive number\");\n  }\n  return radiansToLength(lengthToRadians(length, originalUnit), finalUnit);\n}\nfunction convertArea(area, originalUnit = \"meters\", finalUnit = \"kilometers\") {\n  if (!(area >= 0)) {\n    throw new Error(\"area must be a positive number\");\n  }\n  const startFactor = areaFactors[originalUnit];\n  if (!startFactor) {\n    throw new Error(\"invalid original units\");\n  }\n  const finalFactor = areaFactors[finalUnit];\n  if (!finalFactor) {\n    throw new Error(\"invalid final units\");\n  }\n  return area / startFactor * finalFactor;\n}\nfunction isNumber(num) {\n  return !isNaN(num) && num !== null && !Array.isArray(num);\n}\nfunction isObject(input) {\n  return input !== null && typeof input === \"object\" && !Array.isArray(input);\n}\nfunction validateBBox(bbox) {\n  if (!bbox) {\n    throw new Error(\"bbox is required\");\n  }\n  if (!Array.isArray(bbox)) {\n    throw new Error(\"bbox must be an Array\");\n  }\n  if (bbox.length !== 4 && bbox.length !== 6) {\n    throw new Error(\"bbox must be an Array of 4 or 6 numbers\");\n  }\n  bbox.forEach((num) => {\n    if (!isNumber(num)) {\n      throw new Error(\"bbox must only contain numbers\");\n    }\n  });\n}\nfunction validateId(id) {\n  if (!id) {\n    throw new Error(\"id is required\");\n  }\n  if ([\"string\", \"number\"].indexOf(typeof id) === -1) {\n    throw new Error(\"id must be a number or a string\");\n  }\n}\nexport {\n  areaFactors,\n  azimuthToBearing,\n  bearingToAzimuth,\n  convertArea,\n  convertLength,\n  degreesToRadians,\n  earthRadius,\n  factors,\n  feature,\n  featureCollection,\n  geometry,\n  geometryCollection,\n  isNumber,\n  isObject,\n  lengthToDegrees,\n  lengthToRadians,\n  lineString,\n  lineStrings,\n  multiLineString,\n  multiPoint,\n  multiPolygon,\n  point,\n  points,\n  polygon,\n  polygons,\n  radiansToDegrees,\n  radiansToLength,\n  round,\n  validateBBox,\n  validateId\n};\n//# sourceMappingURL=index.js.map","!function(e,t){\"object\"==typeof exports&&\"object\"==typeof module?module.exports=t():\"function\"==typeof define&&define.amd?define([],t):\"object\"==typeof exports?exports.computedStyleToInlineStyle=t():e.computedStyleToInlineStyle=t()}(this,(()=>(()=>{\"use strict\";var e={};return(()=>{var t=e;Object.defineProperty(t,\"__esModule\",{value:!0}),t.default=function e(t,o){if(!t)throw new Error(\"No element specified.\");(null==o?void 0:o.recursive)&&Array.prototype.forEach.call(t.children,(t=>{e(t,o)}));const r=getComputedStyle(t);Array.prototype.forEach.call((null==o?void 0:o.properties)||r,(e=>{t.style[e]=r.getPropertyValue(e)}))}})(),e})()));","const { DOMParser } = window\n\nexport const parseSVG = (icon, fill, text, isDarkBasemap = false, scale = 1) => {\n  const isSelected = icon.includes('selected')\n  // let styled = text.replace(/#0f0|#00ff00|#0F0|#00FF00/g, isSelected ? isDarkBasemap ? '#ffffff' : '#0b0c0c' : 'transparent')\n  // styled = styled.replace(/#00f|#0000ff|#00F|#0000FF/g, isDarkBasemap ? '#162232' : '#ffffff')\n  const parser = new DOMParser()\n  const dom = parser.parseFromString(text, 'text/html')\n  const svg = dom.querySelector('svg')\n  // Add xmlns attribute and class to svg\n  // svg.setAttribute('xmlns', 'http://www.w3.org/2000/svg')\n  svg.classList.add('fm-c-symbol')\n  svg.classList.toggle('fm-c-symbol--selected', isSelected)\n  svg.classList.toggle('fm-c-symbol--dark', isDarkBasemap)\n  // Set svg height and width\n  const viewBox = svg.getAttribute('viewBox')\n  const width = parseInt(viewBox.split(' ')[2], 10) * scale\n  const height = parseInt(viewBox.split(' ')[3], 10) * scale\n  svg.setAttribute('width', width)\n  svg.setAttribute('height', height)\n  // Conditionally add fill\n  if (fill) {\n    svg.setAttribute('fill', fill)\n  }\n  // Add classnames\n  const olFill = svg.querySelectorAll('[fill=\"#0b0c0c\" i], [style*=\"fill:#0b0c0c\" i]')\n  const olStroke = svg.querySelectorAll('[stroke=\"#0b0c0c\" i], [style*=\"stroke:#0b0c0c\" i]')\n  olFill.forEach(n => n.classList.add('fm-c-symbol__ol-fill'))\n  olStroke.forEach(n => n.classList.add('fm-c-symbol__ol-stroke'))\n  const bgFill = svg.querySelectorAll('[fill=\"#fff\" i], [fill=\"#ffffff\" i], [style*=\"fill:#fff\" i], [style*=\"fill:#ffffff\" i]')\n  const bgStroke = svg.querySelectorAll('[stroke*=\"#fff\" i], [stroke*=\"#ffffff\" i], [style*=\"stroke:#fff\" i], [style*=\"stroke:#ffffff\" i]')\n  bgFill.forEach(n => n.classList.add('fm-c-symbol__bg-fill'))\n  bgStroke.forEach(n => n.classList.add('fm-c-symbol__bg-stroke'))\n  const fgFill = svg.querySelectorAll(':not(.fm-c-symbol__ol-fill):not(.fm-c-symbol__bg-fill)[fill], :not(.fm-c-symbol__ol-fill):not(.fm-c-symbol__bg-fill)[style*=\"fill\"]')\n  const fgStroke = svg.querySelectorAll(':not(.fm-c-symbol__ol-stroke):not(.fm-c-symbol__bg-stroke)[stroke], :not(.fm-c-symbol__ol-stroke):not(.fm-c-symbol__bg-stroke)[style*=\"stroke\"]')\n  fgFill.forEach(n => n.classList.add('fm-c-symbol__fg-fill'))\n  fgStroke.forEach(n => n.classList.add('fm-c-symbol__fg-stroke'))\n  return dom.body.innerHTML\n}\n","// index.ts\nimport { getCoord } from \"@turf/invariant\";\nimport { radiansToLength, degreesToRadians } from \"@turf/helpers\";\nfunction distance(from, to, options = {}) {\n  var coordinates1 = getCoord(from);\n  var coordinates2 = getCoord(to);\n  var dLat = degreesToRadians(coordinates2[1] - coordinates1[1]);\n  var dLon = degreesToRadians(coordinates2[0] - coordinates1[0]);\n  var lat1 = degreesToRadians(coordinates1[1]);\n  var lat2 = degreesToRadians(coordinates2[1]);\n  var a = Math.pow(Math.sin(dLat / 2), 2) + Math.pow(Math.sin(dLon / 2), 2) * Math.cos(lat1) * Math.cos(lat2);\n  return radiansToLength(\n    2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a)),\n    options.units\n  );\n}\nvar turf_distance_default = distance;\nexport {\n  turf_distance_default as default,\n  distance\n};\n//# sourceMappingURL=index.js.map","import { distance as turfDistance } from '@turf/distance'\nimport { point as TurfPoint } from '@turf/helpers'\nimport { defaults } from '../store/constants'\n\nconst getBearing = (coord1, coord2) => {\n  const east = coord1[0] < coord2[0] && 'east'\n  const west = coord1[0] > coord2[0] && 'west'\n  const north = coord1[1] < coord2[1] && 'north'\n  const south = coord1[1] > coord2[1] && 'south'\n  return [east, west, north, south].filter(b => b && typeof b === 'string')\n}\n\nconst getUnits = (metres) => {\n  const MAX_METRES = 800\n  const MAX_MILES = 5000\n  const RATIO = 0.621371\n  let units\n  if (metres < MAX_METRES) {\n    units = `${metres} metres`\n  } else if (metres < MAX_MILES) {\n    units = (metres / 1000 * RATIO).toFixed(1) + ' miles'\n  } else {\n    units = Math.round((metres / 1000) * RATIO) + ' miles'\n  }\n  return units\n}\n\nconst getDirection = (coord1, coord2) => {\n  coord1 = coord1.map(n => n > 1000 ? Math.round(n) : Math.round(n * 100000) / 100000)\n  coord2 = coord2.map(n => n > 1000 ? Math.round(n) : Math.round(n * 100000) / 100000)\n  const ns1 = [coord1[0], coord1[1]]\n  const ns2 = [coord1[0], coord2[1]]\n  const ew1 = [coord1[0], coord1[1]]\n  const ew2 = [coord2[0], coord1[1]]\n  const nsd = getDistance(ns1, ns2)\n  const ewd = getDistance(ew1, ew2)\n  const bearing = getBearing(coord1, coord2)\n  const ewc = bearing.filter(b => ['east', 'west'].includes(b)).join('')\n  const nsc = bearing.filter(b => ['north', 'south'].includes(b)).join('')\n  const ew = ewc ? `${ewc} ${getUnits(ewd)}` : ''\n  const ns = nsc ? `${nsc} ${getUnits(nsd)}` : ''\n  return `${ns + (ewc && nsc ? ', ' : '') + ew}`\n}\n\nconst getArea = (bounds) => {\n  const ew = getDistance([bounds[0], bounds[1]], [bounds[2], bounds[1]])\n  const ns = getDistance([bounds[0], bounds[1]], [bounds[0], bounds[3]])\n  return `${getUnits(ew)} by ${getUnits(ns)}`\n}\n\nconst getBoundsChange = (oCentre, originalZoom, isMaxZoom, isMinZoom, center, zoom) => {\n  const isSameCentre = JSON.stringify(oCentre) === JSON.stringify(center)\n  const isSameZoom = originalZoom === zoom\n  const isMove = oCentre && originalZoom && !(isSameCentre && isSameZoom)\n  const maxZoom = isMaxZoom ? ' (Maximum zoom reached)' : ''\n  const minZoom = isMinZoom ? ' (Minimum zoom reached)' : ''\n  let change = ''\n  if (isMove) {\n    if (!isSameCentre && !isSameZoom) {\n      change = `New area${maxZoom}${minZoom}: `\n    } else if (!isSameCentre) {\n      change = `Map move: ${getDirection(oCentre, center)}, `\n    } else {\n      const direction = zoom > originalZoom ? 'in' : 'out'\n      change = `Zoomed ${direction}${maxZoom}${minZoom}: `\n    }\n  }\n  return change\n}\n\nconst getSelectedStatus = (featuresInViewport, id) => {\n  const total = featuresInViewport.length\n  const index = featuresInViewport.findIndex(f => f.id === id)\n  return index >= 0 && `${total} feature${total !== 1 ? 's' : ''} in this area. ${featuresInViewport[index].name}. ${index + 1} of ${total} highlighted.`\n}\n\nconst getOffsetBoundingClientRect = (el) => {\n  const offsetParent = el.closest('[data-fm-main]') || document.body\n  return offsetParent.getBoundingClientRect()\n}\n\nconst isCirclePolygon = (geometry) => {\n  const coordinates = geometry?.coordinates?.[0]\n\n  // Expect exactly 64 points\n  if (coordinates?.length !== 65) {\n    return false\n  }\n\n  // Compute approximate centre using two opposite points\n  const [x1, y1] = coordinates[0]\n  const [x2, y2] = coordinates[32]\n  const center = [(x1 + x2) / 2, (y1 + y2) / 2]\n\n  let minDist = Infinity; let maxDist = -Infinity\n  let minEdge = Infinity; let maxEdge = -Infinity\n\n  for (let i = 0; i < 64; i++) {\n    const [xA, yA] = coordinates[i]\n    const [xB, yB] = coordinates[(i + 1) % 64]\n\n    // Distance from center\n    const dist = Math.hypot(xA - center[0], yA - center[1])\n    minDist = Math.min(minDist, dist)\n    maxDist = Math.max(maxDist, dist)\n\n    // Distance to next vertex (edge length)\n    const edgeDist = Math.hypot(xB - xA, yB - yA)\n    minEdge = Math.min(minEdge, edgeDist)\n    maxEdge = Math.max(maxEdge, edgeDist)\n  }\n\n  // Need to revist tolerance as they depend on size too\n  const WSG84_TOLERANCE = 0.3\n  const BNG_TOLERANCE = 0.3\n  const tolerance = detectCoordinateType(center) === 'WSG84' ? WSG84_TOLERANCE : BNG_TOLERANCE\n\n  return Math.abs(maxDist - minDist) < tolerance && Math.abs(maxEdge - minEdge) < tolerance\n}\n\nconst metresToImperial = (metres) => {\n  const MILE = 1609.344\n  const YARD = 0.9144\n  const pluralize = (value, singular, plural) => `${value} ${value === 1 ? singular : plural}`\n  if (metres >= MILE) {\n    const miles = Math.floor(metres / MILE)\n    const remainder = metres % MILE\n    const yards = Math.floor(remainder / YARD)\n    return `${pluralize(miles, 'mile', 'miles')}, ${pluralize(yards, 'yard', 'yards')}`\n  } else {\n    const yards = Math.floor(metres / YARD)\n    return `${pluralize(yards, 'yard', 'yards')}`\n  }\n}\n\nconst squareMetresToKm = (metres) => {\n  const SQ_KM = 1_000_000\n  if (metres >= SQ_KM) {\n    let km2 = (metres / SQ_KM).toFixed(2)\n    km2 = Number(km2).toLocaleString(undefined, { minimumFractionDigits: 0, maximumFractionDigits: 2 })\n    return `${km2} km²`\n  } else {\n    return `${Math.ceil(metres).toLocaleString()} m²`\n  }\n}\n\nexport const parseDimensions = (dimensions) => {\n  const { area, length } = dimensions\n  const areaDisplay = area ? squareMetresToKm(area) : null\n  const lengthDisplay = length ? metresToImperial(length) : null\n  return { ...dimensions, areaDisplay, lengthDisplay }\n}\n\nexport const detectCoordinateType = (coords) => {\n  if (coords.length === 3) {\n    return 'BNG' // If a third value exists (zone), it's UTM\n  }\n  const [x, y] = coords\n  if (x >= -180 && x <= 180 && y >= -90 && y <= 90) {\n    return 'WSG84'\n  }\n  if (x > 180 && y > 90) {\n    return 'BNG'\n  }\n  return 'Unknown'\n}\n\nexport const getDistance = (coord1, coord2) => {\n  let distance\n  if (coord1[0] > 1000) {\n    const x = Math.abs(coord1[0] - coord2[0])\n    const y = Math.abs(coord1[1] - coord2[1])\n    const dist = Math.sqrt((Math.pow(x, 2)) + (Math.pow(y, 2)))\n    distance = dist\n  } else {\n    const p1 = new TurfPoint(coord1)\n    const p2 = new TurfPoint(coord2)\n    distance = turfDistance(p1, p2, { units: 'metres' })\n  }\n  return Math.round(distance)\n}\n\nexport const getFocusPadding = (el, scale) => {\n  let padding\n  if (el) {\n    const parent = getOffsetBoundingClientRect(el)\n    const box = el.getBoundingClientRect()\n    const boxX = box.x || box.left\n    const boxY = box.y || box.top\n    const parentX = parent.x || parent.left\n    const parentY = parent.y || parent.top\n    padding = {\n      top: (boxY - parentY) / scale,\n      left: (boxX - parentX) / scale,\n      right: (parent.width - box.width - (boxX - parentX)) / scale,\n      bottom: (parent.height - box.height - (boxY - parentY)) / scale\n    }\n  }\n  // Addresses repid browser resizing\n  const isValid = Object.values(padding).every(i => i >= 0)\n  return isValid && padding\n}\n\nexport const getFocusBounds = (el, scale) => {\n  let bounds\n  if (el) {\n    const parent = getOffsetBoundingClientRect(el)\n    const box = el.getBoundingClientRect()\n    const m = 10\n    bounds = [[\n      ((box.x || box.left) - (parent.x || parent.left) + m) / scale,\n      (((box.y || box.top) - (parent.y || parent.top)) + box.height - m) / scale\n    ], [\n      (box.width + ((box.x || box.left) - (parent.x || parent.left)) - m) / scale,\n      ((box.y || box.top) - (parent.y || parent.top) + m) / scale\n    ]]\n  }\n  return bounds\n}\n\nexport const getMapPixel = (el, scale) => {\n  const parent = getOffsetBoundingClientRect(el)\n  const box = el.getBoundingClientRect()\n  const left = ((box.x || box.left) - (parent.x || parent.left)) / scale\n  const top = ((box.y || box.top) - (parent.y || parent.top)) / scale\n  const offsetLeft = (box.width / 2) / scale\n  const offsetTop = (box.height / 2) / scale\n  const point = [left + offsetLeft, top + offsetTop]\n  return point\n}\n\nexport const getDescription = (place, bounds, features) => {\n  const { featuresTotal, isFeaturesInMap, isPixelFeaturesAtPixel, isPixelFeaturesInMap } = features || {}\n  let text = ''\n\n  if (featuresTotal) {\n    text = `${featuresTotal} feature${featuresTotal === 1 ? '' : 's'} in this area. `\n  } else if (isPixelFeaturesAtPixel) {\n    text = 'Data visible at the center coordinate. '\n  } else if (isPixelFeaturesInMap) {\n    text = 'No data visible at the center coordinate. '\n  } else if (isFeaturesInMap) {\n    text = 'No feature data in this area. '\n  } else {\n    // Null\n  }\n\n  const focusPlace = place ? `approximate centre ${place}, ` : ''\n  const focusArea = `covering ${getArea(bounds)}`\n  const findPlace = place ? '' : 'Use ALT plus I to find closest place'\n\n  return `${focusPlace}${focusArea}. ${text}${findPlace}`\n}\n\nexport const getStatus = (action, isBoundsChange, place, state, current) => {\n  const { center, bounds, zoom, isMaxZoom, isMinZoom, features, label, selectedId } = current\n  let status = null\n  if (label) {\n    status = label\n  } else if (selectedId) {\n    const selected = getSelectedStatus(features?.featuresInViewport, selectedId)\n    status = selected\n  } else if (action === 'DATA') {\n    status = 'Map change: new data. Use ALT plus I to get new details'\n  } else if (isBoundsChange) {\n    const direction = getBoundsChange(state.center, state.zoom, isMaxZoom, isMinZoom, center, zoom)\n    const description = getDescription(place, bounds, features)\n    status = `${direction}${direction ? 'f' : 'F'}ocus area ${description}`\n  } else {\n    status = ''\n  }\n  return status\n}\n\nexport const getPlace = (isUserInitiated, action, oPlace, newPlace) => {\n  let place\n  if (!isUserInitiated) {\n    if (action === 'RESET') {\n      place = oPlace\n    } else {\n      place = newPlace\n    }\n  }\n  return place\n}\n\nexport const parseCentre = (value, srid) => {\n  const mb = defaults[`MAX_BOUNDS_${srid}`]\n  let isInRange\n  let coords = value?.split(',')\n  // Query string formed correctly\n  if (!(Array.isArray(coords) && coords?.length === 3)) {\n    return null\n  }\n  // Coords are numbers\n  coords = coords.slice(0, 2).map(x => parseFloat(x))\n  coords = !coords.some(isNaN) && coords\n  if (!coords) {\n    return null\n  }\n  // Coords are within the valid range\n  if (srid === '27700') {\n    isInRange = !!coords.filter(c => c >= 0).length\n  } else {\n    isInRange = (coords[0] > mb[0] && coords[0] < mb[2]) && (coords[1] > mb[1] && coords[1] < mb[3])\n  }\n  return isInRange ? coords : null\n}\n\nexport const parseZoom = value => {\n  const coords = value?.split(',')\n  if (!(Array.isArray(coords) && coords?.length === 3)) {\n    return null\n  }\n  const zoom = parseFloat(coords[2])\n  return !zoom.isNaN ? zoom : null\n}\n\nexport const getShortcutKey = (e, featuresViewport) => {\n  const number = e.code.slice(-1)\n  const hasFeature = featuresViewport.length >= number\n  const id = hasFeature ? featuresViewport[number - 1].id : ''\n  return id\n}\n\nexport const getFeatureShape = (feature) => {\n  if (isCirclePolygon(feature?.geometry)) {\n    return 'circle'\n  }\n  if (feature?.geometry?.type?.toLowerCase() === 'polygon') {\n    const coords = feature.geometry?.coordinates\n    const flatCoords = (coords && Array.from(new Set(coords.flat(2)))) || null\n    return flatCoords?.length === 4 ? 'square' : 'polygon'\n  }\n  return null\n}\n\nexport const spatialNavigate = (direction, start, pixels) => {\n  const quadrant = pixels.filter(p => {\n    const offsetX = Math.abs(p[0] - start[0])\n    const offsetY = Math.abs(p[1] - start[1])\n    let isQuadrant = false\n    if (direction === 'up') {\n      isQuadrant = p[1] <= start[1] && offsetY >= offsetX\n    } else if (direction === 'down') {\n      isQuadrant = p[1] > start[1] && offsetY >= offsetX\n    } else if (direction === 'left') {\n      isQuadrant = p[0] <= start[0] && offsetY < offsetX\n    } else {\n      isQuadrant = p[0] > start[0] && offsetY < offsetX\n    }\n    return isQuadrant && (JSON.stringify(p) !== JSON.stringify(start))\n  })\n  if (!quadrant.length) {\n    quadrant.push(start)\n  }\n  const pythagorean = (a, b) => Math.sqrt(Math.pow(a, 2) + Math.pow(b, 2))\n  const distances = quadrant.map(p => pythagorean(Math.abs(start[0] - p[0]), Math.abs(start[1] - p[1])))\n  const closest = quadrant[distances.indexOf(Math.min(...distances))]\n  return pixels.findIndex(i => JSON.stringify(i) === JSON.stringify(closest))\n}\n\nexport const getScale = (size) => {\n  return { small: 1, medium: 1.5, large: 2 }[size] || 1\n}\n\nexport const getPoint = (el, e, scale) => {\n  const { left, top } = el.getBoundingClientRect()\n  const { clientX, clientY } = e.nativeEvent\n  const x = clientX - left\n  const y = clientY - top\n  return [x / scale, y / scale]\n}\n\nexport const getStyle = (styles = []) => {\n  const validStyles = styles.filter(s => defaults.STYLES.includes(s.name))\n  const style = window.localStorage.getItem('style')\n  return validStyles.find(s => s.name === style) || validStyles.find(s => s.name === 'default')\n}\n"],"names":["TinyQueue","constructor","data","compare","a","b","this","length","i","_down","push","item","_up","pop","top","bottom","peek","pos","parent","current","halfLength","bestChild","right","Cell","x","y","h","polygon","d","inside","minDistSq","Infinity","ring","len","j","Math","min","getSegDistSq","sqrt","pointToPolygonDist","max","SQRT2","px","py","dx","dy","t","geojson","previousValue","callback","g","geometry","stopG","geometryMaybeCollection","isGeometryCollection","featureProperties","featureBBox","featureId","featureIndex","isFeatureCollection","type","isFeature","stop","features","properties","bbox","id","geometries","Error","geomEach","currentGeometry","geom","total","polygonArea","coordinates","calculateArea","geomReduce","coords","abs","ringArea","FACTOR","PI_OVER_180","PI","coordsLength","lower","middle","upper","lowerX","middleY","sin","polygonclip","points","result","edge","prev","prevInside","p","bitCode","intersect","code","clipPolygon","rings","outRings","clipped","_regeneratorRuntime","e","r","Object","prototype","n","hasOwnProperty","o","defineProperty","value","Symbol","iterator","c","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","arg","call","l","f","s","GeneratorFunction","GeneratorFunctionPrototype","getPrototypeOf","v","values","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","_typeof","resolve","__await","then","callInvokeWithMethodAndArg","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","return","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","reset","isNaN","displayName","isGeneratorFunction","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","charAt","slice","rval","handle","complete","finish","catch","delegateYield","asyncGeneratorStep","_toConsumableArray","Array","isArray","_arrayLikeToArray","_arrayWithoutHoles","from","_iterableToArray","_unsupportedIterableToArray","_nonIterableSpread","toString","test","ownKeys","getOwnPropertySymbols","filter","getOwnPropertyDescriptor","apply","_objectSpread","arguments","_defineProperty","getOwnPropertyDescriptors","defineProperties","toPrimitive","String","_toPrimitive","_toPropertyKey","getPaddedBounds","map","padding","getPadding","bounds","getBounds","sw","project","getWest","getSouth","ne","getEast","getNorth","left","paddedSW","unproject","paddedNE","lng","lat","addFeatureProperties","_map$getCenter","getCenter","coord","precision","debug","minX","minY","maxX","maxY","width","height","cellSize","distance","cellQueue","bestCell","area","centroid","getCentroidCell","bboxCell","numProbes","potentiallyQueue","cell","console","log","round","ch","polylabel","p1","TurfPoint","p2","turfDistance","units","geometryType","getViewport","bind","flat","parseFloat","toFixed","defaults","PRECISION","center","zoom","getZoom","toArray","isMaxZoom","getMaxZoom","isMinZoom","getMinZoom","addMapHoverBehaviour","featureLayers","labelLayers","on","concat","queryRenderedFeatures","point","layers","originalEvent","altKey","find","includes","layer","isLabel","getCanvas","style","cursor","getDetail","_x","_getDetail","_callee","pixel","selectedLayers","viewport","label","selectedId","_context","getFeatures","getHighlightedLabel","getSelectedFeatureId","resultType","_next","_throw","_map$getStyle","_layers","_layers2","locationLayers","paddingBox","scale","getFocusBounds","getStyle","_l$layout","layout","visibility","featuresAtPixel","combined","lngLat","renderedFeaturesInViewport","featuresTotal","Set","intersectingFeatures","feature","lines","line","codeB","lastCode","codeA","part","lineclip","poly","TurfBboxClip","TurfPolygon","TurfMultiPolygon","intersectFeatures","polygonFeatures","MAX_FEATURES","group","parts","turfArea","largest","featuresInViewport","sort","pow","featureType","hasPixelLayers","some","items","isFeaturesInMap","isPixelFeaturesAtPixel","isPixelFeaturesInMap","toggleSelectedFeature","_step","_iterator","_n","F","_createForOfIteratorHelper","setLayoutProperty","setFilter","err","text","_map$getStyle2","_features$0$propertie","_features$","getLabel","getLabels","pixels","xS","yS","locationMarkerHTML","el","document","createElement","className","innerHTML","SYMBOL_PLACEMENT","TEXT_FIELD","amendLineSymbolLayers","addHighlightedLabelLayer","addSource","addLayer","source","paint","addShortcutMarkers","shortcutMarkers","Marker","modules","m","remove","key","offset","SHORTCUT_LABEL_OFFSET","element","setLngLat","addTo","highlightLabel","_feature$layer$layout","moveLayer","getSource","setData","textScale","textField","sections","setPaintProperty","_map$getSource","addSelectedLayers","isDarkBasemap","_loop","getLayer","removeLayer","setTimeout","loadSymbols","_this$symbols","fn","symbols","all","fetch","responses","texts","loadImage","getName","path","split","parsed","parseSVG","container","getCanvasContainer","insertAdjacentHTML","lastChild","computedStyleToInlineStyle","recursive","base64","btoa","outerHTML","img","reject","onload","hasImage","addImage","onerror","src","_asyncToGenerator","getResolution","cos","getAttributions","currentZoom","activeAttributions","minZoom","undefined","minzoom","maxZoom","maxzoom","sources","attribution","add","handleLoad","_handleLoad","resolution","attributions","isLoaded","dispatchEvent","CustomEvent","detail","framework","handleStyleLoad","_handleStyleLoad","_callee2","_context2","baseLayers","handleIdle","_handleIdle","_callee3","_detail$features","offsetTop","offsetLeft","offsetWidth","offsetHeight","_paddingBox$parentNod","parentOffsetTop","parentOffsetLeft","_context3","parentNode","handleMoveStart","_handleMoveStart","_callee4","_context4","hideLabel","isUserInitiated","handleMove","handleStyleData","_this","target","handleError","_defineProperties","_wrapNativeSuper","Map","Function","indexOf","_isNativeFunction","has","get","set","Wrapper","_isNativeReflectConstruct","Reflect","construct","_setPrototypeOf","_construct","_getPrototypeOf","Boolean","valueOf","Provider","_EventTarget","_ref","transformRequest","_classCallCheck","ReferenceError","_assertThisInitialized","_possibleConstructorReturn","_callSuper","srid","capabilities","default","hasDraw","hasSize","window","globalThis","selectedCoordinate","_inherits","options","_this2","isLatest","module","addMap","promises","ResizeObserver","install","_this$map","_this3","maxBounds","size","callBack","_module$default","MaplibreMap","getScale","url","storeDefaults","MAX_BOUNDS_4326","fadeDuration","attributionControl","dragRotate","setPadding","getFocusPadding","fitBounds","animate","flyTo","touchZoomRotate","disableRotation","setPixelRatio","devicePixelRatio","canvas","removeAttribute","display","targetMarker","locationMarker","lastCallTime","throttleHandleMove","now","Date","debounceHandleIdle","debounce","DELAY","panBy","ANIMATION","zoomIn","zoomOut","_this$draw","_this$draw$setStyle","setStyle","diff","draw","isAnimate","easeTo","_this$map2","_this4","resize","linear","duration","_zoom","_this5","Draw","hasData","isVisible","getElement","classList","toggle","css","MARKER_VISIBLE","_queryFeature","_queryPoint","_x2","success","error","navigator","geolocation","getCurrentPosition","_ref2","position","longitude","latitude","_x3","enableHighAccuracy","addClassName","direction","_labels$index","_labels$index2","labels","_this$map$getCenter","index","spatialNavigate","EventTarget","curve","getCoord","getGeom","wait","timeoutId","_len","args","_key","clearTimeout","earthRadius","factors","centimeters","centimetres","degrees","feet","inches","kilometers","kilometres","meters","metres","miles","millimeters","millimetres","nauticalmiles","radians","yards","feat","isNumber","lineString","multiLineString","multiPolygon","radiansToLength","factor","lengthToRadians","radiansToDegrees","degreesToRadians","num","exports","children","getComputedStyle","getPropertyValue","DOMParser","icon","fill","isSelected","dom","parseFromString","svg","querySelector","viewBox","getAttribute","parseInt","setAttribute","olFill","querySelectorAll","olStroke","bgFill","bgStroke","fgFill","fgStroke","body","to","coordinates1","coordinates2","dLat","dLon","lat1","lat2","atan2","getUnits","RATIO","getOffsetBoundingClientRect","closest","getBoundingClientRect","parseDimensions","dimensions","areaDisplay","SQ_KM","km2","Number","toLocaleString","minimumFractionDigits","maximumFractionDigits","ceil","squareMetresToKm","lengthDisplay","MILE","YARD","pluralize","singular","plural","floor","remainder","metresToImperial","detectCoordinateType","_coords","_slicedToArray","getDistance","coord1","coord2","box","boxX","boxY","parentX","parentY","every","getMapPixel","getDescription","place","focusPlace","focusArea","ew","ns","getArea","findPlace","getStatus","action","isBoundsChange","state","status","findIndex","oCentre","originalZoom","isSameCentre","JSON","stringify","isSameZoom","change","ns1","ns2","ew1","ew2","nsd","ewd","bearing","getBearing","ewc","join","nsc","getDirection","getBoundsChange","description","getPlace","oPlace","newPlace","parseCentre","_coords2","mb","parseZoom","getShortcutKey","featuresViewport","number","getFeatureShape","_feature$geometry","_geometry$coordinates","_coordinates$","x1","y1","_coordinates$2","minDist","maxDist","minEdge","maxEdge","_coordinates$i","xA","yA","_coordinates","xB","yB","dist","hypot","edgeDist","tolerance","isCirclePolygon","toLowerCase","_feature$geometry2","flatCoords","start","quadrant","offsetX","offsetY","distances","small","medium","large","getPoint","_el$getBoundingClient","_e$nativeEvent","nativeEvent","clientX","clientY","validStyles","STYLES","localStorage","getItem"],"sourceRoot":""}