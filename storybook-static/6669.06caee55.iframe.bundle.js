"use strict";(self.webpackChunk_defra_flood_map=self.webpackChunk_defra_flood_map||[]).push([[6669],{"./node_modules/@turf/distance/dist/esm/index.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{I:()=>distance});var _turf_invariant__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/@turf/invariant/dist/esm/index.js"),_turf_helpers__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/@turf/helpers/dist/esm/index.js");function distance(from,to,options={}){var coordinates1=(0,_turf_invariant__WEBPACK_IMPORTED_MODULE_0__.uG)(from),coordinates2=(0,_turf_invariant__WEBPACK_IMPORTED_MODULE_0__.uG)(to),dLat=(0,_turf_helpers__WEBPACK_IMPORTED_MODULE_1__.tR)(coordinates2[1]-coordinates1[1]),dLon=(0,_turf_helpers__WEBPACK_IMPORTED_MODULE_1__.tR)(coordinates2[0]-coordinates1[0]),lat1=(0,_turf_helpers__WEBPACK_IMPORTED_MODULE_1__.tR)(coordinates1[1]),lat2=(0,_turf_helpers__WEBPACK_IMPORTED_MODULE_1__.tR)(coordinates2[1]),a=Math.pow(Math.sin(dLat/2),2)+Math.pow(Math.sin(dLon/2),2)*Math.cos(lat1)*Math.cos(lat2);return(0,_turf_helpers__WEBPACK_IMPORTED_MODULE_1__.cJ)(2*Math.atan2(Math.sqrt(a),Math.sqrt(1-a)),options.units)}},"./node_modules/@turf/helpers/dist/esm/index.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{Gf:()=>lengthToRadians,NU:()=>multiLineString,cJ:()=>radiansToLength,g5:()=>multiPolygon,n1:()=>polygon,nv:()=>radiansToDegrees,tR:()=>degreesToRadians,wi:()=>lineString,zX:()=>earthRadius,zx:()=>point});var earthRadius=6371008.8,factors={centimeters:100*earthRadius,centimetres:100*earthRadius,degrees:360/(2*Math.PI),feet:3.28084*earthRadius,inches:39.37*earthRadius,kilometers:earthRadius/1e3,kilometres:earthRadius/1e3,meters:earthRadius,metres:earthRadius,miles:earthRadius/1609.344,millimeters:1e3*earthRadius,millimetres:1e3*earthRadius,nauticalmiles:earthRadius/1852,radians:1,yards:1.0936*earthRadius};function feature(geom,properties,options={}){const feat={type:"Feature"};return(0===options.id||options.id)&&(feat.id=options.id),options.bbox&&(feat.bbox=options.bbox),feat.properties=properties||{},feat.geometry=geom,feat}function point(coordinates,properties,options={}){if(!coordinates)throw new Error("coordinates is required");if(!Array.isArray(coordinates))throw new Error("coordinates must be an Array");if(coordinates.length<2)throw new Error("coordinates must be at least 2 numbers long");if(!isNumber(coordinates[0])||!isNumber(coordinates[1]))throw new Error("coordinates must contain numbers");return feature({type:"Point",coordinates},properties,options)}function polygon(coordinates,properties,options={}){for(const ring of coordinates){if(ring.length<4)throw new Error("Each LinearRing of a Polygon must have 4 or more Positions.");if(ring[ring.length-1].length!==ring[0].length)throw new Error("First and last Position are not equivalent.");for(let j=0;j<ring[ring.length-1].length;j++)if(ring[ring.length-1][j]!==ring[0][j])throw new Error("First and last Position are not equivalent.")}return feature({type:"Polygon",coordinates},properties,options)}function lineString(coordinates,properties,options={}){if(coordinates.length<2)throw new Error("coordinates must be an array of two or more positions");return feature({type:"LineString",coordinates},properties,options)}function multiLineString(coordinates,properties,options={}){return feature({type:"MultiLineString",coordinates},properties,options)}function multiPolygon(coordinates,properties,options={}){return feature({type:"MultiPolygon",coordinates},properties,options)}function radiansToLength(radians,units="kilometers"){const factor=factors[units];if(!factor)throw new Error(units+" units is invalid");return radians*factor}function lengthToRadians(distance,units="kilometers"){const factor=factors[units];if(!factor)throw new Error(units+" units is invalid");return distance/factor}function radiansToDegrees(radians){return 180*(radians%(2*Math.PI))/Math.PI}function degreesToRadians(degrees){return degrees%360*Math.PI/180}function isNumber(num){return!isNaN(num)&&null!==num&&!Array.isArray(num)}},"./node_modules/@turf/invariant/dist/esm/index.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{function getCoord(coord){if(!coord)throw new Error("coord is required");if(!Array.isArray(coord)){if("Feature"===coord.type&&null!==coord.geometry&&"Point"===coord.geometry.type)return[...coord.geometry.coordinates];if("Point"===coord.type)return[...coord.coordinates]}if(Array.isArray(coord)&&coord.length>=2&&!Array.isArray(coord[0])&&!Array.isArray(coord[1]))return[...coord];throw new Error("coord must be GeoJSON Point or an Array of numbers")}function getGeom(geojson){return"Feature"===geojson.type?geojson.geometry:geojson}__webpack_require__.d(__webpack_exports__,{bg:()=>getGeom,uG:()=>getCoord})},"./src/js/lib/debounce.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{s:()=>debounce});const debounce=(fn,wait)=>{let timeoutId=null;return(...args)=>{window.clearTimeout(timeoutId),timeoutId=window.setTimeout((()=>{fn(...args)}),wait)}}},"./src/js/lib/viewport.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{BS:()=>getStatus,CK:()=>getShortcutKey,Ig:()=>getFocusPadding,Ox:()=>getPlace,X_:()=>getScale,Yf:()=>getDistance,ZM:()=>getMapPixel,cj:()=>spatialNavigate,dN:()=>parseCentre,fC:()=>getPoint,fY:()=>getDescription,gd:()=>getStyle,mG:()=>getFeatureShape,mK:()=>getFocusBounds,qo:()=>detectCoordinateType,zw:()=>parseZoom});var _turf_distance__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/@turf/distance/dist/esm/index.js"),_turf_helpers__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/@turf/helpers/dist/esm/index.js"),_store_constants__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./src/js/store/constants.js");const getUnits=metres=>{let units;return units=metres<800?`${metres} metres`:metres<5e3?(metres/1e3*.621371).toFixed(1)+" miles":Math.round(metres/1e3*.621371)+" miles",units},getBoundsChange=(oCentre,originalZoom,isMaxZoom,isMinZoom,center,zoom)=>{const isSameCentre=JSON.stringify(oCentre)===JSON.stringify(center),isSameZoom=originalZoom===zoom,maxZoom=isMaxZoom?" (Maximum zoom reached)":"",minZoom=isMinZoom?" (Minimum zoom reached)":"";let change="";if(oCentre&&originalZoom&&!(isSameCentre&&isSameZoom))if(isSameCentre||isSameZoom)if(isSameCentre){change=`Zoomed ${zoom>originalZoom?"in":"out"}${maxZoom}${minZoom}: `}else change=`Map move: ${((coord1,coord2)=>{coord1=coord1.map((n=>n>1e3?Math.round(n):Math.round(1e5*n)/1e5)),coord2=coord2.map((n=>n>1e3?Math.round(n):Math.round(1e5*n)/1e5));const ns1=[coord1[0],coord1[1]],ns2=[coord1[0],coord2[1]],ew1=[coord1[0],coord1[1]],ew2=[coord2[0],coord1[1]],nsd=getDistance(ns1,ns2),ewd=getDistance(ew1,ew2),bearing=((coord1,coord2)=>[coord1[0]<coord2[0]&&"east",coord1[0]>coord2[0]&&"west",coord1[1]<coord2[1]&&"north",coord1[1]>coord2[1]&&"south"].filter((b=>b&&"string"==typeof b)))(coord1,coord2),ewc=bearing.filter((b=>["east","west"].includes(b))).join(""),nsc=bearing.filter((b=>["north","south"].includes(b))).join(""),ew=ewc?`${ewc} ${getUnits(ewd)}`:"";return(nsc?`${nsc} ${getUnits(nsd)}`:"")+(ewc&&nsc?", ":"")+ew})(oCentre,center)}, `;else change=`New area${maxZoom}${minZoom}: `;return change},getOffsetBoundingClientRect=el=>(el.closest("[data-fm-main]")||document.body).getBoundingClientRect(),detectCoordinateType=coords=>{if(3===coords.length)return"BNG";const[x,y]=coords;return x>=-180&&x<=180&&y>=-90&&y<=90?"WSG84":x>180&&y>90?"BNG":"Unknown"},getDistance=(coord1,coord2)=>{let distance;if(coord1[0]>1e3){const x=Math.abs(coord1[0]-coord2[0]),y=Math.abs(coord1[1]-coord2[1]);distance=Math.sqrt(Math.pow(x,2)+Math.pow(y,2))}else{const p1=new _turf_helpers__WEBPACK_IMPORTED_MODULE_1__.zx(coord1),p2=new _turf_helpers__WEBPACK_IMPORTED_MODULE_1__.zx(coord2);distance=(0,_turf_distance__WEBPACK_IMPORTED_MODULE_2__.I)(p1,p2,{units:"metres"})}return Math.round(distance)},getFocusPadding=(el,scale)=>{let padding;if(el){const parent=getOffsetBoundingClientRect(el),box=el.getBoundingClientRect(),boxX=box.x||box.left,boxY=box.y||box.top,parentX=parent.x||parent.left,parentY=parent.y||parent.top;padding={top:(boxY-parentY)/scale,left:(boxX-parentX)/scale,right:(parent.width-box.width-(boxX-parentX))/scale,bottom:(parent.height-box.height-(boxY-parentY))/scale}}return Object.values(padding).every((i=>i>=0))&&padding},getFocusBounds=(el,scale)=>{let bounds;if(el){const parent=getOffsetBoundingClientRect(el),box=el.getBoundingClientRect(),m=10;bounds=[[((box.x||box.left)-(parent.x||parent.left)+m)/scale,((box.y||box.top)-(parent.y||parent.top)+box.height-m)/scale],[(box.width+((box.x||box.left)-(parent.x||parent.left))-m)/scale,((box.y||box.top)-(parent.y||parent.top)+m)/scale]]}return bounds},getMapPixel=(el,scale)=>{const parent=getOffsetBoundingClientRect(el),box=el.getBoundingClientRect(),left=((box.x||box.left)-(parent.x||parent.left))/scale,top=((box.y||box.top)-(parent.y||parent.top))/scale;return[left+box.width/2/scale,top+box.height/2/scale]},getDescription=(place,bounds,features)=>{const{featuresTotal,isFeaturesInMap,isPixelFeaturesAtPixel,isPixelFeaturesInMap}=features||{};let text="";featuresTotal?text=`${featuresTotal} feature${1===featuresTotal?"":"s"} in this area. `:isPixelFeaturesAtPixel?text="Data visible at the center coordinate. ":isPixelFeaturesInMap?text="No data visible at the center coordinate. ":isFeaturesInMap&&(text="No feature data in this area. ");const focusPlace=place?`approximate centre ${place}, `:"",focusArea=`covering ${(bounds=>{const ew=getDistance([bounds[0],bounds[1]],[bounds[2],bounds[1]]),ns=getDistance([bounds[0],bounds[1]],[bounds[0],bounds[3]]);return`${getUnits(ew)} by ${getUnits(ns)}`})(bounds)}`;return`${focusPlace}${focusArea}. ${text}${place?"":"Use ALT plus I to find closest place"}`},getStatus=(action,isBoundsChange,place,state,current)=>{const{center,bounds,zoom,isMaxZoom,isMinZoom,features,label,selectedId}=current;let status=null;if(label)status=label;else if(selectedId){status=((featuresInViewport,id)=>{const total=featuresInViewport.length,index=featuresInViewport.findIndex((f=>f.id===id));return index>=0&&`${total} feature${1!==total?"s":""} in this area. ${featuresInViewport[index].name}. ${index+1} of ${total} highlighted.`})(features?.featuresInViewport,selectedId)}else if("DATA"===action)status="Map change: new data. Use ALT plus I to get new details";else if(isBoundsChange){const direction=getBoundsChange(state.center,state.zoom,isMaxZoom,isMinZoom,center,zoom);status=`${direction}${direction?"f":"F"}ocus area ${getDescription(place,bounds,features)}`}else status="";return status},getPlace=(isUserInitiated,action,oPlace,newPlace)=>{let place;return isUserInitiated||(place="RESET"===action?oPlace:newPlace),place},parseCentre=(value,srid)=>{const mb=_store_constants__WEBPACK_IMPORTED_MODULE_0__.NT[`MAX_BOUNDS_${srid}`];let isInRange,coords=value?.split(",");return Array.isArray(coords)&&3===coords?.length?(coords=coords.slice(0,2).map((x=>parseFloat(x))),coords=!coords.some(isNaN)&&coords,coords?(isInRange="27700"===srid?!!coords.filter((c=>c>=0)).length:coords[0]>mb[0]&&coords[0]<mb[2]&&coords[1]>mb[1]&&coords[1]<mb[3],isInRange?coords:null):null):null},parseZoom=value=>{const coords=value?.split(",");if(!Array.isArray(coords)||3!==coords?.length)return null;const zoom=parseFloat(coords[2]);return zoom.isNaN?null:zoom},getShortcutKey=(e,featuresViewport)=>{const number=e.code.slice(-1);return featuresViewport.length>=number?featuresViewport[number-1].id:""},getFeatureShape=feature=>{if((geometry=>{const coordinates=geometry?.coordinates?.[0];if(65!==coordinates?.length)return!1;const[x1,y1]=coordinates[0],[x2,y2]=coordinates[32],center=[(x1+x2)/2,(y1+y2)/2];let minDist=1/0,maxDist=-1/0,minEdge=1/0,maxEdge=-1/0;for(let i=0;i<64;i++){const[xA,yA]=coordinates[i],[xB,yB]=coordinates[(i+1)%64],dist=Math.hypot(xA-center[0],yA-center[1]);minDist=Math.min(minDist,dist),maxDist=Math.max(maxDist,dist);const edgeDist=Math.hypot(xB-xA,yB-yA);minEdge=Math.min(minEdge,edgeDist),maxEdge=Math.max(maxEdge,edgeDist)}const tolerance=(detectCoordinateType(center),.3);return Math.abs(maxDist-minDist)<tolerance&&Math.abs(maxEdge-minEdge)<tolerance})(feature?.geometry))return"circle";if("polygon"===feature?.geometry?.type?.toLowerCase()){const coords=feature.geometry?.coordinates,flatCoords=coords&&Array.from(new Set(coords.flat(2)))||null;return 4===flatCoords?.length?"square":"polygon"}return null},spatialNavigate=(direction,start,pixels)=>{const quadrant=pixels.filter((p=>{const offsetX=Math.abs(p[0]-start[0]),offsetY=Math.abs(p[1]-start[1]);let isQuadrant=!1;return isQuadrant="up"===direction?p[1]<=start[1]&&offsetY>=offsetX:"down"===direction?p[1]>start[1]&&offsetY>=offsetX:"left"===direction?p[0]<=start[0]&&offsetY<offsetX:p[0]>start[0]&&offsetY<offsetX,isQuadrant&&JSON.stringify(p)!==JSON.stringify(start)}));quadrant.length||quadrant.push(start);const distances=quadrant.map((p=>{return a=Math.abs(start[0]-p[0]),b=Math.abs(start[1]-p[1]),Math.sqrt(Math.pow(a,2)+Math.pow(b,2));var a,b})),closest=quadrant[distances.indexOf(Math.min(...distances))];return pixels.findIndex((i=>JSON.stringify(i)===JSON.stringify(closest)))},getScale=size=>({small:1,medium:1.5,large:2}[size]||1),getPoint=(el,e,scale)=>{const{left,top}=el.getBoundingClientRect(),{clientX,clientY}=e.nativeEvent;return[(clientX-left)/scale,(clientY-top)/scale]},getStyle=(styles=[])=>{const validStyles=styles.filter((s=>_store_constants__WEBPACK_IMPORTED_MODULE_0__.NT.STYLES.includes(s.name))),style=window.localStorage.getItem("style");return validStyles.find((s=>s.name===style))||validStyles.find((s=>"default"===s.name))}},"./src/js/provider/esri-sdk/constants.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{N:()=>defaults});const defaults={PRECISION:6,POLYGON_QUERY_STROKE:"#d4351c",POLYGON_QUERY_STROKE_DARK:"#ffffff",POLYGON_QUERY_STROKE_WIDTH:"2px",POLYGON_QUERY_FILL:[0,120,255,.2],POLYGON_QUERY_FILL_DARK:[0,120,255,.2],DELAY:500,ZOOM_TOLERANCE:.01}},"./src/js/provider/esri-sdk/provider.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{default:()=>provider});var constants=__webpack_require__("./src/js/provider/esri-sdk/constants.js");async function getDetail(point){const viewport=await getViewport.bind(this)(),features=await getFeatures.bind(this)(point);return{...viewport,resultType:features.resultType,coord:features.coord,features}}async function getViewport(){const{view}=this,{maxZoom,minZoom}=view.constraints,{xmin,ymin,xmax,ymax}=view.extent,bounds=[xmin,ymin,xmax,ymax],{x,y}=view.center;return{bounds,center:[x,y].map((n=>Math.round(10*n)/10)),zoom:parseFloat(view.zoom.toFixed(constants.N.PRECISION)),isMaxZoom:view.zoom+constants.N.ZOOM_TOLERANCE>=maxZoom,isMinZoom:view.zoom-constants.N.ZOOM_TOLERANCE<=minZoom}}async function getFeatures(point){const{view,map,locationLayers}=this,hasVisiblePixelLayers=map.layers.some((l=>locationLayers?.includes(l.id)&&l.visible)),pixel={x:point[0],y:point[1]},items=(await view.hitTest(pixel)).results.filter((r=>locationLayers.some((l=>r.layer.id===l)))).map((f=>({...f.graphic.attributes,id:f.graphic.uid,layer:f.layer.id})));let coord=view.toMap(pixel);coord=[coord.x,coord.y].map((n=>Math.round(n)));const lngLat=[coord[0],coord[1]];return{resultType:"pixel",items,featuresTotal:null,featuresInViewport:[],isFeaturesInMap:!1,isPixelFeaturesAtPixel:!!items.length,isPixelFeaturesInMap:hasVisiblePixelLayers,coord,lngLat}}const targetMarkerGraphic=(coord,isDark,hasData)=>({geometry:{type:"point",x:coord[0],y:coord[1],spatialReference:27700},symbol:{type:"simple-marker",path:hasData?"M5.035 20H1v-2h4.035C5.525 11.069 11.069 5.525 18 5.035V1h2v4.035c6.931.49 12.475 6.034 12.965 12.965H37v2h-4.035c-.49 6.931-6.034 12.475-12.965 12.965V37h-2v-4.035C11.069 32.475 5.525 26.931 5.035 20zM19 7A12.01 12.01 0 0 0 7 19a12.01 12.01 0 0 0 12 12 12.01 12.01 0 0 0 12-12A12.01 12.01 0 0 0 19 7zm0 10a2 2 0 1 1 0 4 2 2 0 1 1 0-4z":"M5.035 20H1v-2h4.035a14.02 14.02 0 0 1 .246-1.8l1.96.399C7.083 17.375 7 18.178 7 19s.083 1.625.241 2.401l-1.96.399a14.02 14.02 0 0 1-.246-1.8zM20 5.035a14.02 14.02 0 0 1 1.8.246l-.399 1.96C20.625 7.083 19.822 7 19 7s-1.625.083-2.401.241l-.399-1.96a14.02 14.02 0 0 1 1.8-.246V1h2v4.035zm-2 27.93a14.02 14.02 0 0 1-1.8-.246l.399-1.96c.776.158 1.579.241 2.401.241s1.625-.083 2.401-.241l.399 1.96a14.02 14.02 0 0 1-1.8.246V37h-2v-4.035zM32.965 20a14.02 14.02 0 0 1-.246 1.8l-1.96-.399c.158-.776.241-1.579.241-2.401s-.083-1.625-.241-2.401l1.96-.399a14.02 14.02 0 0 1 .246 1.8H37v2h-4.035zM19 17a2 2 0 1 1 0 4 2 2 0 1 1 0-4zm3.8-9.385l.634-1.897a13.98 13.98 0 0 1 4.848 2.805l-1.327 1.496c-1.196-1.06-2.605-1.886-4.155-2.404zm5.181 3.43l1.496-1.327a13.98 13.98 0 0 1 2.805 4.848l-1.897.634c-.518-1.55-1.344-2.959-2.404-4.155zM30.385 22.8l1.897.634a13.98 13.98 0 0 1-2.805 4.848l-1.496-1.327c1.06-1.196 1.886-2.605 2.404-4.155zm-3.43 5.181l1.327 1.496a13.98 13.98 0 0 1-4.848 2.805l-.634-1.897c1.55-.518 2.959-1.344 4.155-2.404zM15.2 30.385l-.634 1.897a13.98 13.98 0 0 1-4.848-2.805l1.327-1.496c1.196 1.06 2.605 1.886 4.155 2.404zm-5.181-3.43l-1.496 1.327a13.98 13.98 0 0 1-2.805-4.848l1.897-.634c.518 1.55 1.344 2.959 2.404 4.155zM7.615 15.2l-1.897-.634a13.98 13.98 0 0 1 2.805-4.848l1.496 1.327c-1.06 1.196-1.886 2.605-2.404 4.155zm3.43-5.181L9.718 8.523a13.98 13.98 0 0 1 4.848-2.805l.634 1.897c-1.55.518-2.959 1.344-4.155 2.404z",size:"38px",color:isDark?"#ffffff":"#0b0c0c",outline:{color:isDark?"#0b0c0c":"#ffffff",width:0}}}),getAttributions=layers=>{const sources=layers[0].currentStyleInfo.style.sources,activeAttributions=new Set;return Object.keys(sources).forEach((source=>{activeAttributions.add(sources[source].attribution)})),Array.from(activeAttributions)};function handleBaseTileLayerLoaded(){const{framework,modules,view,baseTileLayer}=this;this.isLoaded=!0;const resolution=view.resolution,attributions=getAttributions([baseTileLayer]);this.dispatchEvent(new CustomEvent("load",{detail:{modules,framework,resolution,zoom:view.zoom,attributions}}))}async function handleStyleChange(currentStyle,newStyle){newStyle.name!==currentStyle.name&&((async provider=>{const{graphicsLayer,targetMarker,isDark}=provider;if(!targetMarker)return;const halo=targetMarker[0].clone(),fill=targetMarker[1].clone();halo.symbol.outline.color=isDark?"#0b0c0c":"#ffffff",fill.symbol.color=isDark?"#ffffff":"#0b0c0c",graphicsLayer.remove(targetMarker[0]),graphicsLayer.remove(targetMarker[1]),graphicsLayer.addMany([halo,fill]),provider.targetMarker=[halo,fill]})(this),this.draw?.reColour()),this.dispatchEvent(new CustomEvent("style",{detail:{type:"style"}}))}async function handleStationary(){const{paddingBox,baseTileLayer}=this,{offsetTop,offsetLeft,offsetWidth,offsetHeight}=paddingBox,{offsetTop:parentOffsetTop,offsetLeft:parentOffsetLeft}=paddingBox.parentNode,point=[offsetLeft+parentOffsetLeft+offsetWidth/2,offsetTop+parentOffsetTop+offsetHeight/2];this.isUserInitiated=!1;const attributions=getAttributions([baseTileLayer]),detail=await getDetail.bind(this)(point);this.dispatchEvent(new CustomEvent("update",{detail:{...detail,attributions}}))}function handleMoveStart(){this.dispatchEvent(new CustomEvent("movestart",{detail:{isUserInitiated:this.isUserInitiated}}))}function handleMove(){const{view,baseTileLayer}=this,{maxZoom,minZoom}=view.constraints,isMaxZoom=view.zoom+constants.N.ZOOM_TOLERANCE>=maxZoom,isMinZoom=view.zoom-constants.N.ZOOM_TOLERANCE<=minZoom,zoom=view.zoom,resolution=view.resolution,attributions=getAttributions([baseTileLayer]);this.dispatchEvent(new CustomEvent("move",{detail:{isMaxZoom,isMinZoom,zoom,resolution,attributions}}))}var debounce=__webpack_require__("./src/js/lib/debounce.js"),viewport=__webpack_require__("./src/js/lib/viewport.js"),capabilities=__webpack_require__("./src/js/lib/capabilities.js"),store_constants=__webpack_require__("./src/js/store/constants.js");class Provider extends EventTarget{constructor({esriConfigCallback}){super(),this.srid=27700,this.capabilities=capabilities.R.esri,this.esriConfigCallback=esriConfigCallback,this.isUserInitiated=!1,this.isLoaded=!1}init(options){Promise.all([Promise.all([__webpack_require__.e(9014),__webpack_require__.e(5751),__webpack_require__.e(563),__webpack_require__.e(909),__webpack_require__.e(9214),__webpack_require__.e(803),__webpack_require__.e(6768),__webpack_require__.e(6459),__webpack_require__.e(4057),__webpack_require__.e(4408),__webpack_require__.e(1161),__webpack_require__.e(4480),__webpack_require__.e(4070),__webpack_require__.e(2248),__webpack_require__.e(3519),__webpack_require__.e(3820),__webpack_require__.e(772),__webpack_require__.e(4054),__webpack_require__.e(3852),__webpack_require__.e(1866),__webpack_require__.e(2755)]).then(__webpack_require__.bind(__webpack_require__,"./node_modules/@arcgis/core/config.js")),Promise.all([__webpack_require__.e(9014),__webpack_require__.e(5751),__webpack_require__.e(563),__webpack_require__.e(909),__webpack_require__.e(9214),__webpack_require__.e(803),__webpack_require__.e(6768),__webpack_require__.e(6459),__webpack_require__.e(4057),__webpack_require__.e(4408),__webpack_require__.e(1161),__webpack_require__.e(4480),__webpack_require__.e(4070),__webpack_require__.e(2248),__webpack_require__.e(3519),__webpack_require__.e(3820),__webpack_require__.e(772),__webpack_require__.e(4054),__webpack_require__.e(3852),__webpack_require__.e(1866),__webpack_require__.e(2755)]).then(__webpack_require__.bind(__webpack_require__,"./node_modules/@arcgis/core/Map.js")),Promise.all([__webpack_require__.e(9014),__webpack_require__.e(5751),__webpack_require__.e(563),__webpack_require__.e(909),__webpack_require__.e(9214),__webpack_require__.e(803),__webpack_require__.e(6768),__webpack_require__.e(6459),__webpack_require__.e(4057),__webpack_require__.e(4408),__webpack_require__.e(1161),__webpack_require__.e(4480),__webpack_require__.e(4070),__webpack_require__.e(2248),__webpack_require__.e(3519),__webpack_require__.e(3820),__webpack_require__.e(772),__webpack_require__.e(4054),__webpack_require__.e(3852),__webpack_require__.e(1866),__webpack_require__.e(2755)]).then(__webpack_require__.bind(__webpack_require__,"./node_modules/@arcgis/core/views/MapView.js")),Promise.all([__webpack_require__.e(9014),__webpack_require__.e(5751),__webpack_require__.e(563),__webpack_require__.e(909),__webpack_require__.e(9214),__webpack_require__.e(803),__webpack_require__.e(6768),__webpack_require__.e(6459),__webpack_require__.e(4057),__webpack_require__.e(4408),__webpack_require__.e(1161),__webpack_require__.e(4480),__webpack_require__.e(4070),__webpack_require__.e(2248),__webpack_require__.e(3519),__webpack_require__.e(3820),__webpack_require__.e(772),__webpack_require__.e(4054),__webpack_require__.e(3852),__webpack_require__.e(1866),__webpack_require__.e(2755)]).then(__webpack_require__.bind(__webpack_require__,"./node_modules/@arcgis/core/geometry/Extent.js")),Promise.all([__webpack_require__.e(9014),__webpack_require__.e(5751),__webpack_require__.e(563),__webpack_require__.e(909),__webpack_require__.e(9214),__webpack_require__.e(803),__webpack_require__.e(6768),__webpack_require__.e(6459),__webpack_require__.e(4057),__webpack_require__.e(4408),__webpack_require__.e(1161),__webpack_require__.e(4480),__webpack_require__.e(4070),__webpack_require__.e(2248),__webpack_require__.e(3519),__webpack_require__.e(3820),__webpack_require__.e(772),__webpack_require__.e(4054),__webpack_require__.e(3852),__webpack_require__.e(1866),__webpack_require__.e(2755)]).then(__webpack_require__.bind(__webpack_require__,"./node_modules/@arcgis/core/geometry/Point.js")),Promise.all([__webpack_require__.e(9014),__webpack_require__.e(5751),__webpack_require__.e(563),__webpack_require__.e(909),__webpack_require__.e(9214),__webpack_require__.e(803),__webpack_require__.e(6768),__webpack_require__.e(6459),__webpack_require__.e(4057),__webpack_require__.e(4408),__webpack_require__.e(1161),__webpack_require__.e(4480),__webpack_require__.e(4070),__webpack_require__.e(2248),__webpack_require__.e(3519),__webpack_require__.e(3820),__webpack_require__.e(772),__webpack_require__.e(4054),__webpack_require__.e(3852),__webpack_require__.e(1866),__webpack_require__.e(2755)]).then(__webpack_require__.bind(__webpack_require__,"./node_modules/@arcgis/core/layers/VectorTileLayer.js")),Promise.all([__webpack_require__.e(9014),__webpack_require__.e(5751),__webpack_require__.e(563),__webpack_require__.e(909),__webpack_require__.e(9214),__webpack_require__.e(803),__webpack_require__.e(6768),__webpack_require__.e(6459),__webpack_require__.e(4057),__webpack_require__.e(4408),__webpack_require__.e(1161),__webpack_require__.e(4480),__webpack_require__.e(4070),__webpack_require__.e(2248),__webpack_require__.e(3519),__webpack_require__.e(3820),__webpack_require__.e(772),__webpack_require__.e(4054),__webpack_require__.e(3852),__webpack_require__.e(1866),__webpack_require__.e(2755)]).then(__webpack_require__.bind(__webpack_require__,"./node_modules/@arcgis/core/layers/FeatureLayer.js")),Promise.all([__webpack_require__.e(9014),__webpack_require__.e(5751),__webpack_require__.e(563),__webpack_require__.e(909),__webpack_require__.e(9214),__webpack_require__.e(803),__webpack_require__.e(6768),__webpack_require__.e(6459),__webpack_require__.e(4057),__webpack_require__.e(4408),__webpack_require__.e(1161),__webpack_require__.e(4480),__webpack_require__.e(4070),__webpack_require__.e(2248),__webpack_require__.e(3519),__webpack_require__.e(3820),__webpack_require__.e(772),__webpack_require__.e(4054),__webpack_require__.e(3852),__webpack_require__.e(1866),__webpack_require__.e(2755)]).then(__webpack_require__.bind(__webpack_require__,"./node_modules/@arcgis/core/layers/GraphicsLayer.js")),Promise.all([__webpack_require__.e(9014),__webpack_require__.e(5751),__webpack_require__.e(563),__webpack_require__.e(909),__webpack_require__.e(9214),__webpack_require__.e(803),__webpack_require__.e(6768),__webpack_require__.e(6459),__webpack_require__.e(4057),__webpack_require__.e(4408),__webpack_require__.e(1161),__webpack_require__.e(4480),__webpack_require__.e(4070),__webpack_require__.e(2248),__webpack_require__.e(3519),__webpack_require__.e(3820),__webpack_require__.e(772),__webpack_require__.e(4054),__webpack_require__.e(3852),__webpack_require__.e(1866),__webpack_require__.e(2755)]).then(__webpack_require__.bind(__webpack_require__,"./node_modules/@arcgis/core/layers/support/TileInfo.js")),Promise.all([__webpack_require__.e(9014),__webpack_require__.e(5751),__webpack_require__.e(563),__webpack_require__.e(909),__webpack_require__.e(9214),__webpack_require__.e(803),__webpack_require__.e(6768),__webpack_require__.e(6459),__webpack_require__.e(4057),__webpack_require__.e(4408),__webpack_require__.e(1161),__webpack_require__.e(4480),__webpack_require__.e(4070),__webpack_require__.e(2248),__webpack_require__.e(3519),__webpack_require__.e(3820),__webpack_require__.e(772),__webpack_require__.e(4054),__webpack_require__.e(3852),__webpack_require__.e(1866),__webpack_require__.e(2755)]).then(__webpack_require__.bind(__webpack_require__,"./node_modules/@arcgis/core/core/reactiveUtils.js"))]).then((modules=>this.addMap(modules,options)))}remove(){}async addMap(modules,options){const{container,paddingBox,bounds,maxExtent,center,zoom,minZoom,maxZoom,style,locationLayers,callBack}=options,[esriConfig,EsriMap,MapView,Extent,Point,VectorTileLayer,FeatureLayer,GraphicsLayer,TileInfo]=modules.slice(0,9).map((m=>m.default)),{watch:reactiveWatch,when:reactiveWhen}=modules[9];this.esriConfigCallback&&await this.esriConfigCallback(esriConfig);const baseTileLayer=new VectorTileLayer({id:"baselayer",url:style.url,visible:!0}),graphicsLayer=new GraphicsLayer({id:"graphicslayer"}),map=new EsriMap({layers:[baseTileLayer,graphicsLayer]}),geometry=maxExtent?this.getExtent(Extent,maxExtent):null,view=new MapView({...Object.fromEntries(Object.entries(options).filter((([key])=>!["height","size"].includes(key)))),spatialReference:27700,container,map,zoom,center:this.getPoint(Point,center),extent:this.getExtent(Extent,bounds),maxExtent:maxExtent||store_constants.NT.MAX_BOUNDS_27700,constraints:{snapToZoom:!1,minZoom,maxZoom,maxScale:0,geometry,lods:TileInfo.create({spatialReference:{wkid:27700}}).lods,rotationEnabled:!1},ui:{components:[]},padding:(0,viewport.Ig)(paddingBox,1),popupEnabled:!1}),canvasContainer=container.querySelector(".esri-view-surface");canvasContainer.removeAttribute("role"),canvasContainer.tabIndex=-1,this.map=map,this.container=container,this.view=view,this.baseTileLayer=baseTileLayer,this.graphicsLayer=graphicsLayer,this.locationLayers=locationLayers,this.paddingBox=paddingBox,this.style=style,this.isDark=["dark","aerial"].includes(style.name),this.esriConfig=esriConfig,this.modules={Map,MapView,Extent,Point,VectorTileLayer,GraphicsLayer,FeatureLayer},this.framework={map,view,esriConfig},this.isStationary=!!options.isStationary,reactiveWatch((()=>baseTileLayer.loaded&&view.resolution>0),(()=>{handleBaseTileLayerLoaded.call(this)}));let isMove=!1;reactiveWhen((()=>view.ready),(()=>{reactiveWatch((()=>[view.zoom,view.center.x,view.center.y]),(([newZoom,newX,newY],[oldZoom,oldX,oldY])=>{(newZoom!==oldZoom||(newX!==oldX||newY!==oldY))&&(isMove||(handleMoveStart.bind(this)(),isMove=!0),handleMove.bind(this)())}))}));const debounceStationary=(0,debounce.s)((()=>{handleStationary.bind(this)()}),constants.N.DELAY);reactiveWatch((()=>[view.stationary,view.updating]),(([stationary])=>{this.isStationary&&stationary&&debounceStationary(),stationary&&(isMove=!1,this.isStationary=!0)})),view.on("drag",(e=>{"start"===e.action&&(this.isUserInitiated=!0)})),view.on("mouse-wheel",(()=>{this.isUserInitiated=!0})),callBack&&callBack(this)}getPoint(Point,coords){return coords?new Point({x:coords[0],y:coords[1],spatialReference:{wkid:27700}}):null}getExtent(Extent,coords){return coords?new Extent({xmin:coords[0],ymin:coords[1],xmax:coords[2],ymax:coords[3],spatialReference:{wkid:27700}}):null}getPixel(coord){const pixel=this.view.toScreen({x:coord[0],y:coord[1]});return[Math.round(pixel.x),Math.round(pixel.y)]}panBy(offset,isUserInitiated=!0){const{x,y}=this.view.toScreen(this.view.center),newPixel={x:x+offset[0],y:y+offset[1]},newCentre=this.view.toMap(newPixel);this.isUserInitiated=isUserInitiated,this.view.goTo({center:newCentre,duration:constants.N.DELAY}).catch((err=>console.log(err)))}panTo(coord){this.view.goTo({target:{x:coord[0],y:coord[1]},duration:constants.N.DELAY}).catch((err=>console.log(err)))}zoomIn(){this.view.animation?.destroy(),this.isUserInitiated=!0,this.view.goTo({zoom:this.view.zoom+1,duration:constants.N.DELAY}).catch((err=>console.log(err)))}zoomOut(){this.view.animation?.destroy(),this.isUserInitiated=!0,this.view.goTo({zoom:this.view.zoom-1,duration:constants.N.DELAY}).catch((err=>console.log(err)))}setStyle(style,minZoom,maxZoom){const{view}=this;view.constraints.maxZoom=maxZoom,view.constraints.minZoom=minZoom;const currentStyle=this.style;this.style=style,this.isDark=["dark","aerial"].includes(style.name),this.baseTileLayer.loadStyle(style.url).then((()=>{handleStyleChange.bind(this)(currentStyle,style)}))}setPadding(coord,isAnimate){if(this.view){const{paddingBox}=this,padding=(0,viewport.Ig)(paddingBox,1);this.view.padding=padding,Promise.all([__webpack_require__.e(9014),__webpack_require__.e(5751),__webpack_require__.e(563),__webpack_require__.e(909),__webpack_require__.e(9214),__webpack_require__.e(803),__webpack_require__.e(6768),__webpack_require__.e(6459),__webpack_require__.e(4057),__webpack_require__.e(4408),__webpack_require__.e(1161),__webpack_require__.e(4480),__webpack_require__.e(4070),__webpack_require__.e(2248),__webpack_require__.e(3519),__webpack_require__.e(3820),__webpack_require__.e(772),__webpack_require__.e(4054),__webpack_require__.e(3852),__webpack_require__.e(1866),__webpack_require__.e(2755)]).then(__webpack_require__.bind(__webpack_require__,"./node_modules/@arcgis/core/geometry/Point.js")).then((module=>{if(coord){this.isUserInitiated=!1;const Point=module.default;this.view.goTo({target:new Point({x:coord[0],y:coord[1],spatialReference:27700})},{animation:isAnimate}).catch((err=>console.log(err)))}}))}}setSize(){console.log("setSize")}fitBounds(bounds){Promise.all([__webpack_require__.e(9014),__webpack_require__.e(5751),__webpack_require__.e(563),__webpack_require__.e(909),__webpack_require__.e(9214),__webpack_require__.e(803),__webpack_require__.e(6768),__webpack_require__.e(6459),__webpack_require__.e(4057),__webpack_require__.e(4408),__webpack_require__.e(1161),__webpack_require__.e(4480),__webpack_require__.e(4070),__webpack_require__.e(2248),__webpack_require__.e(3519),__webpack_require__.e(3820),__webpack_require__.e(772),__webpack_require__.e(4054),__webpack_require__.e(3852),__webpack_require__.e(1866),__webpack_require__.e(2755)]).then(__webpack_require__.bind(__webpack_require__,"./node_modules/@arcgis/core/geometry/Extent.js")).then((module=>{const Extent=module.default;this.view.goTo(new Extent({xmin:bounds[0],ymin:bounds[1],xmax:bounds[2],ymax:bounds[3]}),{duration:constants.N.DELAY}).catch((err=>console.log(err)))}))}setCentre(coord,zoom){this.view.goTo({center:coord,zoom,duration:constants.N.DELAY}).catch((err=>console.log(err)))}initDraw(options){this.removeTargetMarker(),Promise.all([__webpack_require__.e(3048),__webpack_require__.e(1672),__webpack_require__.e(772),__webpack_require__.e(1222),__webpack_require__.e(6162)]).then(__webpack_require__.bind(__webpack_require__,"./src/js/provider/esri-sdk/draw.js")).then((module=>{const Draw=module.default;this.draw=new Draw(this,options)}))}setTargetMarker(coord,hasData,isVisible){this.removeTargetMarker(),Promise.all([__webpack_require__.e(9014),__webpack_require__.e(5751),__webpack_require__.e(563),__webpack_require__.e(909),__webpack_require__.e(9214),__webpack_require__.e(803),__webpack_require__.e(6768),__webpack_require__.e(6459),__webpack_require__.e(4057),__webpack_require__.e(4408),__webpack_require__.e(1161),__webpack_require__.e(4480),__webpack_require__.e(4070),__webpack_require__.e(2248),__webpack_require__.e(3519),__webpack_require__.e(3820),__webpack_require__.e(772),__webpack_require__.e(4054),__webpack_require__.e(3852),__webpack_require__.e(1866),__webpack_require__.e(2755)]).then(__webpack_require__.bind(__webpack_require__,"./node_modules/@arcgis/core/Graphic.js")).then((module=>{const Graphic=module.default,{map,graphicsLayer,isDark}=this;if(map&&coord&&isVisible){const zIndex=99;map.reorder(graphicsLayer,zIndex);const fill=new Graphic(targetMarkerGraphic(coord,isDark,hasData)),halo=new Graphic(targetMarkerGraphic(coord,isDark,hasData));halo.symbol.outline.width=2,graphicsLayer.addMany([halo,fill]),this.targetMarker=[halo,fill]}}))}removeTargetMarker(){const{graphicsLayer,targetMarker}=this;targetMarker&&(graphicsLayer.remove(targetMarker[0]),graphicsLayer.remove(targetMarker[1]),this.targetMarker=null)}selectFeature(_id){}async queryFeature(_id){}async queryPoint(point){const detail=await getDetail.bind(this)(point);this.dispatchEvent(new CustomEvent("mapquery",{detail:{resultType:detail.features.resultType,...detail}}))}getGeoLocation(success,error){navigator.geolocation.getCurrentPosition((async position=>{let coord=[position.coords.longitude,position.coords.latitude];coord=coord.map((n=>parseFloat(n.toFixed(constants.N.PRECISION)))),success(coord,null)}),(err=>{console.log(err),error(err)}),{enableHighAccuracy:!1})}showLocation(_coord){}}const provider=Provider}}]);