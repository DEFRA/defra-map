"use strict";(self.webpackChunk_defra_flood_map=self.webpackChunk_defra_flood_map||[]).push([[198],{"./node_modules/@arcgis/core/layers/ImageryTileLayer.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{default:()=>B});var tslib_es6=__webpack_require__("./node_modules/@arcgis/core/chunks/tslib.es6.js"),PopupTemplate=__webpack_require__("./node_modules/@arcgis/core/PopupTemplate.js"),Clonable=__webpack_require__("./node_modules/@arcgis/core/core/Clonable.js"),core_Error=__webpack_require__("./node_modules/@arcgis/core/core/Error.js"),Logger=__webpack_require__("./node_modules/@arcgis/core/core/Logger.js"),MultiOriginJSONSupport=__webpack_require__("./node_modules/@arcgis/core/core/MultiOriginJSONSupport.js"),promiseUtils=__webpack_require__("./node_modules/@arcgis/core/core/promiseUtils.js"),reactiveUtils=__webpack_require__("./node_modules/@arcgis/core/core/reactiveUtils.js"),property=__webpack_require__("./node_modules/@arcgis/core/core/accessorSupport/decorators/property.js"),ensureType=__webpack_require__("./node_modules/@arcgis/core/core/accessorSupport/ensureType.js"),has=__webpack_require__("./node_modules/@arcgis/core/core/has.js"),subclass=(__webpack_require__("./node_modules/@arcgis/core/core/RandomLCG.js"),__webpack_require__("./node_modules/@arcgis/core/core/accessorSupport/decorators/subclass.js")),Layer=__webpack_require__("./node_modules/@arcgis/core/layers/Layer.js"),ArcGISService=__webpack_require__("./node_modules/@arcgis/core/layers/mixins/ArcGISService.js"),BlendLayer=__webpack_require__("./node_modules/@arcgis/core/layers/mixins/BlendLayer.js"),CustomParametersMixin=__webpack_require__("./node_modules/@arcgis/core/layers/mixins/CustomParametersMixin.js"),ImageryTileMixin=__webpack_require__("./node_modules/@arcgis/core/layers/mixins/ImageryTileMixin.js"),OperationalLayer=__webpack_require__("./node_modules/@arcgis/core/layers/mixins/OperationalLayer.js"),PortalLayer=__webpack_require__("./node_modules/@arcgis/core/layers/mixins/PortalLayer.js"),RasterPresetRendererMixin=__webpack_require__("./node_modules/@arcgis/core/layers/mixins/RasterPresetRendererMixin.js"),RefreshableLayer=__webpack_require__("./node_modules/@arcgis/core/layers/mixins/RefreshableLayer.js"),ScaleRangeLayer=__webpack_require__("./node_modules/@arcgis/core/layers/mixins/ScaleRangeLayer.js"),TemporalLayer=__webpack_require__("./node_modules/@arcgis/core/layers/mixins/TemporalLayer.js"),commonProperties=__webpack_require__("./node_modules/@arcgis/core/layers/support/commonProperties.js"),Field=__webpack_require__("./node_modules/@arcgis/core/layers/support/Field.js"),rasterFieldUtils=__webpack_require__("./node_modules/@arcgis/core/layers/support/rasterFieldUtils.js"),RasterFunction=__webpack_require__("./node_modules/@arcgis/core/layers/support/RasterFunction.js"),FunctionRaster=__webpack_require__("./node_modules/@arcgis/core/layers/support/rasterDatasets/FunctionRaster.js"),BaseRaster=__webpack_require__("./node_modules/@arcgis/core/layers/support/rasterDatasets/BaseRaster.js"),Color=__webpack_require__("./node_modules/@arcgis/core/Color.js"),Extent=__webpack_require__("./node_modules/@arcgis/core/geometry/Extent.js"),SpatialReference=__webpack_require__("./node_modules/@arcgis/core/geometry/SpatialReference.js"),locale=__webpack_require__("./node_modules/@arcgis/core/intl/locale.js"),PixelBlock=__webpack_require__("./node_modules/@arcgis/core/layers/support/PixelBlock.js"),pixelRangeUtils=__webpack_require__("./node_modules/@arcgis/core/layers/support/rasterFormats/pixelRangeUtils.js");function i(e){return["x","e","east","long","longitude"].includes(e.toLowerCase())}function covJSONParser_r(e){return["y","n","west","lat","latitude"].includes(e.toLowerCase())}function o(e){const{axes:l}=e.domain,s=Object.keys(l),a=[],o=[];let u=-1,m=-1,c=[];for(let t=0;t<s.length;t++){const e=s[t];i(e)?u=t:covJSONParser_r(e)&&(m=t);const n=l[e],d=[];if("values"in n){n.values.forEach((e=>d.push("string"==typeof e?new Date(e).getTime():e)));const e=d[1]-d[0];a.push([d[0]-.5*e,d[d.length-1]+.5*e]),o.push(e)}else{const{start:e,stop:t,num:l}=n,s=(t-e)/(l-1);a.push([e-.5*s,t+.5*s]),o.push(s);for(let n=0;n<l;n++)d.push(e+s*n)}c.push({name:e,values:d,extent:[d[0],d[d.length-1]]})}u>-1&&-1===m?m=0===u?1:0:m>-1&&-1===u?u=0===m?1:0:-1===m&&-1===u&&(u=0,m=1),c=c.filter(((e,t)=>!(t===u||t===m)));const{referencing:d}=e.domain,f=d.find((e=>e.coordinates.includes(s[u]))).system.id,p=f?.slice(f.lastIndexOf("/")+1),h=null==p||"CRS84"===p?4326:Number(p),g=new SpatialReference.A({wkid:h}),[b,y]=a[u],[x,j]=a[m],v=new Extent.default({xmin:b,xmax:y,ymin:x,ymax:j,spatialReference:g});return{width:Math.round(v.width/o[u]),height:Math.round(v.height/o[m]),extent:v,dimensions:c}}function u(e){const t=(0,locale.Z0)();return t?e[t]??Object.values(e)[0]:Object.values(e)[0]}function m(){return Math.round(255*Math.random())}function c(t){const n={},{parameters:l}=t;if(!l)return n;for(const[s,a]of Object.entries(l)){const{type:t,description:l,unit:i,categoryEncoding:r,observedProperty:o}=a;if("Parameter"===t&&(n[s]={},l&&(n[s].description=u(l)),i&&(n[s].unit=i.label?u(i.label):null,n[s].symbol=i.symbol?.value),r)){const t=Object.entries(r).map(((e,t)=>({OID:t,Value:Number(e[1]),ClassName:e[0].slice(e[0].lastIndexOf("/")+1),Count:1})));let l=!1;o?.categories?.length&&(o.categories.forEach((n=>{if(!n.id)return;const s=n.id.slice(n.id.lastIndexOf("/")+1),a=t.find((e=>e.ClassName===s));if(!a)return;const i=n.label?u(n.label):null;if(a.Label=i,n.preferredColor){const t=Color.A.fromHex(n.preferredColor);t&&(l=!0,a.Red=t.r,a.Green=t.g,a.Blue=t.b)}})),l&&t.forEach((e=>{null==e.Red&&(e.Red=m(),e.Green=m(),e.Blue=m())})));const a={objectIdFieldName:"",fields:[{name:"OID",type:"esriFieldTypeOID",alias:"OID",domain:null},{name:"Value",type:"esriFieldTypeInteger",alias:"Value",domain:null},{name:"Count",type:"esriFieldTypeDouble",alias:"Count",domain:null},{name:"ClassName",type:"esriFieldTypeString",alias:"ClassName",domain:null,length:50},{name:"Label",type:"esriFieldTypeString",alias:"Label",domain:null,length:50}],features:t.map((e=>({attributes:e})))};l&&a.fields.push({name:"Red",type:"esriFieldTypeInteger",alias:"Red",domain:null},{name:"Green",type:"esriFieldTypeInteger",alias:"Green",domain:null},{name:"Blue",type:"esriFieldTypeInteger",alias:"Blue",domain:null}),n[s].attributeTable=a}}return n}function d(e){let t=Number.MAX_VALUE,n=-Number.MAX_VALUE;for(let l=0;l<e.length;l++){const s=e[l];null!=s&&(s<t&&(t=s),s>n&&(n=s))}return(0,pixelRangeUtils.X1)(t,n)}function f(e,t,n){const l=e.map(((e,n)=>({name:e,count:t[n]}))).sort(((e,t)=>e.name>t.name?-1:1)),s=(a=1,e=>a*=e.count);var a;const i=[...l.slice(1),{name:"",count:1}].reverse().map(s).reverse();let r=0;for(let o=e.length-1;o>=0;o--)r+=i[l.findIndex((({name:t})=>t===e[o]))]*(n%t[o]),n=Math.floor(n/t[o]);return r}var DimensionalDefinition=__webpack_require__("./node_modules/@arcgis/core/layers/support/DimensionalDefinition.js"),RasterInfo=__webpack_require__("./node_modules/@arcgis/core/layers/support/RasterInfo.js"),multidimensionalUtils=__webpack_require__("./node_modules/@arcgis/core/layers/support/rasterDatasets/multidimensionalUtils.js"),pixelUtils=__webpack_require__("./node_modules/@arcgis/core/layers/support/rasterFunctions/pixelUtils.js"),stretchUtils=__webpack_require__("./node_modules/@arcgis/core/layers/support/rasterFunctions/stretchUtils.js");let InMemoryRaster_f=class extends BaseRaster.A{constructor(){super(...arguments),this.datasetFormat="MEMORY",this.source=null}get url(){return""}fetchRawTile(t,e,s,i={}){if(!this._pixelBlockTiles){const{rasterInfo:r}=this,[o,a]=r.storageInfo.tileInfo.size,{sliceId:l}=i,{pixelBlocks:n}=this.source,m={pixelBlock:null==l?n[0]:n[l],useBilinear:"thematic"!==r.dataType,tileSize:{width:o,height:a},level:t,row:e,col:s},c=this.rasterJobHandler?this.rasterJobHandler.clipTile(m,i):(0,pixelUtils.J$)(m);return Promise.resolve(c)}const r=this._pixelBlockTiles.get(`${t}/${e}/${s}`);return Promise.resolve(r)}async _open(t){const e=this.source,{pixelBlocks:s,attributeTable:i,statistics:r,histograms:l,name:m,nativeExtent:c,transform:p}=e,u=s[0],{width:h,height:d,pixelType:f}=u,g=e.extent??new Extent.default({xmin:-.5,ymin:.5,xmax:h-.5,ymax:d-.5,spatialReference:new SpatialReference.A({wkid:3857})}),x=e.isPseudoSpatialReference??!e.extent,y={x:g.width/h,y:g.height/d},b={...e.keyProperties};i&&(b.DataType="Thematic");const v=new RasterInfo.A({width:h,height:d,pixelType:f,extent:g,nativeExtent:c,attributeTable:i,transform:p,pixelSize:y,spatialReference:g.spatialReference,bandCount:u.pixels.length,keyProperties:b,multidimensionalInfo:e.multidimensionalInfo,statistics:r,isPseudoSpatialReference:x,histograms:l});this.ioConfig.skipMapInfo&&this.updateImageSpaceRasterInfo(v),this.createRemoteDatasetStorageInfo(v,512,512),this._set("rasterInfo",v),this.updateTileInfo(),v.multidimensionalInfo?await this._buildMDimStats(e.pixelBlocks,v.multidimensionalInfo):await this._buildInMemoryRaster(u,{width:512,height:512},t),v.multidimensionalInfo||(this.source=null),this.datasetName=m}async _buildInMemoryRaster(t,i,r){const{rasterInfo:o}=this,a=o.storageInfo.maximumPyramidLevel??0,l="thematic"!==o.dataType,n=this.rasterJobHandler?this.rasterJobHandler.split({pixelBlock:t,tileSize:i,maximumPyramidLevel:a,useBilinear:l},r):Promise.resolve((0,pixelUtils.lD)(t,i,a,l)),m=null!=o.statistics,c=null!=o.histograms,p=this.ioConfig.skipStatistics||m?Promise.resolve({statistics:null,histograms:null}):this.rasterJobHandler?this.rasterJobHandler.estimateStatisticsHistograms({pixelBlock:t},r):Promise.resolve((0,stretchUtils.f4)(t)),d=await(0,promiseUtils.Lx)([n,p]);if(!d[0].value&&d[1].value)throw new core_Error.A("inmemory-raster:open","failed to build in memory raster");this._pixelBlockTiles=d[0].value,m||(o.statistics=d[1].value?.statistics),c||(o.histograms=d[1].value?.histograms)}async _buildMDimStats(t,e,s){for(let i=0;i<e.variables.length;i++){const r=e.variables[i];if(r.statistics)continue;const o=r.dimensions.map((t=>new DimensionalDefinition.A({variableName:r.name,dimensionName:t.name,values:[t.values?.[0]??t.extent?.[0]],isSlice:!0}))),a=(0,multidimensionalUtils.NG)(o,e),n=null==a?null:t[a];if(null==n)continue;const m=this.rasterJobHandler?await this.rasterJobHandler.computeStatisticsHistograms({pixelBlock:n},s):(0,stretchUtils.eH)(n);r.statistics=m.statistics,r.histograms||(r.histograms=m.histograms)}}};(0,tslib_es6._)([(0,property.MZ)({type:String,json:{write:!0}})],InMemoryRaster_f.prototype,"datasetFormat",void 0),(0,tslib_es6._)([(0,property.MZ)()],InMemoryRaster_f.prototype,"source",void 0),(0,tslib_es6._)([(0,property.MZ)()],InMemoryRaster_f.prototype,"url",null),InMemoryRaster_f=(0,tslib_es6._)([(0,subclass.$)("esri.layers.support.rasterDatasets.InMemoryRaster")],InMemoryRaster_f);const g=InMemoryRaster_f;var FeatureSet=__webpack_require__("./node_modules/@arcgis/core/rest/support/FeatureSet.js");let CovJSONRaster_m=class extends BaseRaster.A{constructor(){super(...arguments),this.datasetFormat="CovJSON"}fetchRawTile(e,t,r,s={}){return this._inMemoryRaster.fetchRawTile(e,t,r,s)}async _open(e){const{extent:t,pixelBlocks:r,multidimensionalInfo:s,attributeTable:a,bandNames:o}=await this._fetchData(e),{statistics:i,histograms:n}=(0,stretchUtils.eH)(r[0]),m=o?.map((e=>({BandName:e}))),h={DataType:a?"Thematic":s?"Scientific":"Generic",BandProperties:m},d=new g({source:{extent:t,pixelBlocks:r,attributeTable:a?FeatureSet.A.fromJSON(a):null,multidimensionalInfo:s,statistics:i,histograms:n,keyProperties:h,isPseudoSpatialReference:!1}});await d.open(),this._inMemoryRaster=d;const u=this.source?"":this.url.slice(this.url.lastIndexOf("/")+1);this._set("datasetName",u.slice(0,u.indexOf("."))),this._set("rasterInfo",d.rasterInfo)}async _fetchData(e){const r=this.source??(await this.request(this.url,{signal:e?.signal})).data,s="imagery-tile-layer:open-coverage-json";if("coverage"!==r.type?.toLowerCase()||"grid"!==r.domain?.domainType?.toLowerCase())throw new core_Error.A(s,"Only coverage with Grid domain type is supported");if(!r.ranges)throw new core_Error.A(s,"Missing ranges in the grid coverage data");if(!r.domain.referencing?.length)throw new core_Error.A(s,"Missing domain referencing in the grid coverage data");const a=Object.values(r.ranges);for(let n=0;n<a.length;n++){const{axisNames:e,shape:r,type:c,values:l}=a[n];if(!("ndarray"===c.toLowerCase()&&l?.length&&e?.length&&r?.length))throw new core_Error.A(s,"Only ranges with valid NdArray, axisNames, shape, and inline values are supported");if(!i(e[e.length-1])||!covJSONParser_r(e[e.length-2]))throw new core_Error.A(s,"Only row-major ordered pixel values are supported. X axis must be the last axis.")}return function p(e){const{width:t,height:n,extent:l,dimensions:a}=o(e),{ranges:i}=e,r=Object.keys(i).sort(((e,t)=>e<t?-1:1)),u=[];for(let s=0;s<r.length;s++){const e=r[s];a?.length&&u.push({name:e,dimensions:a})}const m=c(e);u.forEach((e=>m[e.name]&&Object.assign(e,m[e.name])));const p=u.length?{variables:u}:void 0,h=[];for(let o=0;o<r.length;o++){const e=r[o],{values:l,dataType:u,axisNames:m,shape:c}=i[e],p=c.length>2?o*c.slice(0,-2).reduce(((e,t)=>e*t)):0,g=m.slice(0,-2),b=c.slice(0,-2),y="float"===u?"f32":d(l),x=t*n,j=l.length/x;for(let i=0;i<j;i++){const e=PixelBlock.A.createEmptyBand(y,x),r=new Uint8Array(x).fill(255);let u=!1;const m=i*x;for(let t=0;t<x;t++){const n=l[m+t];null==n?(r[t]=0,u=!0):e[t]=n}if(0===o||a?.length){const l=new PixelBlock.A({width:t,height:n,mask:u?r:null,pixels:[e],pixelType:y});l.updateStatistics(),a?.length?h[f(g,b,i)+p]=l:h.push(l)}else{const t=h[i];t.pixels.push(e),u?t.mask&&(t.mask=PixelBlock.A.combineBandMasks([t.mask,r])):t.mask=u?r:null}}}const g=Object.values(m).find((e=>e.attributeTable))?.attributeTable;return{extent:l,pixelBlocks:h,multidimensionalInfo:p,attributeTable:g,bandNames:p?void 0:r}}(r)}};(0,tslib_es6._)([(0,property.MZ)({type:String,json:{write:!0}})],CovJSONRaster_m.prototype,"datasetFormat",void 0),(0,tslib_es6._)([(0,property.MZ)({constructOnly:!0})],CovJSONRaster_m.prototype,"source",void 0),CovJSONRaster_m=(0,tslib_es6._)([(0,subclass.$)("esri.layers.support.rasterDatasets.CovJSONRaster")],CovJSONRaster_m);const h=CovJSONRaster_m;var arrayUtils=__webpack_require__("./node_modules/@arcgis/core/core/arrayUtils.js"),spatialReferenceUtils=__webpack_require__("./node_modules/@arcgis/core/geometry/support/spatialReferenceUtils.js"),xmlUtilities=__webpack_require__("./node_modules/@arcgis/core/layers/support/rasterDatasets/xmlUtilities.js"),PolynomialTransform=__webpack_require__("./node_modules/@arcgis/core/layers/support/rasterTransforms/PolynomialTransform.js");function pamParser_u(e,t){if(!e||!t)return null;const n=[];for(let r=0;r<e.length;r++)n.push(e[r]),n.push(t[r]);return n}function pamParser_d(e){if(!e)return null;let r=Number(e);if(!isNaN(r)&&0!==r)return new SpatialReference.A({wkid:r});if(e=String(e).trim(),(0,spatialReferenceUtils.jp)(e))return new SpatialReference.A({wkt2:e});const s=e.toUpperCase();if(s.startsWith("COMPD_CS")){if(!s.includes("VERTCS")||!s.includes("GEOGCS")&&!s.startsWith("PROJCS"))return null;const n=s.indexOf("VERTCS"),a=s.indexOf("PROJCS"),i=a>-1?a:s.indexOf("GEOGCS");if(-1===i)return null;const l=e.slice(i,e.lastIndexOf("]",n)+1).trim(),o=e.slice(n,e.lastIndexOf("]")).trim();r=pamParser_p(l);const f=new SpatialReference.A(r?{wkid:r}:{wkt:l}),u=pamParser_p(o);return u&&(f.vcsWkid=u),f}return s.startsWith("GEOGCS")||s.startsWith("PROJCS")?(r=pamParser_p(e),new SpatialReference.A(0!==r?{wkid:r}:{wkt:e})):null}function pamParser_p(e){const t=e.replaceAll("]","[").replaceAll('"',"").split("[").map((e=>e.trim())).filter((e=>""!==e)),n=t[t.length-1].split(","),r=n[0]?.toLowerCase();if(("epsg"===r||"esri"===r)&&e.endsWith('"]]')){const e=Number(n[1]);if(!isNaN(e)&&0!==e)return e}return 0}function S(t){if("pamdataset"!==t?.documentElement.tagName?.toLowerCase())return{};const n={spatialReference:null,transform:null,metadata:{},rasterBands:[],statistics:null,histograms:null};t.documentElement.childNodes.forEach((e=>{if(1===e.nodeType)if((0,xmlUtilities.g7)(e,"SRS")){if(!n.spatialReference){const t=(0,xmlUtilities.mX)(e);n.spatialReference=pamParser_d(t)}}else if((0,xmlUtilities.g7)(e,"Metadata"))if("xml:ESRI"===e.getAttribute("domain")){const{spatialReference:t,transform:r}=function pamParser_c(e){const t=(0,xmlUtilities.V6)(e,"GeodataXform"),n=pamParser_d((0,xmlUtilities.v7)(t,"SpatialReference/WKID")||(0,xmlUtilities.mX)(t,"SpatialReference/WKT"));if("typens:PolynomialXform"!==t.getAttribute("xsi:type"))return{spatialReference:n,transform:null};const r=(0,xmlUtilities.v7)(t,"PolynomialOrder")??1,a=(0,xmlUtilities.Ui)(t,"CoeffX/Double"),c=(0,xmlUtilities.Ui)(t,"CoeffY/Double"),m=(0,xmlUtilities.Ui)(t,"InverseCoeffX/Double"),p=(0,xmlUtilities.Ui)(t,"InverseCoeffY/Double"),S=pamParser_u(a,c),C=pamParser_u(m,p);return{spatialReference:n,transform:S&&C&&S.length&&C.length?new PolynomialTransform.A({spatialReference:n,polynomialOrder:r,forwardCoefficients:S,inverseCoefficients:C}):null}}(e);n.transform=r,n.spatialReference||(n.spatialReference=t)}else(0,xmlUtilities.IC)(e,"MDI").forEach((e=>n.metadata[e.getAttribute("key")]=(0,xmlUtilities.mX)(e)));else if((0,xmlUtilities.g7)(e,"PAMRasterBand")){const t=function pamParser_m(e){const t=(0,xmlUtilities.v7)(e,"NoDataValue"),n=(0,xmlUtilities.V6)(e,"Histograms/HistItem"),r=(0,xmlUtilities.v7)(n,"HistMin"),o=(0,xmlUtilities.v7)(n,"HistMax"),f=(0,xmlUtilities.v7)(n,"BucketCount"),u=(0,xmlUtilities.mX)(n,"HistCounts")?.split("|").map((e=>Number(e)));let c,m,d,p;(0,xmlUtilities.IC)(e,"Metadata/MDI").forEach((e=>{const t=Number(e.textContent??e.nodeValue);switch(e.getAttribute("key").toUpperCase()){case"STATISTICS_MINIMUM":c=t;break;case"STATISTICS_MAXIMUM":m=t;break;case"STATISTICS_MEAN":d=t;break;case"STATISTICS_STDDEV":p=t}}));const S=(0,xmlUtilities.v7)(e,"Metadata/SourceBandIndex");return{noDataValue:t,histogram:u?.length&&null!=r&&null!=o?{min:r,max:o,size:f||u.length,counts:u}:null,sourceBandIndex:S,statistics:null!=c&&null!=m?{min:c,max:m,avg:d,stddev:p}:null}}(e);null!=t.sourceBandIndex&&null==n.rasterBands[t.sourceBandIndex]?n.rasterBands[t.sourceBandIndex]=t:n.rasterBands.push(t)}}));const i=n.rasterBands;if(i.length){const t=!!i[0].statistics;n.statistics=t?i.map((e=>e.statistics)).filter(arrayUtils.Ru):null;const r=!!i[0].histogram;n.histograms=r?i.map((e=>e.histogram)).filter(arrayUtils.Ru):null}return n}var RasterCodec=__webpack_require__("./node_modules/@arcgis/core/layers/support/rasterFormats/RasterCodec.js");let ImageAuxRaster_h=class extends BaseRaster.A{fetchRawTile(t,s,e,r={}){return this._inMemoryRaster.fetchRawTile(t,s,e,r)}async _open(t){const s=await this._fetchData(t);let{spatialReference:e,statistics:r,histograms:a,transform:o}=await this._fetchAuxiliaryData(t);const l=!e;l&&(e=new SpatialReference.A({wkid:3857})),a?.length&&null==r&&(r=(0,stretchUtils.Pg)(a));const{width:p,height:c}=s;let u=new Extent.default({xmin:-.5,ymin:.5-c,xmax:p-.5,ymax:.5,spatialReference:e});const h=o?o.forwardTransform(u):u;let d=!0;if(o){const t=o.forwardCoefficients;d=t&&0===t[1]&&0===t[2],d&&(o=null,u=h)}const w=new g({source:{extent:h,nativeExtent:u,transform:o,pixelBlocks:[s],statistics:r,histograms:a,keyProperties:{DateType:"Processed"},isPseudoSpatialReference:l},ioConfig:{sampling:"closest",skipStatistics:!0}});this.ioConfig.skipMapInfo&&(w.ioConfig.skipMapInfo=!0),await w.open(),w.source=null,this._set("rasterInfo",w.rasterInfo),this._inMemoryRaster=w}async _fetchData(t){const{data:e}=await this.request(this.url,{responseType:"array-buffer",signal:t?.signal}),r=(0,RasterCodec.g)(e).toUpperCase();if("JPG"!==r&&"PNG"!==r&&"GIF"!==r&&"BMP"!==r)throw new core_Error.A("image-aux-raster:open","the data is not a supported format");this._set("datasetFormat",r);const a=r.toLowerCase(),o="gif"===a||"bmp"===a||!(0,has.A)("ios"),i=await this.decodePixelBlock(e,{format:a,useCanvas:o,hasNoZlibMask:!0});if(null==i)throw new core_Error.A("image-aux-raster:open","the data cannot be decoded");return i}async _fetchAuxiliaryData(t){const s=t?.signal,{skipExtensions:a=[],skipMapInfo:o}=this.ioConfig,i=o||a.includes("aux.xml")?null:this.request(this.url+".aux.xml",{responseType:"xml",signal:s}),n=this.datasetFormat,l="JPG"===n?"jgw":"PNG"===n?"pgw":"BMP"===n?"bpw":null,m=l&&a.includes(l)?null:this.request(this.url.slice(0,this.url.lastIndexOf("."))+"."+l,{responseType:"text",signal:s}),c=await(0,promiseUtils.Lx)([i,m]);if(s?.aborted)throw(0,promiseUtils.NK)();const f=S(c[0].value?.data);if(!f.transform){const t=c[1].value?c[1].value.data.split("\n").slice(0,6).map((t=>Number(t))):null;f.transform=6===t?.length?new PolynomialTransform.A({forwardCoefficients:[t[4],t[5],t[0],-t[1],t[2],-t[3]]}):null}return f}};(0,tslib_es6._)([(0,property.MZ)({type:String,json:{write:!0}})],ImageAuxRaster_h.prototype,"datasetFormat",void 0),ImageAuxRaster_h=(0,tslib_es6._)([(0,subclass.$)("esri.layers.support.rasterDatasets.ImageAuxRaster")],ImageAuxRaster_h);const ImageAuxRaster_d=ImageAuxRaster_h;var maybe=__webpack_require__("./node_modules/@arcgis/core/core/maybe.js"),urlUtils=__webpack_require__("./node_modules/@arcgis/core/core/urlUtils.js"),Point=__webpack_require__("./node_modules/@arcgis/core/geometry/Point.js"),RasterStorageInfo=__webpack_require__("./node_modules/@arcgis/core/layers/support/RasterStorageInfo.js"),TileInfo=__webpack_require__("./node_modules/@arcgis/core/layers/support/TileInfo.js"),TilemapCache=__webpack_require__("./node_modules/@arcgis/core/layers/support/TilemapCache.js"),GCSShiftTransform=__webpack_require__("./node_modules/@arcgis/core/layers/support/rasterTransforms/GCSShiftTransform.js"),fetchRasterInfo=__webpack_require__("./node_modules/@arcgis/core/rest/imageService/fetchRasterInfo.js");let ImageServerRaster_g=class extends BaseRaster.A{constructor(){super(...arguments),this._levelOffset=0,this._tilemapCache=null,this._slices=null,this.datasetFormat="RasterTileServer",this.tileType=null}async fetchRawTile(e,t,i,s={}){const{storageInfo:r,extent:a}=this.rasterInfo,{transposeInfo:l}=r,n=null!=l&&!!s.transposedVariableName;if(this._slices&&!n&&null==s.sliceId)return null;const o=n?0:r.maximumPyramidLevel-e+this._levelOffset,c=`${this.url}/tile/${o}/${t}/${i}`,m=this._slices?n?{variable:s.transposedVariableName}:{sliceId:s.sliceId||0}:null,{data:u}=await this.request(c,{query:m,responseType:"array-buffer",signal:s.signal});if(!u)return null;const h=n?l.tileSize:r.tileInfo.size,f=await this.decodePixelBlock(u,{width:h[0],height:h[1],planes:null,pixelType:null,isPoint:"Elevation"===this.tileType,returnInterleaved:n,noDataValue:this.rasterInfo.noDataValue});if(null==f)return null;const d=r.blockBoundary[e];if("jpg"!==r.compression||i>d.minCol&&i<d.maxCol&&t>d.minRow&&t<d.maxRow)return f;const{origin:y,blockWidth:x,blockHeight:g}=r,{x:v,y:S}=this.getPyramidPixelSize(e),I=Math.round((a.xmin-y.x)/v)%x,w=Math.round((a.xmax-y.x)/v)%x||x,j=Math.round((y.y-a.ymax)/S)%g,M=Math.round((y.y-a.ymin)/S)%g||g,b=i===d.minCol?I:0,T=t===d.minRow?j:0,_=i===d.maxCol?w:x,O=t===d.maxRow?M:g;return(0,pixelUtils.z$)(f,{x:b,y:T},{width:_-b,height:O-T}),f}getSliceIndex(e){if(!this._slices||null==e||0===e.length)return null;const t=e;for(let i=0;i<this._slices.length;i++){const e=this._slices[i].multidimensionalDefinition;if(e.length===t.length&&!e.some((e=>{const i=t.find((t=>e.variableName===t.variableName&&t.dimensionName===e.dimensionName));return!i||(Array.isArray(e.values[0])?`${e.values[0][0]}-${e.values[0][1]}`:e.values[0])!==(Array.isArray(i.values[0])?`${i.values[0][0]}-${i.values[0][1]}`:i.values[0])})))return i}return null}async fetchVariableStatisticsHistograms(e,t){const i=this.request(this.url+"/statistics",{query:{variable:e,f:"json"},signal:t}).then((e=>e.data?.statistics)),s=this.request(this.url+"/histograms",{query:{variable:e,f:"json"},signal:t}).then((e=>e.data?.histograms)),r=await Promise.all([i,s]);return r[0]&&r[0].forEach((e=>{e.avg=e.mean,e.stddev=e.standardDeviation})),r[1]?.[0]?.counts?.length||(r[1]=null),{statistics:r[0]||null,histograms:r[1]||null}}async computeBestPyramidLevelForLocation(e,t={}){if(!this._tilemapCache)return 0;let i=this.identifyPixelLocation(e,0,t.datumTransformation);if(null===i)return null;let s=0;const{maximumPyramidLevel:r}=this.rasterInfo.storageInfo;let a=r-s+this._levelOffset;const l=i.srcLocation;for(;a>=0;){try{if("available"===await this._tilemapCache.fetchAvailability(a,i.row,i.col,t))break}catch{}if(a--,s++,i=this.identifyPixelLocation(l,s,t.datumTransformation),null===i)return null}return-1===a||null==i?null:s}async _open(e){const r=e?.signal,a=this.sourceJSON?{data:this.sourceJSON}:await this.request(this.url,{query:{f:"json"},signal:r});a.ssl&&(this.url=this.url.replace(/^http:/i,"https:"));const l=a.data;if(this.sourceJSON=l,!l)throw new core_Error.A("imageserverraster:open","cannot initialize tiled image service, missing service info");if(!l.tileInfo)throw new core_Error.A("imageserverraster:open","use ImageryLayer to open non-tiled image services");this._fixScaleInServiceInfo();this.tileType=l.cacheType,null==this.tileType&&(["jpg","jpeg","png","png8","png24","png32","mixed"].includes(l.tileInfo.format.toLowerCase())?this.tileType="Map":"lerc"===l.tileInfo.format.toLowerCase()?this.tileType="Elevation":this.tileType="Raster"),this.datasetName=l.name?.slice(l.name.indexOf("/")+1)??"";const o=await this._fetchRasterInfo({signal:r});if(null==o)throw new core_Error.A("image-server-raster:open","cannot initialize image service");(0,fetchRasterInfo.E9)(o,l);const c="Map"===this.tileType?function v(e,t){if(!e)return null;const{minScale:i,maxScale:s,minLOD:r,maxLOD:a}=t;if(null!=r&&null!=a)return TileInfo.default.fromJSON({...e,lods:e.lods.filter((({level:e})=>null!=e&&e>=r&&e<=a))});if(0!==i&&0!==s){const t=e=>Math.round(1e4*e)/1e4,r=i?t(i):1/0,a=s?t(s):-1/0;return TileInfo.default.fromJSON({...e,lods:e.lods.filter((e=>{const i=t(e.scale);return i<=r&&i>=a}))})}return TileInfo.default.fromJSON(e)}(l.tileInfo,l):TileInfo.default.fromJSON(l.tileInfo);(0,maybe.Lw)(c);const[f,p]=this._computeMinMaxLOD(o,c),{extent:d,pixelSize:x}=o,g=.5/o.width*x.x,I=Math.max(x.x,x.y),{lods:w}=c;("Map"!==this.tileType&&0!==l.maxScale||Math.abs(x.x-x.y)>g||!w.some((e=>Math.abs(e.resolution-I)<g)))&&(x.x=x.y=f.resolution,o.width=Math.ceil((d.xmax-d.xmin)/x.x-.1),o.height=Math.ceil((d.ymax-d.ymin)/x.y-.1));const j=f.level-p.level,[M,b]=c.size,T=[],_=[];w.forEach(((e,t)=>{e.level>=p.level&&e.level<=f.level&&T.push({x:e.resolution,y:e.resolution}),t<w.length-1&&_.push(Math.round(10*e.resolution/w[t+1].resolution)/10)})),T.sort(((e,t)=>e.x-t.x));const O=this.computeBlockBoundary(d,M,b,c.origin,T,j),R=T.length>1?T.slice(1):null;let z;l.transposeInfo&&(z={tileSize:[l.transposeInfo.rows,l.transposeInfo.cols],packetSize:o.keyProperties?._yxs.PacketSize??0});const N=_.length<=1||_.length>=3&&_.slice(0,-1).every((e=>e===_[0]))?_[0]??2:Math.round(10/(p.resolution/f.resolution)**(-1/j))/10;if(o.storageInfo=new RasterStorageInfo.A({blockWidth:c.size[0],blockHeight:c.size[1],pyramidBlockWidth:c.size[0],pyramidBlockHeight:c.size[1],pyramidResolutions:R,pyramidScalingFactor:N,compression:c.format,origin:c.origin,firstPyramidLevel:1,maximumPyramidLevel:j,tileInfo:c,transposeInfo:z,blockBoundary:O}),function ImageServerRaster_S(e){const{extent:t,spatialReference:i}=e;t.xmin>-1&&t.xmax>181&&i?.wkid&&i.isGeographic&&(e.nativeExtent=e.extent,e.transform=new GCSShiftTransform.A,e.extent=e.transform.forwardTransform(t))}(o),this._set("rasterInfo",o),l.capabilities.toLowerCase().includes("tilemap")){const e={tileInfo:o.storageInfo.tileInfo,parsedUrl:(0,urlUtils.An)(this.url),url:this.url,tileServers:[]};this._tilemapCache=new TilemapCache.d({layer:e})}}async _fetchRasterInfo(e){const t=this.sourceJSON;if("Map"===this.tileType){const e=t.fullExtent||t.extent,i=Math.ceil((e.xmax-e.xmin)/t.pixelSizeX-.1),s=Math.ceil((e.ymax-e.ymin)/t.pixelSizeY-.1),r=SpatialReference.A.fromJSON(t.spatialReference||e.spatialReference),a=new Point.default({x:t.pixelSizeX,y:t.pixelSizeY,spatialReference:r});return new RasterInfo.A({width:i,height:s,bandCount:3,extent:Extent.default.fromJSON(e),spatialReference:r,pixelSize:a,pixelType:"u8",statistics:null,keyProperties:{DataType:"processed"}})}const{signal:i}=e,s=(0,fetchRasterInfo.Tw)(this.url,this.sourceJSON,{signal:i,query:this.ioConfig.customFetchParameters}),r=t.hasMultidimensions?this.request(`${this.url}/slices`,{query:{f:"json"},signal:i}).then((e=>e.data?.slices)).catch((()=>null)):null,a=await Promise.all([s,r]);return this._slices=a[1],a[0]}_fixScaleInServiceInfo(){const{sourceJSON:e}=this;e.minScale&&e.minScale<0&&(e.minScale=0),e.maxScale&&e.maxScale<0&&(e.maxScale=0)}_computeMinMaxLOD(e,t){const{pixelSize:i}=e,s=.5/e.width*i.x,{lods:r}=t,a=t.lodAt(Math.max.apply(null,r.map((e=>e.level)))),l=t.lodAt(Math.min.apply(null,r.map((e=>e.level)))),{tileType:n}=this;if("Map"===n)return this._levelOffset=r[0].level,[a,l];if("Raster"===n)return[r.find((e=>e.resolution===i.x))??a,l];const{minScale:o,maxScale:c}=this.sourceJSON;let m=a;c>0&&(m=r.find((e=>Math.abs(e.scale-c)<s)),m||(m=r.filter((e=>e.scale>c)).sort(((e,t)=>e.scale>t.scale?1:-1))[0]??a));let u=l;return o>0&&(u=r.find((e=>Math.abs(e.scale-o)<s))??l,this._levelOffset=u.level-l.level),[m,u]}};(0,tslib_es6._)([(0,property.MZ)({type:String,json:{write:!0}})],ImageServerRaster_g.prototype,"datasetFormat",void 0),(0,tslib_es6._)([(0,property.MZ)()],ImageServerRaster_g.prototype,"tileType",void 0),ImageServerRaster_g=(0,tslib_es6._)([(0,subclass.$)("esri.layers.support.rasterDatasets.ImageServerRaster")],ImageServerRaster_g);const I=ImageServerRaster_g;var utils=__webpack_require__("./node_modules/@arcgis/core/layers/support/rasterFormats/utils.js");const y=new Map;y.set("Int8","s8"),y.set("UInt8","u8"),y.set("Int16","s16"),y.set("UInt16","u16"),y.set("Int32","s32"),y.set("UInt32","u32"),y.set("Float32","f32"),y.set("Float64","f32"),y.set("Double64","f32");const x=new Map;x.set("none",{blobExtension:".til",isOneSegment:!0,decoderFormat:"bip"}),x.set("lerc",{blobExtension:".lrc",isOneSegment:!1,decoderFormat:"lerc"}),x.set("deflate",{blobExtension:".pzp",isOneSegment:!0,decoderFormat:"deflate"}),x.set("jpeg",{blobExtension:".pjg",isOneSegment:!0,decoderFormat:"jpg"});let w=class extends BaseRaster.A{constructor(){super(...arguments),this._files=null,this._storageIndex=null,this.datasetFormat="MRF"}async fetchRawTile(t,e,r,s={}){const{blockWidth:o,blockHeight:a,blockBoundary:i}=this.rasterInfo.storageInfo,l=i[t];if(!l||l.maxRow<e||l.maxCol<r||l.minRow>e||l.minCol>r)return null;const{bandCount:f,pixelType:c}=this.rasterInfo,{ranges:p,actualTileWidth:m,actualTileHeight:h}=this._getTileLocation(t,e,r);if(!p||0===p.length)return null;if(0===p[0].from&&0===p[0].to){const t=new Uint8Array(o*a);return new PixelBlock.A({width:o,height:a,pixels:void 0,mask:t,validPixelCount:0})}const{bandIds:u}=this.ioConfig,g=this._getBandSegmentCount(),d=[];let y=0;for(y=0;y<g;y++)u&&!u.includes(y)||d.push(this.request(this._files.data,{range:{from:p[y].from,to:p[y].to},responseType:"array-buffer",signal:s.signal}));const w=await Promise.all(d),I=w.map((t=>t.data.byteLength)).reduce(((t,e)=>t+e)),b=new Uint8Array(I),R=[];let A=0;for(y=0;y<g;y++)R.push(A),b.set(new Uint8Array(w[y].data),A),A+=w[y].data.byteLength;const F=x.get(this.rasterInfo.storageInfo.compression).decoderFormat,_=await this.decodePixelBlock(b.buffer,{width:o,height:a,format:F,planes:u?.length||f,offsets:R,pixelType:c});if(null==_)return null;let{noDataValue:S}=this.rasterInfo;if(null!=S&&"lerc"!==F&&!_.mask&&(S=S[0],null!=S)){const t=_.width*_.height,e=new Uint8Array(t);if(Math.abs(S)>1e24)for(y=0;y<t;y++)Math.abs((_.pixels[0][y]-S)/S)>1e-6&&(e[y]=1);else for(y=0;y<t;y++)_.pixels[0][y]!==S&&(e[y]=1);_.mask=e}let k=0,M=0;if(m!==o||h!==a){let t=_.mask;if(t)for(y=0;y<a;y++)if(M=y*o,y<h)for(k=m;k<o;k++)t[M+k]=0;else for(k=0;k<o;k++)t[M+k]=0;else for(t=new Uint8Array(o*a),_.mask=t,y=0;y<h;y++)for(M=y*o,k=0;k<m;k++)t[M+k]=1}return _}async _open(t){this.datasetName=this.url.slice(this.url.lastIndexOf("/")+1);const e=t?t.signal:null,r=await this.request(this.url,{responseType:"xml",signal:e}),{rasterInfo:s,files:o}=this._parseHeader(r.data),{skipMapInfo:a,skipExtensions:i=[]}=this.ioConfig;if(!i.includes("aux.xml")&&!a){const e=await this._fetchAuxiliaryData(t);null!=e&&(s.statistics=e.statistics??s.statistics,s.histograms=e.histograms,e.histograms&&null==s.statistics&&(s.statistics=(0,stretchUtils.Pg)(e.histograms)))}a&&this.updateImageSpaceRasterInfo(s),this._set("rasterInfo",s),this._files=o;const n=await this.request(o.index,{responseType:"array-buffer",signal:e});this._storageIndex=function MRFRaster_I(t){if(t.byteLength%16>0)throw new Error("invalid array buffer must be multiples of 16");let e,r,s,o,a,i;if(utils.Z){for(r=new Uint8Array(t),o=new ArrayBuffer(t.byteLength),s=new Uint8Array(o),a=0;a<t.byteLength/4;a++)for(i=0;i<4;i++)s[4*a+i]=r[4*a+3-i];e=new Uint32Array(o)}else e=new Uint32Array(t);return e}(n.data);const{blockWidth:l,blockHeight:f}=this.rasterInfo.storageInfo,c=this.rasterInfo.storageInfo.pyramidScalingFactor,{width:p,height:m}=this.rasterInfo,h=[],u=this._getBandSegmentCount();let g=0,y=-1;for(;g<this._storageIndex.length;){y++;const t=Math.ceil(p/l/c**y)-1,e=Math.ceil(m/f/c**y)-1;g+=(t+1)*(e+1)*u*4,h.push({maxRow:e,maxCol:t,minCol:0,minRow:0})}this.rasterInfo.storageInfo.blockBoundary=h,y>0&&(this.rasterInfo.storageInfo.firstPyramidLevel=1,this.rasterInfo.storageInfo.maximumPyramidLevel=y),this.updateTileInfo()}_getBandSegmentCount(){return x.get(this.rasterInfo.storageInfo.compression).isOneSegment?1:this.rasterInfo.bandCount}_getTileLocation(t,e,r){const{blockWidth:s,blockHeight:o,pyramidScalingFactor:a}=this.rasterInfo.storageInfo,{width:i,height:n}=this.rasterInfo,l=this._getBandSegmentCount();let f,c,p,m=0,h=0;for(p=0;p<t;p++)h=a**p,f=Math.ceil(i/s/h),c=Math.ceil(n/o/h),m+=f*c;h=a**t,f=Math.ceil(i/s/h),c=Math.ceil(n/o/h),m+=e*f+r,m*=4*l;const u=this._storageIndex.subarray(m,m+4*l);let g=0,d=0;const y=[];for(let x=0;x<l;x++)g=u[4*x]*2**32+u[4*x+1],d=g+u[4*x+2]*2**32+u[4*x+3],y.push({from:g,to:d});return{ranges:y,actualTileWidth:r<f-1?s:Math.ceil(i/h)-s*(f-1),actualTileHeight:e<c-1?o:Math.ceil(n/h)-o*(c-1)}}_parseHeader(t){const r=(0,xmlUtilities.V6)(t,"MRF_META/Raster");if(!r)throw new core_Error.A("mrf:open","not a valid MRF format");const s=(0,xmlUtilities.V6)(r,"Size"),n=parseInt(s.getAttribute("x"),10),c=parseInt(s.getAttribute("y"),10),m=parseInt(s.getAttribute("c"),10),g=((0,xmlUtilities.mX)(r,"Compression")||"none").toLowerCase();if(!x.has(g))throw new core_Error.A("mrf:open","currently does not support compression "+g);const d=(0,xmlUtilities.mX)(r,"DataType")||"UInt8",w=y.get(d);if(null==w)throw new core_Error.A("mrf:open","currently does not support pixel type "+d);const I=(0,xmlUtilities.V6)(r,"PageSize"),b=parseInt(I.getAttribute("x"),10),R=parseInt(I.getAttribute("y"),10),A=(0,xmlUtilities.V6)(r,"DataValues");let F,_;if(A&&(_=A.getAttribute("NoData"),null!=_&&(F=_.trim().split(" ").map((t=>parseFloat(t))))),(0,xmlUtilities.V6)(t,"MRF_META/CachedSource"))throw new core_Error.A("mrf:open","currently does not support MRF referencing other data files");const S=(0,xmlUtilities.V6)(t,"MRF_META/GeoTags"),k=(0,xmlUtilities.V6)(S,"BoundingBox");let M,j=!1;if(null!=k){const t=parseFloat(k.getAttribute("minx")),e=parseFloat(k.getAttribute("miny")),r=parseFloat(k.getAttribute("maxx")),s=parseFloat(k.getAttribute("maxy")),a=(0,xmlUtilities.mX)(S,"Projection")||"";let n=SpatialReference.A.WGS84;if("LOCAL_CS[]"!==a)if(a.toLowerCase().startsWith("epsg:")){const t=Number(a.slice(5));isNaN(t)||0===t||(n=new SpatialReference.A({wkid:t}))}else n=pamParser_d(a)??SpatialReference.A.WGS84;else j=!0,n=new SpatialReference.A({wkid:3857});M=new Extent.default(t,e,r,s),M.spatialReference=n}else j=!0,M=new Extent.default({xmin:-.5,ymin:.5-c,xmax:n-.5,ymax:.5,spatialReference:new SpatialReference.A({wkid:3857})});const C=(0,xmlUtilities.V6)(t,"MRF_META/Rsets"),T=parseInt(C?.getAttribute("scale")||"2",10),L=M.spatialReference,U=new RasterStorageInfo.A({origin:new Point.default({x:M.xmin,y:M.ymax,spatialReference:L}),blockWidth:b,blockHeight:R,pyramidBlockWidth:b,pyramidBlockHeight:R,compression:g,pyramidScalingFactor:T}),B=new Point.default({x:M.width/n,y:M.height/c,spatialReference:L}),E=new RasterInfo.A({width:n,height:c,extent:M,isPseudoSpatialReference:j,spatialReference:L,bandCount:m,pixelType:w,pixelSize:B,noDataValue:F,storageInfo:U}),P=(0,xmlUtilities.mX)(t,"datafile"),W=(0,xmlUtilities.mX)(t,"IndexFile");return{rasterInfo:E,files:{mrf:this.url,index:W||this.url.replace(".mrf",".idx"),data:P||this.url.replace(".mrf",x.get(g).blobExtension)}}}async _fetchAuxiliaryData(t){try{const{data:e}=await this.request(this.url+".aux.xml",{responseType:"xml",signal:t?.signal});return S(e)}catch{return null}}};(0,tslib_es6._)([(0,property.MZ)()],w.prototype,"_files",void 0),(0,tslib_es6._)([(0,property.MZ)()],w.prototype,"_storageIndex",void 0),(0,tslib_es6._)([(0,property.MZ)({type:String,json:{write:!0}})],w.prototype,"datasetFormat",void 0),w=(0,tslib_es6._)([(0,subclass.$)("esri.layers.support.rasterDatasets.MRFRaster")],w);const b=w;var byteStreamUtils=__webpack_require__("./node_modules/@arcgis/core/layers/support/rasterDatasets/byteStreamUtils.js");function t(e){const t=e.fields,r=e.records,n=t.some((e=>"oid"===e.name.toLowerCase()))?"OBJECTID":"OID",i=[{name:n,type:"esriFieldTypeOID",alias:"OID"}].concat(t.map((e=>({name:e.name,type:"esriFieldType"+e.typeName,alias:e.name})))),a=i.map((e=>e.name)),s=[];let o=0,l=0;return r.forEach((e=>{const t={};for(t[n]=o++,l=1;l<a.length;l++)t[a[l]]=e[l-1];s.push({attributes:t})})),{displayFieldName:"",fields:i,features:s}}class DBFParser_r{static get supportedVersions(){return[5]}static parse(r){const n=new DataView(r),i=3&n.getUint8(0);if(3!==i)return{header:{version:i},recordSet:null};const a=n.getUint32(4,!0),s=n.getUint16(8,!0),o=n.getUint16(10,!0),l={version:i,recordCount:a,headerByteCount:s,recordByteCount:o};let p=32;const d=[],g=[];let h;if(3===i){for(;13!==n.getUint8(p);)h=String.fromCharCode(n.getUint8(p+11)).trim(),d.push({name:(0,byteStreamUtils.w)(new Uint8Array(r,p,11)),type:h,typeName:["String","Date","Double","Boolean","String","Integer"][["C","D","F","L","M","N"].indexOf(h)],length:n.getUint8(p+16)}),p+=32;if(p+=1,d.length>0)for(;g.length<a&&r.byteLength-p>o;){const t=[];32===n.getUint8(p)?(p+=1,d.forEach((n=>{if("C"===n.type)t.push((0,byteStreamUtils.w)(new Uint8Array(r,p,n.length)).trim());else if("N"===n.type)t.push(parseInt(String.fromCharCode.apply(null,new Uint8Array(r,p,n.length)).trim(),10));else if("F"===n.type)t.push(parseFloat(String.fromCharCode.apply(null,new Uint8Array(r,p,n.length)).trim()));else if("D"===n.type){const e=String.fromCharCode.apply(null,new Uint8Array(r,p,n.length)).trim();t.push(new Date(parseInt(e.slice(0,4),10),parseInt(e.slice(4,6),10)-1,parseInt(e.slice(6,8),10)))}p+=n.length})),g.push(t)):p+=o}}return{header:l,fields:d,records:g,recordSet:t({fields:d,records:g})}}}var TiffDecoder=__webpack_require__("./node_modules/@arcgis/core/layers/support/rasterFormats/TiffDecoder.js"),TiffTags=__webpack_require__("./node_modules/@arcgis/core/layers/support/rasterFormats/TiffTags.js");const _=(e,t)=>e.get(t)?.values,F=(e,t)=>e.get(t)?.values?.[0];let TIFFRaster_v=class extends BaseRaster.A{constructor(){super(...arguments),this._files=null,this._headerInfo=null,this._bufferSize=1048576,this.datasetFormat="TIFF"}async fetchRawTile(e,t,r,i={}){if(!this._headerInfo?.isSupported||this.isBlockOutside(e,t,r))return null;const s=await this._fetchRawTiffTile(e,t,r,!1,i);if(null!=s&&this._headerInfo.hasMaskBand){const a=await this._fetchRawTiffTile(e,t,r,!0,i);null!=a&&a.pixels[0]instanceof Uint8Array&&(s.mask=a.pixels[0])}return s}async _open(e){const t=e?e.signal:null,{data:s}=await this.request(this.url,{range:{from:0,to:this._bufferSize},responseType:"array-buffer",signal:t});if(!s)throw new core_Error.A("tiffraster:open","failed to open url "+this.url);this.datasetName=this.url.slice(this.url.lastIndexOf("/")+1,this.url.lastIndexOf("."));const{littleEndian:a,firstIFDPos:n,isBigTiff:o}=(0,TiffDecoder.uT)(s),f=[];await this._readIFDs(f,s,a,n,0,o?8:4,t);const{imageInfo:l,rasterInfo:u}=function k(e){const t=(0,TiffDecoder.uc)(e),{width:r,height:i,tileWidth:s,tileHeight:a,planes:p,pixelType:c,compression:h,firstPyramidLevel:d,maximumPyramidLevel:y,pyramidBlockWidth:g,pyramidBlockHeight:x,pyramidResolutions:T,tileBoundary:I,affine:R,metadata:b}=t,S=t.extent.spatialReference?.wkt||t.extent.spatialReference?.wkid;let v=pamParser_d(S),k=!!t.isPseudoGeographic;null==v&&(k=!0,v=new SpatialReference.A({wkid:3857}));const P=new Extent.default({...t.extent,spatialReference:v}),D=new Point.default(P?{x:P.xmin,y:P.ymax,spatialReference:v}:{x:0,y:0}),O=new RasterStorageInfo.A({blockWidth:s,blockHeight:a,pyramidBlockWidth:g,pyramidBlockHeight:x,compression:h,origin:D,firstPyramidLevel:d,maximumPyramidLevel:y,pyramidResolutions:T,blockBoundary:I}),L=new Point.default({x:(P.xmax-P.xmin)/r,y:(P.ymax-P.ymin)/i,spatialReference:v}),B=b?{BandProperties:b.bandProperties,DataType:b.dataType}:{};let j=null;const z=F(e[0],"PHOTOMETRICINTERPRETATION"),A=_(e[0],"COLORMAP");if(z<=3&&A?.length>3&&A.length%3==0){j=[];const e=A.length/3;for(let t=0;t<e;t++)j.push([t,A[t]>>>8,A[t+e]>>>8,A[t+2*e]>>>8])}const C=new RasterInfo.A({width:r,height:i,bandCount:p,pixelType:c,pixelSize:L,storageInfo:O,spatialReference:v,isPseudoSpatialReference:k,keyProperties:B,extent:P,colormap:j,statistics:b?b.statistics:null});if(R?.length&&(C.nativeExtent=new Extent.default({xmin:-.5,ymin:.5-i,xmax:r-.5,ymax:.5,spatialReference:v}),C.transform=new PolynomialTransform.A({polynomialOrder:1,forwardCoefficients:[R[2]+R[0]/2,R[5]-R[3]/2,R[0],R[3],-R[1],-R[4]]}),C.extent=C.transform.forwardTransform(C.nativeExtent),C.pixelSize=new Point.default({x:(P.xmax-P.xmin)/r,y:(P.ymax-P.ymin)/i,spatialReference:v}),O.origin.x=-.5,O.origin.y=.5),T){const{x:e,y:t}=C.pixelSize;T.forEach((r=>{r.x*=e,r.y*=t}))}return{imageInfo:t,rasterInfo:C}}(f),p=(0,TiffDecoder.zS)(f),c=(0,TiffDecoder.r9)(f);if(this._headerInfo={littleEndian:a,isBigTiff:o,ifds:f,pyramidIFDs:p,maskIFDs:c,...l},this._set("rasterInfo",u),!l.isSupported)throw new core_Error.A("tiffraster:open","this tiff is not supported: "+l.message);if(!l.tileWidth)throw new core_Error.A("tiffraster:open","none-tiled tiff is not optimized for access, convert to COG and retry.");u.isPseudoSpatialReference&&Logger.A.getLogger(this).warn("The spatial reference for this tiff is unsupported. Only EPSG spatial reference codes and Esri WKTs are supported.");const h=f[0].get("PREDICTOR")?.values?.[0],m=f[0].get("SAMPLEFORMAT")?.values?.[0];if(3===m&&2===h)throw new core_Error.A("tiffraster:open","unsupported horizontal difference encoding. Predictor=3 is supported for floating point data");const{skipMapInfo:x,skipExtensions:T=[]}=this.ioConfig;if(!T.includes("aux.xml")&&!x){const t=await this._fetchAuxiliaryMetaData(e);null!=t&&function P(e,t){if(t.statistics=e.statistics??t.statistics,t.histograms=e.histograms,e.histograms&&null==t.statistics&&(t.statistics=(0,stretchUtils.Pg)(e.histograms)),e.transform&&null==t.transform){t.transform=e.transform,t.nativeExtent=t.extent;const r=t.transform.forwardTransform(t.nativeExtent);t.pixelSize=new Point.default({x:(r.xmax-r.xmin)/t.width,y:(r.ymax-r.ymin)/t.height,spatialReference:t.spatialReference}),t.extent=r}t.isPseudoSpatialReference&&e.spatialReference&&(t.spatialReference=e.spatialReference,t.extent.spatialReference=t.nativeExtent.spatialReference=t.storageInfo.origin.spatialReference=t.spatialReference)}(t,u)}T.includes("vat.dbf")||1!==u.bandCount||"u8"!==u.pixelType||x||(u.attributeTable=await this._fetchAuxiliaryTable(e),null!=u.attributeTable&&(u.keyProperties.DataType="thematic")),x&&this.updateImageSpaceRasterInfo(u),this.updateTileInfo()}async _readIFDs(e,t,r,i,s,a=4,n){if(!i)return null;(i>=t.byteLength||i<0)&&(t=(await this.request(this.url,{range:{from:i+s,to:i+s+this._bufferSize},responseType:"array-buffer",signal:n})).data,s=i+s,i=0);const o=await this._readIFD(t,r,i,s,TiffTags.A.tiffTags,a,n);if(e.push(o.ifd),!o.nextIFD)return null;await this._readIFDs(e,t,r,o.nextIFD-s,s,a,n)}async _readIFD(e,r,i,s,a=TiffTags.A.tiffTags,n=4,o){if(!e)return null;const f=(0,TiffDecoder.JM)(e,r,i,s,a,n);if(f.success){const i=[];if(f.ifd?.forEach((e=>{e.values||i.push(e)})),i.length>0){const a=i.map((e=>e.offlineOffsetSize)).filter(arrayUtils.Ru),n=Math.min.apply(null,a.map((e=>e[0])));if(Math.min.apply(null,a.map((e=>e[0]+e[1])))-n<=this._bufferSize){const{data:t}=await this.request(this.url,{range:{from:n,to:n+this._bufferSize},responseType:"array-buffer",signal:o});e=t,s=n,i.forEach((t=>(0,TiffDecoder.Cr)(e,r,t,s)))}}if(f.ifd?.has("GEOKEYDIRECTORY")){const t=f.ifd.get("GEOKEYDIRECTORY"),i=t?.values;if(i&&i.length>4){const a=i[0]+"."+i[1]+"."+i[2],n=await this._readIFD(e,r,t.valueOffset+6-s,s,TiffTags.A.geoKeys,2,o);t.data=n.ifd,t.data&&t.data.set("GEOTIFFVersion",{id:0,type:2,valueCount:1,valueOffset:null,values:[a]})}}return f}if(f.requiredBufferSize&&f.requiredBufferSize!==e.byteLength){const t=await this.request(this.url,{range:{from:s,to:s+f.requiredBufferSize+4},responseType:"array-buffer",signal:o});return(e=t.data).byteLength<f.requiredBufferSize?null:this._readIFD(e,r,0,s,TiffTags.A.tiffTags,4,o)}}async _fetchRawTiffTile(e,t,r,i,s={}){const a=this._getTileLocation(e,t,r,i);if(!a)return null;const{ranges:n,actualTileWidth:o,actualTileHeight:f,ifd:l}=a,u=n.map((e=>this.request(this.url,{range:e,responseType:"array-buffer",signal:s.signal}))),p=await Promise.all(u),c=p.map((e=>e.data.byteLength)).reduce(((e,t)=>e+t)),h=1===p.length?p[0].data:new ArrayBuffer(c),m=[0],d=[0];if(p.length>1){const e=new Uint8Array(h);for(let t=0,r=0;t<p.length;t++){const i=p[t].data;e.set(new Uint8Array(i),r),m[t]=r,r+=i.byteLength,d[t]=i.byteLength}}const{blockWidth:y,blockHeight:g}=this.getBlockWidthHeight(e),x=await this.decodePixelBlock(h,{format:"tiff",customOptions:{headerInfo:this._headerInfo,ifd:l,offsets:m,sizes:d},width:y,height:g,planes:null,pixelType:null});if(null==x)return null;let T,I,w;if(o!==y||f!==g){let e=x.mask;if(e)for(T=0;T<g;T++)if(w=T*y,T<f)for(I=o;I<y;I++)e[w+I]=0;else for(I=0;I<y;I++)e[w+I]=0;else for(e=new Uint8Array(y*g),x.mask=e,T=0;T<f;T++)for(w=T*y,I=0;I<o;I++)e[w+I]=1}return x}_getTileLocation(e,t,r,i=!1){const{firstPyramidLevel:s,blockBoundary:a}=this.rasterInfo.storageInfo,n=0===e?0:e-(s-1),{_headerInfo:o}=this;if(!o)return null;const f=i?o.maskIFDs[n]:0===n?o?.ifds[0]:o?.pyramidIFDs[n-1];if(!f)return null;const l=(0,TiffDecoder.XO)(f,o),u=_(f,"TILEOFFSETS");if(void 0===u)return null;const p=_(f,"TILEBYTECOUNTS"),{minRow:c,minCol:h,maxRow:m,maxCol:d}=a[n];if(t>m||r>d||t<c||r<h)return null;const y=F(f,"IMAGEWIDTH"),g=F(f,"IMAGELENGTH"),x=F(f,"TILEWIDTH"),T=F(f,"TILELENGTH"),w=[];if(l){const{bandCount:e}=this.rasterInfo;for(let i=0;i<e;i++){const e=i*(m+1)*(d+1)+t*(d+1)+r;w[i]={from:u[e],to:u[e]+p[e]-1}}}else{const e=t*(d+1)+r;w.push({from:u[e],to:u[e]+p[e]-1})}for(let I=0;I<w.length;I++)if(null==w[I].from||!w[I].to||w[I].to<0)return null;return{ranges:w,ifd:f,actualTileWidth:r===d&&y%x||x,actualTileHeight:t===m&&g%T||T}}async _fetchAuxiliaryMetaData(e){try{const{data:t}=await this.request(this.url+".aux.xml",{responseType:"xml",signal:e?.signal});return S(t)}catch{return null}}async _fetchAuxiliaryTable(e){try{const{data:t}=await this.request(this.url+".vat.dbf",{responseType:"array-buffer",signal:e?.signal}),r=DBFParser_r.parse(t);return r?.recordSet?FeatureSet.A.fromJSON(r.recordSet):null}catch{return null}}};(0,tslib_es6._)([(0,property.MZ)()],TIFFRaster_v.prototype,"_files",void 0),(0,tslib_es6._)([(0,property.MZ)()],TIFFRaster_v.prototype,"_headerInfo",void 0),(0,tslib_es6._)([(0,property.MZ)()],TIFFRaster_v.prototype,"_bufferSize",void 0),(0,tslib_es6._)([(0,property.MZ)({type:String,json:{write:!0}})],TIFFRaster_v.prototype,"datasetFormat",void 0),TIFFRaster_v=(0,tslib_es6._)([(0,subclass.$)("esri.layers.support.rasterDatasets.TIFFRaster")],TIFFRaster_v);const D=TIFFRaster_v,n=new Map;n.set("MRF",{desc:"Meta Raster Format",constructor:b}),n.set("TIFF",{desc:"GeoTIFF",constructor:D}),n.set("RasterTileServer",{desc:"Raster Tile Server",constructor:I}),n.set("JPG",{desc:"JPG Raster Format",constructor:ImageAuxRaster_d}),n.set("PNG",{desc:"PNG Raster Format",constructor:ImageAuxRaster_d}),n.set("GIF",{desc:"GIF Raster Format",constructor:ImageAuxRaster_d}),n.set("BMP",{desc:"BMP Raster Format",constructor:ImageAuxRaster_d}),n.set("CovJSON",{desc:"COVJSON Raster Format",constructor:h}),n.set("MEMORY",{desc:"In Memory Raster Format",constructor:g});class RasterFactory_u{static get supportedFormats(){const t=new Set;return n.forEach(((r,e)=>t.add(e))),t}static async open(r){const{url:e,ioConfig:s,source:o,sourceJSON:a}=r;let c=r.datasetFormat??s?.datasetFormat;null==c&&(e.includes(".")?c=e.slice(e.lastIndexOf(".")+1).toUpperCase():"coverage"===o?.type?.toLowerCase()?c="CovJSON":o?.extent&&o.pixelblocks&&(c="MEMORY")),"OVR"===c||"TIF"===c?c="TIFF":"JPG"===c||"JPEG"===c||"JFIF"===c?c="JPG":"COVJSON"===c&&(c="CovJSON"),e.toLowerCase().includes("/imageserver")&&!e.toLowerCase().includes("/wcsserver")&&(c="RasterTileServer");const u={url:e,source:o,sourceJSON:a,datasetFormat:c,ioConfig:s??{bandIds:null,sampling:null}};if(Object.keys(u).forEach((t=>{null==u[t]&&delete u[t]})),c){if(!this.supportedFormats.has(c))throw new core_Error.A("rasterfactory:open","not a supported format "+c);if("CRF"===c)throw new core_Error.A("rasterfactory:open",`cannot open raster: ${e}`);const s=new(0,n.get(c).constructor)(u);return await s.open({signal:r.signal}),s}const i=Array.from(n.keys()).filter((t=>"CovJSON"!==t&&"Memory"!==t));let l=0;const m=()=>{if(c=i[l++],!c)return null;if("CRF"===c)return null;const t=new(0,n.get(c).constructor)(u);return t.open({signal:r.signal}).then((()=>t)).catch((()=>m()))};return m()}static register(t,r,e){n.has(t.toUpperCase())||n.set(t.toUpperCase(),{desc:r,constructor:e})}}var rasterFunctionHelper=__webpack_require__("./node_modules/@arcgis/core/layers/support/rasterFunctions/rasterFunctionHelper.js"),popupUtils=__webpack_require__("./node_modules/@arcgis/core/support/popupUtils.js"),interfaces=__webpack_require__("./node_modules/@arcgis/core/webdoc/interfaces.js");let V=class extends((0,BlendLayer.dM)((0,ScaleRangeLayer.j)((0,OperationalLayer.q)((0,PortalLayer.A)((0,RasterPresetRendererMixin.H)((0,CustomParametersMixin.d)((0,ImageryTileMixin.o)((0,TemporalLayer.e)((0,ArcGISService.b)((0,RefreshableLayer.J)((0,MultiOriginJSONSupport.P)(Clonable.A.ClonableMixin(Layer.A))))))))))))){constructor(...e){super(...e),this._primaryRasters=[],this.legendEnabled=!0,this.isReference=null,this.listMode="show",this.sourceJSON=null,this.version=null,this.type="imagery-tile",this.operationalLayerType="ArcGISTiledImageServiceLayer",this.popupEnabled=!0,this.popupTemplate=null,this.fields=null,this.source=void 0,this._debouncedSaveOperations=(0,promiseUtils.sg)((async(e,t,r)=>{const{save:s,saveAs:i}=await __webpack_require__.e(5144).then(__webpack_require__.bind(__webpack_require__,"./node_modules/@arcgis/core/layers/save/imageryUtils.js"));switch(e){case interfaces.X.SAVE:return s(this,t);case interfaces.X.SAVE_AS:return i(this,r,t)}}))}normalizeCtorArgs(e,t){return"string"==typeof e?{url:e,...t}:e}load(e){const t=null!=e?e.signal:null;return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Image Service"]},e).catch(promiseUtils.QP).then((()=>this._openRaster(t)))),Promise.resolve(this)}get defaultPopupTemplate(){return this.createPopupTemplate()}get rasterFields(){const e=[(0,rasterFieldUtils.rZ)("Pixel Value"),(0,rasterFieldUtils.dy)("Raw Pixel Value")],t=this.raster?.rasterInfo??this.serviceRasterInfo,r=t?.attributeTable;if(r){const t=(0,rasterFieldUtils.jC)(r);e.push(...t)}const s=t?.dataType,i=t?.multidimensionalInfo;if(("vector-magdir"===s||"vector-uv"===s)&&null!=i){const t=i.variables[0].unit?.trim(),r=(0,rasterFieldUtils.DV)(t),s=(0,rasterFieldUtils.y6)();e.push(r,s)}if(i){const t=(0,rasterFieldUtils.AL)(i);e.push(...t)}return e}createPopupTemplate(e){const{rasterFields:t}=this,r=e?.visibleFieldNames??new Set(t.map((({name:e})=>e)).filter((e=>e!==rasterFieldUtils.F_.rawServicePixelValue))),s=(0,popupUtils.tn)({fields:t,title:this.title},{...e,visibleFieldNames:r}),{rasterInfo:i}=this.raster;return s?.fieldInfos&&i&&(0,rasterFieldUtils.h4)(s.fieldInfos,i),s}async generateRasterInfo(e,t){if(e=(0,ensureType.PZ)(RasterFunction.A,e),await this.load(),!e||"none"===e.functionName?.toLowerCase())return this.serviceRasterInfo;try{const{rasterInfo:r}=await this._openFunctionRaster(e,t);return r}catch(r){if(r instanceof core_Error.A)throw r;throw new core_Error.A("imagery-tile-layer","the given raster function is not supported")}}async save(e){return this._debouncedSaveOperations(interfaces.X.SAVE,e)}async saveAs(e,t){return this._debouncedSaveOperations(interfaces.X.SAVE_AS,t,e)}write(e,t){const r=this._primaryRasters[0]??this.raster;if(this.loaded?"RasterTileServer"===r.datasetFormat&&("Raster"===r.tileType||"Map"===r.tileType):this.url&&/\/ImageServer(\/|\/?$)/i.test(this.url))return super.write(e,t);if(t?.messages){const e=`${t.origin}/${t.layerContainerType||"operational-layers"}`;t.messages.push(new core_Error.A("layer:unsupported",`Layers (${this.title}, ${this.id}) of type '${this.declaredClass}' are not supported in the context of '${e}'`,{layer:this}))}return null}async _openRaster(e){let t=!1;if(this.raster)await this._openFromRaster(this.raster,e),t="Function"===this.raster.datasetFormat,!t&&this.rasterFunction&&(this._primaryRasters=[this.raster],await this._initializeWithFunctionRaster(this.rasterFunction));else{const{url:t,rasterFunction:r,source:i}=this;if(!t&&!i)throw new core_Error.A("imagery-tile-layer:open","missing url or source parameter");i?await this._openFromSource(i,e):r?await this._openFromUrlWithRasterFunction(t,r,e):await this._openFromUrl(t,e)}const r=this.raster.rasterInfo;if(!r)throw new core_Error.A("imagery-tile-layer:load","cannot load resources on "+this.url);if(this._set("serviceRasterInfo",t?r:this._primaryRasters[0].rasterInfo),this._set("spatialReference",r.spatialReference),this.sourceJSON=this.sourceJSON||this.raster.sourceJSON,null!=this.sourceJSON){const e="Map"===this.raster.tileType&&null!=this.sourceJSON.minLOD&&null!=this.sourceJSON.maxLOD?this.sourceJSON:{...this.sourceJSON,minScale:0,maxScale:0};this.read(e,{origin:"service"})}else this.read({tileInfo:this.serviceRasterInfo?.storageInfo.tileInfo.toJSON()},{origin:"service"});this.title||(this.title=this.raster.datasetName),"Map"===this.raster.tileType&&(this.popupEnabled=!1),this._configDefaultSettings(),this.addHandles((0,reactiveUtils.watch)((()=>this.customParameters),(e=>{this.raster&&(this.raster.ioConfig.customFetchParameters=e)})))}async _openFromRaster(e,t){e.rasterInfo||await e.open({signal:t}),this._primaryRasters="Function"===e.datasetFormat?e.primaryRasters.rasters:[e],this.url||(this.url=this._primaryRasters[0].url)}async _openFromUrlWithRasterFunction(e,t,r){const i=[e];t&&(0,rasterFunctionHelper.UD)(t.toJSON(),i);const o=await Promise.all(i.map((e=>RasterFactory_u.open({url:e,sourceJSON:this.sourceJSON,ioConfig:{sampling:"closest",...this.ioConfig,customFetchParameters:this.customParameters},signal:r})))),a=o.findIndex((e=>null==e));if(a>-1)throw new core_Error.A("imagery-tile-layer:open",`cannot open raster: ${i[a]}`);return this._primaryRasters=o,this._initializeWithFunctionRaster(t)}async _openFromUrl(e,t){const r=await RasterFactory_u.open({url:e,sourceJSON:this.sourceJSON,ioConfig:{sampling:"closest",...this.ioConfig,customFetchParameters:this.customParameters},signal:t});if(null==r)throw new core_Error.A("imagery-tile-layer:open",`cannot open raster: ${e}`);this._primaryRasters=[r],this.raster=r}async _openFromSource(e,t){const r="the tiled imagery data source is not supported",i="coverage"===e.type?.toLowerCase()?"CovJSON":e.extent&&e.pixelBlock?"MEMORY":null;if(!i)throw new core_Error.A("imagery-tile-layer:open",r);"MEMORY"===i&&(e={...e,pixelBlock:void 0,pixelBlocks:[e.pixelBlock]});const o=await RasterFactory_u.open({url:"",source:e,datasetFormat:i,ioConfig:{sampling:"closest",...this.ioConfig,customFetchParameters:this.customParameters},signal:t});if(null==o)throw new core_Error.A("imagery-tile-layer:open",r);this._primaryRasters=[o],this.rasterFunction?await this._initializeWithFunctionRaster(this.rasterFunction):this.raster=o}async _openFunctionRaster(e,t){const r={raster:this._primaryRasters[0]};this._primaryRasters.length>1&&this._primaryRasters.forEach((e=>r[e.url]=e));const s=(0,rasterFunctionHelper.vt)(e.functionDefinition?.toJSON()??e.toJSON(),r),i=new FunctionRaster.A({rasterFunction:s});return await i.open(t),i}async _initializeWithFunctionRaster(e,t){try{this.raster=await this._openFunctionRaster(e,t)}catch(r){r instanceof core_Error.A&&Logger.A.getLogger(this).error("imagery-tile-layer:open",r.message),Logger.A.getLogger(this).warn("imagery-tile-layer:open","the raster function cannot be applied and is removed"),this._set("rasterFunction",null),this.raster=this._primaryRasters[0]}}};(0,tslib_es6._)([(0,property.MZ)({clonable:!1})],V.prototype,"_primaryRasters",void 0),(0,tslib_es6._)([(0,property.MZ)(commonProperties.fV)],V.prototype,"legendEnabled",void 0),(0,tslib_es6._)([(0,property.MZ)({type:Boolean,json:{read:!1,write:{enabled:!0,overridePolicy:()=>({enabled:!1})}}})],V.prototype,"isReference",void 0),(0,tslib_es6._)([(0,property.MZ)({type:["show","hide"]})],V.prototype,"listMode",void 0),(0,tslib_es6._)([(0,property.MZ)({json:{read:!0,write:!0}})],V.prototype,"blendMode",void 0),(0,tslib_es6._)([(0,property.MZ)({type:RasterFunction.A,json:{name:"renderingRule",write:!0}})],V.prototype,"rasterFunction",void 0),(0,tslib_es6._)([(0,property.MZ)()],V.prototype,"sourceJSON",void 0),(0,tslib_es6._)([(0,property.MZ)({readOnly:!0,json:{origins:{service:{read:{source:"currentVersion"}}}}})],V.prototype,"version",void 0),(0,tslib_es6._)([(0,property.MZ)({readOnly:!0,json:{read:!1}})],V.prototype,"type",void 0),(0,tslib_es6._)([(0,property.MZ)({type:["ArcGISTiledImageServiceLayer"]})],V.prototype,"operationalLayerType",void 0),(0,tslib_es6._)([(0,property.MZ)({type:Boolean,value:!0,json:{read:{source:"disablePopup",reader:(e,t)=>!t.disablePopup},write:{target:"disablePopup",overridePolicy(){return{enabled:!this.loaded||"Raster"===this.raster.tileType}},writer(e,t,r){t[r]=!e}}}})],V.prototype,"popupEnabled",void 0),(0,tslib_es6._)([(0,property.MZ)({type:PopupTemplate.A,json:{read:{source:"popupInfo"},write:{target:"popupInfo",overridePolicy(){return{enabled:!this.loaded||"Raster"===this.raster.tileType}}}}})],V.prototype,"popupTemplate",void 0),(0,tslib_es6._)([(0,property.MZ)({readOnly:!0})],V.prototype,"defaultPopupTemplate",null),(0,tslib_es6._)([(0,property.MZ)({readOnly:!0,type:[Field.A]})],V.prototype,"fields",void 0),(0,tslib_es6._)([(0,property.MZ)({readOnly:!0,type:[Field.A]})],V.prototype,"rasterFields",null),(0,tslib_es6._)([(0,property.MZ)({constructOnly:!0})],V.prototype,"source",void 0),V=(0,tslib_es6._)([(0,subclass.$)("esri.layers.ImageryTileLayer")],V);const B=V},"./node_modules/@arcgis/core/layers/mixins/ArcGISService.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{b:()=>l});var _chunks_tslib_es6_js__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/@arcgis/core/chunks/tslib.es6.js"),_core_Logger_js__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/@arcgis/core/core/Logger.js"),_core_accessorSupport_decorators_property_js__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/@arcgis/core/core/accessorSupport/decorators/property.js"),_core_accessorSupport_decorators_subclass_js__WEBPACK_IMPORTED_MODULE_5__=(__webpack_require__("./node_modules/@arcgis/core/core/has.js"),__webpack_require__("./node_modules/@arcgis/core/core/RandomLCG.js"),__webpack_require__("./node_modules/@arcgis/core/core/accessorSupport/decorators/subclass.js")),_support_arcgisLayerUrl_js__WEBPACK_IMPORTED_MODULE_6__=__webpack_require__("./node_modules/@arcgis/core/layers/support/arcgisLayerUrl.js");const l=l=>{let p=class extends l{get title(){if(this._get("title")&&"defaults"!==this.originOf("title"))return this._get("title");if(this.url){const t=(0,_support_arcgisLayerUrl_js__WEBPACK_IMPORTED_MODULE_6__.qg)(this.url);if(t?.title)return t.title}return this._get("title")||""}set title(t){this._set("title",t)}set url(t){this._set("url",(0,_support_arcgisLayerUrl_js__WEBPACK_IMPORTED_MODULE_6__.Jf)(t,_core_Logger_js__WEBPACK_IMPORTED_MODULE_1__.A.getLogger(this)))}};return(0,_chunks_tslib_es6_js__WEBPACK_IMPORTED_MODULE_0__._)([(0,_core_accessorSupport_decorators_property_js__WEBPACK_IMPORTED_MODULE_2__.MZ)()],p.prototype,"title",null),(0,_chunks_tslib_es6_js__WEBPACK_IMPORTED_MODULE_0__._)([(0,_core_accessorSupport_decorators_property_js__WEBPACK_IMPORTED_MODULE_2__.MZ)({type:String})],p.prototype,"url",null),p=(0,_chunks_tslib_es6_js__WEBPACK_IMPORTED_MODULE_0__._)([(0,_core_accessorSupport_decorators_subclass_js__WEBPACK_IMPORTED_MODULE_5__.$)("esri.layers.mixins.ArcGISService")],p),p}},"./node_modules/@arcgis/core/layers/mixins/RasterPresetRendererMixin.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{H:()=>o});var tslib_es6=__webpack_require__("./node_modules/@arcgis/core/chunks/tslib.es6.js"),property=__webpack_require__("./node_modules/@arcgis/core/core/accessorSupport/decorators/property.js"),subclass=(__webpack_require__("./node_modules/@arcgis/core/core/has.js"),__webpack_require__("./node_modules/@arcgis/core/core/Logger.js"),__webpack_require__("./node_modules/@arcgis/core/core/RandomLCG.js"),__webpack_require__("./node_modules/@arcgis/core/core/accessorSupport/decorators/subclass.js")),Clonable=__webpack_require__("./node_modules/@arcgis/core/core/Clonable.js"),JSONSupport=__webpack_require__("./node_modules/@arcgis/core/core/JSONSupport.js"),ensureType=__webpack_require__("./node_modules/@arcgis/core/core/accessorSupport/ensureType.js"),enumeration=__webpack_require__("./node_modules/@arcgis/core/core/accessorSupport/decorators/enumeration.js"),rasterTypeUtils=__webpack_require__("./node_modules/@arcgis/core/renderers/support/rasterTypeUtils.js");let d=class extends(Clonable.A.ClonableMixin(JSONSupport.A)){constructor(e){super(e),this.name=void 0,this.method="none",this.value=void 0,this.bandIds=void 0,this.renderer=void 0}};(0,tslib_es6._)([(0,property.MZ)({type:String,json:{write:{isRequired:!0}}})],d.prototype,"name",void 0),(0,tslib_es6._)([(0,property.MZ)({type:["raster-function-template","variable","none"],json:{write:{isRequired:!0}}}),(0,enumeration.e)({rasterFunctionTemplate:"raster-function-template",variable:"variable",none:"none"})],d.prototype,"method",void 0),(0,tslib_es6._)([(0,property.MZ)({type:String,json:{write:{isRequired:!0}}})],d.prototype,"value",void 0),(0,tslib_es6._)([(0,property.MZ)({type:[ensureType.jz],json:{write:{isRequired:!0}}})],d.prototype,"bandIds",void 0),(0,tslib_es6._)([(0,property.MZ)({types:rasterTypeUtils.uy,json:{write:!0,origins:{"web-scene":{types:rasterTypeUtils.Gj,write:{overridePolicy:e=>({enabled:e&&"vector-field"!==e.type&&"flow"!==e.type})}}}}})],d.prototype,"renderer",void 0),d=(0,tslib_es6._)([(0,subclass.$)("esri.renderers.support.RasterPresetRenderer")],d);const c=d,o=o=>{let i=class extends o{constructor(){super(...arguments),this.activePresetRendererName=null,this.presetRenderers=null}};return(0,tslib_es6._)([(0,property.MZ)({type:String,json:{name:"layerDefinition.activePresetRendererName",write:{allowNull:!0}}})],i.prototype,"activePresetRendererName",void 0),(0,tslib_es6._)([(0,property.MZ)({type:[c],json:{name:"layerDefinition.presetRenderers",write:!0}})],i.prototype,"presetRenderers",void 0),i=(0,tslib_es6._)([(0,subclass.$)("esri.layers.mixins.RasterPresetRendererMixin")],i),i}},"./node_modules/@arcgis/core/layers/support/rasterTransforms/BaseRasterTransform.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{A:()=>a});var _chunks_tslib_es6_js__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/@arcgis/core/chunks/tslib.es6.js"),_core_JSONSupport_js__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/@arcgis/core/core/JSONSupport.js"),_core_accessorSupport_decorators_property_js__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/@arcgis/core/core/accessorSupport/decorators/property.js"),_core_accessorSupport_decorators_subclass_js__WEBPACK_IMPORTED_MODULE_6__=(__webpack_require__("./node_modules/@arcgis/core/core/has.js"),__webpack_require__("./node_modules/@arcgis/core/core/Logger.js"),__webpack_require__("./node_modules/@arcgis/core/core/RandomLCG.js"),__webpack_require__("./node_modules/@arcgis/core/core/accessorSupport/decorators/subclass.js"));let t=class extends _core_JSONSupport_js__WEBPACK_IMPORTED_MODULE_1__.A{get affectsPixelSize(){return!1}forwardTransform(r){return r}inverseTransform(r){return r}};(0,_chunks_tslib_es6_js__WEBPACK_IMPORTED_MODULE_0__._)([(0,_core_accessorSupport_decorators_property_js__WEBPACK_IMPORTED_MODULE_2__.MZ)()],t.prototype,"affectsPixelSize",null),(0,_chunks_tslib_es6_js__WEBPACK_IMPORTED_MODULE_0__._)([(0,_core_accessorSupport_decorators_property_js__WEBPACK_IMPORTED_MODULE_2__.MZ)({json:{write:!0}})],t.prototype,"spatialReference",void 0),t=(0,_chunks_tslib_es6_js__WEBPACK_IMPORTED_MODULE_0__._)([(0,_core_accessorSupport_decorators_subclass_js__WEBPACK_IMPORTED_MODULE_6__.$)("esri.layers.support.rasterTransforms.BaseRasterTransform")],t);const a=t},"./node_modules/@arcgis/core/layers/support/rasterTransforms/GCSShiftTransform.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{A:()=>c});var a,_chunks_tslib_es6_js__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/@arcgis/core/chunks/tslib.es6.js"),_core_accessorSupport_decorators_property_js__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/@arcgis/core/core/accessorSupport/decorators/property.js"),_core_accessorSupport_decorators_enumeration_js__WEBPACK_IMPORTED_MODULE_5__=(__webpack_require__("./node_modules/@arcgis/core/core/has.js"),__webpack_require__("./node_modules/@arcgis/core/core/Logger.js"),__webpack_require__("./node_modules/@arcgis/core/core/RandomLCG.js"),__webpack_require__("./node_modules/@arcgis/core/core/accessorSupport/decorators/enumeration.js")),_core_accessorSupport_decorators_subclass_js__WEBPACK_IMPORTED_MODULE_6__=__webpack_require__("./node_modules/@arcgis/core/core/accessorSupport/decorators/subclass.js"),_BaseRasterTransform_js__WEBPACK_IMPORTED_MODULE_7__=__webpack_require__("./node_modules/@arcgis/core/layers/support/rasterTransforms/BaseRasterTransform.js");let n=a=class extends _BaseRasterTransform_js__WEBPACK_IMPORTED_MODULE_7__.A{constructor(){super(...arguments),this.type="gcs-shift",this.tolerance=1e-8}forwardTransform(r){return"point"===(r=r.clone()).type?(r.x>180+this.tolerance&&(r.x-=360),r):(r.xmin>=180-this.tolerance?(r.xmax-=360,r.xmin-=360):r.xmax>180+this.tolerance&&(r.xmin=-180,r.xmax=180),r)}inverseTransform(r){return"point"===(r=r.clone()).type?(r.x<-this.tolerance&&(r.x+=360),r):(r.xmin<-this.tolerance&&(r.xmin+=360,r.xmax+=360),r)}clone(){return new a({tolerance:this.tolerance})}};(0,_chunks_tslib_es6_js__WEBPACK_IMPORTED_MODULE_0__._)([(0,_core_accessorSupport_decorators_enumeration_js__WEBPACK_IMPORTED_MODULE_5__.e)({GCSShiftXform:"gcs-shift"})],n.prototype,"type",void 0),(0,_chunks_tslib_es6_js__WEBPACK_IMPORTED_MODULE_0__._)([(0,_core_accessorSupport_decorators_property_js__WEBPACK_IMPORTED_MODULE_1__.MZ)()],n.prototype,"tolerance",void 0),n=a=(0,_chunks_tslib_es6_js__WEBPACK_IMPORTED_MODULE_0__._)([(0,_core_accessorSupport_decorators_subclass_js__WEBPACK_IMPORTED_MODULE_6__.$)("esri.layers.support.rasterTransforms.GCSShiftTransform")],n);const c=n},"./node_modules/@arcgis/core/layers/support/rasterTransforms/PolynomialTransform.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{A:()=>y});var p,_chunks_tslib_es6_js__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/@arcgis/core/chunks/tslib.es6.js"),_core_accessorSupport_decorators_property_js__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/@arcgis/core/core/accessorSupport/decorators/property.js"),_core_accessorSupport_decorators_enumeration_js__WEBPACK_IMPORTED_MODULE_5__=(__webpack_require__("./node_modules/@arcgis/core/core/has.js"),__webpack_require__("./node_modules/@arcgis/core/core/Logger.js"),__webpack_require__("./node_modules/@arcgis/core/core/RandomLCG.js"),__webpack_require__("./node_modules/@arcgis/core/core/accessorSupport/decorators/enumeration.js")),_core_accessorSupport_decorators_reader_js__WEBPACK_IMPORTED_MODULE_6__=__webpack_require__("./node_modules/@arcgis/core/core/accessorSupport/decorators/reader.js"),_core_accessorSupport_decorators_subclass_js__WEBPACK_IMPORTED_MODULE_7__=__webpack_require__("./node_modules/@arcgis/core/core/accessorSupport/decorators/subclass.js"),_core_accessorSupport_decorators_writer_js__WEBPACK_IMPORTED_MODULE_8__=__webpack_require__("./node_modules/@arcgis/core/core/accessorSupport/decorators/writer.js"),_geometry_Extent_js__WEBPACK_IMPORTED_MODULE_9__=__webpack_require__("./node_modules/@arcgis/core/geometry/Extent.js"),_geometry_Point_js__WEBPACK_IMPORTED_MODULE_10__=__webpack_require__("./node_modules/@arcgis/core/geometry/Point.js"),_BaseRasterTransform_js__WEBPACK_IMPORTED_MODULE_11__=__webpack_require__("./node_modules/@arcgis/core/layers/support/rasterTransforms/BaseRasterTransform.js");function a(e,r,o){const{x:t,y:s}=r;if(o<2)return{x:e[0]+t*e[2]+s*e[4],y:e[1]+t*e[3]+s*e[5]};if(2===o){const r=t*t,o=s*s,i=t*s;return{x:e[0]+t*e[2]+s*e[4]+r*e[6]+i*e[8]+o*e[10],y:e[1]+t*e[3]+s*e[5]+r*e[7]+i*e[9]+o*e[11]}}const i=t*t,n=s*s,f=t*s,l=i*t,p=i*s,a=t*n,c=s*n;return{x:e[0]+t*e[2]+s*e[4]+i*e[6]+f*e[8]+n*e[10]+l*e[12]+p*e[14]+a*e[16]+c*e[18],y:e[1]+t*e[3]+s*e[5]+i*e[7]+f*e[9]+n*e[11]+l*e[13]+p*e[15]+a*e[17]+c*e[19]}}function c(e,r,o){const{xmin:t,ymin:s,xmax:i,ymax:f,spatialReference:l}=r;let p=[];if(o<2)p.push({x:t,y:f}),p.push({x:i,y:f}),p.push({x:t,y:s}),p.push({x:i,y:s});else{let e=10;for(let r=0;r<e;r++)p.push({x:t,y:s+(f-s)*r/(e-1)}),p.push({x:i,y:s+(f-s)*r/(e-1)});e=8;for(let r=1;r<=e;r++)p.push({x:t+(i-t)*r/e,y:s}),p.push({x:t+(i-t)*r/e,y:f})}p=p.map((r=>a(e,r,o)));const c=p.map((e=>e.x)),u=p.map((e=>e.y));return new _geometry_Extent_js__WEBPACK_IMPORTED_MODULE_9__.default({xmin:Math.min.apply(null,c),xmax:Math.max.apply(null,c),ymin:Math.min.apply(null,u),ymax:Math.max.apply(null,u),spatialReference:l})}let m=p=class extends _BaseRasterTransform_js__WEBPACK_IMPORTED_MODULE_11__.A{constructor(){super(...arguments),this.polynomialOrder=1,this.type="polynomial"}readForwardCoefficients(e,r){const{coeffX:o,coeffY:t}=r;if(!o?.length||!t?.length||o.length!==t.length)return null;const s=[];for(let i=0;i<o.length;i++)s.push(o[i]),s.push(t[i]);return s}writeForwardCoefficients(e,r,o){const t=[],s=[];for(let i=0;i<e?.length;i++)i%2==0?t.push(e[i]):s.push(e[i]);r.coeffX=t,r.coeffY=s}get inverseCoefficients(){let e=this._get("inverseCoefficients");const r=this._get("forwardCoefficients");return!e&&r&&this.polynomialOrder<2&&(e=function u(e){const[r,o,t,s,i,n]=e,f=t*n-i*s,l=i*s-t*n;return[(i*o-r*n)/f,(t*o-r*s)/l,n/f,s/l,-i/f,-t/l]}(r)),e}set inverseCoefficients(e){this._set("inverseCoefficients",e)}readInverseCoefficients(e,r){const{inverseCoeffX:o,inverseCoeffY:t}=r;if(!o?.length||!t?.length||o.length!==t.length)return null;const s=[];for(let i=0;i<o.length;i++)s.push(o[i]),s.push(t[i]);return s}writeInverseCoefficients(e,r,o){const t=[],s=[];for(let i=0;i<e?.length;i++)i%2==0?t.push(e[i]):s.push(e[i]);r.inverseCoeffX=t,r.inverseCoeffY=s}get affectsPixelSize(){return this.polynomialOrder>0}forwardTransform(e){if("point"===e.type){const r=a(this.forwardCoefficients,e,this.polynomialOrder);return new _geometry_Point_js__WEBPACK_IMPORTED_MODULE_10__.default({x:r.x,y:r.y,spatialReference:e.spatialReference})}return c(this.forwardCoefficients,e,this.polynomialOrder)}inverseTransform(e){if("point"===e.type){const r=a(this.inverseCoefficients,e,this.polynomialOrder);return new _geometry_Point_js__WEBPACK_IMPORTED_MODULE_10__.default({x:r.x,y:r.y,spatialReference:e.spatialReference})}return c(this.inverseCoefficients,e,this.polynomialOrder)}clone(){return new p({polynomialOrder:this.polynomialOrder,forwardCoefficients:this.forwardCoefficients?[...this.forwardCoefficients]:null,inverseCoefficients:this.inverseCoefficients?[...this.inverseCoefficients]:null})}};(0,_chunks_tslib_es6_js__WEBPACK_IMPORTED_MODULE_0__._)([(0,_core_accessorSupport_decorators_property_js__WEBPACK_IMPORTED_MODULE_1__.MZ)({json:{write:!0}})],m.prototype,"polynomialOrder",void 0),(0,_chunks_tslib_es6_js__WEBPACK_IMPORTED_MODULE_0__._)([(0,_core_accessorSupport_decorators_property_js__WEBPACK_IMPORTED_MODULE_1__.MZ)()],m.prototype,"forwardCoefficients",void 0),(0,_chunks_tslib_es6_js__WEBPACK_IMPORTED_MODULE_0__._)([(0,_core_accessorSupport_decorators_reader_js__WEBPACK_IMPORTED_MODULE_6__.w)("forwardCoefficients",["coeffX","coeffY"])],m.prototype,"readForwardCoefficients",null),(0,_chunks_tslib_es6_js__WEBPACK_IMPORTED_MODULE_0__._)([(0,_core_accessorSupport_decorators_writer_js__WEBPACK_IMPORTED_MODULE_8__.K)("forwardCoefficients")],m.prototype,"writeForwardCoefficients",null),(0,_chunks_tslib_es6_js__WEBPACK_IMPORTED_MODULE_0__._)([(0,_core_accessorSupport_decorators_property_js__WEBPACK_IMPORTED_MODULE_1__.MZ)({json:{write:!0}})],m.prototype,"inverseCoefficients",null),(0,_chunks_tslib_es6_js__WEBPACK_IMPORTED_MODULE_0__._)([(0,_core_accessorSupport_decorators_reader_js__WEBPACK_IMPORTED_MODULE_6__.w)("inverseCoefficients",["inverseCoeffX","inverseCoeffY"])],m.prototype,"readInverseCoefficients",null),(0,_chunks_tslib_es6_js__WEBPACK_IMPORTED_MODULE_0__._)([(0,_core_accessorSupport_decorators_writer_js__WEBPACK_IMPORTED_MODULE_8__.K)("inverseCoefficients")],m.prototype,"writeInverseCoefficients",null),(0,_chunks_tslib_es6_js__WEBPACK_IMPORTED_MODULE_0__._)([(0,_core_accessorSupport_decorators_property_js__WEBPACK_IMPORTED_MODULE_1__.MZ)()],m.prototype,"affectsPixelSize",null),(0,_chunks_tslib_es6_js__WEBPACK_IMPORTED_MODULE_0__._)([(0,_core_accessorSupport_decorators_enumeration_js__WEBPACK_IMPORTED_MODULE_5__.e)({PolynomialXform:"polynomial"})],m.prototype,"type",void 0),m=p=(0,_chunks_tslib_es6_js__WEBPACK_IMPORTED_MODULE_0__._)([(0,_core_accessorSupport_decorators_subclass_js__WEBPACK_IMPORTED_MODULE_7__.$)("esri.layers.support.rasterTransforms.PolynomialTransform")],m);const y=m},"./node_modules/@arcgis/core/rest/imageService/fetchRasterInfo.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{E9:()=>c,Tw:()=>f,X6:()=>p});var _request_js__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/@arcgis/core/request.js"),_geometry_Extent_js__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/@arcgis/core/geometry/Extent.js"),_geometry_Point_js__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/@arcgis/core/geometry/Point.js"),_geometry_SpatialReference_js__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/@arcgis/core/geometry/SpatialReference.js"),_layers_support_RasterInfo_js__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./node_modules/@arcgis/core/layers/support/RasterInfo.js"),_layers_support_RasterStorageInfo_js__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("./node_modules/@arcgis/core/layers/support/RasterStorageInfo.js"),_utils_js__WEBPACK_IMPORTED_MODULE_6__=__webpack_require__("./node_modules/@arcgis/core/rest/utils.js"),_support_FeatureSet_js__WEBPACK_IMPORTED_MODULE_7__=__webpack_require__("./node_modules/@arcgis/core/rest/support/FeatureSet.js");async function m(m,f,p){const c=(0,_utils_js__WEBPACK_IMPORTED_MODULE_6__.Dl)(m),{rasterFunction:d,sourceJSON:h}=f||{},g=d?JSON.stringify(d.rasterFunctionDefinition||d):null,y=(0,_utils_js__WEBPACK_IMPORTED_MODULE_6__.lF)({...c.query,renderingRule:g,f:"json"}),x=(0,_utils_js__WEBPACK_IMPORTED_MODULE_6__.jV)(y,p);m=c.path;const S=h||await(0,_request_js__WEBPACK_IMPORTED_MODULE_0__.A)(m,x).then((e=>e.data)),b=S.hasRasterAttributeTable?(0,_request_js__WEBPACK_IMPORTED_MODULE_0__.A)(`${m}/rasterAttributeTable`,x):null,v=S.hasColormap?(0,_request_js__WEBPACK_IMPORTED_MODULE_0__.A)(`${m}/colormap`,x):null,V=S.hasHistograms?(0,_request_js__WEBPACK_IMPORTED_MODULE_0__.A)(`${m}/histograms`,x):null,D=S.currentVersion>=10.3?(0,_request_js__WEBPACK_IMPORTED_MODULE_0__.A)(`${m}/keyProperties`,x):null,I=S.hasMultidimensions?(0,_request_js__WEBPACK_IMPORTED_MODULE_0__.A)(`${m}/multidimensionalInfo`,x):null,T=await Promise.allSettled([b,v,V,D,I]);let R=null;if(S.minValues&&S.minValues.length===S.bandCount){R=[];for(let e=0;e<S.minValues.length;e++)R.push({min:S.minValues[e],max:S.maxValues[e],avg:S.meanValues[e],stddev:S.stdvValues[e]})}const j=_geometry_Extent_js__WEBPACK_IMPORTED_MODULE_1__.default.fromJSON(S.extent),w=Math.ceil(j.width/S.pixelSizeX-.1),M=Math.ceil(j.height/S.pixelSizeY-.1),N=_geometry_SpatialReference_js__WEBPACK_IMPORTED_MODULE_3__.A.fromJSON(S.spatialReference||S.extent.spatialReference),O="fulfilled"===T[0].status?T[0].value?.data:null,J=O?.features?.length?_support_FeatureSet_js__WEBPACK_IMPORTED_MODULE_7__.A.fromJSON(O):null,k="fulfilled"===T[1].status?T[1].value?.data.colormap:null,C=k?.length?k:null,P="fulfilled"===T[2].status?T[2].value?.data.histograms:null,z=P?.[0]?.counts?.length?P:null,F="fulfilled"===T[3].status?T[3].value?.data??{}:{},$="fulfilled"===T[4].status?T[4].value?.data.multidimensionalInfo:null,E=$?.variables?.length?$:null;E&&E.variables.forEach((e=>{e.statistics?.length&&e.statistics.forEach((e=>{e.avg=e.mean,e.stddev=e.standardDeviation})),e.dimensions?.forEach((e=>{"StdTime"!==e.name||e.recurring||e.unit||(e.unit="ISO8601")}))}));const{defaultVariable:H,serviceDataType:L}=S;H&&H!==F.DefaultVariable&&(F.DefaultVariable=H),L?.includes("esriImageServiceDataTypeVector")&&!L.includes(F.DataType)&&(F.DataType=L.replace("esriImageServiceDataType",""));let A=S.noDataValue;S.noDataValues?.length&&S.noDataValues.some((e=>e!==A))&&(A=S.noDataValues);const q=S.transposeInfo?new _layers_support_RasterStorageInfo_js__WEBPACK_IMPORTED_MODULE_5__.A({blockWidth:256,blockHeight:256,pyramidBlockWidth:256,pyramidBlockHeight:256,pyramidScalingFactor:2,compression:"lerc",origin:new _geometry_Point_js__WEBPACK_IMPORTED_MODULE_2__.default({x:S.extent.xmin,y:S.extent.ymax,spatialReference:N}),firstPyramidLevel:1,maximumPyramidLevel:Math.max(0,Math.round(Math.log(Math.max(w,M))/Math.LN2-8)),transposeInfo:S.transposeInfo}):void 0;return new _layers_support_RasterInfo_js__WEBPACK_IMPORTED_MODULE_4__.A({width:w,height:M,bandCount:S.bandCount,extent:_geometry_Extent_js__WEBPACK_IMPORTED_MODULE_1__.default.fromJSON(S.extent),spatialReference:N,pixelSize:new _geometry_Point_js__WEBPACK_IMPORTED_MODULE_2__.default({x:S.pixelSizeX,y:S.pixelSizeY,spatialReference:N}),pixelType:S.pixelType.toLowerCase(),statistics:R,attributeTable:J,colormap:C,histograms:z,keyProperties:F,noDataValue:A,multidimensionalInfo:E,storageInfo:q})}function f(e,t,a){return m(e,{sourceJSON:t},a)}function p(e,t,a){return m(e,{rasterFunction:t},a)}function c(e,t){e.attributeTable||(t.hasRasterAttributeTable=!1),e.histograms||(t.hasHistograms=!1),e.colormap||(t.hasColormap=!1),e.multidimensionalInfo||(t.hasMultidimensions=!1)}}}]);