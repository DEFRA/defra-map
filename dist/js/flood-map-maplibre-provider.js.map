{"version":3,"file":"flood-map-maplibre-provider.js","mappings":"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","sources":["webpack://defra/./node_modules/@turf/helpers/dist/esm/index.js","webpack://defra/./node_modules/computed-style-to-inline-style/dist/index.js","webpack://defra/./src/js/provider/maplibre/constants.js","webpack://defra/./node_modules/@turf/area/dist/esm/index.js","webpack://defra/./src/js/lib/symbols.js","webpack://defra/./node_modules/@turf/invariant/dist/esm/index.js","webpack://defra/./node_modules/@turf/distance/dist/esm/index.js","webpack://defra/./src/js/lib/debounce.js","webpack://defra/./node_modules/@turf/meta/dist/esm/index.js","webpack://defra/./node_modules/tinyqueue/index.js","webpack://defra/./node_modules/polylabel/polylabel.js","webpack://defra/./node_modules/@turf/bbox-clip/dist/esm/index.js","webpack://defra/./src/js/provider/maplibre/query.js","webpack://defra/./src/js/provider/maplibre/marker.js","webpack://defra/./src/js/provider/maplibre/symbols.js","webpack://defra/./src/js/provider/maplibre/events.js","webpack://defra/./src/js/provider/maplibre/framework.js","webpack://defra/./src/js/lib/throttle.js","webpack://defra/./src/js/lib/viewport.js"],"sourcesContent":["// index.ts\nvar earthRadius = 63710088e-1;\nvar factors = {\n  centimeters: earthRadius * 100,\n  centimetres: earthRadius * 100,\n  degrees: 360 / (2 * Math.PI),\n  feet: earthRadius * 3.28084,\n  inches: earthRadius * 39.37,\n  kilometers: earthRadius / 1e3,\n  kilometres: earthRadius / 1e3,\n  meters: earthRadius,\n  metres: earthRadius,\n  miles: earthRadius / 1609.344,\n  millimeters: earthRadius * 1e3,\n  millimetres: earthRadius * 1e3,\n  nauticalmiles: earthRadius / 1852,\n  radians: 1,\n  yards: earthRadius * 1.0936\n};\nvar areaFactors = {\n  acres: 247105e-9,\n  centimeters: 1e4,\n  centimetres: 1e4,\n  feet: 10.763910417,\n  hectares: 1e-4,\n  inches: 1550.003100006,\n  kilometers: 1e-6,\n  kilometres: 1e-6,\n  meters: 1,\n  metres: 1,\n  miles: 386e-9,\n  nauticalmiles: 29155334959812285e-23,\n  millimeters: 1e6,\n  millimetres: 1e6,\n  yards: 1.195990046\n};\nfunction feature(geom, properties, options = {}) {\n  const feat = { type: \"Feature\" };\n  if (options.id === 0 || options.id) {\n    feat.id = options.id;\n  }\n  if (options.bbox) {\n    feat.bbox = options.bbox;\n  }\n  feat.properties = properties || {};\n  feat.geometry = geom;\n  return feat;\n}\nfunction geometry(type, coordinates, _options = {}) {\n  switch (type) {\n    case \"Point\":\n      return point(coordinates).geometry;\n    case \"LineString\":\n      return lineString(coordinates).geometry;\n    case \"Polygon\":\n      return polygon(coordinates).geometry;\n    case \"MultiPoint\":\n      return multiPoint(coordinates).geometry;\n    case \"MultiLineString\":\n      return multiLineString(coordinates).geometry;\n    case \"MultiPolygon\":\n      return multiPolygon(coordinates).geometry;\n    default:\n      throw new Error(type + \" is invalid\");\n  }\n}\nfunction point(coordinates, properties, options = {}) {\n  if (!coordinates) {\n    throw new Error(\"coordinates is required\");\n  }\n  if (!Array.isArray(coordinates)) {\n    throw new Error(\"coordinates must be an Array\");\n  }\n  if (coordinates.length < 2) {\n    throw new Error(\"coordinates must be at least 2 numbers long\");\n  }\n  if (!isNumber(coordinates[0]) || !isNumber(coordinates[1])) {\n    throw new Error(\"coordinates must contain numbers\");\n  }\n  const geom = {\n    type: \"Point\",\n    coordinates\n  };\n  return feature(geom, properties, options);\n}\nfunction points(coordinates, properties, options = {}) {\n  return featureCollection(\n    coordinates.map((coords) => {\n      return point(coords, properties);\n    }),\n    options\n  );\n}\nfunction polygon(coordinates, properties, options = {}) {\n  for (const ring of coordinates) {\n    if (ring.length < 4) {\n      throw new Error(\n        \"Each LinearRing of a Polygon must have 4 or more Positions.\"\n      );\n    }\n    if (ring[ring.length - 1].length !== ring[0].length) {\n      throw new Error(\"First and last Position are not equivalent.\");\n    }\n    for (let j = 0; j < ring[ring.length - 1].length; j++) {\n      if (ring[ring.length - 1][j] !== ring[0][j]) {\n        throw new Error(\"First and last Position are not equivalent.\");\n      }\n    }\n  }\n  const geom = {\n    type: \"Polygon\",\n    coordinates\n  };\n  return feature(geom, properties, options);\n}\nfunction polygons(coordinates, properties, options = {}) {\n  return featureCollection(\n    coordinates.map((coords) => {\n      return polygon(coords, properties);\n    }),\n    options\n  );\n}\nfunction lineString(coordinates, properties, options = {}) {\n  if (coordinates.length < 2) {\n    throw new Error(\"coordinates must be an array of two or more positions\");\n  }\n  const geom = {\n    type: \"LineString\",\n    coordinates\n  };\n  return feature(geom, properties, options);\n}\nfunction lineStrings(coordinates, properties, options = {}) {\n  return featureCollection(\n    coordinates.map((coords) => {\n      return lineString(coords, properties);\n    }),\n    options\n  );\n}\nfunction featureCollection(features, options = {}) {\n  const fc = { type: \"FeatureCollection\" };\n  if (options.id) {\n    fc.id = options.id;\n  }\n  if (options.bbox) {\n    fc.bbox = options.bbox;\n  }\n  fc.features = features;\n  return fc;\n}\nfunction multiLineString(coordinates, properties, options = {}) {\n  const geom = {\n    type: \"MultiLineString\",\n    coordinates\n  };\n  return feature(geom, properties, options);\n}\nfunction multiPoint(coordinates, properties, options = {}) {\n  const geom = {\n    type: \"MultiPoint\",\n    coordinates\n  };\n  return feature(geom, properties, options);\n}\nfunction multiPolygon(coordinates, properties, options = {}) {\n  const geom = {\n    type: \"MultiPolygon\",\n    coordinates\n  };\n  return feature(geom, properties, options);\n}\nfunction geometryCollection(geometries, properties, options = {}) {\n  const geom = {\n    type: \"GeometryCollection\",\n    geometries\n  };\n  return feature(geom, properties, options);\n}\nfunction round(num, precision = 0) {\n  if (precision && !(precision >= 0)) {\n    throw new Error(\"precision must be a positive number\");\n  }\n  const multiplier = Math.pow(10, precision || 0);\n  return Math.round(num * multiplier) / multiplier;\n}\nfunction radiansToLength(radians, units = \"kilometers\") {\n  const factor = factors[units];\n  if (!factor) {\n    throw new Error(units + \" units is invalid\");\n  }\n  return radians * factor;\n}\nfunction lengthToRadians(distance, units = \"kilometers\") {\n  const factor = factors[units];\n  if (!factor) {\n    throw new Error(units + \" units is invalid\");\n  }\n  return distance / factor;\n}\nfunction lengthToDegrees(distance, units) {\n  return radiansToDegrees(lengthToRadians(distance, units));\n}\nfunction bearingToAzimuth(bearing) {\n  let angle = bearing % 360;\n  if (angle < 0) {\n    angle += 360;\n  }\n  return angle;\n}\nfunction azimuthToBearing(angle) {\n  angle = angle % 360;\n  if (angle > 180) {\n    return angle - 360;\n  } else if (angle < -180) {\n    return angle + 360;\n  }\n  return angle;\n}\nfunction radiansToDegrees(radians) {\n  const normalisedRadians = radians % (2 * Math.PI);\n  return normalisedRadians * 180 / Math.PI;\n}\nfunction degreesToRadians(degrees) {\n  const normalisedDegrees = degrees % 360;\n  return normalisedDegrees * Math.PI / 180;\n}\nfunction convertLength(length, originalUnit = \"kilometers\", finalUnit = \"kilometers\") {\n  if (!(length >= 0)) {\n    throw new Error(\"length must be a positive number\");\n  }\n  return radiansToLength(lengthToRadians(length, originalUnit), finalUnit);\n}\nfunction convertArea(area, originalUnit = \"meters\", finalUnit = \"kilometers\") {\n  if (!(area >= 0)) {\n    throw new Error(\"area must be a positive number\");\n  }\n  const startFactor = areaFactors[originalUnit];\n  if (!startFactor) {\n    throw new Error(\"invalid original units\");\n  }\n  const finalFactor = areaFactors[finalUnit];\n  if (!finalFactor) {\n    throw new Error(\"invalid final units\");\n  }\n  return area / startFactor * finalFactor;\n}\nfunction isNumber(num) {\n  return !isNaN(num) && num !== null && !Array.isArray(num);\n}\nfunction isObject(input) {\n  return input !== null && typeof input === \"object\" && !Array.isArray(input);\n}\nfunction validateBBox(bbox) {\n  if (!bbox) {\n    throw new Error(\"bbox is required\");\n  }\n  if (!Array.isArray(bbox)) {\n    throw new Error(\"bbox must be an Array\");\n  }\n  if (bbox.length !== 4 && bbox.length !== 6) {\n    throw new Error(\"bbox must be an Array of 4 or 6 numbers\");\n  }\n  bbox.forEach((num) => {\n    if (!isNumber(num)) {\n      throw new Error(\"bbox must only contain numbers\");\n    }\n  });\n}\nfunction validateId(id) {\n  if (!id) {\n    throw new Error(\"id is required\");\n  }\n  if ([\"string\", \"number\"].indexOf(typeof id) === -1) {\n    throw new Error(\"id must be a number or a string\");\n  }\n}\nexport {\n  areaFactors,\n  azimuthToBearing,\n  bearingToAzimuth,\n  convertArea,\n  convertLength,\n  degreesToRadians,\n  earthRadius,\n  factors,\n  feature,\n  featureCollection,\n  geometry,\n  geometryCollection,\n  isNumber,\n  isObject,\n  lengthToDegrees,\n  lengthToRadians,\n  lineString,\n  lineStrings,\n  multiLineString,\n  multiPoint,\n  multiPolygon,\n  point,\n  points,\n  polygon,\n  polygons,\n  radiansToDegrees,\n  radiansToLength,\n  round,\n  validateBBox,\n  validateId\n};\n//# sourceMappingURL=index.js.map","!function(e,t){\"object\"==typeof exports&&\"object\"==typeof module?module.exports=t():\"function\"==typeof define&&define.amd?define([],t):\"object\"==typeof exports?exports.computedStyleToInlineStyle=t():e.computedStyleToInlineStyle=t()}(this,(()=>(()=>{\"use strict\";var e={};return(()=>{var t=e;Object.defineProperty(t,\"__esModule\",{value:!0}),t.default=function e(t,o){if(!t)throw new Error(\"No element specified.\");(null==o?void 0:o.recursive)&&Array.prototype.forEach.call(t.children,(t=>{e(t,o)}));const r=getComputedStyle(t);Array.prototype.forEach.call((null==o?void 0:o.properties)||r,(e=>{t.style[e]=r.getPropertyValue(e)}))}})(),e})()));","export const defaults = {\n  PRECISION: 6,\n  ANIMATION: {\n    duration: 500,\n    curve: 0\n  },\n  DELAY: 500,\n  THROTTLE: 100,\n  MAX_FEATURES: 9,\n  SHORTCUT_LABEL_OFFSET: -30\n}\n\nexport const css = {\n  MARKER_VISIBLE: 'fm-c-marker--visible'\n}\n","// index.ts\nimport { earthRadius } from \"@turf/helpers\";\nimport { geomReduce } from \"@turf/meta\";\nfunction area(geojson) {\n  return geomReduce(\n    geojson,\n    (value, geom) => {\n      return value + calculateArea(geom);\n    },\n    0\n  );\n}\nfunction calculateArea(geom) {\n  let total = 0;\n  let i;\n  switch (geom.type) {\n    case \"Polygon\":\n      return polygonArea(geom.coordinates);\n    case \"MultiPolygon\":\n      for (i = 0; i < geom.coordinates.length; i++) {\n        total += polygonArea(geom.coordinates[i]);\n      }\n      return total;\n    case \"Point\":\n    case \"MultiPoint\":\n    case \"LineString\":\n    case \"MultiLineString\":\n      return 0;\n  }\n  return 0;\n}\nfunction polygonArea(coords) {\n  let total = 0;\n  if (coords && coords.length > 0) {\n    total += Math.abs(ringArea(coords[0]));\n    for (let i = 1; i < coords.length; i++) {\n      total -= Math.abs(ringArea(coords[i]));\n    }\n  }\n  return total;\n}\nvar FACTOR = earthRadius * earthRadius / 2;\nvar PI_OVER_180 = Math.PI / 180;\nfunction ringArea(coords) {\n  const coordsLength = coords.length - 1;\n  if (coordsLength <= 2) return 0;\n  let total = 0;\n  let i = 0;\n  while (i < coordsLength) {\n    const lower = coords[i];\n    const middle = coords[i + 1 === coordsLength ? 0 : i + 1];\n    const upper = coords[i + 2 >= coordsLength ? (i + 2) % coordsLength : i + 2];\n    const lowerX = lower[0] * PI_OVER_180;\n    const middleY = middle[1] * PI_OVER_180;\n    const upperX = upper[0] * PI_OVER_180;\n    total += (upperX - lowerX) * Math.sin(middleY);\n    i++;\n  }\n  return total * FACTOR;\n}\nvar turf_area_default = area;\nexport {\n  area,\n  turf_area_default as default\n};\n//# sourceMappingURL=index.js.map","const { DOMParser } = window\n\nexport const parseSVG = (icon, fill, text, isDarkBasemap = false, scale = 1) => {\n  const isSelected = icon.includes('selected')\n  // let styled = text.replace(/#0f0|#00ff00|#0F0|#00FF00/g, isSelected ? isDarkBasemap ? '#ffffff' : '#0b0c0c' : 'transparent')\n  // styled = styled.replace(/#00f|#0000ff|#00F|#0000FF/g, isDarkBasemap ? '#162232' : '#ffffff')\n  const parser = new DOMParser()\n  const dom = parser.parseFromString(text, 'text/html')\n  const svg = dom.querySelector('svg')\n  // Add xmlns attribute and class to svg\n  // svg.setAttribute('xmlns', 'http://www.w3.org/2000/svg')\n  svg.classList.add('fm-c-symbol')\n  svg.classList.toggle('fm-c-symbol--selected', isSelected)\n  svg.classList.toggle('fm-c-symbol--dark', isDarkBasemap)\n  // Set svg height and width\n  const viewBox = svg.getAttribute('viewBox')\n  const width = parseInt(viewBox.split(' ')[2], 10) * scale\n  const height = parseInt(viewBox.split(' ')[3], 10) * scale\n  svg.setAttribute('width', width)\n  svg.setAttribute('height', height)\n  // Conditionally add fill\n  if (fill) {\n    svg.setAttribute('fill', fill)\n  }\n  // Add classnames\n  const olFill = svg.querySelectorAll('[fill=\"#0b0c0c\" i], [style*=\"fill:#0b0c0c\" i]')\n  const olStroke = svg.querySelectorAll('[stroke=\"#0b0c0c\" i], [style*=\"stroke:#0b0c0c\" i]')\n  olFill.forEach(n => n.classList.add('fm-c-symbol__ol-fill'))\n  olStroke.forEach(n => n.classList.add('fm-c-symbol__ol-stroke'))\n  const bgFill = svg.querySelectorAll('[fill=\"#fff\" i], [fill=\"#ffffff\" i], [style*=\"fill:#fff\" i], [style*=\"fill:#ffffff\" i]')\n  const bgStroke = svg.querySelectorAll('[stroke*=\"#fff\" i], [stroke*=\"#ffffff\" i], [style*=\"stroke:#fff\" i], [style*=\"stroke:#ffffff\" i]')\n  bgFill.forEach(n => n.classList.add('fm-c-symbol__bg-fill'))\n  bgStroke.forEach(n => n.classList.add('fm-c-symbol__bg-stroke'))\n  const fgFill = svg.querySelectorAll(':not(.fm-c-symbol__ol-fill):not(.fm-c-symbol__bg-fill)[fill], :not(.fm-c-symbol__ol-fill):not(.fm-c-symbol__bg-fill)[style*=\"fill\"]')\n  const fgStroke = svg.querySelectorAll(':not(.fm-c-symbol__ol-stroke):not(.fm-c-symbol__bg-stroke)[stroke], :not(.fm-c-symbol__ol-stroke):not(.fm-c-symbol__bg-stroke)[style*=\"stroke\"]')\n  fgFill.forEach(n => n.classList.add('fm-c-symbol__fg-fill'))\n  fgStroke.forEach(n => n.classList.add('fm-c-symbol__fg-stroke'))\n  return dom.body.innerHTML\n}\n","// index.ts\nimport { isNumber } from \"@turf/helpers\";\nfunction getCoord(coord) {\n  if (!coord) {\n    throw new Error(\"coord is required\");\n  }\n  if (!Array.isArray(coord)) {\n    if (coord.type === \"Feature\" && coord.geometry !== null && coord.geometry.type === \"Point\") {\n      return [...coord.geometry.coordinates];\n    }\n    if (coord.type === \"Point\") {\n      return [...coord.coordinates];\n    }\n  }\n  if (Array.isArray(coord) && coord.length >= 2 && !Array.isArray(coord[0]) && !Array.isArray(coord[1])) {\n    return [...coord];\n  }\n  throw new Error(\"coord must be GeoJSON Point or an Array of numbers\");\n}\nfunction getCoords(coords) {\n  if (Array.isArray(coords)) {\n    return coords;\n  }\n  if (coords.type === \"Feature\") {\n    if (coords.geometry !== null) {\n      return coords.geometry.coordinates;\n    }\n  } else {\n    if (coords.coordinates) {\n      return coords.coordinates;\n    }\n  }\n  throw new Error(\n    \"coords must be GeoJSON Feature, Geometry Object or an Array\"\n  );\n}\nfunction containsNumber(coordinates) {\n  if (coordinates.length > 1 && isNumber(coordinates[0]) && isNumber(coordinates[1])) {\n    return true;\n  }\n  if (Array.isArray(coordinates[0]) && coordinates[0].length) {\n    return containsNumber(coordinates[0]);\n  }\n  throw new Error(\"coordinates must only contain numbers\");\n}\nfunction geojsonType(value, type, name) {\n  if (!type || !name) {\n    throw new Error(\"type and name required\");\n  }\n  if (!value || value.type !== type) {\n    throw new Error(\n      \"Invalid input to \" + name + \": must be a \" + type + \", given \" + value.type\n    );\n  }\n}\nfunction featureOf(feature, type, name) {\n  if (!feature) {\n    throw new Error(\"No feature passed\");\n  }\n  if (!name) {\n    throw new Error(\".featureOf() requires a name\");\n  }\n  if (!feature || feature.type !== \"Feature\" || !feature.geometry) {\n    throw new Error(\n      \"Invalid input to \" + name + \", Feature with geometry required\"\n    );\n  }\n  if (!feature.geometry || feature.geometry.type !== type) {\n    throw new Error(\n      \"Invalid input to \" + name + \": must be a \" + type + \", given \" + feature.geometry.type\n    );\n  }\n}\nfunction collectionOf(featureCollection, type, name) {\n  if (!featureCollection) {\n    throw new Error(\"No featureCollection passed\");\n  }\n  if (!name) {\n    throw new Error(\".collectionOf() requires a name\");\n  }\n  if (!featureCollection || featureCollection.type !== \"FeatureCollection\") {\n    throw new Error(\n      \"Invalid input to \" + name + \", FeatureCollection required\"\n    );\n  }\n  for (const feature of featureCollection.features) {\n    if (!feature || feature.type !== \"Feature\" || !feature.geometry) {\n      throw new Error(\n        \"Invalid input to \" + name + \", Feature with geometry required\"\n      );\n    }\n    if (!feature.geometry || feature.geometry.type !== type) {\n      throw new Error(\n        \"Invalid input to \" + name + \": must be a \" + type + \", given \" + feature.geometry.type\n      );\n    }\n  }\n}\nfunction getGeom(geojson) {\n  if (geojson.type === \"Feature\") {\n    return geojson.geometry;\n  }\n  return geojson;\n}\nfunction getType(geojson, _name) {\n  if (geojson.type === \"FeatureCollection\") {\n    return \"FeatureCollection\";\n  }\n  if (geojson.type === \"GeometryCollection\") {\n    return \"GeometryCollection\";\n  }\n  if (geojson.type === \"Feature\" && geojson.geometry !== null) {\n    return geojson.geometry.type;\n  }\n  return geojson.type;\n}\nexport {\n  collectionOf,\n  containsNumber,\n  featureOf,\n  geojsonType,\n  getCoord,\n  getCoords,\n  getGeom,\n  getType\n};\n//# sourceMappingURL=index.js.map","// index.ts\nimport { getCoord } from \"@turf/invariant\";\nimport { radiansToLength, degreesToRadians } from \"@turf/helpers\";\nfunction distance(from, to, options = {}) {\n  var coordinates1 = getCoord(from);\n  var coordinates2 = getCoord(to);\n  var dLat = degreesToRadians(coordinates2[1] - coordinates1[1]);\n  var dLon = degreesToRadians(coordinates2[0] - coordinates1[0]);\n  var lat1 = degreesToRadians(coordinates1[1]);\n  var lat2 = degreesToRadians(coordinates2[1]);\n  var a = Math.pow(Math.sin(dLat / 2), 2) + Math.pow(Math.sin(dLon / 2), 2) * Math.cos(lat1) * Math.cos(lat2);\n  return radiansToLength(\n    2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a)),\n    options.units\n  );\n}\nvar turf_distance_default = distance;\nexport {\n  turf_distance_default as default,\n  distance\n};\n//# sourceMappingURL=index.js.map","export const debounce = (fn, wait) => {\n  let timeoutId = null\n  return (...args) => {\n    window.clearTimeout(timeoutId)\n    timeoutId = window.setTimeout(() => {\n      fn(...args)\n    }, wait)\n  }\n}\n","// index.js\nimport { feature, point, lineString, isObject } from \"@turf/helpers\";\nfunction coordEach(geojson, callback, excludeWrapCoord) {\n  if (geojson === null) return;\n  var j, k, l, geometry, stopG, coords, geometryMaybeCollection, wrapShrink = 0, coordIndex = 0, isGeometryCollection, type = geojson.type, isFeatureCollection = type === \"FeatureCollection\", isFeature = type === \"Feature\", stop = isFeatureCollection ? geojson.features.length : 1;\n  for (var featureIndex = 0; featureIndex < stop; featureIndex++) {\n    geometryMaybeCollection = isFeatureCollection ? geojson.features[featureIndex].geometry : isFeature ? geojson.geometry : geojson;\n    isGeometryCollection = geometryMaybeCollection ? geometryMaybeCollection.type === \"GeometryCollection\" : false;\n    stopG = isGeometryCollection ? geometryMaybeCollection.geometries.length : 1;\n    for (var geomIndex = 0; geomIndex < stopG; geomIndex++) {\n      var multiFeatureIndex = 0;\n      var geometryIndex = 0;\n      geometry = isGeometryCollection ? geometryMaybeCollection.geometries[geomIndex] : geometryMaybeCollection;\n      if (geometry === null) continue;\n      coords = geometry.coordinates;\n      var geomType = geometry.type;\n      wrapShrink = excludeWrapCoord && (geomType === \"Polygon\" || geomType === \"MultiPolygon\") ? 1 : 0;\n      switch (geomType) {\n        case null:\n          break;\n        case \"Point\":\n          if (callback(\n            coords,\n            coordIndex,\n            featureIndex,\n            multiFeatureIndex,\n            geometryIndex\n          ) === false)\n            return false;\n          coordIndex++;\n          multiFeatureIndex++;\n          break;\n        case \"LineString\":\n        case \"MultiPoint\":\n          for (j = 0; j < coords.length; j++) {\n            if (callback(\n              coords[j],\n              coordIndex,\n              featureIndex,\n              multiFeatureIndex,\n              geometryIndex\n            ) === false)\n              return false;\n            coordIndex++;\n            if (geomType === \"MultiPoint\") multiFeatureIndex++;\n          }\n          if (geomType === \"LineString\") multiFeatureIndex++;\n          break;\n        case \"Polygon\":\n        case \"MultiLineString\":\n          for (j = 0; j < coords.length; j++) {\n            for (k = 0; k < coords[j].length - wrapShrink; k++) {\n              if (callback(\n                coords[j][k],\n                coordIndex,\n                featureIndex,\n                multiFeatureIndex,\n                geometryIndex\n              ) === false)\n                return false;\n              coordIndex++;\n            }\n            if (geomType === \"MultiLineString\") multiFeatureIndex++;\n            if (geomType === \"Polygon\") geometryIndex++;\n          }\n          if (geomType === \"Polygon\") multiFeatureIndex++;\n          break;\n        case \"MultiPolygon\":\n          for (j = 0; j < coords.length; j++) {\n            geometryIndex = 0;\n            for (k = 0; k < coords[j].length; k++) {\n              for (l = 0; l < coords[j][k].length - wrapShrink; l++) {\n                if (callback(\n                  coords[j][k][l],\n                  coordIndex,\n                  featureIndex,\n                  multiFeatureIndex,\n                  geometryIndex\n                ) === false)\n                  return false;\n                coordIndex++;\n              }\n              geometryIndex++;\n            }\n            multiFeatureIndex++;\n          }\n          break;\n        case \"GeometryCollection\":\n          for (j = 0; j < geometry.geometries.length; j++)\n            if (coordEach(geometry.geometries[j], callback, excludeWrapCoord) === false)\n              return false;\n          break;\n        default:\n          throw new Error(\"Unknown Geometry Type\");\n      }\n    }\n  }\n}\nfunction coordReduce(geojson, callback, initialValue, excludeWrapCoord) {\n  var previousValue = initialValue;\n  coordEach(\n    geojson,\n    function(currentCoord, coordIndex, featureIndex, multiFeatureIndex, geometryIndex) {\n      if (coordIndex === 0 && initialValue === void 0)\n        previousValue = currentCoord;\n      else\n        previousValue = callback(\n          previousValue,\n          currentCoord,\n          coordIndex,\n          featureIndex,\n          multiFeatureIndex,\n          geometryIndex\n        );\n    },\n    excludeWrapCoord\n  );\n  return previousValue;\n}\nfunction propEach(geojson, callback) {\n  var i;\n  switch (geojson.type) {\n    case \"FeatureCollection\":\n      for (i = 0; i < geojson.features.length; i++) {\n        if (callback(geojson.features[i].properties, i) === false) break;\n      }\n      break;\n    case \"Feature\":\n      callback(geojson.properties, 0);\n      break;\n  }\n}\nfunction propReduce(geojson, callback, initialValue) {\n  var previousValue = initialValue;\n  propEach(geojson, function(currentProperties, featureIndex) {\n    if (featureIndex === 0 && initialValue === void 0)\n      previousValue = currentProperties;\n    else\n      previousValue = callback(previousValue, currentProperties, featureIndex);\n  });\n  return previousValue;\n}\nfunction featureEach(geojson, callback) {\n  if (geojson.type === \"Feature\") {\n    callback(geojson, 0);\n  } else if (geojson.type === \"FeatureCollection\") {\n    for (var i = 0; i < geojson.features.length; i++) {\n      if (callback(geojson.features[i], i) === false) break;\n    }\n  }\n}\nfunction featureReduce(geojson, callback, initialValue) {\n  var previousValue = initialValue;\n  featureEach(geojson, function(currentFeature, featureIndex) {\n    if (featureIndex === 0 && initialValue === void 0)\n      previousValue = currentFeature;\n    else previousValue = callback(previousValue, currentFeature, featureIndex);\n  });\n  return previousValue;\n}\nfunction coordAll(geojson) {\n  var coords = [];\n  coordEach(geojson, function(coord) {\n    coords.push(coord);\n  });\n  return coords;\n}\nfunction geomEach(geojson, callback) {\n  var i, j, g, geometry, stopG, geometryMaybeCollection, isGeometryCollection, featureProperties, featureBBox, featureId, featureIndex = 0, isFeatureCollection = geojson.type === \"FeatureCollection\", isFeature = geojson.type === \"Feature\", stop = isFeatureCollection ? geojson.features.length : 1;\n  for (i = 0; i < stop; i++) {\n    geometryMaybeCollection = isFeatureCollection ? geojson.features[i].geometry : isFeature ? geojson.geometry : geojson;\n    featureProperties = isFeatureCollection ? geojson.features[i].properties : isFeature ? geojson.properties : {};\n    featureBBox = isFeatureCollection ? geojson.features[i].bbox : isFeature ? geojson.bbox : void 0;\n    featureId = isFeatureCollection ? geojson.features[i].id : isFeature ? geojson.id : void 0;\n    isGeometryCollection = geometryMaybeCollection ? geometryMaybeCollection.type === \"GeometryCollection\" : false;\n    stopG = isGeometryCollection ? geometryMaybeCollection.geometries.length : 1;\n    for (g = 0; g < stopG; g++) {\n      geometry = isGeometryCollection ? geometryMaybeCollection.geometries[g] : geometryMaybeCollection;\n      if (geometry === null) {\n        if (callback(\n          null,\n          featureIndex,\n          featureProperties,\n          featureBBox,\n          featureId\n        ) === false)\n          return false;\n        continue;\n      }\n      switch (geometry.type) {\n        case \"Point\":\n        case \"LineString\":\n        case \"MultiPoint\":\n        case \"Polygon\":\n        case \"MultiLineString\":\n        case \"MultiPolygon\": {\n          if (callback(\n            geometry,\n            featureIndex,\n            featureProperties,\n            featureBBox,\n            featureId\n          ) === false)\n            return false;\n          break;\n        }\n        case \"GeometryCollection\": {\n          for (j = 0; j < geometry.geometries.length; j++) {\n            if (callback(\n              geometry.geometries[j],\n              featureIndex,\n              featureProperties,\n              featureBBox,\n              featureId\n            ) === false)\n              return false;\n          }\n          break;\n        }\n        default:\n          throw new Error(\"Unknown Geometry Type\");\n      }\n    }\n    featureIndex++;\n  }\n}\nfunction geomReduce(geojson, callback, initialValue) {\n  var previousValue = initialValue;\n  geomEach(\n    geojson,\n    function(currentGeometry, featureIndex, featureProperties, featureBBox, featureId) {\n      if (featureIndex === 0 && initialValue === void 0)\n        previousValue = currentGeometry;\n      else\n        previousValue = callback(\n          previousValue,\n          currentGeometry,\n          featureIndex,\n          featureProperties,\n          featureBBox,\n          featureId\n        );\n    }\n  );\n  return previousValue;\n}\nfunction flattenEach(geojson, callback) {\n  geomEach(geojson, function(geometry, featureIndex, properties, bbox, id) {\n    var type = geometry === null ? null : geometry.type;\n    switch (type) {\n      case null:\n      case \"Point\":\n      case \"LineString\":\n      case \"Polygon\":\n        if (callback(\n          feature(geometry, properties, { bbox, id }),\n          featureIndex,\n          0\n        ) === false)\n          return false;\n        return;\n    }\n    var geomType;\n    switch (type) {\n      case \"MultiPoint\":\n        geomType = \"Point\";\n        break;\n      case \"MultiLineString\":\n        geomType = \"LineString\";\n        break;\n      case \"MultiPolygon\":\n        geomType = \"Polygon\";\n        break;\n    }\n    for (var multiFeatureIndex = 0; multiFeatureIndex < geometry.coordinates.length; multiFeatureIndex++) {\n      var coordinate = geometry.coordinates[multiFeatureIndex];\n      var geom = {\n        type: geomType,\n        coordinates: coordinate\n      };\n      if (callback(feature(geom, properties), featureIndex, multiFeatureIndex) === false)\n        return false;\n    }\n  });\n}\nfunction flattenReduce(geojson, callback, initialValue) {\n  var previousValue = initialValue;\n  flattenEach(\n    geojson,\n    function(currentFeature, featureIndex, multiFeatureIndex) {\n      if (featureIndex === 0 && multiFeatureIndex === 0 && initialValue === void 0)\n        previousValue = currentFeature;\n      else\n        previousValue = callback(\n          previousValue,\n          currentFeature,\n          featureIndex,\n          multiFeatureIndex\n        );\n    }\n  );\n  return previousValue;\n}\nfunction segmentEach(geojson, callback) {\n  flattenEach(geojson, function(feature2, featureIndex, multiFeatureIndex) {\n    var segmentIndex = 0;\n    if (!feature2.geometry) return;\n    var type = feature2.geometry.type;\n    if (type === \"Point\" || type === \"MultiPoint\") return;\n    var previousCoords;\n    var previousFeatureIndex = 0;\n    var previousMultiIndex = 0;\n    var prevGeomIndex = 0;\n    if (coordEach(\n      feature2,\n      function(currentCoord, coordIndex, featureIndexCoord, multiPartIndexCoord, geometryIndex) {\n        if (previousCoords === void 0 || featureIndex > previousFeatureIndex || multiPartIndexCoord > previousMultiIndex || geometryIndex > prevGeomIndex) {\n          previousCoords = currentCoord;\n          previousFeatureIndex = featureIndex;\n          previousMultiIndex = multiPartIndexCoord;\n          prevGeomIndex = geometryIndex;\n          segmentIndex = 0;\n          return;\n        }\n        var currentSegment = lineString(\n          [previousCoords, currentCoord],\n          feature2.properties\n        );\n        if (callback(\n          currentSegment,\n          featureIndex,\n          multiFeatureIndex,\n          geometryIndex,\n          segmentIndex\n        ) === false)\n          return false;\n        segmentIndex++;\n        previousCoords = currentCoord;\n      }\n    ) === false)\n      return false;\n  });\n}\nfunction segmentReduce(geojson, callback, initialValue) {\n  var previousValue = initialValue;\n  var started = false;\n  segmentEach(\n    geojson,\n    function(currentSegment, featureIndex, multiFeatureIndex, geometryIndex, segmentIndex) {\n      if (started === false && initialValue === void 0)\n        previousValue = currentSegment;\n      else\n        previousValue = callback(\n          previousValue,\n          currentSegment,\n          featureIndex,\n          multiFeatureIndex,\n          geometryIndex,\n          segmentIndex\n        );\n      started = true;\n    }\n  );\n  return previousValue;\n}\nfunction lineEach(geojson, callback) {\n  if (!geojson) throw new Error(\"geojson is required\");\n  flattenEach(geojson, function(feature2, featureIndex, multiFeatureIndex) {\n    if (feature2.geometry === null) return;\n    var type = feature2.geometry.type;\n    var coords = feature2.geometry.coordinates;\n    switch (type) {\n      case \"LineString\":\n        if (callback(feature2, featureIndex, multiFeatureIndex, 0, 0) === false)\n          return false;\n        break;\n      case \"Polygon\":\n        for (var geometryIndex = 0; geometryIndex < coords.length; geometryIndex++) {\n          if (callback(\n            lineString(coords[geometryIndex], feature2.properties),\n            featureIndex,\n            multiFeatureIndex,\n            geometryIndex\n          ) === false)\n            return false;\n        }\n        break;\n    }\n  });\n}\nfunction lineReduce(geojson, callback, initialValue) {\n  var previousValue = initialValue;\n  lineEach(\n    geojson,\n    function(currentLine, featureIndex, multiFeatureIndex, geometryIndex) {\n      if (featureIndex === 0 && initialValue === void 0)\n        previousValue = currentLine;\n      else\n        previousValue = callback(\n          previousValue,\n          currentLine,\n          featureIndex,\n          multiFeatureIndex,\n          geometryIndex\n        );\n    }\n  );\n  return previousValue;\n}\nfunction findSegment(geojson, options) {\n  options = options || {};\n  if (!isObject(options)) throw new Error(\"options is invalid\");\n  var featureIndex = options.featureIndex || 0;\n  var multiFeatureIndex = options.multiFeatureIndex || 0;\n  var geometryIndex = options.geometryIndex || 0;\n  var segmentIndex = options.segmentIndex || 0;\n  var properties = options.properties;\n  var geometry;\n  switch (geojson.type) {\n    case \"FeatureCollection\":\n      if (featureIndex < 0)\n        featureIndex = geojson.features.length + featureIndex;\n      properties = properties || geojson.features[featureIndex].properties;\n      geometry = geojson.features[featureIndex].geometry;\n      break;\n    case \"Feature\":\n      properties = properties || geojson.properties;\n      geometry = geojson.geometry;\n      break;\n    case \"Point\":\n    case \"MultiPoint\":\n      return null;\n    case \"LineString\":\n    case \"Polygon\":\n    case \"MultiLineString\":\n    case \"MultiPolygon\":\n      geometry = geojson;\n      break;\n    default:\n      throw new Error(\"geojson is invalid\");\n  }\n  if (geometry === null) return null;\n  var coords = geometry.coordinates;\n  switch (geometry.type) {\n    case \"Point\":\n    case \"MultiPoint\":\n      return null;\n    case \"LineString\":\n      if (segmentIndex < 0) segmentIndex = coords.length + segmentIndex - 1;\n      return lineString(\n        [coords[segmentIndex], coords[segmentIndex + 1]],\n        properties,\n        options\n      );\n    case \"Polygon\":\n      if (geometryIndex < 0) geometryIndex = coords.length + geometryIndex;\n      if (segmentIndex < 0)\n        segmentIndex = coords[geometryIndex].length + segmentIndex - 1;\n      return lineString(\n        [\n          coords[geometryIndex][segmentIndex],\n          coords[geometryIndex][segmentIndex + 1]\n        ],\n        properties,\n        options\n      );\n    case \"MultiLineString\":\n      if (multiFeatureIndex < 0)\n        multiFeatureIndex = coords.length + multiFeatureIndex;\n      if (segmentIndex < 0)\n        segmentIndex = coords[multiFeatureIndex].length + segmentIndex - 1;\n      return lineString(\n        [\n          coords[multiFeatureIndex][segmentIndex],\n          coords[multiFeatureIndex][segmentIndex + 1]\n        ],\n        properties,\n        options\n      );\n    case \"MultiPolygon\":\n      if (multiFeatureIndex < 0)\n        multiFeatureIndex = coords.length + multiFeatureIndex;\n      if (geometryIndex < 0)\n        geometryIndex = coords[multiFeatureIndex].length + geometryIndex;\n      if (segmentIndex < 0)\n        segmentIndex = coords[multiFeatureIndex][geometryIndex].length - segmentIndex - 1;\n      return lineString(\n        [\n          coords[multiFeatureIndex][geometryIndex][segmentIndex],\n          coords[multiFeatureIndex][geometryIndex][segmentIndex + 1]\n        ],\n        properties,\n        options\n      );\n  }\n  throw new Error(\"geojson is invalid\");\n}\nfunction findPoint(geojson, options) {\n  options = options || {};\n  if (!isObject(options)) throw new Error(\"options is invalid\");\n  var featureIndex = options.featureIndex || 0;\n  var multiFeatureIndex = options.multiFeatureIndex || 0;\n  var geometryIndex = options.geometryIndex || 0;\n  var coordIndex = options.coordIndex || 0;\n  var properties = options.properties;\n  var geometry;\n  switch (geojson.type) {\n    case \"FeatureCollection\":\n      if (featureIndex < 0)\n        featureIndex = geojson.features.length + featureIndex;\n      properties = properties || geojson.features[featureIndex].properties;\n      geometry = geojson.features[featureIndex].geometry;\n      break;\n    case \"Feature\":\n      properties = properties || geojson.properties;\n      geometry = geojson.geometry;\n      break;\n    case \"Point\":\n    case \"MultiPoint\":\n      return null;\n    case \"LineString\":\n    case \"Polygon\":\n    case \"MultiLineString\":\n    case \"MultiPolygon\":\n      geometry = geojson;\n      break;\n    default:\n      throw new Error(\"geojson is invalid\");\n  }\n  if (geometry === null) return null;\n  var coords = geometry.coordinates;\n  switch (geometry.type) {\n    case \"Point\":\n      return point(coords, properties, options);\n    case \"MultiPoint\":\n      if (multiFeatureIndex < 0)\n        multiFeatureIndex = coords.length + multiFeatureIndex;\n      return point(coords[multiFeatureIndex], properties, options);\n    case \"LineString\":\n      if (coordIndex < 0) coordIndex = coords.length + coordIndex;\n      return point(coords[coordIndex], properties, options);\n    case \"Polygon\":\n      if (geometryIndex < 0) geometryIndex = coords.length + geometryIndex;\n      if (coordIndex < 0)\n        coordIndex = coords[geometryIndex].length + coordIndex;\n      return point(coords[geometryIndex][coordIndex], properties, options);\n    case \"MultiLineString\":\n      if (multiFeatureIndex < 0)\n        multiFeatureIndex = coords.length + multiFeatureIndex;\n      if (coordIndex < 0)\n        coordIndex = coords[multiFeatureIndex].length + coordIndex;\n      return point(coords[multiFeatureIndex][coordIndex], properties, options);\n    case \"MultiPolygon\":\n      if (multiFeatureIndex < 0)\n        multiFeatureIndex = coords.length + multiFeatureIndex;\n      if (geometryIndex < 0)\n        geometryIndex = coords[multiFeatureIndex].length + geometryIndex;\n      if (coordIndex < 0)\n        coordIndex = coords[multiFeatureIndex][geometryIndex].length - coordIndex;\n      return point(\n        coords[multiFeatureIndex][geometryIndex][coordIndex],\n        properties,\n        options\n      );\n  }\n  throw new Error(\"geojson is invalid\");\n}\nexport {\n  coordAll,\n  coordEach,\n  coordReduce,\n  featureEach,\n  featureReduce,\n  findPoint,\n  findSegment,\n  flattenEach,\n  flattenReduce,\n  geomEach,\n  geomReduce,\n  lineEach,\n  lineReduce,\n  propEach,\n  propReduce,\n  segmentEach,\n  segmentReduce\n};\n//# sourceMappingURL=index.js.map","\nexport default class TinyQueue {\n    constructor(data = [], compare = (a, b) => (a < b ? -1 : a > b ? 1 : 0)) {\n        this.data = data;\n        this.length = this.data.length;\n        this.compare = compare;\n\n        if (this.length > 0) {\n            for (let i = (this.length >> 1) - 1; i >= 0; i--) this._down(i);\n        }\n    }\n\n    push(item) {\n        this.data.push(item);\n        this._up(this.length++);\n    }\n\n    pop() {\n        if (this.length === 0) return undefined;\n\n        const top = this.data[0];\n        const bottom = this.data.pop();\n\n        if (--this.length > 0) {\n            this.data[0] = bottom;\n            this._down(0);\n        }\n\n        return top;\n    }\n\n    peek() {\n        return this.data[0];\n    }\n\n    _up(pos) {\n        const {data, compare} = this;\n        const item = data[pos];\n\n        while (pos > 0) {\n            const parent = (pos - 1) >> 1;\n            const current = data[parent];\n            if (compare(item, current) >= 0) break;\n            data[pos] = current;\n            pos = parent;\n        }\n\n        data[pos] = item;\n    }\n\n    _down(pos) {\n        const {data, compare} = this;\n        const halfLength = this.length >> 1;\n        const item = data[pos];\n\n        while (pos < halfLength) {\n            let bestChild = (pos << 1) + 1; // initially it is the left child\n            const right = bestChild + 1;\n\n            if (right < this.length && compare(data[right], data[bestChild]) < 0) {\n                bestChild = right;\n            }\n            if (compare(data[bestChild], item) >= 0) break;\n\n            data[pos] = data[bestChild];\n            pos = bestChild;\n        }\n\n        data[pos] = item;\n    }\n}\n","\nimport Queue from 'tinyqueue';\n\nexport default function polylabel(polygon, precision = 1.0, debug = false) {\n    // find the bounding box of the outer ring\n    let minX = Infinity;\n    let minY = Infinity;\n    let maxX = -Infinity;\n    let maxY = -Infinity;\n\n    for (const [x, y] of polygon[0]) {\n        if (x < minX) minX = x;\n        if (y < minY) minY = y;\n        if (x > maxX) maxX = x;\n        if (y > maxY) maxY = y;\n    }\n\n    const width = maxX - minX;\n    const height = maxY - minY;\n    const cellSize = Math.max(precision, Math.min(width, height));\n\n    if (cellSize === precision) {\n        const result = [minX, minY];\n        result.distance = 0;\n        return result;\n    }\n\n    // a priority queue of cells in order of their \"potential\" (max distance to polygon)\n    const cellQueue = new Queue([], (a, b) => b.max - a.max);\n\n    // take centroid as the first best guess\n    let bestCell = getCentroidCell(polygon);\n\n    // second guess: bounding box centroid\n    const bboxCell = new Cell(minX + width / 2, minY + height / 2, 0, polygon);\n    if (bboxCell.d > bestCell.d) bestCell = bboxCell;\n\n    let numProbes = 2;\n\n    function potentiallyQueue(x, y, h) {\n        const cell = new Cell(x, y, h, polygon);\n        numProbes++;\n        if (cell.max > bestCell.d + precision) cellQueue.push(cell);\n\n        // update the best cell if we found a better one\n        if (cell.d > bestCell.d) {\n            bestCell = cell;\n            if (debug) console.log(`found best ${Math.round(1e4 * cell.d) / 1e4} after ${numProbes} probes`);\n        }\n    }\n\n    // cover polygon with initial cells\n    let h = cellSize / 2;\n    for (let x = minX; x < maxX; x += cellSize) {\n        for (let y = minY; y < maxY; y += cellSize) {\n            potentiallyQueue(x + h, y + h, h);\n        }\n    }\n\n    while (cellQueue.length) {\n        // pick the most promising cell from the queue\n        const {max, x, y, h: ch} = cellQueue.pop();\n\n        // do not drill down further if there's no chance of a better solution\n        if (max - bestCell.d <= precision) break;\n\n        // split the cell into four cells\n        h = ch / 2;\n        potentiallyQueue(x - h, y - h, h);\n        potentiallyQueue(x + h, y - h, h);\n        potentiallyQueue(x - h, y + h, h);\n        potentiallyQueue(x + h, y + h, h);\n    }\n\n    if (debug) {\n        console.log(`num probes: ${numProbes}\\nbest distance: ${bestCell.d}`);\n    }\n\n    const result = [bestCell.x, bestCell.y];\n    result.distance = bestCell.d;\n    return result;\n}\n\nfunction Cell(x, y, h, polygon) {\n    this.x = x; // cell center x\n    this.y = y; // cell center y\n    this.h = h; // half the cell size\n    this.d = pointToPolygonDist(x, y, polygon); // distance from cell center to polygon\n    this.max = this.d + this.h * Math.SQRT2; // max distance to polygon within a cell\n}\n\n// signed distance from point to polygon outline (negative if point is outside)\nfunction pointToPolygonDist(x, y, polygon) {\n    let inside = false;\n    let minDistSq = Infinity;\n\n    for (const ring of polygon) {\n        for (let i = 0, len = ring.length, j = len - 1; i < len; j = i++) {\n            const a = ring[i];\n            const b = ring[j];\n\n            if ((a[1] > y !== b[1] > y) &&\n                (x < (b[0] - a[0]) * (y - a[1]) / (b[1] - a[1]) + a[0])) inside = !inside;\n\n            minDistSq = Math.min(minDistSq, getSegDistSq(x, y, a, b));\n        }\n    }\n\n    return minDistSq === 0 ? 0 : (inside ? 1 : -1) * Math.sqrt(minDistSq);\n}\n\n// get polygon centroid\nfunction getCentroidCell(polygon) {\n    let area = 0;\n    let x = 0;\n    let y = 0;\n    const points = polygon[0];\n\n    for (let i = 0, len = points.length, j = len - 1; i < len; j = i++) {\n        const a = points[i];\n        const b = points[j];\n        const f = a[0] * b[1] - b[0] * a[1];\n        x += (a[0] + b[0]) * f;\n        y += (a[1] + b[1]) * f;\n        area += f * 3;\n    }\n    const centroid = new Cell(x / area, y / area, 0, polygon);\n    if (area === 0 || centroid.d < 0) return new Cell(points[0][0], points[0][1], 0, polygon);\n    return centroid;\n}\n\n// get squared distance from a point to a segment\nfunction getSegDistSq(px, py, a, b) {\n    let x = a[0];\n    let y = a[1];\n    let dx = b[0] - x;\n    let dy = b[1] - y;\n\n    if (dx !== 0 || dy !== 0) {\n        const t = ((px - x) * dx + (py - y) * dy) / (dx * dx + dy * dy);\n\n        if (t > 1) {\n            x = b[0];\n            y = b[1];\n\n        } else if (t > 0) {\n            x += dx * t;\n            y += dy * t;\n        }\n    }\n\n    dx = px - x;\n    dy = py - y;\n\n    return dx * dx + dy * dy;\n}\n","// index.ts\nimport {\n  lineString,\n  multiLineString,\n  multiPolygon,\n  polygon\n} from \"@turf/helpers\";\nimport { getGeom } from \"@turf/invariant\";\n\n// lib/lineclip.ts\nfunction lineclip(points, bbox, result) {\n  var len = points.length, codeA = bitCode(points[0], bbox), part = [], i, codeB, lastCode;\n  let a;\n  let b;\n  if (!result) result = [];\n  for (i = 1; i < len; i++) {\n    a = points[i - 1];\n    b = points[i];\n    codeB = lastCode = bitCode(b, bbox);\n    while (true) {\n      if (!(codeA | codeB)) {\n        part.push(a);\n        if (codeB !== lastCode) {\n          part.push(b);\n          if (i < len - 1) {\n            result.push(part);\n            part = [];\n          }\n        } else if (i === len - 1) {\n          part.push(b);\n        }\n        break;\n      } else if (codeA & codeB) {\n        break;\n      } else if (codeA) {\n        a = intersect(a, b, codeA, bbox);\n        codeA = bitCode(a, bbox);\n      } else {\n        b = intersect(a, b, codeB, bbox);\n        codeB = bitCode(b, bbox);\n      }\n    }\n    codeA = lastCode;\n  }\n  if (part.length) result.push(part);\n  return result;\n}\nfunction polygonclip(points, bbox) {\n  var result, edge, prev, prevInside, i, p, inside;\n  for (edge = 1; edge <= 8; edge *= 2) {\n    result = [];\n    prev = points[points.length - 1];\n    prevInside = !(bitCode(prev, bbox) & edge);\n    for (i = 0; i < points.length; i++) {\n      p = points[i];\n      inside = !(bitCode(p, bbox) & edge);\n      if (inside !== prevInside) result.push(intersect(prev, p, edge, bbox));\n      if (inside) result.push(p);\n      prev = p;\n      prevInside = inside;\n    }\n    points = result;\n    if (!points.length) break;\n  }\n  return result;\n}\nfunction intersect(a, b, edge, bbox) {\n  return edge & 8 ? [a[0] + (b[0] - a[0]) * (bbox[3] - a[1]) / (b[1] - a[1]), bbox[3]] : edge & 4 ? [a[0] + (b[0] - a[0]) * (bbox[1] - a[1]) / (b[1] - a[1]), bbox[1]] : edge & 2 ? [bbox[2], a[1] + (b[1] - a[1]) * (bbox[2] - a[0]) / (b[0] - a[0])] : edge & 1 ? [bbox[0], a[1] + (b[1] - a[1]) * (bbox[0] - a[0]) / (b[0] - a[0])] : null;\n}\nfunction bitCode(p, bbox) {\n  var code = 0;\n  if (p[0] < bbox[0]) code |= 1;\n  else if (p[0] > bbox[2]) code |= 2;\n  if (p[1] < bbox[1]) code |= 4;\n  else if (p[1] > bbox[3]) code |= 8;\n  return code;\n}\n\n// index.ts\nfunction bboxClip(feature, bbox) {\n  const geom = getGeom(feature);\n  const type = geom.type;\n  const properties = feature.type === \"Feature\" ? feature.properties : {};\n  let coords = geom.coordinates;\n  switch (type) {\n    case \"LineString\":\n    case \"MultiLineString\": {\n      const lines = [];\n      if (type === \"LineString\") {\n        coords = [coords];\n      }\n      coords.forEach((line) => {\n        lineclip(line, bbox, lines);\n      });\n      if (lines.length === 1) {\n        return lineString(lines[0], properties);\n      }\n      return multiLineString(lines, properties);\n    }\n    case \"Polygon\":\n      return polygon(clipPolygon(coords, bbox), properties);\n    case \"MultiPolygon\":\n      return multiPolygon(\n        coords.map((poly) => {\n          return clipPolygon(poly, bbox);\n        }),\n        properties\n      );\n    default:\n      throw new Error(\"geometry \" + type + \" not supported\");\n  }\n}\nfunction clipPolygon(rings, bbox) {\n  const outRings = [];\n  for (const ring of rings) {\n    const clipped = polygonclip(ring, bbox);\n    if (clipped.length > 0) {\n      if (clipped[0][0] !== clipped[clipped.length - 1][0] || clipped[0][1] !== clipped[clipped.length - 1][1]) {\n        clipped.push(clipped[0]);\n      }\n      if (clipped.length >= 4) {\n        outRings.push(clipped);\n      }\n    }\n  }\n  return outRings;\n}\nvar turf_bbox_clip_default = bboxClip;\nexport {\n  bboxClip,\n  turf_bbox_clip_default as default\n};\n//# sourceMappingURL=index.js.map","import polylabel from 'polylabel'\nimport { area as turfArea } from '@turf/area'\nimport { distance as turfDistance } from '@turf/distance'\nimport { point as TurfPoint, polygon as TurfPolygon, multiPolygon as TurfMultiPolygon } from '@turf/helpers'\nimport { bboxClip as TurfBboxClip } from '@turf/bbox-clip'\nimport { getFocusBounds } from '../../lib/viewport'\nimport { defaults } from './constants'\n\nfunction getPaddedBounds () {\n  const { map } = this\n  const padding = map.getPadding()\n  const bounds = map.getBounds()\n\n  // Get the pixel coordinates for the current bounds\n  const sw = map.project([bounds.getWest(), bounds.getSouth()])\n  const ne = map.project([bounds.getEast(), bounds.getNorth()])\n\n  // Adjust for padding\n  sw.x += padding.left\n  sw.y -= padding.bottom\n  ne.x -= padding.right\n  ne.y += padding.top\n\n  // Convert back to geographical coordinates\n  const paddedSW = map.unproject(sw)\n  const paddedNE = map.unproject(ne)\n\n  // Create new bounds\n  const paddedBounds = [[paddedSW.lng, paddedSW.lat], [paddedNE.lng, paddedNE.lat]]\n\n  return paddedBounds.flat(1)\n}\n\nfunction addFeatureProperties (features) {\n  const { map } = this\n  return features.map(f => {\n    const { lng, lat } = map.getCenter()\n    const coord = f.geometry.type === 'Polygon' ? polylabel(f.geometry.coordinates, 0.00001) : f.geometry.coordinates\n    const p1 = new TurfPoint([coord[0], coord[1]])\n    const p2 = new TurfPoint([lng, lat])\n    const distance = turfDistance(p1, p2, { units: 'metres' })\n    return {\n      ...f.properties,\n      id: f.properties.id || f.id,\n      geometryType: f.geometry.type,\n      coord,\n      distance\n    }\n  })\n}\n\nfunction intersectFeatures (bounds, features) {\n  features = features.map(f => {\n    if (['Polygon', 'MultiPolygon'].includes(f.geometry.type)) {\n      const polygon = f.geometry.type === 'Polygon' ? new TurfPolygon(f.geometry.coordinates) : new TurfMultiPolygon(f.geometry.coordinates)\n      const clipped = TurfBboxClip(polygon, bounds)\n      // Remove empty rings\n      clipped.geometry.coordinates = clipped.geometry.coordinates.filter(c => c.length)\n      // const clippedGeometry = martinez.intersection(boundsPolygon.geometry.coordinates, f.geometry.coordinates)\n      f.geometry = clipped.geometry\n    }\n    return f\n  })\n  return features\n}\n\nfunction combineFeatures (features) {\n  const combined = []\n  features.forEach(f => {\n    const group = combined.find(c => c.length && ((f.id && f.id === c[0].id) || (f.properties.id && f.properties.id === c[0].properties.id)))\n    if (f.geometry.type === 'MultiPolygon') {\n      // Get largest single polygon, outer shape (excluding holes) and add area\n      const parts = f.geometry.coordinates.map(c => {\n        const polygon = new TurfPolygon([c[0]])\n        polygon.properties = { area: turfArea(polygon) }\n        return polygon\n      })\n      const largest = parts.find(p => p.properties.area === Math.max(...parts.map(b => b.properties.area)))\n      f.geometry = largest.geometry\n      f.properties.area = largest.properties.area\n    } else if (f.geometry.type === 'Polygon') {\n      // Get out shape (excluding holes) and add area\n      const polygon = new TurfPolygon([f.geometry.coordinates[0]])\n      f.properties.area = turfArea(polygon)\n      f.geometry = polygon.geometry\n    } else {\n      f.properties.area = 0\n    }\n    group?.push(f) || combined.push([f])\n  })\n  // Return largest single polygon\n  return combined.map(g => g.find(f => f.properties.area === Math.max(...g.map(b => b.properties.area))))\n}\n\nfunction getViewport () {\n  const { map } = this\n  const bounds = map.getBounds().toArray().flat(1)\n  const focusBounds = getPaddedBounds.bind(this)()\n  let center = map.getCenter()\n  let zoom = map.getZoom()\n  center = center.toArray().map(n => parseFloat(n.toFixed(defaults.PRECISION)))\n  zoom = parseFloat(zoom.toFixed(defaults.PRECISION))\n  const isMaxZoom = map.getZoom() >= map.getMaxZoom()\n  const isMinZoom = map.getZoom() <= map.getMinZoom()\n\n  return {\n    bounds,\n    focusBounds,\n    center,\n    zoom,\n    isMaxZoom,\n    isMinZoom\n  }\n}\n\nexport function addMapHoverBehaviour () {\n  const { map, featureLayers, labelLayers } = this\n\n  // Toggle cursor style for features\n  map.on('mousemove', [...featureLayers, ...labelLayers], e => {\n    const features = map.queryRenderedFeatures(e.point, { layers: [...featureLayers, ...labelLayers] })\n    const isFeature = !e.originalEvent.altKey && features && !!features.find(f => featureLayers.includes(f.layer.id))\n    const isLabel = e.originalEvent.altKey && features && !!features.find(f => labelLayers.includes(f.layer.id))\n    map.getCanvas().style.cursor = isFeature || isLabel ? 'pointer' : ''\n  })\n\n  // Revert cursor on mouseout\n  map.on('mouseout', [...featureLayers, ...labelLayers], () => { map.getCanvas().style.cursor = '' })\n}\n\nexport async function getDetail (pixel) {\n  const { selectedLayers } = this\n  const viewport = getViewport.bind(this)()\n  const features = getFeatures.bind(this)(pixel)\n  const label = getHighlightedLabel.bind(this)()\n  const selectedId = getSelectedFeatureId.bind(this)(selectedLayers)\n\n  return {\n    ...viewport,\n    resultType: features.resultType,\n    coord: features.coord,\n    selectedId,\n    features,\n    label\n  }\n}\n\nexport function getFeatures (pixel) {\n  const { map, featureLayers, locationLayers, paddingBox, scale } = this\n  const bounds = getFocusBounds(paddingBox, scale)\n\n  // Get all visible feature and pixel layers\n  let layers = [...featureLayers, ...locationLayers]\n  layers = map.getStyle()?.layers.filter(l => layers.includes(l?.id) && l?.layout?.visibility !== 'none').map(l => l.id)\n\n  // Get all features at given pixel\n  let featuresAtPixel = map.queryRenderedFeatures(pixel, { layers })\n\n  featuresAtPixel = (featuresAtPixel.map(f => {\n    return {\n      ...f.properties,\n      id: f.properties.id || f.id,\n      name: f.properties.name,\n      layer: f.layer.id\n    }\n  }))\n\n  // Get all 'featureLayer' features in the viewport\n  const renderedFeaturesInViewport = map.queryRenderedFeatures({ layers: featureLayers })\n\n  // Get total 'featureLayer' features in viewport (May be more than 9)\n  const featuresTotal = Array.from(new Set(renderedFeaturesInViewport.map(f => f.properties.id || f.id))).length\n\n  // Get all 'featureLayer' features in the padded bounds\n  const renderedFeaturesInPadding = map.queryRenderedFeatures(bounds, { layers: featureLayers })\n\n  // Get total 'featureLayer' features in padding bounds (May be more than 9)\n  const featuresFocusTotal = Array.from(new Set(renderedFeaturesInPadding.map(f => f.properties.id || f.id))).length\n\n  // Get geometry that intersects bounds\n  const intersectingFocusFeatures = intersectFeatures(getPaddedBounds.bind(this)(), renderedFeaturesInPadding)\n\n  // Split multi polygons and combine duplicate features\n  const viewportPolygonFeatures = featuresFocusTotal <= defaults.MAX_FEATURES ? combineFeatures(renderedFeaturesInViewport) : []\n  const focusPolygonFeatures = featuresFocusTotal <= defaults.MAX_FEATURES ? combineFeatures(intersectingFocusFeatures) : []\n\n  // Add props and sort features\n  const featuresInViewport = renderedFeaturesInViewport.length <= defaults.MAX_FEATURES ? addFeatureProperties.bind(this)(viewportPolygonFeatures) : []\n  const featuresInFocus = addFeatureProperties.bind(this)(focusPolygonFeatures).sort((a, b) => a.distance - b.distance)\n\n  // Get long lat of query\n  let lngLat\n  if (pixel) {\n    lngLat = map.unproject(pixel)\n    lngLat = [lngLat.lng, lngLat.lat]\n    lngLat = lngLat.map(c => Math.round(c * Math.pow(10, defaults.PRECISION)) / Math.pow(10, defaults.PRECISION))\n  }\n\n  // Set 'features' result type\n  const feature = featuresAtPixel.length ? featuresAtPixel[0] : null\n  const featureType = (featureLayers?.includes(feature?.layer) && 'feature') || (locationLayers?.includes(feature?.layer) && 'pixel')\n  const hasFeatureLayers = layers?.some(l => featureLayers?.includes(l))\n  const hasPixelLayers = layers?.some(l => locationLayers?.includes(l))\n  const resultType = featureType || (hasPixelLayers ? 'pixel' : null)\n\n  return {\n    resultType,\n    items: featuresAtPixel,\n    featuresTotal,\n    featuresInViewport,\n    featuresFocusTotal,\n    featuresInFocus,\n    isFeaturesInMap: hasFeatureLayers,\n    isPixelFeaturesAtPixel: locationLayers?.includes(feature?.layer),\n    isPixelFeaturesInMap: hasPixelLayers,\n    coord: lngLat\n  }\n}\n\nexport function toggleSelectedFeature (id) {\n  const { map, selectedLayers } = this\n  if (map?.getStyle()) {\n    for (const layer of selectedLayers) {\n      map.setLayoutProperty(layer, 'visibility', id ? 'visible' : 'none')\n      map.setFilter(layer, [\n        'any',\n        ['==', ['id'], id || ''],\n        ['==', ['get', 'id'], id || '']\n      ])\n    }\n  }\n}\n\nexport function getHighlightedLabel () {\n  const { map } = this\n  const features = map.queryRenderedFeatures({ layers: ['label'] })\n  let text\n  if (features?.length) {\n    const label = map.getStyle()?.layers.find(l => l.id === 'label')?.layout['text-field']\n    text = `${label} (${features[0].properties.layer})`\n  }\n  return text\n}\n\nexport function getSelectedFeatureId (selectedLayers) {\n  const { map } = this\n  const features = map.queryRenderedFeatures({ layers: selectedLayers })\n  return features.length ? (features[0].properties?.id || features[0]?.id) : null\n}\n\nexport function getLabel (pixel) {\n  const { map, labelLayers } = this\n  const feature = map.queryRenderedFeatures(pixel, { layers: labelLayers })[0]\n  return feature\n}\n\nexport function getLabels () {\n  const { map, paddingBox, scale } = this\n  const bounds = getFocusBounds(paddingBox, scale)\n  const features = map.queryRenderedFeatures(bounds, { layers: this.labelLayers })\n  const labels = features.map(f => {\n    let pixel = f.geometry.type === 'Point' && map.project(f.geometry.coordinates)\n    if (f.geometry.type !== 'Point') {\n      const coordinates = f.geometry.coordinates.flat(f.geometry.type === 'MultiLineString' ? 1 : 0)\n      const pixels = coordinates.map(c => map.project(c))\n      const xS = pixels.map(p => p.x)\n      const yS = pixels.map(p => p.y)\n      const centerX = ((Math.max(...xS) - Math.min(...xS)) / 2) + Math.min(...xS)\n      const centerY = ((Math.max(...yS) - Math.min(...yS)) / 2) + Math.min(...yS)\n      pixel = { x: centerX, y: centerY }\n    }\n    return {\n      feature: f,\n      pixel: [pixel.x, pixel.y]\n    }\n  })\n  return labels\n}\n","export const locationMarkerHTML = () => {\n  const el = document.createElement('div')\n  el.className = 'fm-c-marker fm-c-marker--location'\n  el.innerHTML = '<div class=\"fm-c-marker__inner\"><svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" fill=\"currentColor\"><circle cx=\"10\" cy=\"10\" r=\"8\" stroke=\"#fff\" stroke-width=\"3\"/></svg></div>'\n  return el\n}\n\nexport const targetMarkerHTML = () => {\n  const el = document.createElement('div')\n  el.className = 'fm-c-marker fm-c-marker--target'\n  el.innerHTML = `<div class=\"fm-c-marker__inner\">\n    <svg width=\"38\" height=\"38\" viewBox=\"0 0 38 38\" fill-rule=\"evenodd\" fill=\"currentColor\">\n      <path d=\"M5.035 20H1v-2h4.035C5.525 11.069 11.069 5.525 18 5.035V1h2v4.035c6.931.49 12.475 6.034 12.965 12.965H37v2h-4.035c-.49 6.931-6.034 12.475-12.965 12.965V37h-2v-4.035C11.069 32.475 5.525 26.931 5.035 20zM19 7A12.01 12.01 0 0 0 7 19a12.01 12.01 0 0 0 12 12 12.01 12.01 0 0 0 12-12A12.01 12.01 0 0 0 19 7zm0 10a2 2 0 1 1 0 4 2 2 0 1 1 0-4z\"/>\n      <path d=\"M5.035 20H1v-2h4.035a14.02 14.02 0 0 1 .246-1.8l1.96.399C7.083 17.375 7 18.178 7 19s.083 1.625.241 2.401l-1.96.399a14.02 14.02 0 0 1-.246-1.8zM20 5.035a14.02 14.02 0 0 1 1.8.246l-.399 1.96C20.625 7.083 19.822 7 19 7s-1.625.083-2.401.241l-.399-1.96a14.02 14.02 0 0 1 1.8-.246V1h2v4.035zm-2 27.93a14.02 14.02 0 0 1-1.8-.246l.399-1.96c.776.158 1.579.241 2.401.241s1.625-.083 2.401-.241l.399 1.96a14.02 14.02 0 0 1-1.8.246V37h-2v-4.035zM32.965 20a14.02 14.02 0 0 1-.246 1.8l-1.96-.399c.158-.776.241-1.579.241-2.401s-.083-1.625-.241-2.401l1.96-.399a14.02 14.02 0 0 1 .246 1.8H37v2h-4.035zM19 17a2 2 0 1 1 0 4 2 2 0 1 1 0-4zm3.8-9.385l.634-1.897a13.98 13.98 0 0 1 4.848 2.805l-1.327 1.496c-1.196-1.06-2.605-1.886-4.155-2.404zm5.181 3.43l1.496-1.327a13.98 13.98 0 0 1 2.805 4.848l-1.897.634c-.518-1.55-1.344-2.959-2.404-4.155zM30.385 22.8l1.897.634a13.98 13.98 0 0 1-2.805 4.848l-1.496-1.327c1.06-1.196 1.886-2.605 2.404-4.155zm-3.43 5.181l1.327 1.496a13.98 13.98 0 0 1-4.848 2.805l-.634-1.897c1.55-.518 2.959-1.344 4.155-2.404zM15.2 30.385l-.634 1.897a13.98 13.98 0 0 1-4.848-2.805l1.327-1.496c1.196 1.06 2.605 1.886 4.155 2.404zm-5.181-3.43l-1.496 1.327a13.98 13.98 0 0 1-2.805-4.848l1.897-.634c.518 1.55 1.344 2.959 2.404 4.155zM7.615 15.2l-1.897-.634a13.98 13.98 0 0 1 2.805-4.848l1.496 1.327c-1.06 1.196-1.886 2.605-2.404 4.155zm3.43-5.181L9.718 8.523a13.98 13.98 0 0 1 4.848-2.805l.634 1.897c-1.55.518-2.959 1.344-4.155 2.404z\"/>\n    </svg>\n  </div>`\n  return el\n}\n\nexport const shortcutMarkerHTML = (key) => {\n  const el = document.createElement('div')\n  el.className = 'fm-c-marker fm-c-marker--shortcut'\n  el.innerHTML = `<div class=\"fm-c-marker__inner\">${key}</div>`\n  return el\n}\n","import computedStyleToInlineStyle from 'computed-style-to-inline-style'\nimport { defaults } from './constants'\nimport { shortcutMarkerHTML } from './marker'\nimport { parseSVG } from '../../lib/symbols'\n\nconst SYMBOL_PLACEMENT = 'symbol-placement'\nconst TEXT_FIELD = 'text-field'\nconst SCALE_FACTOR_SMALL = 1.5\nconst SCALE_FACTOR_LARGE = 1.25\n\nexport function amendLineSymbolLayers () {\n  const { map } = this\n  const lineSymbolLayers = map.getStyle().layers.filter(l => l.layout && (SYMBOL_PLACEMENT in l.layout) && l.layout[SYMBOL_PLACEMENT] === 'line')\n  lineSymbolLayers.forEach(l => map.setLayoutProperty(l.id, SYMBOL_PLACEMENT, 'line-center'))\n}\n\nexport function addHighlightedLabelLayer () {\n  const { map } = this\n  const layers = map.getStyle().layers\n  this.labelLayers = layers.filter(l => l.id !== 'label' && l.layout ? l.layout[TEXT_FIELD] : null).map(l => l.id)\n  map.addSource('label', { type: 'geojson', data: { type: 'FeatureCollection', features: [] } })\n  map.addLayer({\n    id: 'label',\n    type: 'symbol',\n    source: 'label',\n    layout: {\n      'text-allow-overlap': true,\n      'text-ignore-placement': true\n    },\n    paint: {\n      'text-halo-width': 3,\n      'text-halo-blur': 1,\n      'text-opacity': 1\n    }\n  })\n}\n\nexport function addShortcutMarkers (features) {\n  const { map, shortcutMarkers } = this\n  const { Marker } = this.modules\n  shortcutMarkers.forEach(m => m.remove())\n  features.forEach((f, i) => {\n    const offset = f.geometryType === 'Point' ? [0, defaults.SHORTCUT_LABEL_OFFSET] : [0, 0]\n    shortcutMarkers.push(new Marker({ element: shortcutMarkerHTML(i + 1), offset }).setLngLat(f.coord).addTo(map))\n  })\n}\n\nexport function highlightLabel (feature) {\n  const { map, scale, style } = this\n\n  if (!map.style) {\n    return\n  }\n\n  if (feature) {\n    map.moveLayer('label')\n    map.getSource('label').setData({\n      type: 'Feature',\n      geometry: feature.geometry,\n      properties: {\n        ...feature.properties,\n        layer: feature.layer.id\n      }\n    })\n    // Clone layout properties\n    const textScale = scale === 1 ? SCALE_FACTOR_SMALL : SCALE_FACTOR_LARGE\n    const textField = feature.layer.layout[TEXT_FIELD]\n    map.setLayoutProperty('label', SYMBOL_PLACEMENT, feature.layer.layout[SYMBOL_PLACEMENT])\n    map.setLayoutProperty('label', TEXT_FIELD, textField.sections ? textField.sections[0].text : textField)\n    map.setLayoutProperty('label', 'text-font', feature.layer.layout['text-font'])\n    map.setLayoutProperty('label', 'text-letter-spacing', feature.layer.layout['text-letter-spacing'])\n    map.setLayoutProperty('label', 'text-size', feature.layer.layout['text-size'] * textScale)\n    map.setLayoutProperty('label', 'text-anchor', feature.layer.layout['text-anchor'])\n    map.setLayoutProperty('label', 'text-justify', feature.layer.layout['text-justify'])\n    map.setLayoutProperty('label', 'text-offset', feature.layer.layout['text-offset']?.map(o => o / textScale))\n    // Clone paint properties\n    map.setPaintProperty('label', 'text-color', (style === 'dark' ? '#ffffff' : '#000000'))\n    map.setPaintProperty('label', 'text-halo-color', (style === 'dark' ? '#000000' : '#ffffff'))\n  } else {\n    map?.getSource('label')?.setData({\n      type: 'FeatureCollection',\n      features: []\n    })\n  }\n}\n\nexport function addSelectedLayers (layers, selectedId, isDarkBasemap) {\n  const { map } = this\n  const selectedLayers = []\n  for (const layer of layers) {\n    layer.id = `${layer.id}-selected`\n    layer.filter = ['==', 'id', selectedId || '']\n    if (layer.type === 'symbol') {\n      layer.layout['icon-image'] = ['concat', layer.layout['icon-image'], '-selected']\n    }\n    if (layer.type === 'fill') {\n      layer.paint = { 'line-color': isDarkBasemap ? '#ffffff' : '#0b0c0c', 'line-width': 2 }\n      layer.type = 'line'\n    }\n    if (map.getLayer(layer.id)) {\n      map.removeLayer(layer.id)\n    }\n    selectedLayers.push(layer.id)\n    setTimeout(() => map.addLayer(layer), 0)\n  }\n  return selectedLayers\n}\n\nexport function loadSymbols () {\n  let fn\n  if (this.symbols?.length) {\n    const { map, symbols, style } = this\n    const isDarkBasemap = ['dark', 'aerial'].includes(style.name)\n\n    fn = Promise.all(symbols.map(u => fetch(u))).then(responses =>\n      Promise.all(responses.map(r => r.text()))\n    ).then(texts => Promise.all(texts.map((t, i) => loadImage(getName(symbols[i]), t, map, isDarkBasemap))\n      .concat(texts.map((t, i) => loadImage(`${getName(symbols[i])}-selected`, t, map, isDarkBasemap)))\n    ))\n  }\n  return fn\n}\n\nconst getName = path => {\n  const extNumChars = 4\n  return path.split('\\\\').pop().split('/').pop().slice(0, -Math.abs(extNumChars))\n}\n\nconst loadImage = (name, text, map, isDarkBasemap) => {\n  const parsed = parseSVG(name, null, text, isDarkBasemap, 2)\n  const container = map.getCanvasContainer()\n  container.insertAdjacentHTML('beforeend', parsed)\n  const el = container.lastChild\n  computedStyleToInlineStyle(el, { recursive: true, properties: ['stroke', 'fill'] })\n  const base64 = 'data:image/svg+xml;base64,' + btoa(container.lastChild.outerHTML)\n  const img = document.createElement('img')\n  el?.remove()\n  return new Promise((resolve, reject) => {\n    img.onload = () => {\n      try {\n        if (map?.hasImage(name)) {\n          return\n        }\n        map.addImage(name, img)\n        resolve(img)\n      } catch (err) {\n        console.log(err)\n      }\n    }\n    img.onerror = reject\n    img.src = base64\n  })\n}\n","import { getDetail, addMapHoverBehaviour } from './query'\nimport { loadSymbols, addHighlightedLabelLayer, amendLineSymbolLayers, addShortcutMarkers, addSelectedLayers } from './symbols'\n\nexport const getResolution = (map) => {\n  const center = map.getCenter()\n  const zoom = map.getZoom()\n  const lat = center.lat\n  const EARTH_CIRCUMFERENCE = 40075016.686\n  const TILE_SIZE = 512\n  const scale = Math.pow(2, zoom)\n  const resolution = (EARTH_CIRCUMFERENCE * Math.cos((lat * Math.PI) / 180)) / (scale * TILE_SIZE)\n  return resolution\n}\n\nexport const getAttributions = (map) => {\n  const style = map.getStyle()\n  if (!style) {\n    return []\n  }\n\n  const currentZoom = map.getZoom()\n  const activeAttributions = new Set()\n\n  // Check each layer for visibility at current zoom\n  style.layers.forEach(layer => {\n    // Skip layers without a source\n    if (!layer.source) return\n\n    // Check if layer is visible based on zoom and visibility property\n    const minZoom = layer.minzoom !== undefined ? layer.minzoom : 0\n    const maxZoom = layer.maxzoom !== undefined ? layer.maxzoom : 24\n    const isVisible = currentZoom >= minZoom && currentZoom < maxZoom && (!layer.layout || layer.layout.visibility !== 'none')\n\n    // If layer is visible, get attribution from its source\n    if (isVisible) {\n      const source = style.sources[layer.source]\n      if (source && source.attribution) {\n        activeAttributions.add(source.attribution)\n      }\n    }\n  })\n\n  return Array.from(activeAttributions)\n}\n\nexport async function handleLoad () {\n  const { map } = this\n  await loadSymbols.bind(this)()\n  this.isLoaded = true\n  const resolution = getResolution(map)\n  const zoom = map.getZoom()\n  const attributions = getAttributions(map)\n  this.dispatchEvent(new CustomEvent('load', {\n    detail: {\n      framework: { map },\n      resolution,\n      zoom,\n      attributions\n    }\n  }))\n}\n\nexport async function handleStyleLoad () {\n  const { map } = this\n  // Store ref to baselayers when a new style is loaded\n  this.baseLayers = map.getStyle().layers\n  // Amend symbol-placement prop so labels have a coordinate\n  amendLineSymbolLayers.bind(this)()\n  // Add highlighted label layer and source\n  addHighlightedLabelLayer.bind(this)()\n  // Change cursor type on feature hover\n  addMapHoverBehaviour.bind(this)(this.featureLayers, this.labelLayers)\n  if (this.isLoaded) {\n    await loadSymbols.bind(this)()\n    this.dispatchEvent(new CustomEvent('style', {\n      detail: {\n        type: 'style'\n      }\n    }))\n  }\n}\n\nexport async function handleIdle () {\n  if (this.map) {\n    const { map, paddingBox, selectedId, scale } = this\n    const { offsetTop, offsetLeft, offsetWidth, offsetHeight } = paddingBox\n    const { offsetTop: parentOffsetTop, offsetLeft: parentOffsetLeft } = paddingBox.parentNode\n    const pixel = [offsetLeft + parentOffsetLeft + (offsetWidth / 2), offsetTop + parentOffsetTop + (offsetHeight / 2)].map(c => c / scale)\n    const detail = await getDetail.bind(this)(selectedId ? null : pixel)\n    const attributions = getAttributions(map)\n    addShortcutMarkers.bind(this)(detail?.features?.featuresInFocus)\n    this.dispatchEvent(new CustomEvent('update', {\n      detail: {\n        ...detail,\n        attributions\n      }\n    }))\n  }\n}\n\nexport async function handleMoveStart (e) {\n  this.hideLabel()\n  this.dispatchEvent(new CustomEvent('movestart', {\n    detail: {\n      isUserInitiated: e.isUserInitiated || !!e.originalEvent\n    }\n  }))\n}\n\nexport function handleMove () {\n  const { map } = this\n  const isMaxZoom = map.getZoom() >= map.getMaxZoom()\n  const isMinZoom = map.getZoom() <= map.getMinZoom()\n  const zoom = map.getZoom()\n  const resolution = getResolution(map)\n  const attributions = getAttributions(map)\n\n  // Need to include maxBounds check as this can also constrain zoom\n  this.dispatchEvent(new CustomEvent('move', {\n    detail: {\n      isMaxZoom,\n      isMinZoom,\n      zoom,\n      resolution,\n      attributions\n    }\n  }))\n}\n\nexport function handleStyleData (e) {\n  if (this.baseLayers.length) {\n    const { map, style, selectedId } = this\n    const featureLayers = e.target.getStyle().layers.filter(l => this.featureLayers.includes(l.id))\n    const selectedLayers = map.getStyle().layers.filter(l => l.id.includes('selected'))\n    if (selectedLayers.length !== featureLayers.length) {\n      const isDarkBasemap = ['dark', 'aerial'].includes(style.name)\n      this.selectedLayers = addSelectedLayers.bind(this)(featureLayers, selectedId, isDarkBasemap)\n    }\n  }\n}\n\nexport function handleDrawModeChange (e) {\n  const actions = {\n    edit_vertex: 'delete',\n    draw_vertex: 'add'\n  }\n  this.dispatchEvent(new CustomEvent('draw', {\n    detail: {\n      action: actions[e.mode] || null,\n      feature: e.feature\n    }\n  }))\n}\n\nexport function handleDrawVertexChange (e) {\n  this.dispatchEvent(new CustomEvent('draw', {\n    detail: {\n      action: 'change',\n      numVertecies: e.numVertecies\n    }\n  }))\n}\n\nexport function handleError (err) {\n  console.log(err)\n}\n","import { handleLoad, handleMoveStart, handleMove, handleIdle, handleStyleData, handleStyleLoad, handleDrawModeChange, handleDrawVertexChange, handleError } from './events.js'\nimport { toggleSelectedFeature, getDetail, getLabels, getLabel } from './query.js'\nimport { locationMarkerHTML, targetMarkerHTML } from './marker.js'\nimport { highlightLabel } from './symbols.js'\nimport { getFocusPadding, spatialNavigate, getScale } from '../../lib/viewport.js'\nimport { debounce } from '../../lib/debounce.js'\nimport { throttle } from '../../lib/throttle.js'\nimport { defaults, css } from './constants.js'\nimport { defaults as storeDefaults } from '../../store/constants.js'\n\nclass Framework extends EventTarget {\n  constructor ({ capabilities, transformRequest, symbols }) {\n    super()\n    this.srid = 4326\n    this.capabilities = capabilities\n    this.transformRequest = transformRequest\n    this.symbols = symbols\n    this.baseLayers = []\n    this.selectedId = ''\n    this.selectedCoordinate = null\n    this.isLoaded = false\n  }\n\n  init (options) {\n    if (this.capabilities.isLatest) {\n      import(/* webpackChunkName: \"maplibre\", webpackExports: [\"Map\", \"Marker\", \"LngLatBounds\"] */ 'maplibre-gl').then(module => {\n        this.addMap(module, options)\n      })\n    } else {\n      Promise.all([\n        import(/* webpackChunkName: \"maplibre-legacy\", webpackExports: [\"Map\", \"Marker\", \"LngLatBounds\"] */ 'maplibre-gl-legacy'),\n        import(/* webpackChunkName: \"maplibre-legacy\", webpackExports: [\"install\"] */ 'resize-observer'),\n        import(/* webpackChunkName: \"maplibre-legacy\" */ 'array-flat-polyfill')\n      ]).then(promises => {\n        if (!window.ResizeObserver) {\n          promises[1].install()\n        }\n        this.addMap(promises[0], options)\n      })\n    }\n  }\n\n  remove () {\n    this.map?.remove()\n    this.map = null\n  }\n\n  addMap (module, options) {\n    const { container, paddingBox, bounds, maxBounds, center, zoom, minZoom, maxZoom, style, size, featureLayers, locationLayers, callBack } = options\n    const { Map: MaplibreMap, Marker, LngLatBounds } = module.default\n    const scale = getScale(size)\n\n    const map = new MaplibreMap({\n      ...options,\n      container,\n      style: style?.url,\n      maxBounds: maxBounds || storeDefaults.MAX_BOUNDS_4326,\n      bounds,\n      center,\n      zoom,\n      minZoom,\n      maxZoom,\n      fadeDuration: 0,\n      attributionControl: false,\n      dragRotate: false\n    })\n\n    // Set initial padding, bounds and center (*No option to set in constructor)\n    // map.showPadding = true\n\n    map.setPadding(getFocusPadding(paddingBox, scale))\n    if (bounds) {\n      map.fitBounds(bounds, { animate: false })\n    } else {\n      map.flyTo({ center, zoom, animate: false })\n    }\n\n    // Disable rotation\n    map.touchZoomRotate.disableRotation()\n\n    // Overide device pixel ratio\n    if (map.setPixelRatio) {\n      map.setPixelRatio(window.devicePixelRatio * scale)\n    }\n\n    // Tidy up canvas\n    const canvas = map.getCanvas()\n    canvas.removeAttribute('role')\n    canvas.removeAttribute('tabindex')\n    canvas.removeAttribute('aria-label')\n    canvas.style.display = 'block'\n\n    this.container = container\n    this.map = map\n    this.featureLayers = featureLayers || []\n    this.locationLayers = locationLayers || []\n    this.selectedLayers = []\n    this.paddingBox = paddingBox\n    this.style = style\n    this.scale = scale\n\n    // Add markers\n    this.targetMarker = new Marker({ element: targetMarkerHTML() }).setLngLat([0, 0]).addTo(map)\n    this.locationMarker = new Marker({ element: locationMarkerHTML() }).setLngLat([0, 0]).addTo(map)\n    this.shortcutMarkers = []\n\n    // Return ref to dynamically loaded modules and framework functions\n    this.modules = { MaplibreMap, Marker, LngLatBounds }\n    this.framework = { map }\n\n    // Map ready event (first load)\n    map.on('load', handleLoad.bind(this))\n\n    // Map movestart\n    map.on('movestart', handleMoveStart.bind(this))\n\n    // Detect max/min zoom on move\n    const throttleHandleMove = throttle(() => { handleMove.bind(this)() }, defaults.THROTTLE)\n    map.on('move', throttleHandleMove)\n\n    // Detect map layer addition\n    map.on('styledata', handleStyleData.bind(this))\n\n    // All render/changes/animations complete. Must debounce, min 500ms\n    const debounceHandleIdle = debounce(() => { handleIdle.bind(this)() }, defaults.DELAY)\n    map.on('idle', debounceHandleIdle)\n\n    // Map style change\n    map.on('style.load', handleStyleLoad.bind(this))\n\n    // Draw events\n    map.on('draw.modechange', handleDrawModeChange.bind(this))\n\n    // Draw events\n    map.on('draw.modechange', handleDrawModeChange.bind(this))\n    map.on('draw.vertexchange', handleDrawVertexChange.bind(this))\n\n    // Capture errors\n    map.on('error', handleError.bind(this))\n\n    // Implementation callback after initialisation\n    if (callBack) {\n      callBack(this)\n    }\n  }\n\n  getPixel (coord) {\n    let pixel\n    if (this.map && coord) {\n      pixel = this.map.project(coord)\n      pixel = [Math.round(pixel.x), Math.round(pixel.y)]\n    }\n    return pixel\n  }\n\n  panBy (offset, isUserInitiated = true) {\n    if (this.map) {\n      this.map.panBy(offset, { ...defaults.ANIMATION }, { isUserInitiated })\n    }\n  }\n\n  panTo (coord) {\n    this.map.flyTo({ center: coord, ...defaults.ANIMATION })\n  }\n\n  zoomIn () {\n    if (this.map) {\n      this.map.zoomIn(defaults.ANIMATION)\n    }\n  }\n\n  zoomOut () {\n    if (this.map) {\n      this.map.zoomOut(defaults.ANIMATION)\n    }\n  }\n\n  setStyle (style) {\n    this.style = style\n    this.map.setStyle(style.url, { diff: false })\n\n    // Udate draw style\n    this.draw?.setStyle?.()\n  }\n\n  setPadding (coord, isAnimate) {\n    if (this.map) {\n      const { map, paddingBox, scale } = this\n      const padding = getFocusPadding(paddingBox, scale)\n      // Search needs to set padding first before fitBounds\n      this.map.setPadding(padding || map.getPadding())\n      // Ease map to new when coord is obscured\n      coord && this.map.easeTo({ center: coord, animate: isAnimate, ...defaults.ANIMATION })\n    }\n  }\n\n  setSize (size) {\n    const scale = getScale(size)\n    this.scale = scale\n    this.setPadding()\n    if (this.map.setPixelRatio) {\n      this.map?.setPixelRatio(window.devicePixelRatio * scale)\n    }\n    setTimeout(() => {\n      this.map.resize()\n      this.dispatchEvent(new CustomEvent('style', {\n        detail: {\n          type: 'size'\n        }\n      }))\n    }, defaults.DELAY)\n  }\n\n  fitBounds (bounds, isAnimate = true) {\n    bounds = [[bounds[0], bounds[1]], [bounds[2], bounds[3]]]\n    this.map.fitBounds(bounds, { animate: isAnimate, linear: true, duration: defaults.ANIMATION.duration })\n  }\n\n  setCentre (coord, _zoom) {\n    if (this.map) {\n      this.map.flyTo({ center: coord, ...defaults.ANIMATION })\n    }\n  }\n\n  initDraw (options) {\n    import(/* webpackChunkName: \"maplibre-draw\" */ './draw.js').then(module => {\n      const Draw = module.default\n      this.draw = new Draw(this, options)\n    })\n  }\n\n  setTargetMarker (coord, hasData, isVisible) {\n    const { targetMarker } = this\n    if (targetMarker) {\n      targetMarker.setLngLat(coord || [0, 0])\n      const el = targetMarker.getElement() // addClassName not supported in v1.15\n      el.classList.toggle('fm-c-marker--has-data', hasData)\n      el.classList.toggle(css.MARKER_VISIBLE, isVisible && coord)\n    }\n  }\n\n  selectFeature (id) {\n    this.selectedId = id\n    toggleSelectedFeature.bind(this)(id)\n  }\n\n  selectCoordinate (coord) {\n    this.selectedCoordinate = coord\n  }\n\n  async queryFeature (id) {\n    if (id) {\n      const detail = await getDetail.bind(this)(null, false)\n      detail.features.items = [detail.features.items.find(f => f.id === id)]\n      this.dispatchEvent(new CustomEvent('mapquery', { detail }))\n    }\n  }\n\n  async queryPoint (point) {\n    const detail = await getDetail.bind(this)(point, this.selectedLayers)\n    this.hideLabel()\n    this.dispatchEvent(new CustomEvent('mapquery', {\n      detail: {\n        resultType: detail.features.resultType,\n        ...detail\n      }\n    }))\n  }\n\n  getGeoLocation (success, error) {\n    navigator.geolocation.getCurrentPosition(async (position) => {\n      let coord = [position.coords.longitude, position.coords.latitude]\n      coord = coord.map(n => parseFloat(n.toFixed(defaults.PRECISION)))\n      // const place = this.getNearest ? await this.getNearest(coord) : null\n      success(coord, null)\n    }, (err) => {\n      console.log(err)\n      error(err)\n    }, {\n      enableHighAccuracy: false\n    })\n  }\n\n  showLocation (coord) {\n    const { locationMarker } = this\n    locationMarker.setLngLat(coord).addClassName(css.MARKER_VISIBLE)\n  }\n\n  showNextLabel (pixel, direction) {\n    const labels = getLabels.bind(this)()\n    const { lng, lat } = this.map.getCenter()\n    const center = this.map.project([lng, lat])\n    const pixels = labels.map(c => c.pixel)\n    const index = spatialNavigate(direction, pixel || [center.x, center.y], pixels)\n    const feature = labels[index]?.feature\n    highlightLabel.bind(this)(feature)\n    return labels[index]?.pixel\n  }\n\n  showLabel (point) {\n    const feature = getLabel.bind(this)(point)\n    highlightLabel.bind(this)(feature)\n    return point\n  }\n\n  hideLabel () {\n    if (this.map) {\n      highlightLabel.bind(this)()\n    }\n  }\n}\n\nexport default Framework\n","export const throttle = (fn, wait) => {\n  let lastCallTime = 0\n  return (...args) => {\n    const now = Date.now()\n    if (now - lastCallTime >= wait) {\n      lastCallTime = now\n      fn(...args)\n    }\n  }\n}\n","import { distance as turfDistance } from '@turf/distance'\nimport { point as TurfPoint } from '@turf/helpers'\nimport { defaults } from '../store/constants'\n\nconst getBearing = (coord1, coord2) => {\n  const east = coord1[0] < coord2[0] && 'east'\n  const west = coord1[0] > coord2[0] && 'west'\n  const north = coord1[1] < coord2[1] && 'north'\n  const south = coord1[1] > coord2[1] && 'south'\n  return [east, west, north, south].filter(b => b && typeof b === 'string')\n}\n\nconst getUnits = (metres) => {\n  const MAX_METRES = 800\n  const MAX_MILES = 5000\n  const RATIO = 0.621371\n  let units\n  if (metres < MAX_METRES) {\n    units = `${metres} metres`\n  } else if (metres < MAX_MILES) {\n    units = (metres / 1000 * RATIO).toFixed(1) + ' miles'\n  } else {\n    units = Math.round((metres / 1000) * RATIO) + ' miles'\n  }\n  return units\n}\n\nconst getDirection = (coord1, coord2) => {\n  coord1 = coord1.map(n => n > 1000 ? Math.round(n) : Math.round(n * 100000) / 100000)\n  coord2 = coord2.map(n => n > 1000 ? Math.round(n) : Math.round(n * 100000) / 100000)\n  const ns1 = [coord1[0], coord1[1]]\n  const ns2 = [coord1[0], coord2[1]]\n  const ew1 = [coord1[0], coord1[1]]\n  const ew2 = [coord2[0], coord1[1]]\n  const nsd = getDistance(ns1, ns2)\n  const ewd = getDistance(ew1, ew2)\n  const bearing = getBearing(coord1, coord2)\n  const ewc = bearing.filter(b => ['east', 'west'].includes(b)).join('')\n  const nsc = bearing.filter(b => ['north', 'south'].includes(b)).join('')\n  const ew = ewc ? `${ewc} ${getUnits(ewd)}` : ''\n  const ns = nsc ? `${nsc} ${getUnits(nsd)}` : ''\n  return `${ns + (ewc && nsc ? ', ' : '') + ew}`\n}\n\nconst getArea = (bounds) => {\n  const ew = getDistance([bounds[0], bounds[1]], [bounds[2], bounds[1]])\n  const ns = getDistance([bounds[0], bounds[1]], [bounds[0], bounds[3]])\n  return `${getUnits(ew)} by ${getUnits(ns)}`\n}\n\nconst getBoundsChange = (oCentre, originalZoom, isMaxZoom, isMinZoom, center, zoom) => {\n  const isSameCentre = JSON.stringify(oCentre) === JSON.stringify(center)\n  const isSameZoom = originalZoom === zoom\n  const isMove = oCentre && originalZoom && !(isSameCentre && isSameZoom)\n  const maxZoom = isMaxZoom ? ' (Maximum zoom reached)' : ''\n  const minZoom = isMinZoom ? ' (Minimum zoom reached)' : ''\n  let change = ''\n  if (isMove) {\n    if (!isSameCentre && !isSameZoom) {\n      change = `New area${maxZoom}${minZoom}. `\n    } else if (!isSameCentre) {\n      change = `Map move: ${getDirection(oCentre, center)}. `\n    } else {\n      const direction = zoom > originalZoom ? 'in' : 'out'\n      change = `Zoomed ${direction}${maxZoom}${minZoom}. `\n    }\n  }\n  return change\n}\n\nconst getSelectedStatus = (featuresInViewport, id) => {\n  const total = featuresInViewport.length\n  const index = featuresInViewport.findIndex(f => f.id === id)\n  return index >= 0 && `${total} feature${total !== 1 ? 's' : ''} in this area. ${featuresInViewport[index].name}. ${index + 1} of ${total} highlighted.`\n}\n\nconst getOffsetBoundingClientRect = (el) => {\n  const offsetParent = el.closest('[data-fm-main]') || document.body\n  return offsetParent.getBoundingClientRect()\n}\n\nconst isCirclePolygon = (geometry) => {\n  const coordinates = geometry?.coordinates?.[0]\n\n  // Expect exactly 64 points\n  if (coordinates?.length !== 65) {\n    return false\n  }\n\n  // Compute approximate centre using two opposite points\n  const [x1, y1] = coordinates[0]\n  const [x2, y2] = coordinates[32]\n  const center = [(x1 + x2) / 2, (y1 + y2) / 2]\n\n  let minDist = Infinity; let maxDist = -Infinity\n  let minEdge = Infinity; let maxEdge = -Infinity\n\n  for (let i = 0; i < 64; i++) {\n    const [xA, yA] = coordinates[i]\n    const [xB, yB] = coordinates[(i + 1) % 64]\n\n    // Distance from center\n    const dist = Math.hypot(xA - center[0], yA - center[1])\n    minDist = Math.min(minDist, dist)\n    maxDist = Math.max(maxDist, dist)\n\n    // Distance to next vertex (edge length)\n    const edgeDist = Math.hypot(xB - xA, yB - yA)\n    minEdge = Math.min(minEdge, edgeDist)\n    maxEdge = Math.max(maxEdge, edgeDist)\n  }\n\n  // Need to revist tolerance as they depend on size too\n  const WSG84_TOLERANCE = 0.3\n  const BNG_TOLERANCE = 0.3\n  const tolerance = detectCoordinateType(center) === 'WSG84' ? WSG84_TOLERANCE : BNG_TOLERANCE\n\n  return Math.abs(maxDist - minDist) < tolerance && Math.abs(maxEdge - minEdge) < tolerance\n}\n\n// const metresToImperial = (metres) => {\n//   const MILE = 1609.344\n//   const YARD = 0.9144\n//   const pluralize = (value, singular, plural) => `${value} ${value === 1 ? singular : plural}`\n//   if (metres >= MILE) {\n//     const miles = Math.floor(metres / MILE)\n//     const remainder = metres % MILE\n//     const yards = Math.floor(remainder / YARD)\n//     return `${pluralize(miles, 'mile', 'miles')}, ${pluralize(yards, 'yard', 'yards')}`\n//   } else {\n//     const yards = Math.floor(metres / YARD)\n//     return `${pluralize(yards, 'yard', 'yards')}`\n//   }\n// }\n\nconst metresToKilometres = (metres) => {\n  const KILOMETRE = 1000\n  // const pluralize = (value, singular, plural) => `${value} ${value === 1 ? singular : plural}`\n  if (metres >= KILOMETRE) {\n    const kilometres = metres / KILOMETRE\n    const roundedKm = Math.round(kilometres * 100) / 100\n    return `${roundedKm}km`\n  } else {\n    // return `${pluralize(Math.round(metres), 'metre', 'metres')}`\n    return `${Math.round(metres)}m`\n  }\n}\n\nexport const squareMetresToKm = (metres) => {\n  const SQ_KM = 1_000_000\n  if (metres >= SQ_KM) {\n    let km2 = (metres / SQ_KM).toFixed(2)\n    km2 = Number(km2).toLocaleString(undefined, { minimumFractionDigits: 0, maximumFractionDigits: 2 })\n    return `${km2}km²`\n  } else {\n    return `${Math.ceil(metres).toLocaleString()}m²`\n  }\n}\n\nexport const parseDimensions = (dimensions) => {\n  const { area, center, width, radius } = dimensions\n  const areaDisplay = area ? squareMetresToKm(area) : null\n  const centerDisplay = center ? center.map(c => Math.round(c)).join(', ') : null\n  const widthDisplay = width ? metresToKilometres(width) : null\n  const radiusDisplay = radius ? metresToKilometres(radius) : null\n  return { ...dimensions, areaDisplay, centerDisplay, widthDisplay, radiusDisplay }\n}\n\nexport const detectCoordinateType = (coords) => {\n  if (coords.length === 3) {\n    return 'BNG' // If a third value exists (zone), it's UTM\n  }\n  const [x, y] = coords\n  if (x >= -180 && x <= 180 && y >= -90 && y <= 90) {\n    return 'WSG84'\n  }\n  if (x > 180 && y > 90) {\n    return 'BNG'\n  }\n  return 'Unknown'\n}\n\nexport const getDistance = (coord1, coord2) => {\n  let distance\n  if (coord1[0] > 1000) {\n    const x = Math.abs(coord1[0] - coord2[0])\n    const y = Math.abs(coord1[1] - coord2[1])\n    const dist = Math.sqrt((Math.pow(x, 2)) + (Math.pow(y, 2)))\n    distance = dist\n  } else {\n    const p1 = new TurfPoint(coord1)\n    const p2 = new TurfPoint(coord2)\n    distance = turfDistance(p1, p2, { units: 'metres' })\n  }\n  return Math.round(distance)\n}\n\nexport const getFocusPadding = (el, scale) => {\n  let padding\n  if (el) {\n    const parent = getOffsetBoundingClientRect(el)\n    const box = el.getBoundingClientRect()\n    const boxX = box.x || box.left\n    const boxY = box.y || box.top\n    const parentX = parent.x || parent.left\n    const parentY = parent.y || parent.top\n    padding = {\n      top: (boxY - parentY) / scale,\n      left: (boxX - parentX) / scale,\n      right: (parent.width - box.width - (boxX - parentX)) / scale,\n      bottom: (parent.height - box.height - (boxY - parentY)) / scale\n    }\n  }\n  // Addresses repid browser resizing\n  const isValid = Object.values(padding).every(i => i >= 0)\n  return isValid && padding\n}\n\nexport const getFocusBounds = (el, scale) => {\n  let bounds\n  if (el) {\n    const parent = getOffsetBoundingClientRect(el)\n    const box = el.getBoundingClientRect()\n    const m = 10\n    bounds = [[\n      ((box.x || box.left) - (parent.x || parent.left) + m) / scale,\n      (((box.y || box.top) - (parent.y || parent.top)) + box.height - m) / scale\n    ], [\n      (box.width + ((box.x || box.left) - (parent.x || parent.left)) - m) / scale,\n      ((box.y || box.top) - (parent.y || parent.top) + m) / scale\n    ]]\n  }\n  return bounds\n}\n\nexport const getMapPixel = (el, scale) => {\n  const parent = getOffsetBoundingClientRect(el)\n  const box = el.getBoundingClientRect()\n  const left = ((box.x || box.left) - (parent.x || parent.left)) / scale\n  const top = ((box.y || box.top) - (parent.y || parent.top)) / scale\n  const offsetLeft = (box.width / 2) / scale\n  const offsetTop = (box.height / 2) / scale\n  const point = [left + offsetLeft, top + offsetTop]\n  return point\n}\n\nexport const getDescription = (place, bounds, focusBounds, features, isFocusArea) => {\n  const { featuresTotal, featuresFocusTotal, isFeaturesInMap, isPixelFeaturesAtPixel, isPixelFeaturesInMap } = features || {}\n  const activeFeaturesTotal = isFocusArea ? featuresFocusTotal : featuresTotal\n  const activeBounds = isFocusArea ? focusBounds : bounds\n  let text = ''\n  if (activeFeaturesTotal) {\n    text = `${activeFeaturesTotal} feature${activeFeaturesTotal === 1 ? '' : 's'} in this area. `\n  } else if (isPixelFeaturesAtPixel) {\n    text = 'Data visible at the center coordinate. '\n  } else if (isPixelFeaturesInMap) {\n    text = 'No data visible at the center coordinate. '\n  } else if (isFeaturesInMap) {\n    text = 'No feature data in this area. '\n  } else {\n    // Null\n  }\n\n  const display = isFocusArea ? 'Focus area ' : ''\n  const newPlace = place ? `Approximate centre ${place}. ` : ''\n  const newArea = `Covering ${getArea(activeBounds)}. `\n  const findPlace = place ? '' : 'Use ALT plus I to find closest place'\n\n  return `${display}${newPlace}${newArea}${text}${findPlace}`\n}\n\nexport const getStatus = ({ action, isBoundsChange, place, isFocusArea, prevZoom, prevCenter, center, bounds, focusBounds, zoom, isMaxZoom, isMinZoom, features, label, featureId }) => {\n  let status = null\n  if (label) {\n    status = label\n  } else if (featureId) {\n    const selected = getSelectedStatus(features?.featuresInViewport, featureId)\n    status = selected\n  } else if (action === 'GEOCODE') {\n    status = getDescription(place, bounds, focusBounds, features, isFocusArea)\n  } else if (action === 'DATA') {\n    status = 'Map change: new data. Use ALT plus I to get new details'\n  } else if (isBoundsChange) {\n    const direction = getBoundsChange(prevCenter, prevZoom, isMaxZoom, isMinZoom, center, zoom)\n    const description = getDescription(place, bounds, focusBounds, features, isFocusArea)\n    status = `${direction}${description}`\n  } else {\n    status = ''\n  }\n  return status\n}\n\nexport const getPlace = (isUserInitiated, action, oPlace, newPlace) => {\n  let place\n  if (!isUserInitiated) {\n    if (action === 'RESET') {\n      place = oPlace\n    } else {\n      place = newPlace\n    }\n  }\n  return place\n}\n\nexport const parseCentre = (value, srid) => {\n  const mb = defaults[`MAX_BOUNDS_${srid}`]\n  let isInRange\n  let coords = value?.split(',')\n  // Query string formed correctly\n  if (!(Array.isArray(coords) && coords?.length === 3)) {\n    return null\n  }\n  // Coords are numbers\n  coords = coords.slice(0, 2).map(x => parseFloat(x))\n  coords = !coords.some(isNaN) && coords\n  if (!coords) {\n    return null\n  }\n  // Coords are within the valid range\n  if (srid === '27700') {\n    isInRange = !!coords.filter(c => c >= 0).length\n  } else {\n    isInRange = (coords[0] > mb[0] && coords[0] < mb[2]) && (coords[1] > mb[1] && coords[1] < mb[3])\n  }\n  return isInRange ? coords : null\n}\n\nexport const parseZoom = value => {\n  const coords = value?.split(',')\n  if (!(Array.isArray(coords) && coords?.length === 3)) {\n    return null\n  }\n  const zoom = parseFloat(coords[2])\n  return !zoom.isNaN ? zoom : null\n}\n\nexport const getShortcutKey = (e, featuresViewport) => {\n  const number = e.code.slice(-1)\n  const hasFeature = featuresViewport.length >= number\n  const id = hasFeature ? featuresViewport[number - 1].id : ''\n  return id\n}\n\nexport const getFeatureShape = (feature) => {\n  if (isCirclePolygon(feature?.geometry)) {\n    return 'circle'\n  }\n  if (feature?.geometry?.type?.toLowerCase() === 'polygon') {\n    const coords = feature.geometry?.coordinates\n    const flatCoords = (coords && Array.from(new Set(coords.flat(2)))) || null\n    return flatCoords?.length === 4 ? 'square' : 'polygon'\n  }\n  return null\n}\n\nexport const spatialNavigate = (direction, start, pixels) => {\n  const quadrant = pixels.filter(p => {\n    const offsetX = Math.abs(p[0] - start[0])\n    const offsetY = Math.abs(p[1] - start[1])\n    let isQuadrant = false\n    if (direction === 'up') {\n      isQuadrant = p[1] <= start[1] && offsetY >= offsetX\n    } else if (direction === 'down') {\n      isQuadrant = p[1] > start[1] && offsetY >= offsetX\n    } else if (direction === 'left') {\n      isQuadrant = p[0] <= start[0] && offsetY < offsetX\n    } else {\n      isQuadrant = p[0] > start[0] && offsetY < offsetX\n    }\n    return isQuadrant && (JSON.stringify(p) !== JSON.stringify(start))\n  })\n  if (!quadrant.length) {\n    quadrant.push(start)\n  }\n  const pythagorean = (a, b) => Math.sqrt(Math.pow(a, 2) + Math.pow(b, 2))\n  const distances = quadrant.map(p => pythagorean(Math.abs(start[0] - p[0]), Math.abs(start[1] - p[1])))\n  const closest = quadrant[distances.indexOf(Math.min(...distances))]\n  return pixels.findIndex(i => JSON.stringify(i) === JSON.stringify(closest))\n}\n\nexport const getScale = (size) => {\n  return { small: 1, medium: 1.5, large: 2 }[size] || 1\n}\n\nexport const getPoint = (el, e, scale) => {\n  const { left, top } = el.getBoundingClientRect()\n  const { clientX, clientY } = e.nativeEvent\n  const x = clientX - left\n  const y = clientY - top\n  return [x / scale, y / scale]\n}\n\nexport const getStyle = (styles = []) => {\n  const validStyles = styles.filter(s => defaults.STYLES.includes(s.name))\n  const style = window.localStorage.getItem('style')\n  return validStyles.find(s => s.name === style) || validStyles.find(s => s.name === 'default')\n}\n"],"names":["earthRadius","factors","centimeters","centimetres","degrees","Math","PI","feet","inches","kilometers","kilometres","meters","metres","miles","millimeters","millimetres","nauticalmiles","radians","yards","feature","geom","properties","options","feat","type","id","bbox","geometry","point","coordinates","Error","Array","isArray","length","isNumber","polygon","ring","j","lineString","featureCollection","features","fc","multiLineString","multiPolygon","radiansToLength","units","factor","lengthToRadians","distance","radiansToDegrees","degreesToRadians","num","isNaN","module","exports","t","e","Object","defineProperty","value","default","o","recursive","prototype","forEach","call","children","r","getComputedStyle","style","getPropertyValue","defaults","PRECISION","ANIMATION","duration","curve","DELAY","THROTTLE","MAX_FEATURES","SHORTCUT_LABEL_OFFSET","css","MARKER_VISIBLE","area","geojson","i","total","polygonArea","calculateArea","coords","abs","ringArea","FACTOR","PI_OVER_180","coordsLength","lower","middle","upper","lowerX","middleY","sin","turf_area_default","DOMParser","window","parseSVG","icon","fill","text","isDarkBasemap","arguments","undefined","scale","isSelected","includes","dom","parseFromString","svg","querySelector","classList","add","toggle","viewBox","getAttribute","width","parseInt","split","height","setAttribute","olFill","querySelectorAll","olStroke","n","bgFill","bgStroke","fgFill","fgStroke","body","innerHTML","getCoord","coord","getCoords","getGeom","from","to","coordinates1","coordinates2","dLat","dLon","lat1","lat2","a","pow","cos","atan2","sqrt","debounce","fn","wait","timeoutId","_len","args","_key","clearTimeout","setTimeout","apply","geomEach","callback","g","stopG","geometryMaybeCollection","isGeometryCollection","featureProperties","featureBBox","featureId","featureIndex","isFeatureCollection","isFeature","stop","geometries","geomReduce","initialValue","previousValue","currentGeometry","flattenEach","geomType","multiFeatureIndex","TinyQueue","constructor","data","compare","b","this","_down","push","item","_up","pop","top","bottom","peek","pos","parent","current","halfLength","bestChild","right","Cell","x","y","h","d","inside","minDistSq","Infinity","len","min","getSegDistSq","pointToPolygonDist","max","SQRT2","px","py","dx","dy","polygonclip","points","result","edge","prev","prevInside","p","bitCode","intersect","code","clipPolygon","rings","outRings","clipped","_regeneratorRuntime","hasOwnProperty","Symbol","iterator","c","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","arg","l","f","s","GeneratorFunction","GeneratorFunctionPrototype","getPrototypeOf","v","values","defineIteratorMethods","_invoke","AsyncIterator","invoke","_typeof","resolve","__await","then","callInvokeWithMethodAndArg","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","return","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","reset","displayName","isGeneratorFunction","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","charAt","slice","rval","handle","complete","finish","catch","delegateYield","asyncGeneratorStep","_toConsumableArray","_arrayLikeToArray","_arrayWithoutHoles","_iterableToArray","_unsupportedIterableToArray","_nonIterableSpread","toString","test","ownKeys","getOwnPropertySymbols","filter","getOwnPropertyDescriptor","_objectSpread","_defineProperty","getOwnPropertyDescriptors","defineProperties","toPrimitive","String","_toPrimitive","_toPropertyKey","getPaddedBounds","map","padding","getPadding","bounds","getBounds","sw","project","getWest","getSouth","ne","getEast","getNorth","left","paddedSW","unproject","paddedNE","lng","lat","flat","addFeatureProperties","_map$getCenter","getCenter","precision","debug","minX","minY","maxX","maxY","cellSize","cellQueue","bestCell","centroid","getCentroidCell","bboxCell","numProbes","potentiallyQueue","cell","console","log","round","ch","polylabel","p1","TurfPoint","p2","turfDistance","geometryType","combineFeatures","combined","group","find","parts","TurfPolygon","turfArea","largest","getViewport","toArray","focusBounds","bind","center","zoom","getZoom","parseFloat","toFixed","isMaxZoom","getMaxZoom","isMinZoom","getMinZoom","addMapHoverBehaviour","featureLayers","labelLayers","on","concat","queryRenderedFeatures","layers","originalEvent","altKey","layer","isLabel","getCanvas","cursor","getDetail","_x","_getDetail","_callee","pixel","selectedLayers","viewport","label","selectedId","_context","getFeatures","getHighlightedLabel","getSelectedFeatureId","resultType","_next","_throw","_map$getStyle","_layers","_layers2","locationLayers","paddingBox","getFocusBounds","getStyle","_l$layout","layout","visibility","featuresAtPixel","lngLat","renderedFeaturesInViewport","featuresTotal","Set","renderedFeaturesInPadding","featuresFocusTotal","intersectingFocusFeatures","lines","line","codeB","lastCode","codeA","part","lineclip","poly","TurfBboxClip","TurfMultiPolygon","intersectFeatures","viewportPolygonFeatures","focusPolygonFeatures","featuresInViewport","featuresInFocus","sort","featureType","hasFeatureLayers","some","hasPixelLayers","items","isFeaturesInMap","isPixelFeaturesAtPixel","isPixelFeaturesInMap","toggleSelectedFeature","_step","_iterator","_n","F","_createForOfIteratorHelper","setLayoutProperty","setFilter","err","_map$getStyle2","_features$0$propertie","_features$","getLabel","getLabels","pixels","xS","yS","locationMarkerHTML","el","document","createElement","className","SYMBOL_PLACEMENT","TEXT_FIELD","amendLineSymbolLayers","addHighlightedLabelLayer","addSource","addLayer","source","paint","addShortcutMarkers","shortcutMarkers","Marker","modules","m","remove","key","offset","element","setLngLat","addTo","highlightLabel","_feature$layer$layout","moveLayer","getSource","setData","textScale","textField","sections","setPaintProperty","_map$getSource","addSelectedLayers","_loop","getLayer","removeLayer","loadSymbols","_this$symbols","symbols","all","fetch","responses","texts","loadImage","getName","path","parsed","container","getCanvasContainer","insertAdjacentHTML","lastChild","computedStyleToInlineStyle","base64","btoa","outerHTML","img","reject","onload","hasImage","addImage","onerror","src","_asyncToGenerator","getResolution","getAttributions","currentZoom","activeAttributions","minZoom","minzoom","maxZoom","maxzoom","sources","attribution","handleLoad","_handleLoad","resolution","attributions","isLoaded","dispatchEvent","CustomEvent","detail","framework","handleStyleLoad","_handleStyleLoad","_callee2","_context2","baseLayers","handleIdle","_handleIdle","_callee3","_detail$features","offsetTop","offsetLeft","offsetWidth","offsetHeight","_paddingBox$parentNod","parentOffsetTop","parentOffsetLeft","_context3","parentNode","handleMoveStart","_handleMoveStart","_callee4","_context4","hideLabel","isUserInitiated","handleMove","handleStyleData","_this","target","handleDrawModeChange","action","edit_vertex","draw_vertex","mode","handleDrawVertexChange","numVertecies","handleError","_defineProperties","_wrapNativeSuper","Map","Function","indexOf","_isNativeFunction","has","get","set","Wrapper","_isNativeReflectConstruct","Reflect","construct","_setPrototypeOf","_construct","_getPrototypeOf","Boolean","valueOf","Framework","_EventTarget","_ref","capabilities","transformRequest","_classCallCheck","ReferenceError","_assertThisInitialized","_possibleConstructorReturn","_callSuper","srid","selectedCoordinate","_inherits","_this2","isLatest","addMap","promises","ResizeObserver","install","_this$map","_this3","maxBounds","size","callBack","_module$default","MaplibreMap","LngLatBounds","getScale","url","storeDefaults","MAX_BOUNDS_4326","fadeDuration","attributionControl","dragRotate","setPadding","getFocusPadding","fitBounds","animate","flyTo","touchZoomRotate","disableRotation","setPixelRatio","devicePixelRatio","canvas","removeAttribute","display","targetMarker","locationMarker","lastCallTime","throttleHandleMove","now","Date","debounceHandleIdle","panBy","zoomIn","zoomOut","_this$draw","_this$draw$setStyle","setStyle","diff","draw","isAnimate","easeTo","_this$map2","_this4","resize","linear","_zoom","_this5","Draw","hasData","isVisible","getElement","_queryFeature","_queryPoint","_x2","success","error","navigator","geolocation","getCurrentPosition","_ref2","position","longitude","latitude","_x3","enableHighAccuracy","addClassName","direction","_labels$index","_labels$index2","labels","_this$map$getCenter","index","spatialNavigate","EventTarget","getUnits","RATIO","getOffsetBoundingClientRect","closest","getBoundingClientRect","metresToKilometres","roundedKm","squareMetresToKm","SQ_KM","km2","Number","toLocaleString","minimumFractionDigits","maximumFractionDigits","ceil","parseDimensions","dimensions","radius","areaDisplay","centerDisplay","join","widthDisplay","radiusDisplay","detectCoordinateType","_coords","_slicedToArray","getDistance","coord1","coord2","box","boxX","boxY","parentX","parentY","every","getMapPixel","getDescription","place","isFocusArea","activeFeaturesTotal","activeBounds","newPlace","newArea","ew","ns","getArea","findPlace","getStatus","isBoundsChange","prevZoom","prevCenter","status","findIndex","oCentre","originalZoom","isSameCentre","JSON","stringify","isSameZoom","change","ns1","ns2","ew1","ew2","nsd","ewd","bearing","getBearing","ewc","nsc","getDirection","getBoundsChange","description","getPlace","oPlace","parseCentre","_coords2","mb","parseZoom","getShortcutKey","featuresViewport","number","getFeatureShape","_feature$geometry","_geometry$coordinates","_coordinates$","x1","y1","_coordinates$2","minDist","maxDist","minEdge","maxEdge","_coordinates$i","xA","yA","_coordinates","xB","yB","dist","hypot","edgeDist","tolerance","isCirclePolygon","toLowerCase","_feature$geometry2","flatCoords","start","quadrant","offsetX","offsetY","distances","small","medium","large","getPoint","_el$getBoundingClient","_e$nativeEvent","nativeEvent","clientX","clientY","validStyles","STYLES","localStorage","getItem"],"sourceRoot":""}