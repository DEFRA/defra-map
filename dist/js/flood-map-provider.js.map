{"version":3,"file":"flood-map-provider.js","mappings":"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","sources":["webpack://defra/./node_modules/@turf/helpers/dist/esm/index.js","webpack://defra/./node_modules/computed-style-to-inline-style/dist/index.js","webpack://defra/./node_modules/tinyqueue/index.js","webpack://defra/./node_modules/polylabel/polylabel.js","webpack://defra/./node_modules/@turf/area/dist/esm/index.js","webpack://defra/./node_modules/@turf/meta/dist/esm/index.js","webpack://defra/./node_modules/@turf/bbox-clip/dist/esm/index.js","webpack://defra/./src/js/provider/os-maplibre/query.js","webpack://defra/./src/js/provider/os-maplibre/marker.js","webpack://defra/./src/js/provider/os-maplibre/symbols.js","webpack://defra/./src/js/provider/os-maplibre/events.js","webpack://defra/./src/js/provider/os-maplibre/provider.js","webpack://defra/./src/js/provider/os-maplibre/constants.js","webpack://defra/./src/js/lib/symbols.js","webpack://defra/./node_modules/@turf/invariant/dist/esm/index.js","webpack://defra/./node_modules/@turf/distance/dist/esm/index.js","webpack://defra/./src/js/lib/debounce.js","webpack://defra/./src/js/lib/viewport.js"],"sourcesContent":["// index.ts\nvar earthRadius = 63710088e-1;\nvar factors = {\n  centimeters: earthRadius * 100,\n  centimetres: earthRadius * 100,\n  degrees: 360 / (2 * Math.PI),\n  feet: earthRadius * 3.28084,\n  inches: earthRadius * 39.37,\n  kilometers: earthRadius / 1e3,\n  kilometres: earthRadius / 1e3,\n  meters: earthRadius,\n  metres: earthRadius,\n  miles: earthRadius / 1609.344,\n  millimeters: earthRadius * 1e3,\n  millimetres: earthRadius * 1e3,\n  nauticalmiles: earthRadius / 1852,\n  radians: 1,\n  yards: earthRadius * 1.0936\n};\nvar areaFactors = {\n  acres: 247105e-9,\n  centimeters: 1e4,\n  centimetres: 1e4,\n  feet: 10.763910417,\n  hectares: 1e-4,\n  inches: 1550.003100006,\n  kilometers: 1e-6,\n  kilometres: 1e-6,\n  meters: 1,\n  metres: 1,\n  miles: 386e-9,\n  nauticalmiles: 29155334959812285e-23,\n  millimeters: 1e6,\n  millimetres: 1e6,\n  yards: 1.195990046\n};\nfunction feature(geom, properties, options = {}) {\n  const feat = { type: \"Feature\" };\n  if (options.id === 0 || options.id) {\n    feat.id = options.id;\n  }\n  if (options.bbox) {\n    feat.bbox = options.bbox;\n  }\n  feat.properties = properties || {};\n  feat.geometry = geom;\n  return feat;\n}\nfunction geometry(type, coordinates, _options = {}) {\n  switch (type) {\n    case \"Point\":\n      return point(coordinates).geometry;\n    case \"LineString\":\n      return lineString(coordinates).geometry;\n    case \"Polygon\":\n      return polygon(coordinates).geometry;\n    case \"MultiPoint\":\n      return multiPoint(coordinates).geometry;\n    case \"MultiLineString\":\n      return multiLineString(coordinates).geometry;\n    case \"MultiPolygon\":\n      return multiPolygon(coordinates).geometry;\n    default:\n      throw new Error(type + \" is invalid\");\n  }\n}\nfunction point(coordinates, properties, options = {}) {\n  if (!coordinates) {\n    throw new Error(\"coordinates is required\");\n  }\n  if (!Array.isArray(coordinates)) {\n    throw new Error(\"coordinates must be an Array\");\n  }\n  if (coordinates.length < 2) {\n    throw new Error(\"coordinates must be at least 2 numbers long\");\n  }\n  if (!isNumber(coordinates[0]) || !isNumber(coordinates[1])) {\n    throw new Error(\"coordinates must contain numbers\");\n  }\n  const geom = {\n    type: \"Point\",\n    coordinates\n  };\n  return feature(geom, properties, options);\n}\nfunction points(coordinates, properties, options = {}) {\n  return featureCollection(\n    coordinates.map((coords) => {\n      return point(coords, properties);\n    }),\n    options\n  );\n}\nfunction polygon(coordinates, properties, options = {}) {\n  for (const ring of coordinates) {\n    if (ring.length < 4) {\n      throw new Error(\n        \"Each LinearRing of a Polygon must have 4 or more Positions.\"\n      );\n    }\n    if (ring[ring.length - 1].length !== ring[0].length) {\n      throw new Error(\"First and last Position are not equivalent.\");\n    }\n    for (let j = 0; j < ring[ring.length - 1].length; j++) {\n      if (ring[ring.length - 1][j] !== ring[0][j]) {\n        throw new Error(\"First and last Position are not equivalent.\");\n      }\n    }\n  }\n  const geom = {\n    type: \"Polygon\",\n    coordinates\n  };\n  return feature(geom, properties, options);\n}\nfunction polygons(coordinates, properties, options = {}) {\n  return featureCollection(\n    coordinates.map((coords) => {\n      return polygon(coords, properties);\n    }),\n    options\n  );\n}\nfunction lineString(coordinates, properties, options = {}) {\n  if (coordinates.length < 2) {\n    throw new Error(\"coordinates must be an array of two or more positions\");\n  }\n  const geom = {\n    type: \"LineString\",\n    coordinates\n  };\n  return feature(geom, properties, options);\n}\nfunction lineStrings(coordinates, properties, options = {}) {\n  return featureCollection(\n    coordinates.map((coords) => {\n      return lineString(coords, properties);\n    }),\n    options\n  );\n}\nfunction featureCollection(features, options = {}) {\n  const fc = { type: \"FeatureCollection\" };\n  if (options.id) {\n    fc.id = options.id;\n  }\n  if (options.bbox) {\n    fc.bbox = options.bbox;\n  }\n  fc.features = features;\n  return fc;\n}\nfunction multiLineString(coordinates, properties, options = {}) {\n  const geom = {\n    type: \"MultiLineString\",\n    coordinates\n  };\n  return feature(geom, properties, options);\n}\nfunction multiPoint(coordinates, properties, options = {}) {\n  const geom = {\n    type: \"MultiPoint\",\n    coordinates\n  };\n  return feature(geom, properties, options);\n}\nfunction multiPolygon(coordinates, properties, options = {}) {\n  const geom = {\n    type: \"MultiPolygon\",\n    coordinates\n  };\n  return feature(geom, properties, options);\n}\nfunction geometryCollection(geometries, properties, options = {}) {\n  const geom = {\n    type: \"GeometryCollection\",\n    geometries\n  };\n  return feature(geom, properties, options);\n}\nfunction round(num, precision = 0) {\n  if (precision && !(precision >= 0)) {\n    throw new Error(\"precision must be a positive number\");\n  }\n  const multiplier = Math.pow(10, precision || 0);\n  return Math.round(num * multiplier) / multiplier;\n}\nfunction radiansToLength(radians, units = \"kilometers\") {\n  const factor = factors[units];\n  if (!factor) {\n    throw new Error(units + \" units is invalid\");\n  }\n  return radians * factor;\n}\nfunction lengthToRadians(distance, units = \"kilometers\") {\n  const factor = factors[units];\n  if (!factor) {\n    throw new Error(units + \" units is invalid\");\n  }\n  return distance / factor;\n}\nfunction lengthToDegrees(distance, units) {\n  return radiansToDegrees(lengthToRadians(distance, units));\n}\nfunction bearingToAzimuth(bearing) {\n  let angle = bearing % 360;\n  if (angle < 0) {\n    angle += 360;\n  }\n  return angle;\n}\nfunction azimuthToBearing(angle) {\n  angle = angle % 360;\n  if (angle > 180) {\n    return angle - 360;\n  } else if (angle < -180) {\n    return angle + 360;\n  }\n  return angle;\n}\nfunction radiansToDegrees(radians) {\n  const normalisedRadians = radians % (2 * Math.PI);\n  return normalisedRadians * 180 / Math.PI;\n}\nfunction degreesToRadians(degrees) {\n  const normalisedDegrees = degrees % 360;\n  return normalisedDegrees * Math.PI / 180;\n}\nfunction convertLength(length, originalUnit = \"kilometers\", finalUnit = \"kilometers\") {\n  if (!(length >= 0)) {\n    throw new Error(\"length must be a positive number\");\n  }\n  return radiansToLength(lengthToRadians(length, originalUnit), finalUnit);\n}\nfunction convertArea(area, originalUnit = \"meters\", finalUnit = \"kilometers\") {\n  if (!(area >= 0)) {\n    throw new Error(\"area must be a positive number\");\n  }\n  const startFactor = areaFactors[originalUnit];\n  if (!startFactor) {\n    throw new Error(\"invalid original units\");\n  }\n  const finalFactor = areaFactors[finalUnit];\n  if (!finalFactor) {\n    throw new Error(\"invalid final units\");\n  }\n  return area / startFactor * finalFactor;\n}\nfunction isNumber(num) {\n  return !isNaN(num) && num !== null && !Array.isArray(num);\n}\nfunction isObject(input) {\n  return input !== null && typeof input === \"object\" && !Array.isArray(input);\n}\nfunction validateBBox(bbox) {\n  if (!bbox) {\n    throw new Error(\"bbox is required\");\n  }\n  if (!Array.isArray(bbox)) {\n    throw new Error(\"bbox must be an Array\");\n  }\n  if (bbox.length !== 4 && bbox.length !== 6) {\n    throw new Error(\"bbox must be an Array of 4 or 6 numbers\");\n  }\n  bbox.forEach((num) => {\n    if (!isNumber(num)) {\n      throw new Error(\"bbox must only contain numbers\");\n    }\n  });\n}\nfunction validateId(id) {\n  if (!id) {\n    throw new Error(\"id is required\");\n  }\n  if ([\"string\", \"number\"].indexOf(typeof id) === -1) {\n    throw new Error(\"id must be a number or a string\");\n  }\n}\nexport {\n  areaFactors,\n  azimuthToBearing,\n  bearingToAzimuth,\n  convertArea,\n  convertLength,\n  degreesToRadians,\n  earthRadius,\n  factors,\n  feature,\n  featureCollection,\n  geometry,\n  geometryCollection,\n  isNumber,\n  isObject,\n  lengthToDegrees,\n  lengthToRadians,\n  lineString,\n  lineStrings,\n  multiLineString,\n  multiPoint,\n  multiPolygon,\n  point,\n  points,\n  polygon,\n  polygons,\n  radiansToDegrees,\n  radiansToLength,\n  round,\n  validateBBox,\n  validateId\n};\n//# sourceMappingURL=index.js.map","!function(e,t){\"object\"==typeof exports&&\"object\"==typeof module?module.exports=t():\"function\"==typeof define&&define.amd?define([],t):\"object\"==typeof exports?exports.computedStyleToInlineStyle=t():e.computedStyleToInlineStyle=t()}(this,(()=>(()=>{\"use strict\";var e={};return(()=>{var t=e;Object.defineProperty(t,\"__esModule\",{value:!0}),t.default=function e(t,o){if(!t)throw new Error(\"No element specified.\");(null==o?void 0:o.recursive)&&Array.prototype.forEach.call(t.children,(t=>{e(t,o)}));const r=getComputedStyle(t);Array.prototype.forEach.call((null==o?void 0:o.properties)||r,(e=>{t.style[e]=r.getPropertyValue(e)}))}})(),e})()));","\nexport default class TinyQueue {\n    constructor(data = [], compare = (a, b) => (a < b ? -1 : a > b ? 1 : 0)) {\n        this.data = data;\n        this.length = this.data.length;\n        this.compare = compare;\n\n        if (this.length > 0) {\n            for (let i = (this.length >> 1) - 1; i >= 0; i--) this._down(i);\n        }\n    }\n\n    push(item) {\n        this.data.push(item);\n        this._up(this.length++);\n    }\n\n    pop() {\n        if (this.length === 0) return undefined;\n\n        const top = this.data[0];\n        const bottom = this.data.pop();\n\n        if (--this.length > 0) {\n            this.data[0] = bottom;\n            this._down(0);\n        }\n\n        return top;\n    }\n\n    peek() {\n        return this.data[0];\n    }\n\n    _up(pos) {\n        const {data, compare} = this;\n        const item = data[pos];\n\n        while (pos > 0) {\n            const parent = (pos - 1) >> 1;\n            const current = data[parent];\n            if (compare(item, current) >= 0) break;\n            data[pos] = current;\n            pos = parent;\n        }\n\n        data[pos] = item;\n    }\n\n    _down(pos) {\n        const {data, compare} = this;\n        const halfLength = this.length >> 1;\n        const item = data[pos];\n\n        while (pos < halfLength) {\n            let bestChild = (pos << 1) + 1; // initially it is the left child\n            const right = bestChild + 1;\n\n            if (right < this.length && compare(data[right], data[bestChild]) < 0) {\n                bestChild = right;\n            }\n            if (compare(data[bestChild], item) >= 0) break;\n\n            data[pos] = data[bestChild];\n            pos = bestChild;\n        }\n\n        data[pos] = item;\n    }\n}\n","\nimport Queue from 'tinyqueue';\n\nexport default function polylabel(polygon, precision = 1.0, debug = false) {\n    // find the bounding box of the outer ring\n    let minX = Infinity;\n    let minY = Infinity;\n    let maxX = -Infinity;\n    let maxY = -Infinity;\n\n    for (const [x, y] of polygon[0]) {\n        if (x < minX) minX = x;\n        if (y < minY) minY = y;\n        if (x > maxX) maxX = x;\n        if (y > maxY) maxY = y;\n    }\n\n    const width = maxX - minX;\n    const height = maxY - minY;\n    const cellSize = Math.max(precision, Math.min(width, height));\n\n    if (cellSize === precision) {\n        const result = [minX, minY];\n        result.distance = 0;\n        return result;\n    }\n\n    // a priority queue of cells in order of their \"potential\" (max distance to polygon)\n    const cellQueue = new Queue([], (a, b) => b.max - a.max);\n\n    // take centroid as the first best guess\n    let bestCell = getCentroidCell(polygon);\n\n    // second guess: bounding box centroid\n    const bboxCell = new Cell(minX + width / 2, minY + height / 2, 0, polygon);\n    if (bboxCell.d > bestCell.d) bestCell = bboxCell;\n\n    let numProbes = 2;\n\n    function potentiallyQueue(x, y, h) {\n        const cell = new Cell(x, y, h, polygon);\n        numProbes++;\n        if (cell.max > bestCell.d + precision) cellQueue.push(cell);\n\n        // update the best cell if we found a better one\n        if (cell.d > bestCell.d) {\n            bestCell = cell;\n            if (debug) console.log(`found best ${Math.round(1e4 * cell.d) / 1e4} after ${numProbes} probes`);\n        }\n    }\n\n    // cover polygon with initial cells\n    let h = cellSize / 2;\n    for (let x = minX; x < maxX; x += cellSize) {\n        for (let y = minY; y < maxY; y += cellSize) {\n            potentiallyQueue(x + h, y + h, h);\n        }\n    }\n\n    while (cellQueue.length) {\n        // pick the most promising cell from the queue\n        const {max, x, y, h: ch} = cellQueue.pop();\n\n        // do not drill down further if there's no chance of a better solution\n        if (max - bestCell.d <= precision) break;\n\n        // split the cell into four cells\n        h = ch / 2;\n        potentiallyQueue(x - h, y - h, h);\n        potentiallyQueue(x + h, y - h, h);\n        potentiallyQueue(x - h, y + h, h);\n        potentiallyQueue(x + h, y + h, h);\n    }\n\n    if (debug) {\n        console.log(`num probes: ${numProbes}\\nbest distance: ${bestCell.d}`);\n    }\n\n    const result = [bestCell.x, bestCell.y];\n    result.distance = bestCell.d;\n    return result;\n}\n\nfunction Cell(x, y, h, polygon) {\n    this.x = x; // cell center x\n    this.y = y; // cell center y\n    this.h = h; // half the cell size\n    this.d = pointToPolygonDist(x, y, polygon); // distance from cell center to polygon\n    this.max = this.d + this.h * Math.SQRT2; // max distance to polygon within a cell\n}\n\n// signed distance from point to polygon outline (negative if point is outside)\nfunction pointToPolygonDist(x, y, polygon) {\n    let inside = false;\n    let minDistSq = Infinity;\n\n    for (const ring of polygon) {\n        for (let i = 0, len = ring.length, j = len - 1; i < len; j = i++) {\n            const a = ring[i];\n            const b = ring[j];\n\n            if ((a[1] > y !== b[1] > y) &&\n                (x < (b[0] - a[0]) * (y - a[1]) / (b[1] - a[1]) + a[0])) inside = !inside;\n\n            minDistSq = Math.min(minDistSq, getSegDistSq(x, y, a, b));\n        }\n    }\n\n    return minDistSq === 0 ? 0 : (inside ? 1 : -1) * Math.sqrt(minDistSq);\n}\n\n// get polygon centroid\nfunction getCentroidCell(polygon) {\n    let area = 0;\n    let x = 0;\n    let y = 0;\n    const points = polygon[0];\n\n    for (let i = 0, len = points.length, j = len - 1; i < len; j = i++) {\n        const a = points[i];\n        const b = points[j];\n        const f = a[0] * b[1] - b[0] * a[1];\n        x += (a[0] + b[0]) * f;\n        y += (a[1] + b[1]) * f;\n        area += f * 3;\n    }\n    const centroid = new Cell(x / area, y / area, 0, polygon);\n    if (area === 0 || centroid.d < 0) return new Cell(points[0][0], points[0][1], 0, polygon);\n    return centroid;\n}\n\n// get squared distance from a point to a segment\nfunction getSegDistSq(px, py, a, b) {\n    let x = a[0];\n    let y = a[1];\n    let dx = b[0] - x;\n    let dy = b[1] - y;\n\n    if (dx !== 0 || dy !== 0) {\n        const t = ((px - x) * dx + (py - y) * dy) / (dx * dx + dy * dy);\n\n        if (t > 1) {\n            x = b[0];\n            y = b[1];\n\n        } else if (t > 0) {\n            x += dx * t;\n            y += dy * t;\n        }\n    }\n\n    dx = px - x;\n    dy = py - y;\n\n    return dx * dx + dy * dy;\n}\n","// index.ts\nimport { earthRadius } from \"@turf/helpers\";\nimport { geomReduce } from \"@turf/meta\";\nfunction area(geojson) {\n  return geomReduce(\n    geojson,\n    (value, geom) => {\n      return value + calculateArea(geom);\n    },\n    0\n  );\n}\nfunction calculateArea(geom) {\n  let total = 0;\n  let i;\n  switch (geom.type) {\n    case \"Polygon\":\n      return polygonArea(geom.coordinates);\n    case \"MultiPolygon\":\n      for (i = 0; i < geom.coordinates.length; i++) {\n        total += polygonArea(geom.coordinates[i]);\n      }\n      return total;\n    case \"Point\":\n    case \"MultiPoint\":\n    case \"LineString\":\n    case \"MultiLineString\":\n      return 0;\n  }\n  return 0;\n}\nfunction polygonArea(coords) {\n  let total = 0;\n  if (coords && coords.length > 0) {\n    total += Math.abs(ringArea(coords[0]));\n    for (let i = 1; i < coords.length; i++) {\n      total -= Math.abs(ringArea(coords[i]));\n    }\n  }\n  return total;\n}\nvar FACTOR = earthRadius * earthRadius / 2;\nvar PI_OVER_180 = Math.PI / 180;\nfunction ringArea(coords) {\n  const coordsLength = coords.length - 1;\n  if (coordsLength <= 2) return 0;\n  let total = 0;\n  let i = 0;\n  while (i < coordsLength) {\n    const lower = coords[i];\n    const middle = coords[i + 1 === coordsLength ? 0 : i + 1];\n    const upper = coords[i + 2 >= coordsLength ? (i + 2) % coordsLength : i + 2];\n    const lowerX = lower[0] * PI_OVER_180;\n    const middleY = middle[1] * PI_OVER_180;\n    const upperX = upper[0] * PI_OVER_180;\n    total += (upperX - lowerX) * Math.sin(middleY);\n    i++;\n  }\n  return total * FACTOR;\n}\nvar turf_area_default = area;\nexport {\n  area,\n  turf_area_default as default\n};\n//# sourceMappingURL=index.js.map","// index.js\nimport { feature, point, lineString, isObject } from \"@turf/helpers\";\nfunction coordEach(geojson, callback, excludeWrapCoord) {\n  if (geojson === null) return;\n  var j, k, l, geometry, stopG, coords, geometryMaybeCollection, wrapShrink = 0, coordIndex = 0, isGeometryCollection, type = geojson.type, isFeatureCollection = type === \"FeatureCollection\", isFeature = type === \"Feature\", stop = isFeatureCollection ? geojson.features.length : 1;\n  for (var featureIndex = 0; featureIndex < stop; featureIndex++) {\n    geometryMaybeCollection = isFeatureCollection ? geojson.features[featureIndex].geometry : isFeature ? geojson.geometry : geojson;\n    isGeometryCollection = geometryMaybeCollection ? geometryMaybeCollection.type === \"GeometryCollection\" : false;\n    stopG = isGeometryCollection ? geometryMaybeCollection.geometries.length : 1;\n    for (var geomIndex = 0; geomIndex < stopG; geomIndex++) {\n      var multiFeatureIndex = 0;\n      var geometryIndex = 0;\n      geometry = isGeometryCollection ? geometryMaybeCollection.geometries[geomIndex] : geometryMaybeCollection;\n      if (geometry === null) continue;\n      coords = geometry.coordinates;\n      var geomType = geometry.type;\n      wrapShrink = excludeWrapCoord && (geomType === \"Polygon\" || geomType === \"MultiPolygon\") ? 1 : 0;\n      switch (geomType) {\n        case null:\n          break;\n        case \"Point\":\n          if (callback(\n            coords,\n            coordIndex,\n            featureIndex,\n            multiFeatureIndex,\n            geometryIndex\n          ) === false)\n            return false;\n          coordIndex++;\n          multiFeatureIndex++;\n          break;\n        case \"LineString\":\n        case \"MultiPoint\":\n          for (j = 0; j < coords.length; j++) {\n            if (callback(\n              coords[j],\n              coordIndex,\n              featureIndex,\n              multiFeatureIndex,\n              geometryIndex\n            ) === false)\n              return false;\n            coordIndex++;\n            if (geomType === \"MultiPoint\") multiFeatureIndex++;\n          }\n          if (geomType === \"LineString\") multiFeatureIndex++;\n          break;\n        case \"Polygon\":\n        case \"MultiLineString\":\n          for (j = 0; j < coords.length; j++) {\n            for (k = 0; k < coords[j].length - wrapShrink; k++) {\n              if (callback(\n                coords[j][k],\n                coordIndex,\n                featureIndex,\n                multiFeatureIndex,\n                geometryIndex\n              ) === false)\n                return false;\n              coordIndex++;\n            }\n            if (geomType === \"MultiLineString\") multiFeatureIndex++;\n            if (geomType === \"Polygon\") geometryIndex++;\n          }\n          if (geomType === \"Polygon\") multiFeatureIndex++;\n          break;\n        case \"MultiPolygon\":\n          for (j = 0; j < coords.length; j++) {\n            geometryIndex = 0;\n            for (k = 0; k < coords[j].length; k++) {\n              for (l = 0; l < coords[j][k].length - wrapShrink; l++) {\n                if (callback(\n                  coords[j][k][l],\n                  coordIndex,\n                  featureIndex,\n                  multiFeatureIndex,\n                  geometryIndex\n                ) === false)\n                  return false;\n                coordIndex++;\n              }\n              geometryIndex++;\n            }\n            multiFeatureIndex++;\n          }\n          break;\n        case \"GeometryCollection\":\n          for (j = 0; j < geometry.geometries.length; j++)\n            if (coordEach(geometry.geometries[j], callback, excludeWrapCoord) === false)\n              return false;\n          break;\n        default:\n          throw new Error(\"Unknown Geometry Type\");\n      }\n    }\n  }\n}\nfunction coordReduce(geojson, callback, initialValue, excludeWrapCoord) {\n  var previousValue = initialValue;\n  coordEach(\n    geojson,\n    function(currentCoord, coordIndex, featureIndex, multiFeatureIndex, geometryIndex) {\n      if (coordIndex === 0 && initialValue === void 0)\n        previousValue = currentCoord;\n      else\n        previousValue = callback(\n          previousValue,\n          currentCoord,\n          coordIndex,\n          featureIndex,\n          multiFeatureIndex,\n          geometryIndex\n        );\n    },\n    excludeWrapCoord\n  );\n  return previousValue;\n}\nfunction propEach(geojson, callback) {\n  var i;\n  switch (geojson.type) {\n    case \"FeatureCollection\":\n      for (i = 0; i < geojson.features.length; i++) {\n        if (callback(geojson.features[i].properties, i) === false) break;\n      }\n      break;\n    case \"Feature\":\n      callback(geojson.properties, 0);\n      break;\n  }\n}\nfunction propReduce(geojson, callback, initialValue) {\n  var previousValue = initialValue;\n  propEach(geojson, function(currentProperties, featureIndex) {\n    if (featureIndex === 0 && initialValue === void 0)\n      previousValue = currentProperties;\n    else\n      previousValue = callback(previousValue, currentProperties, featureIndex);\n  });\n  return previousValue;\n}\nfunction featureEach(geojson, callback) {\n  if (geojson.type === \"Feature\") {\n    callback(geojson, 0);\n  } else if (geojson.type === \"FeatureCollection\") {\n    for (var i = 0; i < geojson.features.length; i++) {\n      if (callback(geojson.features[i], i) === false) break;\n    }\n  }\n}\nfunction featureReduce(geojson, callback, initialValue) {\n  var previousValue = initialValue;\n  featureEach(geojson, function(currentFeature, featureIndex) {\n    if (featureIndex === 0 && initialValue === void 0)\n      previousValue = currentFeature;\n    else previousValue = callback(previousValue, currentFeature, featureIndex);\n  });\n  return previousValue;\n}\nfunction coordAll(geojson) {\n  var coords = [];\n  coordEach(geojson, function(coord) {\n    coords.push(coord);\n  });\n  return coords;\n}\nfunction geomEach(geojson, callback) {\n  var i, j, g, geometry, stopG, geometryMaybeCollection, isGeometryCollection, featureProperties, featureBBox, featureId, featureIndex = 0, isFeatureCollection = geojson.type === \"FeatureCollection\", isFeature = geojson.type === \"Feature\", stop = isFeatureCollection ? geojson.features.length : 1;\n  for (i = 0; i < stop; i++) {\n    geometryMaybeCollection = isFeatureCollection ? geojson.features[i].geometry : isFeature ? geojson.geometry : geojson;\n    featureProperties = isFeatureCollection ? geojson.features[i].properties : isFeature ? geojson.properties : {};\n    featureBBox = isFeatureCollection ? geojson.features[i].bbox : isFeature ? geojson.bbox : void 0;\n    featureId = isFeatureCollection ? geojson.features[i].id : isFeature ? geojson.id : void 0;\n    isGeometryCollection = geometryMaybeCollection ? geometryMaybeCollection.type === \"GeometryCollection\" : false;\n    stopG = isGeometryCollection ? geometryMaybeCollection.geometries.length : 1;\n    for (g = 0; g < stopG; g++) {\n      geometry = isGeometryCollection ? geometryMaybeCollection.geometries[g] : geometryMaybeCollection;\n      if (geometry === null) {\n        if (callback(\n          null,\n          featureIndex,\n          featureProperties,\n          featureBBox,\n          featureId\n        ) === false)\n          return false;\n        continue;\n      }\n      switch (geometry.type) {\n        case \"Point\":\n        case \"LineString\":\n        case \"MultiPoint\":\n        case \"Polygon\":\n        case \"MultiLineString\":\n        case \"MultiPolygon\": {\n          if (callback(\n            geometry,\n            featureIndex,\n            featureProperties,\n            featureBBox,\n            featureId\n          ) === false)\n            return false;\n          break;\n        }\n        case \"GeometryCollection\": {\n          for (j = 0; j < geometry.geometries.length; j++) {\n            if (callback(\n              geometry.geometries[j],\n              featureIndex,\n              featureProperties,\n              featureBBox,\n              featureId\n            ) === false)\n              return false;\n          }\n          break;\n        }\n        default:\n          throw new Error(\"Unknown Geometry Type\");\n      }\n    }\n    featureIndex++;\n  }\n}\nfunction geomReduce(geojson, callback, initialValue) {\n  var previousValue = initialValue;\n  geomEach(\n    geojson,\n    function(currentGeometry, featureIndex, featureProperties, featureBBox, featureId) {\n      if (featureIndex === 0 && initialValue === void 0)\n        previousValue = currentGeometry;\n      else\n        previousValue = callback(\n          previousValue,\n          currentGeometry,\n          featureIndex,\n          featureProperties,\n          featureBBox,\n          featureId\n        );\n    }\n  );\n  return previousValue;\n}\nfunction flattenEach(geojson, callback) {\n  geomEach(geojson, function(geometry, featureIndex, properties, bbox, id) {\n    var type = geometry === null ? null : geometry.type;\n    switch (type) {\n      case null:\n      case \"Point\":\n      case \"LineString\":\n      case \"Polygon\":\n        if (callback(\n          feature(geometry, properties, { bbox, id }),\n          featureIndex,\n          0\n        ) === false)\n          return false;\n        return;\n    }\n    var geomType;\n    switch (type) {\n      case \"MultiPoint\":\n        geomType = \"Point\";\n        break;\n      case \"MultiLineString\":\n        geomType = \"LineString\";\n        break;\n      case \"MultiPolygon\":\n        geomType = \"Polygon\";\n        break;\n    }\n    for (var multiFeatureIndex = 0; multiFeatureIndex < geometry.coordinates.length; multiFeatureIndex++) {\n      var coordinate = geometry.coordinates[multiFeatureIndex];\n      var geom = {\n        type: geomType,\n        coordinates: coordinate\n      };\n      if (callback(feature(geom, properties), featureIndex, multiFeatureIndex) === false)\n        return false;\n    }\n  });\n}\nfunction flattenReduce(geojson, callback, initialValue) {\n  var previousValue = initialValue;\n  flattenEach(\n    geojson,\n    function(currentFeature, featureIndex, multiFeatureIndex) {\n      if (featureIndex === 0 && multiFeatureIndex === 0 && initialValue === void 0)\n        previousValue = currentFeature;\n      else\n        previousValue = callback(\n          previousValue,\n          currentFeature,\n          featureIndex,\n          multiFeatureIndex\n        );\n    }\n  );\n  return previousValue;\n}\nfunction segmentEach(geojson, callback) {\n  flattenEach(geojson, function(feature2, featureIndex, multiFeatureIndex) {\n    var segmentIndex = 0;\n    if (!feature2.geometry) return;\n    var type = feature2.geometry.type;\n    if (type === \"Point\" || type === \"MultiPoint\") return;\n    var previousCoords;\n    var previousFeatureIndex = 0;\n    var previousMultiIndex = 0;\n    var prevGeomIndex = 0;\n    if (coordEach(\n      feature2,\n      function(currentCoord, coordIndex, featureIndexCoord, multiPartIndexCoord, geometryIndex) {\n        if (previousCoords === void 0 || featureIndex > previousFeatureIndex || multiPartIndexCoord > previousMultiIndex || geometryIndex > prevGeomIndex) {\n          previousCoords = currentCoord;\n          previousFeatureIndex = featureIndex;\n          previousMultiIndex = multiPartIndexCoord;\n          prevGeomIndex = geometryIndex;\n          segmentIndex = 0;\n          return;\n        }\n        var currentSegment = lineString(\n          [previousCoords, currentCoord],\n          feature2.properties\n        );\n        if (callback(\n          currentSegment,\n          featureIndex,\n          multiFeatureIndex,\n          geometryIndex,\n          segmentIndex\n        ) === false)\n          return false;\n        segmentIndex++;\n        previousCoords = currentCoord;\n      }\n    ) === false)\n      return false;\n  });\n}\nfunction segmentReduce(geojson, callback, initialValue) {\n  var previousValue = initialValue;\n  var started = false;\n  segmentEach(\n    geojson,\n    function(currentSegment, featureIndex, multiFeatureIndex, geometryIndex, segmentIndex) {\n      if (started === false && initialValue === void 0)\n        previousValue = currentSegment;\n      else\n        previousValue = callback(\n          previousValue,\n          currentSegment,\n          featureIndex,\n          multiFeatureIndex,\n          geometryIndex,\n          segmentIndex\n        );\n      started = true;\n    }\n  );\n  return previousValue;\n}\nfunction lineEach(geojson, callback) {\n  if (!geojson) throw new Error(\"geojson is required\");\n  flattenEach(geojson, function(feature2, featureIndex, multiFeatureIndex) {\n    if (feature2.geometry === null) return;\n    var type = feature2.geometry.type;\n    var coords = feature2.geometry.coordinates;\n    switch (type) {\n      case \"LineString\":\n        if (callback(feature2, featureIndex, multiFeatureIndex, 0, 0) === false)\n          return false;\n        break;\n      case \"Polygon\":\n        for (var geometryIndex = 0; geometryIndex < coords.length; geometryIndex++) {\n          if (callback(\n            lineString(coords[geometryIndex], feature2.properties),\n            featureIndex,\n            multiFeatureIndex,\n            geometryIndex\n          ) === false)\n            return false;\n        }\n        break;\n    }\n  });\n}\nfunction lineReduce(geojson, callback, initialValue) {\n  var previousValue = initialValue;\n  lineEach(\n    geojson,\n    function(currentLine, featureIndex, multiFeatureIndex, geometryIndex) {\n      if (featureIndex === 0 && initialValue === void 0)\n        previousValue = currentLine;\n      else\n        previousValue = callback(\n          previousValue,\n          currentLine,\n          featureIndex,\n          multiFeatureIndex,\n          geometryIndex\n        );\n    }\n  );\n  return previousValue;\n}\nfunction findSegment(geojson, options) {\n  options = options || {};\n  if (!isObject(options)) throw new Error(\"options is invalid\");\n  var featureIndex = options.featureIndex || 0;\n  var multiFeatureIndex = options.multiFeatureIndex || 0;\n  var geometryIndex = options.geometryIndex || 0;\n  var segmentIndex = options.segmentIndex || 0;\n  var properties = options.properties;\n  var geometry;\n  switch (geojson.type) {\n    case \"FeatureCollection\":\n      if (featureIndex < 0)\n        featureIndex = geojson.features.length + featureIndex;\n      properties = properties || geojson.features[featureIndex].properties;\n      geometry = geojson.features[featureIndex].geometry;\n      break;\n    case \"Feature\":\n      properties = properties || geojson.properties;\n      geometry = geojson.geometry;\n      break;\n    case \"Point\":\n    case \"MultiPoint\":\n      return null;\n    case \"LineString\":\n    case \"Polygon\":\n    case \"MultiLineString\":\n    case \"MultiPolygon\":\n      geometry = geojson;\n      break;\n    default:\n      throw new Error(\"geojson is invalid\");\n  }\n  if (geometry === null) return null;\n  var coords = geometry.coordinates;\n  switch (geometry.type) {\n    case \"Point\":\n    case \"MultiPoint\":\n      return null;\n    case \"LineString\":\n      if (segmentIndex < 0) segmentIndex = coords.length + segmentIndex - 1;\n      return lineString(\n        [coords[segmentIndex], coords[segmentIndex + 1]],\n        properties,\n        options\n      );\n    case \"Polygon\":\n      if (geometryIndex < 0) geometryIndex = coords.length + geometryIndex;\n      if (segmentIndex < 0)\n        segmentIndex = coords[geometryIndex].length + segmentIndex - 1;\n      return lineString(\n        [\n          coords[geometryIndex][segmentIndex],\n          coords[geometryIndex][segmentIndex + 1]\n        ],\n        properties,\n        options\n      );\n    case \"MultiLineString\":\n      if (multiFeatureIndex < 0)\n        multiFeatureIndex = coords.length + multiFeatureIndex;\n      if (segmentIndex < 0)\n        segmentIndex = coords[multiFeatureIndex].length + segmentIndex - 1;\n      return lineString(\n        [\n          coords[multiFeatureIndex][segmentIndex],\n          coords[multiFeatureIndex][segmentIndex + 1]\n        ],\n        properties,\n        options\n      );\n    case \"MultiPolygon\":\n      if (multiFeatureIndex < 0)\n        multiFeatureIndex = coords.length + multiFeatureIndex;\n      if (geometryIndex < 0)\n        geometryIndex = coords[multiFeatureIndex].length + geometryIndex;\n      if (segmentIndex < 0)\n        segmentIndex = coords[multiFeatureIndex][geometryIndex].length - segmentIndex - 1;\n      return lineString(\n        [\n          coords[multiFeatureIndex][geometryIndex][segmentIndex],\n          coords[multiFeatureIndex][geometryIndex][segmentIndex + 1]\n        ],\n        properties,\n        options\n      );\n  }\n  throw new Error(\"geojson is invalid\");\n}\nfunction findPoint(geojson, options) {\n  options = options || {};\n  if (!isObject(options)) throw new Error(\"options is invalid\");\n  var featureIndex = options.featureIndex || 0;\n  var multiFeatureIndex = options.multiFeatureIndex || 0;\n  var geometryIndex = options.geometryIndex || 0;\n  var coordIndex = options.coordIndex || 0;\n  var properties = options.properties;\n  var geometry;\n  switch (geojson.type) {\n    case \"FeatureCollection\":\n      if (featureIndex < 0)\n        featureIndex = geojson.features.length + featureIndex;\n      properties = properties || geojson.features[featureIndex].properties;\n      geometry = geojson.features[featureIndex].geometry;\n      break;\n    case \"Feature\":\n      properties = properties || geojson.properties;\n      geometry = geojson.geometry;\n      break;\n    case \"Point\":\n    case \"MultiPoint\":\n      return null;\n    case \"LineString\":\n    case \"Polygon\":\n    case \"MultiLineString\":\n    case \"MultiPolygon\":\n      geometry = geojson;\n      break;\n    default:\n      throw new Error(\"geojson is invalid\");\n  }\n  if (geometry === null) return null;\n  var coords = geometry.coordinates;\n  switch (geometry.type) {\n    case \"Point\":\n      return point(coords, properties, options);\n    case \"MultiPoint\":\n      if (multiFeatureIndex < 0)\n        multiFeatureIndex = coords.length + multiFeatureIndex;\n      return point(coords[multiFeatureIndex], properties, options);\n    case \"LineString\":\n      if (coordIndex < 0) coordIndex = coords.length + coordIndex;\n      return point(coords[coordIndex], properties, options);\n    case \"Polygon\":\n      if (geometryIndex < 0) geometryIndex = coords.length + geometryIndex;\n      if (coordIndex < 0)\n        coordIndex = coords[geometryIndex].length + coordIndex;\n      return point(coords[geometryIndex][coordIndex], properties, options);\n    case \"MultiLineString\":\n      if (multiFeatureIndex < 0)\n        multiFeatureIndex = coords.length + multiFeatureIndex;\n      if (coordIndex < 0)\n        coordIndex = coords[multiFeatureIndex].length + coordIndex;\n      return point(coords[multiFeatureIndex][coordIndex], properties, options);\n    case \"MultiPolygon\":\n      if (multiFeatureIndex < 0)\n        multiFeatureIndex = coords.length + multiFeatureIndex;\n      if (geometryIndex < 0)\n        geometryIndex = coords[multiFeatureIndex].length + geometryIndex;\n      if (coordIndex < 0)\n        coordIndex = coords[multiFeatureIndex][geometryIndex].length - coordIndex;\n      return point(\n        coords[multiFeatureIndex][geometryIndex][coordIndex],\n        properties,\n        options\n      );\n  }\n  throw new Error(\"geojson is invalid\");\n}\nexport {\n  coordAll,\n  coordEach,\n  coordReduce,\n  featureEach,\n  featureReduce,\n  findPoint,\n  findSegment,\n  flattenEach,\n  flattenReduce,\n  geomEach,\n  geomReduce,\n  lineEach,\n  lineReduce,\n  propEach,\n  propReduce,\n  segmentEach,\n  segmentReduce\n};\n//# sourceMappingURL=index.js.map","// index.ts\nimport {\n  lineString,\n  multiLineString,\n  multiPolygon,\n  polygon\n} from \"@turf/helpers\";\nimport { getGeom } from \"@turf/invariant\";\n\n// lib/lineclip.ts\nfunction lineclip(points, bbox, result) {\n  var len = points.length, codeA = bitCode(points[0], bbox), part = [], i, codeB, lastCode;\n  let a;\n  let b;\n  if (!result) result = [];\n  for (i = 1; i < len; i++) {\n    a = points[i - 1];\n    b = points[i];\n    codeB = lastCode = bitCode(b, bbox);\n    while (true) {\n      if (!(codeA | codeB)) {\n        part.push(a);\n        if (codeB !== lastCode) {\n          part.push(b);\n          if (i < len - 1) {\n            result.push(part);\n            part = [];\n          }\n        } else if (i === len - 1) {\n          part.push(b);\n        }\n        break;\n      } else if (codeA & codeB) {\n        break;\n      } else if (codeA) {\n        a = intersect(a, b, codeA, bbox);\n        codeA = bitCode(a, bbox);\n      } else {\n        b = intersect(a, b, codeB, bbox);\n        codeB = bitCode(b, bbox);\n      }\n    }\n    codeA = lastCode;\n  }\n  if (part.length) result.push(part);\n  return result;\n}\nfunction polygonclip(points, bbox) {\n  var result, edge, prev, prevInside, i, p, inside;\n  for (edge = 1; edge <= 8; edge *= 2) {\n    result = [];\n    prev = points[points.length - 1];\n    prevInside = !(bitCode(prev, bbox) & edge);\n    for (i = 0; i < points.length; i++) {\n      p = points[i];\n      inside = !(bitCode(p, bbox) & edge);\n      if (inside !== prevInside) result.push(intersect(prev, p, edge, bbox));\n      if (inside) result.push(p);\n      prev = p;\n      prevInside = inside;\n    }\n    points = result;\n    if (!points.length) break;\n  }\n  return result;\n}\nfunction intersect(a, b, edge, bbox) {\n  return edge & 8 ? [a[0] + (b[0] - a[0]) * (bbox[3] - a[1]) / (b[1] - a[1]), bbox[3]] : edge & 4 ? [a[0] + (b[0] - a[0]) * (bbox[1] - a[1]) / (b[1] - a[1]), bbox[1]] : edge & 2 ? [bbox[2], a[1] + (b[1] - a[1]) * (bbox[2] - a[0]) / (b[0] - a[0])] : edge & 1 ? [bbox[0], a[1] + (b[1] - a[1]) * (bbox[0] - a[0]) / (b[0] - a[0])] : null;\n}\nfunction bitCode(p, bbox) {\n  var code = 0;\n  if (p[0] < bbox[0]) code |= 1;\n  else if (p[0] > bbox[2]) code |= 2;\n  if (p[1] < bbox[1]) code |= 4;\n  else if (p[1] > bbox[3]) code |= 8;\n  return code;\n}\n\n// index.ts\nfunction bboxClip(feature, bbox) {\n  const geom = getGeom(feature);\n  const type = geom.type;\n  const properties = feature.type === \"Feature\" ? feature.properties : {};\n  let coords = geom.coordinates;\n  switch (type) {\n    case \"LineString\":\n    case \"MultiLineString\": {\n      const lines = [];\n      if (type === \"LineString\") {\n        coords = [coords];\n      }\n      coords.forEach((line) => {\n        lineclip(line, bbox, lines);\n      });\n      if (lines.length === 1) {\n        return lineString(lines[0], properties);\n      }\n      return multiLineString(lines, properties);\n    }\n    case \"Polygon\":\n      return polygon(clipPolygon(coords, bbox), properties);\n    case \"MultiPolygon\":\n      return multiPolygon(\n        coords.map((poly) => {\n          return clipPolygon(poly, bbox);\n        }),\n        properties\n      );\n    default:\n      throw new Error(\"geometry \" + type + \" not supported\");\n  }\n}\nfunction clipPolygon(rings, bbox) {\n  const outRings = [];\n  for (const ring of rings) {\n    const clipped = polygonclip(ring, bbox);\n    if (clipped.length > 0) {\n      if (clipped[0][0] !== clipped[clipped.length - 1][0] || clipped[0][1] !== clipped[clipped.length - 1][1]) {\n        clipped.push(clipped[0]);\n      }\n      if (clipped.length >= 4) {\n        outRings.push(clipped);\n      }\n    }\n  }\n  return outRings;\n}\nvar turf_bbox_clip_default = bboxClip;\nexport {\n  bboxClip,\n  turf_bbox_clip_default as default\n};\n//# sourceMappingURL=index.js.map","import polylabel from 'polylabel'\nimport { area as turfArea } from '@turf/area'\nimport { distance as turfDistance } from '@turf/distance'\nimport { point as TurfPoint, polygon as TurfPolygon, multiPolygon as TurfMultiPolygon } from '@turf/helpers'\nimport { bboxClip as TurfBboxClip } from '@turf/bbox-clip'\nimport { getFocusBounds } from '../../lib/viewport'\nimport { defaults } from './constants'\n\nfunction getPaddedBounds () {\n  const { map } = this\n  const padding = map.getPadding()\n  const bounds = map.getBounds()\n\n  // Get the pixel coordinates for the current bounds\n  const sw = map.project([bounds.getWest(), bounds.getSouth()])\n  const ne = map.project([bounds.getEast(), bounds.getNorth()])\n\n  // Adjust for padding\n  sw.x += padding.left\n  sw.y -= padding.bottom\n  ne.x -= padding.right\n  ne.y += padding.top\n\n  // Convert back to geographical coordinates\n  const paddedSW = map.unproject(sw)\n  const paddedNE = map.unproject(ne)\n\n  // Create new bounds\n  return [[paddedSW.lng, paddedSW.lat], [paddedNE.lng, paddedNE.lat]]\n}\n\nfunction addFeatureProperties (features) {\n  const { map } = this\n  return features.map(f => {\n    const { lng, lat } = map.getCenter()\n    const coord = f.geometry.type === 'Polygon' ? polylabel(f.geometry.coordinates, 0.00001) : f.geometry.coordinates\n    const p1 = new TurfPoint([coord[0], coord[1]])\n    const p2 = new TurfPoint([lng, lat])\n    const distance = turfDistance(p1, p2, { units: 'metres' })\n    return {\n      ...f.properties,\n      id: f.properties.id || f.id,\n      geometryType: f.geometry.type,\n      coord,\n      distance\n    }\n  })\n}\n\nfunction intersectFeatures (bounds, features) {\n  features = features.map(f => {\n    if (['Polygon', 'MultiPolygon'].includes(f.geometry.type)) {\n      const polygon = f.geometry.type === 'Polygon' ? new TurfPolygon(f.geometry.coordinates) : new TurfMultiPolygon(f.geometry.coordinates)\n      const clipped = TurfBboxClip(polygon, bounds)\n      // Remove empty rings\n      clipped.geometry.coordinates = clipped.geometry.coordinates.filter(c => c.length)\n      // const clippedGeometry = martinez.intersection(boundsPolygon.geometry.coordinates, f.geometry.coordinates)\n      f.geometry = clipped.geometry\n    }\n    return f\n  })\n  return features\n}\n\nfunction combineFeatures (features) {\n  const combined = []\n  features.forEach(f => {\n    const group = combined.find(c => c.length && ((f.id && f.id === c[0].id) || (f.properties.id && f.properties.id === c[0].properties.id)))\n    if (f.geometry.type === 'MultiPolygon') {\n      // Get largest single polygon, outer shape (excluding holes) and add area\n      const parts = f.geometry.coordinates.map(c => {\n        const polygon = new TurfPolygon([c[0]])\n        polygon.properties = { area: turfArea(polygon) }\n        return polygon\n      })\n      const largest = parts.find(p => p.properties.area === Math.max(...parts.map(b => b.properties.area)))\n      f.geometry = largest.geometry\n      f.properties.area = largest.properties.area\n    } else if (f.geometry.type === 'Polygon') {\n      // Get out shape (excluding holes) and add area\n      const polygon = new TurfPolygon([f.geometry.coordinates[0]])\n      f.properties.area = turfArea(polygon)\n      f.geometry = polygon.geometry\n    } else {\n      f.properties.area = 0\n    }\n    group?.push(f) || combined.push([f])\n  })\n  // Return largest single polygon\n  return combined.map(g => g.find(f => f.properties.area === Math.max(...g.map(b => b.properties.area))))\n}\n\nfunction getViewport () {\n  const { map } = this\n  let bounds = getPaddedBounds.bind(this)()\n  bounds = bounds.flat(1).map(n => parseFloat(n.toFixed(defaults.PRECISION)))\n  let center = map.getCenter()\n  let zoom = map.getZoom()\n  center = center.toArray().map(n => parseFloat(n.toFixed(defaults.PRECISION)))\n  zoom = parseFloat(zoom.toFixed(defaults.PRECISION))\n  const isMaxZoom = map.getZoom() >= map.getMaxZoom()\n  const isMinZoom = map.getZoom() <= map.getMinZoom()\n\n  return {\n    bounds,\n    center,\n    zoom,\n    isMaxZoom,\n    isMinZoom\n  }\n}\n\nexport function addMapHoverBehaviour () {\n  const { map, featureLayers, labelLayers } = this\n\n  // Toggle cursor style for features\n  map.on('mousemove', [...featureLayers, ...labelLayers], e => {\n    const features = map.queryRenderedFeatures(e.point, { layers: [...featureLayers, ...labelLayers] })\n    const isFeature = !e.originalEvent.altKey && features && !!features.find(f => featureLayers.includes(f.layer.id))\n    const isLabel = e.originalEvent.altKey && features && !!features.find(f => labelLayers.includes(f.layer.id))\n    map.getCanvas().style.cursor = isFeature || isLabel ? 'pointer' : ''\n  })\n\n  // Revert cursor on mouseout\n  map.on('mouseout', [...featureLayers, ...labelLayers], () => { map.getCanvas().style.cursor = '' })\n}\n\nexport async function getDetail (pixel) {\n  const { selectedLayers } = this\n  const viewport = getViewport.bind(this)()\n  const features = getFeatures.bind(this)(pixel)\n  const label = getHighlightedLabel.bind(this)()\n  const selectedId = getSelectedFeatureId.bind(this)(selectedLayers)\n\n  return {\n    ...viewport,\n    resultType: features.resultType,\n    coord: features.coord,\n    selectedId,\n    features,\n    label\n  }\n}\n\nexport function getFeatures (pixel) {\n  const { map, featureLayers, locationLayers, paddingBox, scale } = this\n  const bounds = getFocusBounds(paddingBox, scale)\n\n  // Get all visible feature and pixel layers\n  let layers = [...featureLayers, ...locationLayers]\n  layers = map.getStyle()?.layers.filter(l => layers.includes(l?.id) && l?.layout?.visibility !== 'none').map(l => l.id)\n\n  // Get all features at given pixel\n  let featuresAtPixel = map.queryRenderedFeatures(pixel, { layers })\n\n  featuresAtPixel = (featuresAtPixel.map(f => {\n    return {\n      ...f.properties,\n      id: f.properties.id || f.id,\n      name: f.properties.name,\n      layer: f.layer.id\n    }\n  }))\n\n  // Get all 'featureLayer' features in the viewport\n  const renderedFeaturesInViewport = map.queryRenderedFeatures(bounds, { layers: featureLayers })\n\n  // Get total 'featureLayer' features in viewport (May be more than 9)\n  const featuresTotal = Array.from(new Set(renderedFeaturesInViewport.map(f => f.properties.id || f.id))).length\n\n  // Get geometry that intersects bounds\n  const intersectingFeatures = intersectFeatures(getPaddedBounds.bind(this)().flat(1), renderedFeaturesInViewport)\n\n  // Split multi polygons and combine duplicate features\n  const polygonFeatures = featuresTotal <= defaults.MAX_FEATURES ? combineFeatures(intersectingFeatures) : []\n\n  // Add props and sort features\n  const featuresInViewport = addFeatureProperties.bind(this)(polygonFeatures).sort((a, b) => a.distance - b.distance)\n\n  // Get long lat of query\n  let lngLat\n  if (pixel) {\n    lngLat = map.unproject(pixel)\n    lngLat = [lngLat.lng, lngLat.lat]\n    lngLat = lngLat.map(c => Math.round(c * Math.pow(10, defaults.PRECISION)) / Math.pow(10, defaults.PRECISION))\n  }\n\n  // Set 'features' result type\n  const feature = featuresAtPixel.length ? featuresAtPixel[0] : null\n  const featureType = (featureLayers?.includes(feature?.layer) && 'feature') || (locationLayers?.includes(feature?.layer) && 'pixel')\n  const hasPixelLayers = layers?.some(l => locationLayers?.includes(l))\n  const resultType = featureType || (hasPixelLayers ? 'pixel' : null)\n\n  return {\n    resultType,\n    items: featuresAtPixel,\n    featuresTotal,\n    featuresInViewport,\n    isFeaturesInMap: !!layers?.length,\n    isPixelFeaturesAtPixel: locationLayers?.includes(feature?.layer),\n    isPixelFeaturesInMap: hasPixelLayers,\n    coord: lngLat\n  }\n}\n\nexport function toggleSelectedFeature (id) {\n  const { map, selectedLayers } = this\n  if (map?.getStyle()) {\n    for (const layer of selectedLayers) {\n      map.setLayoutProperty(layer, 'visibility', id ? 'visible' : 'none')\n      map.setFilter(layer, [\n        'any',\n        ['==', ['id'], id || ''],\n        ['==', ['get', 'id'], id || '']\n      ])\n    }\n  }\n}\n\nexport function getHighlightedLabel () {\n  const { map } = this\n  const features = map.queryRenderedFeatures({ layers: ['label'] })\n  let text\n  if (features?.length) {\n    const label = map.getStyle()?.layers.find(l => l.id === 'label')?.layout['text-field']\n    text = `${label} (${features[0].properties.layer})`\n  }\n  return text\n}\n\nexport function getSelectedFeatureId (selectedLayers) {\n  const { map } = this\n  const features = map.queryRenderedFeatures({ layers: selectedLayers })\n  return features.length ? (features[0].properties?.id || features[0]?.id) : null\n}\n\nexport function getLabel (pixel) {\n  const { map, labelLayers } = this\n  const feature = map.queryRenderedFeatures(pixel, { layers: labelLayers })[0]\n  return feature\n}\n\nexport function getLabels () {\n  const { map, paddingBox, scale } = this\n  const bounds = getFocusBounds(paddingBox, scale)\n  const features = map.queryRenderedFeatures(bounds, { layers: this.labelLayers })\n  const labels = features.map(f => {\n    let pixel = f.geometry.type === 'Point' && map.project(f.geometry.coordinates)\n    if (f.geometry.type !== 'Point') {\n      const coordinates = f.geometry.coordinates.flat(f.geometry.type === 'MultiLineString' ? 1 : 0)\n      const pixels = coordinates.map(c => map.project(c))\n      const xS = pixels.map(p => p.x)\n      const yS = pixels.map(p => p.y)\n      const centerX = ((Math.max(...xS) - Math.min(...xS)) / 2) + Math.min(...xS)\n      const centerY = ((Math.max(...yS) - Math.min(...yS)) / 2) + Math.min(...yS)\n      pixel = { x: centerX, y: centerY }\n    }\n    return {\n      feature: f,\n      pixel: [pixel.x, pixel.y]\n    }\n  })\n  return labels\n}\n","export const locationMarkerHTML = () => {\n  const el = document.createElement('div')\n  el.className = 'fm-c-marker fm-c-marker--location'\n  el.innerHTML = '<div class=\"fm-c-marker__inner\"><svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" fill=\"currentColor\"><circle cx=\"10\" cy=\"10\" r=\"8\" stroke=\"#fff\" stroke-width=\"3\"/></svg></div>'\n  return el\n}\n\nexport const targetMarkerHTML = () => {\n  const el = document.createElement('div')\n  el.className = 'fm-c-marker fm-c-marker--target'\n  el.innerHTML = `<div class=\"fm-c-marker__inner\">\n    <svg width=\"38\" height=\"38\" viewBox=\"0 0 38 38\" fill-rule=\"evenodd\" fill=\"currentColor\">\n      <path d=\"M5.035 20H1v-2h4.035C5.525 11.069 11.069 5.525 18 5.035V1h2v4.035c6.931.49 12.475 6.034 12.965 12.965H37v2h-4.035c-.49 6.931-6.034 12.475-12.965 12.965V37h-2v-4.035C11.069 32.475 5.525 26.931 5.035 20zM19 7A12.01 12.01 0 0 0 7 19a12.01 12.01 0 0 0 12 12 12.01 12.01 0 0 0 12-12A12.01 12.01 0 0 0 19 7zm0 10a2 2 0 1 1 0 4 2 2 0 1 1 0-4z\"/>\n      <path d=\"M5.035 20H1v-2h4.035a14.02 14.02 0 0 1 .246-1.8l1.96.399C7.083 17.375 7 18.178 7 19s.083 1.625.241 2.401l-1.96.399a14.02 14.02 0 0 1-.246-1.8zM20 5.035a14.02 14.02 0 0 1 1.8.246l-.399 1.96C20.625 7.083 19.822 7 19 7s-1.625.083-2.401.241l-.399-1.96a14.02 14.02 0 0 1 1.8-.246V1h2v4.035zm-2 27.93a14.02 14.02 0 0 1-1.8-.246l.399-1.96c.776.158 1.579.241 2.401.241s1.625-.083 2.401-.241l.399 1.96a14.02 14.02 0 0 1-1.8.246V37h-2v-4.035zM32.965 20a14.02 14.02 0 0 1-.246 1.8l-1.96-.399c.158-.776.241-1.579.241-2.401s-.083-1.625-.241-2.401l1.96-.399a14.02 14.02 0 0 1 .246 1.8H37v2h-4.035zM19 17a2 2 0 1 1 0 4 2 2 0 1 1 0-4zm3.8-9.385l.634-1.897a13.98 13.98 0 0 1 4.848 2.805l-1.327 1.496c-1.196-1.06-2.605-1.886-4.155-2.404zm5.181 3.43l1.496-1.327a13.98 13.98 0 0 1 2.805 4.848l-1.897.634c-.518-1.55-1.344-2.959-2.404-4.155zM30.385 22.8l1.897.634a13.98 13.98 0 0 1-2.805 4.848l-1.496-1.327c1.06-1.196 1.886-2.605 2.404-4.155zm-3.43 5.181l1.327 1.496a13.98 13.98 0 0 1-4.848 2.805l-.634-1.897c1.55-.518 2.959-1.344 4.155-2.404zM15.2 30.385l-.634 1.897a13.98 13.98 0 0 1-4.848-2.805l1.327-1.496c1.196 1.06 2.605 1.886 4.155 2.404zm-5.181-3.43l-1.496 1.327a13.98 13.98 0 0 1-2.805-4.848l1.897-.634c.518 1.55 1.344 2.959 2.404 4.155zM7.615 15.2l-1.897-.634a13.98 13.98 0 0 1 2.805-4.848l1.496 1.327c-1.06 1.196-1.886 2.605-2.404 4.155zm3.43-5.181L9.718 8.523a13.98 13.98 0 0 1 4.848-2.805l.634 1.897c-1.55.518-2.959 1.344-4.155 2.404z\"/>\n    </svg>\n  </div>`\n  return el\n}\n\nexport const shortcutMarkerHTML = (key) => {\n  const el = document.createElement('div')\n  el.className = 'fm-c-marker fm-c-marker--shortcut'\n  el.innerHTML = `<div class=\"fm-c-marker__inner\">${key}</div>`\n  return el\n}\n","import computedStyleToInlineStyle from 'computed-style-to-inline-style'\nimport { defaults } from './constants'\nimport { shortcutMarkerHTML } from './marker'\nimport { parseSVG } from '../../lib/symbols'\n\nconst SYMBOL_PLACEMENT = 'symbol-placement'\nconst TEXT_FIELD = 'text-field'\nconst SCALE_FACTOR_SMALL = 1.5\nconst SCALE_FACTOR_LARGE = 1.25\n\nexport function amendLineSymbolLayers () {\n  const { map } = this\n  const lineSymbolLayers = map.getStyle().layers.filter(l => l.layout && (SYMBOL_PLACEMENT in l.layout) && l.layout[SYMBOL_PLACEMENT] === 'line')\n  lineSymbolLayers.forEach(l => map.setLayoutProperty(l.id, SYMBOL_PLACEMENT, 'line-center'))\n}\n\nexport function addHighlightedLabelLayer () {\n  const { map } = this\n  const layers = map.getStyle().layers\n  this.labelLayers = layers.filter(l => l.id !== 'label' && l.layout ? l.layout[TEXT_FIELD] : null).map(l => l.id)\n  map.addSource('label', { type: 'geojson', data: { type: 'FeatureCollection', features: [] } })\n  map.addLayer({\n    id: 'label',\n    type: 'symbol',\n    source: 'label',\n    layout: {\n      'text-allow-overlap': true,\n      'text-ignore-placement': true\n    },\n    paint: {\n      'text-halo-width': 3,\n      'text-halo-blur': 1,\n      'text-opacity': 1\n    }\n  })\n}\n\nexport function addShortcutMarkers (features) {\n  const { map, shortcutMarkers } = this\n  const { Marker } = this.modules\n  shortcutMarkers.forEach(m => m.remove())\n  features.forEach((f, i) => {\n    const offset = f.geometryType === 'Point' ? [0, defaults.SHORTCUT_LABEL_OFFSET] : [0, 0]\n    shortcutMarkers.push(new Marker({ element: shortcutMarkerHTML(i + 1), offset }).setLngLat(f.coord).addTo(map))\n  })\n}\n\nexport function highlightLabel (feature) {\n  const { map, scale, style } = this\n\n  if (!map.style) {\n    return\n  }\n\n  if (feature) {\n    map.moveLayer('label')\n    map.getSource('label').setData({\n      type: 'Feature',\n      geometry: feature.geometry,\n      properties: {\n        ...feature.properties,\n        layer: feature.layer.id\n      }\n    })\n    // Clone layout properties\n    const textScale = scale === 1 ? SCALE_FACTOR_SMALL : SCALE_FACTOR_LARGE\n    const textField = feature.layer.layout[TEXT_FIELD]\n    map.setLayoutProperty('label', SYMBOL_PLACEMENT, feature.layer.layout[SYMBOL_PLACEMENT])\n    map.setLayoutProperty('label', TEXT_FIELD, textField.sections ? textField.sections[0].text : textField)\n    map.setLayoutProperty('label', 'text-font', feature.layer.layout['text-font'])\n    map.setLayoutProperty('label', 'text-letter-spacing', feature.layer.layout['text-letter-spacing'])\n    map.setLayoutProperty('label', 'text-size', feature.layer.layout['text-size'] * textScale)\n    map.setLayoutProperty('label', 'text-anchor', feature.layer.layout['text-anchor'])\n    map.setLayoutProperty('label', 'text-justify', feature.layer.layout['text-justify'])\n    map.setLayoutProperty('label', 'text-offset', feature.layer.layout['text-offset']?.map(o => o / textScale))\n    // Clone paint properties\n    map.setPaintProperty('label', 'text-color', (style === 'dark' ? '#ffffff' : '#000000'))\n    map.setPaintProperty('label', 'text-halo-color', (style === 'dark' ? '#000000' : '#ffffff'))\n  } else {\n    map?.getSource('label')?.setData({\n      type: 'FeatureCollection',\n      features: []\n    })\n  }\n}\n\nexport function addSelectedLayers (layers, selectedId, isDarkBasemap) {\n  const { map } = this\n  const selectedLayers = []\n  for (const layer of layers) {\n    layer.id = `${layer.id}-selected`\n    layer.filter = ['==', 'id', selectedId || '']\n    if (layer.type === 'symbol') {\n      layer.layout['icon-image'] = ['concat', layer.layout['icon-image'], '-selected']\n    }\n    if (layer.type === 'fill') {\n      layer.paint = { 'line-color': isDarkBasemap ? '#ffffff' : '#0b0c0c', 'line-width': 2 }\n      layer.type = 'line'\n    }\n    if (map.getLayer(layer.id)) {\n      map.removeLayer(layer.id)\n    }\n    selectedLayers.push(layer.id)\n    setTimeout(() => map.addLayer(layer), 0)\n  }\n  return selectedLayers\n}\n\nexport function loadSymbols () {\n  let fn\n  if (this.symbols?.length) {\n    const { map, symbols, style } = this\n    const isDarkBasemap = ['dark', 'aerial'].includes(style.name)\n\n    fn = Promise.all(symbols.map(u => fetch(u))).then(responses =>\n      Promise.all(responses.map(r => r.text()))\n    ).then(texts => Promise.all(texts.map((t, i) => loadImage(getName(symbols[i]), t, map, isDarkBasemap))\n      .concat(texts.map((t, i) => loadImage(`${getName(symbols[i])}-selected`, t, map, isDarkBasemap)))\n    ))\n  }\n  return fn\n}\n\nconst getName = path => {\n  const extNumChars = 4\n  return path.split('\\\\').pop().split('/').pop().slice(0, -Math.abs(extNumChars))\n}\n\nconst loadImage = (name, text, map, isDarkBasemap) => {\n  const parsed = parseSVG(name, null, text, isDarkBasemap, 2)\n  const container = map.getCanvasContainer()\n  container.insertAdjacentHTML('beforeend', parsed)\n  const el = container.lastChild\n  computedStyleToInlineStyle(el, { recursive: true, properties: ['stroke', 'fill'] })\n  const base64 = 'data:image/svg+xml;base64,' + btoa(container.lastChild.outerHTML)\n  const img = document.createElement('img')\n  el?.remove()\n  return new Promise((resolve, reject) => {\n    img.onload = () => {\n      try {\n        if (map?.hasImage(name)) {\n          return\n        }\n        map.addImage(name, img)\n        resolve(img)\n      } catch (err) {\n        console.log(err)\n      }\n    }\n    img.onerror = reject\n    img.src = base64\n  })\n}\n","import { getDetail, addMapHoverBehaviour } from './query'\nimport { loadSymbols, addHighlightedLabelLayer, amendLineSymbolLayers, addShortcutMarkers, addSelectedLayers } from './symbols'\n\nexport const getResolution = (map) => {\n  const center = map.getCenter()\n  const zoom = map.getZoom()\n  const lat = center.lat\n  const EARTH_CIRCUMFERENCE = 40075016.686\n  const TILE_SIZE = 512\n  const scale = Math.pow(2, zoom)\n  const resolution = (EARTH_CIRCUMFERENCE * Math.cos((lat * Math.PI) / 180)) / (scale * TILE_SIZE)\n  return resolution\n}\n\nexport const getAttributions = (map) => {\n  const style = map.getStyle()\n  if (!style) {\n    return []\n  }\n\n  const currentZoom = map.getZoom()\n  const activeAttributions = new Set()\n\n  // Check each layer for visibility at current zoom\n  style.layers.forEach(layer => {\n    // Skip layers without a source\n    if (!layer.source) return\n\n    // Check if layer is visible based on zoom and visibility property\n    const minZoom = layer.minzoom !== undefined ? layer.minzoom : 0\n    const maxZoom = layer.maxzoom !== undefined ? layer.maxzoom : 24\n    const isVisible = currentZoom >= minZoom && currentZoom < maxZoom && (!layer.layout || layer.layout.visibility !== 'none')\n\n    // If layer is visible, get attribution from its source\n    if (isVisible) {\n      const source = style.sources[layer.source]\n      if (source && source.attribution) {\n        activeAttributions.add(source.attribution)\n      }\n    }\n  })\n\n  return Array.from(activeAttributions)\n}\n\nexport async function handleLoad () {\n  const { map } = this\n  await loadSymbols.bind(this)()\n  this.isLoaded = true\n  const resolution = getResolution(map)\n  const attributions = getAttributions(map)\n  this.dispatchEvent(new CustomEvent('load', {\n    detail: {\n      framework: { map },\n      resolution,\n      attributions\n    }\n  }))\n}\n\nexport async function handleStyleLoad () {\n  const { map } = this\n  // Store ref to baselayers when a new style is loaded\n  this.baseLayers = map.getStyle().layers\n  // Amend symbol-placement prop so labels have a coordinate\n  amendLineSymbolLayers.bind(this)()\n  // Add highlighted label layer and source\n  addHighlightedLabelLayer.bind(this)()\n  // Change cursor type on feature hover\n  addMapHoverBehaviour.bind(this)(this.featureLayers, this.labelLayers)\n  if (this.isLoaded) {\n    await loadSymbols.bind(this)()\n    this.dispatchEvent(new CustomEvent('style', {\n      detail: {\n        type: 'style'\n      }\n    }))\n  }\n}\n\nexport async function handleIdle () {\n  if (this.map) {\n    const { map, paddingBox, selectedId, scale } = this\n    const { offsetTop, offsetLeft, offsetWidth, offsetHeight } = paddingBox\n    const { offsetTop: parentOffsetTop, offsetLeft: parentOffsetLeft } = paddingBox.parentNode\n    const pixel = [offsetLeft + parentOffsetLeft + (offsetWidth / 2), offsetTop + parentOffsetTop + (offsetHeight / 2)].map(c => c / scale)\n    const detail = await getDetail.bind(this)(selectedId ? null : pixel)\n    const attributions = getAttributions(map)\n    addShortcutMarkers.bind(this)(detail?.features?.featuresInViewport)\n    this.dispatchEvent(new CustomEvent('update', {\n      detail: {\n        ...detail,\n        attributions\n      }\n    }))\n  }\n}\n\nexport async function handleMoveStart (e) {\n  this.hideLabel()\n  this.dispatchEvent(new CustomEvent('movestart', {\n    detail: {\n      isUserInitiated: e.isUserInitiated || !!e.originalEvent\n    }\n  }))\n}\n\nexport function handleMove () {\n  const { map } = this\n  const isMaxZoom = map.getZoom() >= map.getMaxZoom()\n  const isMinZoom = map.getZoom() <= map.getMinZoom()\n  const resolution = getResolution(map)\n  const attributions = getAttributions(map)\n\n  // Need to include maxBounds check as this can also constrain zoom\n  this.dispatchEvent(new CustomEvent('move', {\n    detail: {\n      isMaxZoom,\n      isMinZoom,\n      resolution,\n      attributions\n    }\n  }))\n}\n\nexport function handleStyleData (e) {\n  if (this.baseLayers.length) {\n    const { map, style, selectedId } = this\n    const featureLayers = e.target.getStyle().layers.filter(l => this.featureLayers.includes(l.id))\n    const selectedLayers = map.getStyle().layers.filter(l => l.id.includes('selected'))\n    if (selectedLayers.length !== featureLayers.length) {\n      const isDarkBasemap = ['dark', 'aerial'].includes(style.name)\n      this.selectedLayers = addSelectedLayers.bind(this)(featureLayers, selectedId, isDarkBasemap)\n    }\n  }\n}\n\nexport function handleError (err) {\n  console.log(err)\n}\n","import { handleLoad, handleMoveStart, handleMove, handleIdle, handleStyleData, handleStyleLoad, handleError } from './events'\nimport { toggleSelectedFeature, getDetail, getLabels, getLabel } from './query'\nimport { locationMarkerHTML, targetMarkerHTML } from './marker'\nimport { highlightLabel } from './symbols'\nimport { getFocusPadding, spatialNavigate, getScale } from '../../lib/viewport'\nimport { debounce } from '../../lib/debounce'\nimport { defaults, css } from './constants'\nimport { capabilities } from '../../lib/capabilities.js'\nimport { defaults as storeDefaults } from '../../store/constants.js'\n\nclass Provider extends EventTarget {\n  constructor ({ transformRequest, symbols }) {\n    super()\n    this.srid = 4326\n    this.capabilities = {\n      ...capabilities.default,\n      hasDraw: true,\n      hasSize: !!window.globalThis\n    }\n    this.transformRequest = transformRequest\n    this.symbols = symbols\n    this.baseLayers = []\n    this.selectedId = ''\n    this.selectedCoordinate = null\n    this.isLoaded = false\n  }\n\n  init (options) {\n    if (this.capabilities.isLatest) {\n      import(/* webpackChunkName: \"maplibre\", webpackExports: [\"Map\", \"Marker\"] */ 'maplibre-gl').then(module => {\n        this.addMap(module, options)\n      })\n    } else {\n      Promise.all([\n        import(/* webpackChunkName: \"maplibre-legacy\", webpackExports: [\"Map\", \"Marker\"] */ 'maplibre-gl-legacy'),\n        import(/* webpackChunkName: \"maplibre-legacy\", webpackExports: [\"install\"] */ 'resize-observer'),\n        import(/* webpackChunkName: \"maplibre-legacy\" */ 'array-flat-polyfill')\n      ]).then(promises => {\n        if (!window.ResizeObserver) {\n          promises[1].install()\n        }\n        this.addMap(promises[0], options)\n      })\n    }\n  }\n\n  remove () {\n    this.map?.remove()\n    this.map = null\n  }\n\n  addMap (module, options) {\n    const { container, paddingBox, bounds, maxBounds, center, zoom, minZoom, maxZoom, style, size, featureLayers, locationLayers, callBack } = options\n    const { Map: MaplibreMap, Marker } = module.default\n    const scale = getScale(size)\n\n    const map = new MaplibreMap({\n      ...options,\n      container,\n      style: style?.url,\n      maxBounds: maxBounds || storeDefaults.MAX_BOUNDS_4326,\n      bounds,\n      center,\n      zoom,\n      minZoom,\n      maxZoom,\n      fadeDuration: 0,\n      attributionControl: false,\n      dragRotate: false\n    })\n\n    // Set initial padding, bounds and center (*No option to set in constructor)\n    // map.showPadding = true\n    map.setPadding(getFocusPadding(paddingBox, scale))\n    if (bounds) {\n      map.fitBounds(bounds, { animate: false })\n    } else {\n      map.flyTo({ center, zoom, animate: false })\n    }\n\n    // Disable rotation\n    map.touchZoomRotate.disableRotation()\n\n    // Overide device pixel ratio\n    if (map.setPixelRatio) {\n      map.setPixelRatio(window.devicePixelRatio * scale)\n    }\n\n    // Tidy up canvas\n    const canvas = map.getCanvas()\n    canvas.removeAttribute('role')\n    canvas.removeAttribute('tabindex')\n    canvas.removeAttribute('aria-label')\n    canvas.style.display = 'block'\n\n    this.container = container\n    this.map = map\n    this.featureLayers = featureLayers || []\n    this.locationLayers = locationLayers || []\n    this.selectedLayers = []\n    this.paddingBox = paddingBox\n    this.style = style\n    this.scale = scale\n\n    // Add markers\n    this.targetMarker = new Marker({ element: targetMarkerHTML() }).setLngLat([0, 0]).addTo(map)\n    this.locationMarker = new Marker({ element: locationMarkerHTML() }).setLngLat([0, 0]).addTo(map)\n    this.shortcutMarkers = []\n\n    // Return ref to dynamically loaded modules and framework functions\n    this.modules = { MaplibreMap, Marker }\n    this.framework = { map }\n\n    // Map ready event (first load)\n    map.on('load', handleLoad.bind(this))\n\n    // Map movestart\n    map.on('movestart', handleMoveStart.bind(this))\n\n    // Detect max/min zoom on move\n    map.on('move', handleMove.bind(this))\n\n    // Detect map layer addition\n    map.on('styledata', handleStyleData.bind(this))\n\n    // All render/changes/animations complete. Must debounce, min 500ms\n    const debounceHandleIdle = debounce(() => { handleIdle.bind(this)() }, defaults.DELAY)\n    map.on('idle', debounceHandleIdle)\n\n    // Map style change\n    map.on('style.load', handleStyleLoad.bind(this))\n\n    // Capture errors\n    map.on('error', handleError.bind(this))\n\n    // Implementation callback after initialisation\n    if (callBack) {\n      callBack(this)\n    }\n  }\n\n  getPixel (coord) {\n    let pixel\n    if (this.map && coord) {\n      pixel = this.map.project(coord)\n      pixel = [Math.round(pixel.x), Math.round(pixel.y)]\n    }\n    return pixel\n  }\n\n  panBy (offset, isUserInitiated = true) {\n    if (this.map) {\n      this.map.panBy(offset, { ...defaults.ANIMATION }, { isUserInitiated })\n    }\n  }\n\n  panTo (coord) {\n    this.map.flyTo({ center: coord, ...defaults.ANIMATION })\n  }\n\n  zoomIn () {\n    if (this.map) {\n      this.map.zoomIn(defaults.ANIMATION)\n    }\n  }\n\n  zoomOut () {\n    if (this.map) {\n      this.map.zoomOut(defaults.ANIMATION)\n    }\n  }\n\n  setStyle (style) {\n    this.style = style\n    this.map.setStyle(style.url, { diff: false })\n\n    // Udate draw style\n    this.draw?.setStyle?.()\n  }\n\n  setPadding (coord, isAnimate) {\n    if (this.map) {\n      const { map, paddingBox, scale } = this\n      const padding = getFocusPadding(paddingBox, scale)\n      // Search needs to set padding first before fitBounds\n      this.map.setPadding(padding || map.getPadding())\n      // Ease map to new when coord is obscured\n      coord && this.map.easeTo({ center: coord, animate: isAnimate, ...defaults.ANIMATION })\n    }\n  }\n\n  setSize (size) {\n    const scale = getScale(size)\n    this.scale = scale\n    this.setPadding()\n    if (this.map.setPixelRatio) {\n      this.map?.setPixelRatio(window.devicePixelRatio * scale)\n    }\n    setTimeout(() => {\n      this.map.resize()\n      this.dispatchEvent(new CustomEvent('style', {\n        detail: {\n          type: 'size'\n        }\n      }))\n    }, defaults.DELAY)\n  }\n\n  fitBounds (bounds, isAnimate = true) {\n    bounds = [[bounds[0], bounds[1]], [bounds[2], bounds[3]]]\n    this.map.fitBounds(bounds, { animate: isAnimate, linear: true, duration: defaults.ANIMATION.duration })\n  }\n\n  setCentre (coord, _zoom) {\n    if (this.map) {\n      this.map.flyTo({ center: coord, ...defaults.ANIMATION })\n    }\n  }\n\n  initDraw (options) {\n    import(/* webpackChunkName: \"maplibre-draw\" */ './draw.js').then(module => {\n      const Draw = module.default\n      this.draw = new Draw(this, options)\n    })\n  }\n\n  setTargetMarker (coord, hasData, isVisible) {\n    const { targetMarker } = this\n    if (targetMarker) {\n      targetMarker.setLngLat(coord || [0, 0])\n      const el = targetMarker.getElement() // addClassName not supported in v1.15\n      el.classList.toggle('fm-c-marker--has-data', hasData)\n      el.classList.toggle(css.MARKER_VISIBLE, isVisible && coord)\n    }\n  }\n\n  selectFeature (id) {\n    this.selectedId = id\n    toggleSelectedFeature.bind(this)(id)\n  }\n\n  selectCoordinate (coord) {\n    this.selectedCoordinate = coord\n  }\n\n  async queryFeature (id) {\n    if (id) {\n      const detail = await getDetail.bind(this)(null, false)\n      detail.features.items = [detail.features.items.find(f => f.id === id)]\n      this.dispatchEvent(new CustomEvent('mapquery', { detail }))\n    }\n  }\n\n  async queryPoint (point) {\n    const detail = await getDetail.bind(this)(point, this.selectedLayers)\n    this.hideLabel()\n    this.dispatchEvent(new CustomEvent('mapquery', {\n      detail: {\n        resultType: detail.features.resultType,\n        ...detail\n      }\n    }))\n  }\n\n  getGeoLocation (success, error) {\n    navigator.geolocation.getCurrentPosition(async (position) => {\n      let coord = [position.coords.longitude, position.coords.latitude]\n      coord = coord.map(n => parseFloat(n.toFixed(defaults.PRECISION)))\n      // const place = this.getNearest ? await this.getNearest(coord) : null\n      success(coord, null)\n    }, (err) => {\n      console.log(err)\n      error(err)\n    }, {\n      enableHighAccuracy: false\n    })\n  }\n\n  showLocation (coord) {\n    const { locationMarker } = this\n    locationMarker.setLngLat(coord).addClassName(css.MARKER_VISIBLE)\n  }\n\n  showNextLabel (pixel, direction) {\n    const labels = getLabels.bind(this)()\n    const { lng, lat } = this.map.getCenter()\n    const center = this.map.project([lng, lat])\n    const pixels = labels.map(c => c.pixel)\n    const index = spatialNavigate(direction, pixel || [center.x, center.y], pixels)\n    const feature = labels[index]?.feature\n    highlightLabel.bind(this)(feature)\n    return labels[index]?.pixel\n  }\n\n  showLabel (point) {\n    const feature = getLabel.bind(this)(point)\n    highlightLabel.bind(this)(feature)\n    return point\n  }\n\n  hideLabel () {\n    if (this.map) {\n      highlightLabel.bind(this)()\n    }\n  }\n}\n\nexport default Provider\n","export const defaults = {\n  PRECISION: 6,\n  ANIMATION: {\n    duration: 500,\n    curve: 0\n  },\n  DELAY: 300,\n  MAX_FEATURES: 9,\n  SHORTCUT_LABEL_OFFSET: -30\n}\n\nexport const css = {\n  MARKER_VISIBLE: 'fm-c-marker--visible'\n}\n","const { DOMParser } = window\n\nexport const parseSVG = (icon, fill, text, isDarkBasemap = false, scale = 1) => {\n  const isSelected = icon.includes('selected')\n  // let styled = text.replace(/#0f0|#00ff00|#0F0|#00FF00/g, isSelected ? isDarkBasemap ? '#ffffff' : '#0b0c0c' : 'transparent')\n  // styled = styled.replace(/#00f|#0000ff|#00F|#0000FF/g, isDarkBasemap ? '#162232' : '#ffffff')\n  const parser = new DOMParser()\n  const dom = parser.parseFromString(text, 'text/html')\n  const svg = dom.querySelector('svg')\n  // Add xmlns attribute and class to svg\n  // svg.setAttribute('xmlns', 'http://www.w3.org/2000/svg')\n  svg.classList.add('fm-c-symbol')\n  svg.classList.toggle('fm-c-symbol--selected', isSelected)\n  svg.classList.toggle('fm-c-symbol--dark', isDarkBasemap)\n  // Set svg height and width\n  const viewBox = svg.getAttribute('viewBox')\n  const width = parseInt(viewBox.split(' ')[2], 10) * scale\n  const height = parseInt(viewBox.split(' ')[3], 10) * scale\n  svg.setAttribute('width', width)\n  svg.setAttribute('height', height)\n  // Conditionally add fill\n  if (fill) {\n    svg.setAttribute('fill', fill)\n  }\n  // Add classnames\n  const olFill = svg.querySelectorAll('[fill=\"#0b0c0c\" i], [style*=\"fill:#0b0c0c\" i]')\n  const olStroke = svg.querySelectorAll('[stroke=\"#0b0c0c\" i], [style*=\"stroke:#0b0c0c\" i]')\n  olFill.forEach(n => n.classList.add('fm-c-symbol__ol-fill'))\n  olStroke.forEach(n => n.classList.add('fm-c-symbol__ol-stroke'))\n  const bgFill = svg.querySelectorAll('[fill=\"#fff\" i], [fill=\"#ffffff\" i], [style*=\"fill:#fff\" i], [style*=\"fill:#ffffff\" i]')\n  const bgStroke = svg.querySelectorAll('[stroke*=\"#fff\" i], [stroke*=\"#ffffff\" i], [style*=\"stroke:#fff\" i], [style*=\"stroke:#ffffff\" i]')\n  bgFill.forEach(n => n.classList.add('fm-c-symbol__bg-fill'))\n  bgStroke.forEach(n => n.classList.add('fm-c-symbol__bg-stroke'))\n  const fgFill = svg.querySelectorAll(':not(.fm-c-symbol__ol-fill):not(.fm-c-symbol__bg-fill)[fill], :not(.fm-c-symbol__ol-fill):not(.fm-c-symbol__bg-fill)[style*=\"fill\"]')\n  const fgStroke = svg.querySelectorAll(':not(.fm-c-symbol__ol-stroke):not(.fm-c-symbol__bg-stroke)[stroke], :not(.fm-c-symbol__ol-stroke):not(.fm-c-symbol__bg-stroke)[style*=\"stroke\"]')\n  fgFill.forEach(n => n.classList.add('fm-c-symbol__fg-fill'))\n  fgStroke.forEach(n => n.classList.add('fm-c-symbol__fg-stroke'))\n  return dom.body.innerHTML\n}\n","// index.ts\nimport { isNumber } from \"@turf/helpers\";\nfunction getCoord(coord) {\n  if (!coord) {\n    throw new Error(\"coord is required\");\n  }\n  if (!Array.isArray(coord)) {\n    if (coord.type === \"Feature\" && coord.geometry !== null && coord.geometry.type === \"Point\") {\n      return [...coord.geometry.coordinates];\n    }\n    if (coord.type === \"Point\") {\n      return [...coord.coordinates];\n    }\n  }\n  if (Array.isArray(coord) && coord.length >= 2 && !Array.isArray(coord[0]) && !Array.isArray(coord[1])) {\n    return [...coord];\n  }\n  throw new Error(\"coord must be GeoJSON Point or an Array of numbers\");\n}\nfunction getCoords(coords) {\n  if (Array.isArray(coords)) {\n    return coords;\n  }\n  if (coords.type === \"Feature\") {\n    if (coords.geometry !== null) {\n      return coords.geometry.coordinates;\n    }\n  } else {\n    if (coords.coordinates) {\n      return coords.coordinates;\n    }\n  }\n  throw new Error(\n    \"coords must be GeoJSON Feature, Geometry Object or an Array\"\n  );\n}\nfunction containsNumber(coordinates) {\n  if (coordinates.length > 1 && isNumber(coordinates[0]) && isNumber(coordinates[1])) {\n    return true;\n  }\n  if (Array.isArray(coordinates[0]) && coordinates[0].length) {\n    return containsNumber(coordinates[0]);\n  }\n  throw new Error(\"coordinates must only contain numbers\");\n}\nfunction geojsonType(value, type, name) {\n  if (!type || !name) {\n    throw new Error(\"type and name required\");\n  }\n  if (!value || value.type !== type) {\n    throw new Error(\n      \"Invalid input to \" + name + \": must be a \" + type + \", given \" + value.type\n    );\n  }\n}\nfunction featureOf(feature, type, name) {\n  if (!feature) {\n    throw new Error(\"No feature passed\");\n  }\n  if (!name) {\n    throw new Error(\".featureOf() requires a name\");\n  }\n  if (!feature || feature.type !== \"Feature\" || !feature.geometry) {\n    throw new Error(\n      \"Invalid input to \" + name + \", Feature with geometry required\"\n    );\n  }\n  if (!feature.geometry || feature.geometry.type !== type) {\n    throw new Error(\n      \"Invalid input to \" + name + \": must be a \" + type + \", given \" + feature.geometry.type\n    );\n  }\n}\nfunction collectionOf(featureCollection, type, name) {\n  if (!featureCollection) {\n    throw new Error(\"No featureCollection passed\");\n  }\n  if (!name) {\n    throw new Error(\".collectionOf() requires a name\");\n  }\n  if (!featureCollection || featureCollection.type !== \"FeatureCollection\") {\n    throw new Error(\n      \"Invalid input to \" + name + \", FeatureCollection required\"\n    );\n  }\n  for (const feature of featureCollection.features) {\n    if (!feature || feature.type !== \"Feature\" || !feature.geometry) {\n      throw new Error(\n        \"Invalid input to \" + name + \", Feature with geometry required\"\n      );\n    }\n    if (!feature.geometry || feature.geometry.type !== type) {\n      throw new Error(\n        \"Invalid input to \" + name + \": must be a \" + type + \", given \" + feature.geometry.type\n      );\n    }\n  }\n}\nfunction getGeom(geojson) {\n  if (geojson.type === \"Feature\") {\n    return geojson.geometry;\n  }\n  return geojson;\n}\nfunction getType(geojson, _name) {\n  if (geojson.type === \"FeatureCollection\") {\n    return \"FeatureCollection\";\n  }\n  if (geojson.type === \"GeometryCollection\") {\n    return \"GeometryCollection\";\n  }\n  if (geojson.type === \"Feature\" && geojson.geometry !== null) {\n    return geojson.geometry.type;\n  }\n  return geojson.type;\n}\nexport {\n  collectionOf,\n  containsNumber,\n  featureOf,\n  geojsonType,\n  getCoord,\n  getCoords,\n  getGeom,\n  getType\n};\n//# sourceMappingURL=index.js.map","// index.ts\nimport { getCoord } from \"@turf/invariant\";\nimport { radiansToLength, degreesToRadians } from \"@turf/helpers\";\nfunction distance(from, to, options = {}) {\n  var coordinates1 = getCoord(from);\n  var coordinates2 = getCoord(to);\n  var dLat = degreesToRadians(coordinates2[1] - coordinates1[1]);\n  var dLon = degreesToRadians(coordinates2[0] - coordinates1[0]);\n  var lat1 = degreesToRadians(coordinates1[1]);\n  var lat2 = degreesToRadians(coordinates2[1]);\n  var a = Math.pow(Math.sin(dLat / 2), 2) + Math.pow(Math.sin(dLon / 2), 2) * Math.cos(lat1) * Math.cos(lat2);\n  return radiansToLength(\n    2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a)),\n    options.units\n  );\n}\nvar turf_distance_default = distance;\nexport {\n  turf_distance_default as default,\n  distance\n};\n//# sourceMappingURL=index.js.map","export const debounce = (fn, wait) => {\n  let timeoutId = null\n  return (...args) => {\n    window.clearTimeout(timeoutId)\n    timeoutId = window.setTimeout(() => {\n      fn(...args)\n    }, wait)\n  }\n}\n","import { distance as turfDistance } from '@turf/distance'\nimport { point as TurfPoint } from '@turf/helpers'\nimport { defaults } from '../store/constants'\n\nconst getBearing = (coord1, coord2) => {\n  const east = coord1[0] < coord2[0] && 'east'\n  const west = coord1[0] > coord2[0] && 'west'\n  const north = coord1[1] < coord2[1] && 'north'\n  const south = coord1[1] > coord2[1] && 'south'\n  return [east, west, north, south].filter(b => b && typeof b === 'string')\n}\n\nconst getUnits = (metres) => {\n  const MAX_METRES = 800\n  const MAX_MILES = 5000\n  const RATIO = 0.621371\n  let units\n  if (metres < MAX_METRES) {\n    units = `${metres} metres`\n  } else if (metres < MAX_MILES) {\n    units = (metres / 1000 * RATIO).toFixed(1) + ' miles'\n  } else {\n    units = Math.round((metres / 1000) * RATIO) + ' miles'\n  }\n  return units\n}\n\nconst getDirection = (coord1, coord2) => {\n  coord1 = coord1.map(n => n > 1000 ? Math.round(n) : Math.round(n * 100000) / 100000)\n  coord2 = coord2.map(n => n > 1000 ? Math.round(n) : Math.round(n * 100000) / 100000)\n  const ns1 = [coord1[0], coord1[1]]\n  const ns2 = [coord1[0], coord2[1]]\n  const ew1 = [coord1[0], coord1[1]]\n  const ew2 = [coord2[0], coord1[1]]\n  const nsd = getDistance(ns1, ns2)\n  const ewd = getDistance(ew1, ew2)\n  const bearing = getBearing(coord1, coord2)\n  const ewc = bearing.filter(b => ['east', 'west'].includes(b)).join('')\n  const nsc = bearing.filter(b => ['north', 'south'].includes(b)).join('')\n  const ew = ewc ? `${ewc} ${getUnits(ewd)}` : ''\n  const ns = nsc ? `${nsc} ${getUnits(nsd)}` : ''\n  return `${ns + (ewc && nsc ? ', ' : '') + ew}`\n}\n\nconst getArea = (bounds) => {\n  const ew = getDistance([bounds[0], bounds[1]], [bounds[2], bounds[1]])\n  const ns = getDistance([bounds[0], bounds[1]], [bounds[0], bounds[3]])\n  return `${getUnits(ew)} by ${getUnits(ns)}`\n}\n\nconst getBoundsChange = (oCentre, originalZoom, isMaxZoom, isMinZoom, center, zoom) => {\n  const isSameCentre = JSON.stringify(oCentre) === JSON.stringify(center)\n  const isSameZoom = originalZoom === zoom\n  const isMove = oCentre && originalZoom && !(isSameCentre && isSameZoom)\n  const maxZoom = isMaxZoom ? ' (Maximum zoom reached)' : ''\n  const minZoom = isMinZoom ? ' (Minimum zoom reached)' : ''\n  let change = ''\n  if (isMove) {\n    if (!isSameCentre && !isSameZoom) {\n      change = `New area${maxZoom}${minZoom}: `\n    } else if (!isSameCentre) {\n      change = `Map move: ${getDirection(oCentre, center)}, `\n    } else {\n      const direction = zoom > originalZoom ? 'in' : 'out'\n      change = `Zoomed ${direction}${maxZoom}${minZoom}: `\n    }\n  }\n  return change\n}\n\nconst getSelectedStatus = (featuresInViewport, id) => {\n  const total = featuresInViewport.length\n  const index = featuresInViewport.findIndex(f => f.id === id)\n  return index >= 0 && `${total} feature${total !== 1 ? 's' : ''} in this area. ${featuresInViewport[index].name}. ${index + 1} of ${total} highlighted.`\n}\n\nconst getOffsetBoundingClientRect = (el) => {\n  const offsetParent = el.closest('[data-fm-main]') || document.body\n  return offsetParent.getBoundingClientRect()\n}\n\nconst isCirclePolygon = (geometry) => {\n  const coordinates = geometry?.coordinates?.[0]\n\n  // Expect exactly 64 points\n  if (coordinates?.length !== 65) {\n    return false\n  }\n\n  // Compute approximate centre using two opposite points\n  const [x1, y1] = coordinates[0]\n  const [x2, y2] = coordinates[32]\n  const center = [(x1 + x2) / 2, (y1 + y2) / 2]\n\n  let minDist = Infinity; let maxDist = -Infinity\n  let minEdge = Infinity; let maxEdge = -Infinity\n\n  for (let i = 0; i < 64; i++) {\n    const [xA, yA] = coordinates[i]\n    const [xB, yB] = coordinates[(i + 1) % 64]\n\n    // Distance from center\n    const dist = Math.hypot(xA - center[0], yA - center[1])\n    minDist = Math.min(minDist, dist)\n    maxDist = Math.max(maxDist, dist)\n\n    // Distance to next vertex (edge length)\n    const edgeDist = Math.hypot(xB - xA, yB - yA)\n    minEdge = Math.min(minEdge, edgeDist)\n    maxEdge = Math.max(maxEdge, edgeDist)\n  }\n\n  // Need to revist tolerance as they depend on size too\n  const WSG84_TOLERANCE = 0.3\n  const BNG_TOLERANCE = 0.3\n  const tolerance = detectCoordinateType(center) === 'WSG84' ? WSG84_TOLERANCE : BNG_TOLERANCE\n\n  return Math.abs(maxDist - minDist) < tolerance && Math.abs(maxEdge - minEdge) < tolerance\n}\n\nexport const detectCoordinateType = (coords) => {\n  if (coords.length === 3) {\n    return 'BNG' // If a third value exists (zone), it's UTM\n  }\n  const [x, y] = coords\n  if (x >= -180 && x <= 180 && y >= -90 && y <= 90) {\n    return 'WSG84'\n  }\n  if (x > 180 && y > 90) {\n    return 'BNG'\n  }\n  return 'Unknown'\n}\n\nexport const getDistance = (coord1, coord2) => {\n  let distance\n  if (coord1[0] > 1000) {\n    const x = Math.abs(coord1[0] - coord2[0])\n    const y = Math.abs(coord1[1] - coord2[1])\n    const dist = Math.sqrt((Math.pow(x, 2)) + (Math.pow(y, 2)))\n    distance = dist\n  } else {\n    const p1 = new TurfPoint(coord1)\n    const p2 = new TurfPoint(coord2)\n    distance = turfDistance(p1, p2, { units: 'metres' })\n  }\n  return Math.round(distance)\n}\n\nexport const getFocusPadding = (el, scale) => {\n  let padding\n  if (el) {\n    const parent = getOffsetBoundingClientRect(el)\n    const box = el.getBoundingClientRect()\n    const boxX = box.x || box.left\n    const boxY = box.y || box.top\n    const parentX = parent.x || parent.left\n    const parentY = parent.y || parent.top\n    padding = {\n      top: (boxY - parentY) / scale,\n      left: (boxX - parentX) / scale,\n      right: (parent.width - box.width - (boxX - parentX)) / scale,\n      bottom: (parent.height - box.height - (boxY - parentY)) / scale\n    }\n  }\n  // Addresses repid browser resizing\n  const isValid = Object.values(padding).every(i => i >= 0)\n  return isValid && padding\n}\n\nexport const getFocusBounds = (el, scale) => {\n  let bounds\n  if (el) {\n    const parent = getOffsetBoundingClientRect(el)\n    const box = el.getBoundingClientRect()\n    const m = 10\n    bounds = [[\n      ((box.x || box.left) - (parent.x || parent.left) + m) / scale,\n      (((box.y || box.top) - (parent.y || parent.top)) + box.height - m) / scale\n    ], [\n      (box.width + ((box.x || box.left) - (parent.x || parent.left)) - m) / scale,\n      ((box.y || box.top) - (parent.y || parent.top) + m) / scale\n    ]]\n  }\n  return bounds\n}\n\nexport const getMapPixel = (el, scale) => {\n  const parent = getOffsetBoundingClientRect(el)\n  const box = el.getBoundingClientRect()\n  const left = ((box.x || box.left) - (parent.x || parent.left)) / scale\n  const top = ((box.y || box.top) - (parent.y || parent.top)) / scale\n  const offsetLeft = (box.width / 2) / scale\n  const offsetTop = (box.height / 2) / scale\n  const point = [left + offsetLeft, top + offsetTop]\n  return point\n}\n\nexport const getDescription = (place, bounds, features) => {\n  const { featuresTotal, isFeaturesInMap, isPixelFeaturesAtPixel, isPixelFeaturesInMap } = features || {}\n  let text = ''\n\n  if (featuresTotal) {\n    text = `${featuresTotal} feature${featuresTotal === 1 ? '' : 's'} in this area. `\n  } else if (isPixelFeaturesAtPixel) {\n    text = 'Data visible at the center coordinate. '\n  } else if (isPixelFeaturesInMap) {\n    text = 'No data visible at the center coordinate. '\n  } else if (isFeaturesInMap) {\n    text = 'No feature data in this area. '\n  } else {\n    // Null\n  }\n\n  const focusPlace = place ? `approximate centre ${place}, ` : ''\n  const focusArea = `covering ${getArea(bounds)}`\n  const findPlace = place ? '' : 'Use ALT plus I to find closest place'\n\n  return `${focusPlace}${focusArea}. ${text}${findPlace}`\n}\n\nexport const getStatus = (action, isBoundsChange, place, state, current) => {\n  const { center, bounds, zoom, isMaxZoom, isMinZoom, features, label, selectedId } = current\n  let status = null\n  if (label) {\n    status = label\n  } else if (selectedId) {\n    const selected = getSelectedStatus(features?.featuresInViewport, selectedId)\n    status = selected\n  } else if (action === 'DATA') {\n    status = 'Map change: new data. Use ALT plus I to get new details'\n  } else if (isBoundsChange) {\n    const direction = getBoundsChange(state.center, state.zoom, isMaxZoom, isMinZoom, center, zoom)\n    const description = getDescription(place, bounds, features)\n    status = `${direction}${direction ? 'f' : 'F'}ocus area ${description}`\n  } else {\n    status = ''\n  }\n  return status\n}\n\nexport const getPlace = (isUserInitiated, action, oPlace, newPlace) => {\n  let place\n  if (!isUserInitiated) {\n    if (action === 'RESET') {\n      place = oPlace\n    } else {\n      place = newPlace\n    }\n  }\n  return place\n}\n\nexport const parseCentre = (value, srid) => {\n  const mb = defaults[`MAX_BOUNDS_${srid}`]\n  let isInRange\n  let coords = value?.split(',')\n  // Query string formed correctly\n  if (!(Array.isArray(coords) && coords?.length === 3)) {\n    return null\n  }\n  // Coords are numbers\n  coords = coords.slice(0, 2).map(x => parseFloat(x))\n  coords = !coords.some(isNaN) && coords\n  if (!coords) {\n    return null\n  }\n  // Coords are within the valid range\n  if (srid === '27700') {\n    isInRange = !!coords.filter(c => c >= 0).length\n  } else {\n    isInRange = (coords[0] > mb[0] && coords[0] < mb[2]) && (coords[1] > mb[1] && coords[1] < mb[3])\n  }\n  return isInRange ? coords : null\n}\n\nexport const parseZoom = value => {\n  const coords = value?.split(',')\n  if (!(Array.isArray(coords) && coords?.length === 3)) {\n    return null\n  }\n  const zoom = parseFloat(coords[2])\n  return !zoom.isNaN ? zoom : null\n}\n\nexport const getShortcutKey = (e, featuresViewport) => {\n  const number = e.code.slice(-1)\n  const hasFeature = featuresViewport.length >= number\n  const id = hasFeature ? featuresViewport[number - 1].id : ''\n  return id\n}\n\nexport const getFeatureShape = (feature) => {\n  if (isCirclePolygon(feature?.geometry)) {\n    return 'circle'\n  }\n  if (feature?.geometry?.type?.toLowerCase() === 'polygon') {\n    const coords = feature.geometry?.coordinates\n    const flatCoords = (coords && Array.from(new Set(coords.flat(2)))) || null\n    return flatCoords?.length === 4 ? 'square' : 'polygon'\n  }\n  return null\n}\n\nexport const spatialNavigate = (direction, start, pixels) => {\n  const quadrant = pixels.filter(p => {\n    const offsetX = Math.abs(p[0] - start[0])\n    const offsetY = Math.abs(p[1] - start[1])\n    let isQuadrant = false\n    if (direction === 'up') {\n      isQuadrant = p[1] <= start[1] && offsetY >= offsetX\n    } else if (direction === 'down') {\n      isQuadrant = p[1] > start[1] && offsetY >= offsetX\n    } else if (direction === 'left') {\n      isQuadrant = p[0] <= start[0] && offsetY < offsetX\n    } else {\n      isQuadrant = p[0] > start[0] && offsetY < offsetX\n    }\n    return isQuadrant && (JSON.stringify(p) !== JSON.stringify(start))\n  })\n  if (!quadrant.length) {\n    quadrant.push(start)\n  }\n  const pythagorean = (a, b) => Math.sqrt(Math.pow(a, 2) + Math.pow(b, 2))\n  const distances = quadrant.map(p => pythagorean(Math.abs(start[0] - p[0]), Math.abs(start[1] - p[1])))\n  const closest = quadrant[distances.indexOf(Math.min(...distances))]\n  return pixels.findIndex(i => JSON.stringify(i) === JSON.stringify(closest))\n}\n\nexport const getScale = (size) => {\n  return { small: 1, medium: 1.5, large: 2 }[size] || 1\n}\n\nexport const getPoint = (el, e, scale) => {\n  const { left, top } = el.getBoundingClientRect()\n  const { clientX, clientY } = e.nativeEvent\n  const x = clientX - left\n  const y = clientY - top\n  return [x / scale, y / scale]\n}\n\nexport const getStyle = (styles = []) => {\n  const validStyles = styles.filter(s => defaults.STYLES.includes(s.name))\n  const style = window.localStorage.getItem('style')\n  return validStyles.find(s => s.name === style) || validStyles.find(s => s.name === 'default')\n}\n"],"names":["earthRadius","factors","centimeters","centimetres","degrees","Math","PI","feet","inches","kilometers","kilometres","meters","metres","miles","millimeters","millimetres","nauticalmiles","radians","yards","feature","geom","properties","options","feat","type","id","bbox","geometry","point","coordinates","Error","Array","isArray","length","isNumber","polygon","ring","j","lineString","multiLineString","multiPolygon","radiansToLength","units","factor","lengthToRadians","distance","radiansToDegrees","degreesToRadians","num","isNaN","module","exports","t","e","Object","defineProperty","value","default","o","recursive","prototype","forEach","call","children","r","getComputedStyle","style","getPropertyValue","TinyQueue","constructor","data","compare","a","b","this","i","_down","push","item","_up","pop","top","bottom","peek","pos","parent","current","halfLength","bestChild","right","Cell","x","y","h","d","inside","minDistSq","Infinity","len","min","getSegDistSq","sqrt","pointToPolygonDist","max","SQRT2","px","py","dx","dy","geojson","previousValue","callback","g","stopG","geometryMaybeCollection","isGeometryCollection","featureProperties","featureBBox","featureId","featureIndex","isFeatureCollection","isFeature","stop","features","geometries","geomEach","currentGeometry","total","polygonArea","calculateArea","geomReduce","coords","abs","ringArea","FACTOR","PI_OVER_180","coordsLength","lower","middle","upper","lowerX","middleY","sin","polygonclip","points","result","edge","prev","prevInside","p","bitCode","intersect","code","clipPolygon","rings","outRings","clipped","_regeneratorRuntime","n","hasOwnProperty","Symbol","iterator","c","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","arg","l","f","s","GeneratorFunction","GeneratorFunctionPrototype","getPrototypeOf","v","values","defineIteratorMethods","_invoke","AsyncIterator","invoke","_typeof","resolve","__await","then","callInvokeWithMethodAndArg","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","return","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","reset","displayName","isGeneratorFunction","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","charAt","slice","rval","handle","complete","finish","catch","delegateYield","asyncGeneratorStep","_toConsumableArray","_arrayLikeToArray","_arrayWithoutHoles","from","_iterableToArray","_unsupportedIterableToArray","_nonIterableSpread","toString","test","ownKeys","getOwnPropertySymbols","filter","getOwnPropertyDescriptor","apply","_objectSpread","arguments","_defineProperty","getOwnPropertyDescriptors","defineProperties","toPrimitive","String","_toPrimitive","_toPropertyKey","getPaddedBounds","map","padding","getPadding","bounds","getBounds","sw","project","getWest","getSouth","ne","getEast","getNorth","left","paddedSW","unproject","paddedNE","lng","lat","addFeatureProperties","_map$getCenter","getCenter","coord","precision","debug","minX","minY","maxX","maxY","width","height","cellSize","cellQueue","bestCell","area","centroid","getCentroidCell","bboxCell","numProbes","potentiallyQueue","cell","console","log","round","ch","polylabel","p1","TurfPoint","p2","turfDistance","geometryType","getViewport","bind","flat","parseFloat","toFixed","defaults","PRECISION","center","zoom","getZoom","toArray","isMaxZoom","getMaxZoom","isMinZoom","getMinZoom","addMapHoverBehaviour","featureLayers","labelLayers","on","concat","queryRenderedFeatures","layers","originalEvent","altKey","find","includes","layer","isLabel","getCanvas","cursor","getDetail","_x","_getDetail","_callee","pixel","selectedLayers","viewport","label","selectedId","_context","getFeatures","getHighlightedLabel","getSelectedFeatureId","resultType","_next","_throw","_map$getStyle","_layers","_layers2","locationLayers","paddingBox","scale","getFocusBounds","getStyle","_l$layout","layout","visibility","featuresAtPixel","combined","lngLat","renderedFeaturesInViewport","featuresTotal","Set","intersectingFeatures","lines","line","codeB","lastCode","codeA","part","lineclip","poly","TurfBboxClip","TurfPolygon","TurfMultiPolygon","intersectFeatures","polygonFeatures","MAX_FEATURES","group","parts","turfArea","largest","featuresInViewport","sort","pow","featureType","hasPixelLayers","some","items","isFeaturesInMap","isPixelFeaturesAtPixel","isPixelFeaturesInMap","toggleSelectedFeature","_step","_iterator","_n","F","_createForOfIteratorHelper","setLayoutProperty","setFilter","err","text","_map$getStyle2","_features$0$propertie","_features$","getLabel","getLabels","pixels","xS","yS","locationMarkerHTML","el","document","createElement","className","innerHTML","SYMBOL_PLACEMENT","TEXT_FIELD","amendLineSymbolLayers","addHighlightedLabelLayer","addSource","addLayer","source","paint","addShortcutMarkers","shortcutMarkers","Marker","modules","m","remove","key","offset","SHORTCUT_LABEL_OFFSET","element","setLngLat","addTo","highlightLabel","_feature$layer$layout","moveLayer","getSource","setData","textScale","textField","sections","setPaintProperty","_map$getSource","addSelectedLayers","isDarkBasemap","_loop","getLayer","removeLayer","setTimeout","loadSymbols","_this$symbols","fn","symbols","all","fetch","responses","texts","loadImage","getName","path","split","parsed","parseSVG","container","getCanvasContainer","insertAdjacentHTML","lastChild","computedStyleToInlineStyle","base64","btoa","outerHTML","img","reject","onload","hasImage","addImage","onerror","src","_asyncToGenerator","getResolution","cos","getAttributions","currentZoom","activeAttributions","minZoom","undefined","minzoom","maxZoom","maxzoom","sources","attribution","add","handleLoad","_handleLoad","resolution","attributions","isLoaded","dispatchEvent","CustomEvent","detail","framework","handleStyleLoad","_handleStyleLoad","_callee2","_context2","baseLayers","handleIdle","_handleIdle","_callee3","_detail$features","offsetTop","offsetLeft","offsetWidth","offsetHeight","_paddingBox$parentNod","parentOffsetTop","parentOffsetLeft","_context3","parentNode","handleMoveStart","_handleMoveStart","_callee4","_context4","hideLabel","isUserInitiated","handleMove","handleStyleData","_this","target","handleError","_defineProperties","_wrapNativeSuper","Map","Function","indexOf","_isNativeFunction","has","get","set","Wrapper","_isNativeReflectConstruct","Reflect","construct","_setPrototypeOf","_construct","_getPrototypeOf","Boolean","valueOf","Provider","_EventTarget","_ref","transformRequest","_classCallCheck","ReferenceError","_assertThisInitialized","_possibleConstructorReturn","_callSuper","srid","capabilities","hasDraw","hasSize","window","globalThis","selectedCoordinate","_inherits","_this2","isLatest","addMap","promises","ResizeObserver","install","_this$map","_this3","maxBounds","size","callBack","_module$default","MaplibreMap","getScale","url","storeDefaults","MAX_BOUNDS_4326","fadeDuration","attributionControl","dragRotate","setPadding","getFocusPadding","fitBounds","animate","flyTo","touchZoomRotate","disableRotation","setPixelRatio","devicePixelRatio","canvas","removeAttribute","display","targetMarker","locationMarker","debounceHandleIdle","debounce","DELAY","panBy","ANIMATION","zoomIn","zoomOut","_this$draw","_this$draw$setStyle","setStyle","diff","draw","isAnimate","easeTo","_this$map2","_this4","resize","linear","duration","_zoom","_this5","Draw","hasData","isVisible","getElement","classList","toggle","css","MARKER_VISIBLE","_queryFeature","_queryPoint","_x2","success","error","navigator","geolocation","getCurrentPosition","_ref2","position","longitude","latitude","_x3","enableHighAccuracy","addClassName","direction","_labels$index","_labels$index2","labels","_this$map$getCenter","index","spatialNavigate","EventTarget","curve","DOMParser","icon","fill","isSelected","dom","parseFromString","svg","querySelector","viewBox","getAttribute","parseInt","setAttribute","olFill","querySelectorAll","olStroke","bgFill","bgStroke","fgFill","fgStroke","body","getCoord","getGeom","to","coordinates1","coordinates2","dLat","dLon","lat1","lat2","atan2","wait","timeoutId","_len","args","_key","clearTimeout","getUnits","RATIO","getOffsetBoundingClientRect","closest","getBoundingClientRect","detectCoordinateType","_coords","_slicedToArray","getDistance","coord1","coord2","box","boxX","boxY","parentX","parentY","every","getMapPixel","getDescription","place","focusPlace","focusArea","ew","ns","getArea","findPlace","getStatus","action","isBoundsChange","state","status","findIndex","oCentre","originalZoom","isSameCentre","JSON","stringify","isSameZoom","change","ns1","ns2","ew1","ew2","nsd","ewd","bearing","getBearing","ewc","join","nsc","getDirection","getBoundsChange","description","getPlace","oPlace","newPlace","parseCentre","_coords2","mb","parseZoom","getShortcutKey","featuresViewport","number","getFeatureShape","_feature$geometry","_geometry$coordinates","_coordinates$","x1","y1","_coordinates$2","minDist","maxDist","minEdge","maxEdge","_coordinates$i","xA","yA","_coordinates","xB","yB","dist","hypot","edgeDist","tolerance","isCirclePolygon","toLowerCase","_feature$geometry2","flatCoords","start","quadrant","offsetX","offsetY","distances","small","medium","large","getPoint","_el$getBoundingClient","_e$nativeEvent","nativeEvent","clientX","clientY","validStyles","STYLES","localStorage","getItem"],"sourceRoot":""}