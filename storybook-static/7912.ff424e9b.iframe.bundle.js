"use strict";(self.webpackChunk_defra_flood_map=self.webpackChunk_defra_flood_map||[]).push([[7912],{"./node_modules/@arcgis/core/views/2d/layers/StreamLayerView2D.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{default:()=>d});var tslib_es6=__webpack_require__("./node_modules/@arcgis/core/chunks/tslib.es6.js"),Error=__webpack_require__("./node_modules/@arcgis/core/core/Error.js"),handleUtils=__webpack_require__("./node_modules/@arcgis/core/core/handleUtils.js"),reactiveUtils=__webpack_require__("./node_modules/@arcgis/core/core/reactiveUtils.js"),property=__webpack_require__("./node_modules/@arcgis/core/core/accessorSupport/decorators/property.js"),subclass=(__webpack_require__("./node_modules/@arcgis/core/core/has.js"),__webpack_require__("./node_modules/@arcgis/core/core/Logger.js"),__webpack_require__("./node_modules/@arcgis/core/core/RandomLCG.js"),__webpack_require__("./node_modules/@arcgis/core/core/accessorSupport/decorators/subclass.js")),FeatureSet=__webpack_require__("./node_modules/@arcgis/core/rest/support/FeatureSet.js"),guards=__webpack_require__("./node_modules/@arcgis/core/support/guards.js"),FeatureLayerView2D=__webpack_require__("./node_modules/@arcgis/core/views/2d/layers/FeatureLayerView2D.js"),handleNoEngineError=__webpack_require__("./node_modules/@arcgis/core/views/2d/layers/support/handleNoEngineError.js"),FeatureFilter=__webpack_require__("./node_modules/@arcgis/core/layers/support/FeatureFilter.js");const r=r=>{let i=class extends r{resume(){this._isUserPaused=!1,this.suspended||this._doResume()}pause(){this._isUserPaused=!0,this.suspended||this._doPause()}disconnect(){this._doDisconnect()}connect(){this._doConnect()}clear(){this._doClear()}constructor(...s){super(...s),this._isUserPaused=!1,this.filter=null}get connectionStatus(){return(this._isUserPaused||this.suspended)&&"connected"===this._streamConnectionStatus?"paused":this._streamConnectionStatus}_onSuspendedChange(s){s?this._doPause():this._isUserPaused||this._doResume()}};return(0,tslib_es6._)([(0,property.MZ)()],i.prototype,"_isUserPaused",void 0),(0,tslib_es6._)([(0,property.MZ)({readOnly:!0})],i.prototype,"connectionStatus",null),(0,tslib_es6._)([(0,property.MZ)({type:FeatureFilter.A})],i.prototype,"filter",void 0),i=(0,tslib_es6._)([(0,subclass.$)("esri.views.layers.StreamLayerView")],i),i};let p=class extends(r(FeatureLayerView2D.default)){constructor(){super(...arguments),this.pipelineConnectionStatus="disconnected",this.pipelineErrorString=null}initialize(){this.addHandles([(0,reactiveUtils.watch)((()=>this.layer.customParameters),(async e=>{(await this.getWorker()).streamMessenger.updateCustomParameters(e)})),this.layer.on("send-message-to-socket",(async e=>{(await this.getWorker()).streamMessenger.sendMessageToSocket(e)})),this.layer.on("send-message-to-client",(async e=>{(await this.getWorker()).streamMessenger.sendMessageToClient(e),this._isUserPaused&&"type"in e&&"clear"===e.type&&this.incrementSourceRefreshVersion()})),(0,reactiveUtils.watch)((()=>this.layer.purgeOptions),(()=>this._update())),(0,reactiveUtils.watch)((()=>this.suspended),this._onSuspendedChange.bind(this))],"constructor"),this._doResume()}destroy(){this._doPause()}get connectionError(){return this.pipelineErrorString?new Error.A("stream-controller",this.pipelineErrorString):null}on(e,r){if(Array.isArray(e))return(0,handleUtils.vE)(e.map((e=>this.on(e,r))));const n=["data-received","message-received"].includes(e);n&&this.getWorker().then((r=>r.streamMessenger.enableEvent(e,!0)));const o=super.on(e,r),i=this;return(0,handleUtils.hA)((()=>{o.remove(),n&&(i._workerProxy.closed||i.hasEventListener(e)||i.getWorker().then((r=>r.streamMessenger.enableEvent(e,!1))))}))}async queryLatestObservations(e,t){if(!(this.layer.timeInfo?.endField||this.layer.timeInfo?.startField||this.layer.timeInfo?.trackIdField))throw new Error.A("streamlayer-no-timeField","queryLatestObservation can only be used with services that define a TrackIdField");const s=await this.getWorker();return(0,handleNoEngineError.E)(s.features.executeQueryForLatestObservations(this._cleanUpQuery(e),t).then((e=>{const r=FeatureSet.A.fromJSON(e);return r.features.forEach((e=>{e.layer=this.layer,e.sourceLayer=this.layer})),r})),new FeatureSet.A({features:[]}))}detach(){super.detach(),this.pipelineConnectionStatus="disconnected"}async queryObjectIds(e,r){return(await super.queryObjectIds(e,r)).filter(guards.Et)}get _streamConnectionStatus(){return this.pipelineConnectionStatus}_doPause(){null!=this._refreshInterval&&(clearInterval(this._refreshInterval),this._refreshInterval=null)}_doResume(){this._refreshInterval=setInterval((()=>this.incrementSourceRefreshVersion()),this.layer.updateInterval)}_doDisconnect(){this.getWorker().then((e=>e.streamMessenger.disconnect())),this._doPause()}_doConnect(){this.getWorker().then((e=>e.streamMessenger.connect())),this.resume()}_doClear(){this.getWorker().then((e=>e.streamMessenger.clear())),null==this._refreshInterval&&this.incrementSourceRefreshVersion()}_createClientOptions(){const e=super._createClientOptions(),r=this;return{...e,get container(){return r.featureContainer},setProperty:e=>{this.set(e.propertyName,e.value)}}}};(0,tslib_es6._)([(0,property.MZ)()],p.prototype,"pipelineConnectionStatus",void 0),(0,tslib_es6._)([(0,property.MZ)()],p.prototype,"pipelineErrorString",void 0),(0,tslib_es6._)([(0,property.MZ)({readOnly:!0})],p.prototype,"connectionError",null),(0,tslib_es6._)([(0,property.MZ)({readOnly:!0})],p.prototype,"_streamConnectionStatus",null),p=(0,tslib_es6._)([(0,subclass.$)("esri.views.2d.layers.StreamLayerView2D")],p);const d=p}}]);