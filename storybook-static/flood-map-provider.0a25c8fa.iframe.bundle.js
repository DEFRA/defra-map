"use strict";(self.webpackChunk_defra_flood_map=self.webpackChunk_defra_flood_map||[]).push([[4534],{"./src/js/lib/debounce.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{s:()=>debounce});const debounce=(fn,wait)=>{let timeoutId=null;return(...args)=>{window.clearTimeout(timeoutId),timeoutId=window.setTimeout((()=>{fn(...args)}),wait)}}},"./src/js/lib/symbols.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{c:()=>parseSVG});const{DOMParser}=window,parseSVG=(icon,fill,text,isDarkBasemap=!1,scale=1)=>{const isSelected=icon.includes("selected"),dom=(new DOMParser).parseFromString(text,"text/html"),svg=dom.querySelector("svg");svg.classList.add("fm-c-symbol"),svg.classList.toggle("fm-c-symbol--selected",isSelected),svg.classList.toggle("fm-c-symbol--dark",isDarkBasemap);const viewBox=svg.getAttribute("viewBox"),width=parseInt(viewBox.split(" ")[2],10)*scale,height=parseInt(viewBox.split(" ")[3],10)*scale;svg.setAttribute("width",width),svg.setAttribute("height",height),fill&&svg.setAttribute("fill",fill);const olFill=svg.querySelectorAll('[fill="#0b0c0c" i], [style*="fill:#0b0c0c" i]'),olStroke=svg.querySelectorAll('[stroke="#0b0c0c" i], [style*="stroke:#0b0c0c" i]');olFill.forEach((n=>n.classList.add("fm-c-symbol__ol-fill"))),olStroke.forEach((n=>n.classList.add("fm-c-symbol__ol-stroke")));const bgFill=svg.querySelectorAll('[fill="#fff" i], [fill="#ffffff" i], [style*="fill:#fff" i], [style*="fill:#ffffff" i]'),bgStroke=svg.querySelectorAll('[stroke*="#fff" i], [stroke*="#ffffff" i], [style*="stroke:#fff" i], [style*="stroke:#ffffff" i]');bgFill.forEach((n=>n.classList.add("fm-c-symbol__bg-fill"))),bgStroke.forEach((n=>n.classList.add("fm-c-symbol__bg-stroke")));const fgFill=svg.querySelectorAll(':not(.fm-c-symbol__ol-fill):not(.fm-c-symbol__bg-fill)[fill], :not(.fm-c-symbol__ol-fill):not(.fm-c-symbol__bg-fill)[style*="fill"]'),fgStroke=svg.querySelectorAll(':not(.fm-c-symbol__ol-stroke):not(.fm-c-symbol__bg-stroke)[stroke], :not(.fm-c-symbol__ol-stroke):not(.fm-c-symbol__bg-stroke)[style*="stroke"]');return fgFill.forEach((n=>n.classList.add("fm-c-symbol__fg-fill"))),fgStroke.forEach((n=>n.classList.add("fm-c-symbol__fg-stroke"))),dom.body.innerHTML}},"./src/js/lib/viewport.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{BS:()=>getStatus,CK:()=>getShortcutKey,Ig:()=>getFocusPadding,Ox:()=>getPlace,X_:()=>getScale,Yf:()=>getDistance,ZM:()=>getMapPixel,cj:()=>spatialNavigate,dN:()=>parseCentre,fC:()=>getPoint,fY:()=>getDescription,gd:()=>getStyle,mG:()=>getFeatureShape,mK:()=>getFocusBounds,qo:()=>detectCoordinateType,zw:()=>parseZoom});var _turf_distance__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/@turf/distance/dist/esm/index.js"),_turf_helpers__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/@turf/helpers/dist/esm/index.js"),_store_constants__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./src/js/store/constants.js");const getUnits=metres=>{let units;return units=metres<800?`${metres} metres`:metres<5e3?(metres/1e3*.621371).toFixed(1)+" miles":Math.round(metres/1e3*.621371)+" miles",units},getBoundsChange=(oCentre,originalZoom,isMaxZoom,isMinZoom,center,zoom)=>{const isSameCentre=JSON.stringify(oCentre)===JSON.stringify(center),isSameZoom=originalZoom===zoom,maxZoom=isMaxZoom?" (Maximum zoom reached)":"",minZoom=isMinZoom?" (Minimum zoom reached)":"";let change="";if(oCentre&&originalZoom&&!(isSameCentre&&isSameZoom))if(isSameCentre||isSameZoom)if(isSameCentre){change=`Zoomed ${zoom>originalZoom?"in":"out"}${maxZoom}${minZoom}: `}else change=`Map move: ${((coord1,coord2)=>{coord1=coord1.map((n=>n>1e3?Math.round(n):Math.round(1e5*n)/1e5)),coord2=coord2.map((n=>n>1e3?Math.round(n):Math.round(1e5*n)/1e5));const ns1=[coord1[0],coord1[1]],ns2=[coord1[0],coord2[1]],ew1=[coord1[0],coord1[1]],ew2=[coord2[0],coord1[1]],nsd=getDistance(ns1,ns2),ewd=getDistance(ew1,ew2),bearing=((coord1,coord2)=>[coord1[0]<coord2[0]&&"east",coord1[0]>coord2[0]&&"west",coord1[1]<coord2[1]&&"north",coord1[1]>coord2[1]&&"south"].filter((b=>b&&"string"==typeof b)))(coord1,coord2),ewc=bearing.filter((b=>["east","west"].includes(b))).join(""),nsc=bearing.filter((b=>["north","south"].includes(b))).join(""),ew=ewc?`${ewc} ${getUnits(ewd)}`:"";return(nsc?`${nsc} ${getUnits(nsd)}`:"")+(ewc&&nsc?", ":"")+ew})(oCentre,center)}, `;else change=`New area${maxZoom}${minZoom}: `;return change},getOffsetBoundingClientRect=el=>(el.closest("[data-fm-main]")||document.body).getBoundingClientRect(),detectCoordinateType=coords=>{if(3===coords.length)return"BNG";const[x,y]=coords;return x>=-180&&x<=180&&y>=-90&&y<=90?"WSG84":x>180&&y>90?"BNG":"Unknown"},getDistance=(coord1,coord2)=>{let distance;if(coord1[0]>1e3){const x=Math.abs(coord1[0]-coord2[0]),y=Math.abs(coord1[1]-coord2[1]);distance=Math.sqrt(Math.pow(x,2)+Math.pow(y,2))}else{const p1=new _turf_helpers__WEBPACK_IMPORTED_MODULE_1__.zx(coord1),p2=new _turf_helpers__WEBPACK_IMPORTED_MODULE_1__.zx(coord2);distance=(0,_turf_distance__WEBPACK_IMPORTED_MODULE_2__.I)(p1,p2,{units:"metres"})}return Math.round(distance)},getFocusPadding=(el,scale)=>{let padding;if(el){const parent=getOffsetBoundingClientRect(el),box=el.getBoundingClientRect(),boxX=box.x||box.left,boxY=box.y||box.top,parentX=parent.x||parent.left,parentY=parent.y||parent.top;padding={top:(boxY-parentY)/scale,left:(boxX-parentX)/scale,right:(parent.width-box.width-(boxX-parentX))/scale,bottom:(parent.height-box.height-(boxY-parentY))/scale}}return Object.values(padding).every((i=>i>=0))&&padding},getFocusBounds=(el,scale)=>{let bounds;if(el){const parent=getOffsetBoundingClientRect(el),box=el.getBoundingClientRect(),m=10;bounds=[[((box.x||box.left)-(parent.x||parent.left)+m)/scale,((box.y||box.top)-(parent.y||parent.top)+box.height-m)/scale],[(box.width+((box.x||box.left)-(parent.x||parent.left))-m)/scale,((box.y||box.top)-(parent.y||parent.top)+m)/scale]]}return bounds},getMapPixel=(el,scale)=>{const parent=getOffsetBoundingClientRect(el),box=el.getBoundingClientRect(),left=((box.x||box.left)-(parent.x||parent.left))/scale,top=((box.y||box.top)-(parent.y||parent.top))/scale;return[left+box.width/2/scale,top+box.height/2/scale]},getDescription=(place,bounds,features)=>{const{featuresTotal,isFeaturesInMap,isPixelFeaturesAtPixel,isPixelFeaturesInMap}=features||{};let text="";featuresTotal?text=`${featuresTotal} feature${1===featuresTotal?"":"s"} in this area. `:isPixelFeaturesAtPixel?text="Data visible at the center coordinate. ":isPixelFeaturesInMap?text="No data visible at the center coordinate. ":isFeaturesInMap&&(text="No feature data in this area. ");const focusPlace=place?`approximate centre ${place}, `:"",focusArea=`covering ${(bounds=>{const ew=getDistance([bounds[0],bounds[1]],[bounds[2],bounds[1]]),ns=getDistance([bounds[0],bounds[1]],[bounds[0],bounds[3]]);return`${getUnits(ew)} by ${getUnits(ns)}`})(bounds)}`;return`${focusPlace}${focusArea}. ${text}${place?"":"Use ALT plus I to find closest place"}`},getStatus=(action,isBoundsChange,place,state,current)=>{const{center,bounds,zoom,isMaxZoom,isMinZoom,features,label,selectedId}=current;let status=null;if(label)status=label;else if(selectedId){status=((featuresInViewport,id)=>{const total=featuresInViewport.length,index=featuresInViewport.findIndex((f=>f.id===id));return index>=0&&`${total} feature${1!==total?"s":""} in this area. ${featuresInViewport[index].name}. ${index+1} of ${total} highlighted.`})(features?.featuresInViewport,selectedId)}else if("DATA"===action)status="Map change: new data. Use ALT plus I to get new details";else if(isBoundsChange){const direction=getBoundsChange(state.center,state.zoom,isMaxZoom,isMinZoom,center,zoom);status=`${direction}${direction?"f":"F"}ocus area ${getDescription(place,bounds,features)}`}else status="";return status},getPlace=(isUserInitiated,action,oPlace,newPlace)=>{let place;return isUserInitiated||(place="RESET"===action?oPlace:newPlace),place},parseCentre=(value,srid)=>{const mb=_store_constants__WEBPACK_IMPORTED_MODULE_0__.NT[`MAX_BOUNDS_${srid}`];let isInRange,coords=value?.split(",");return Array.isArray(coords)&&3===coords?.length?(coords=coords.slice(0,2).map((x=>parseFloat(x))),coords=!coords.some(isNaN)&&coords,coords?(isInRange="27700"===srid?!!coords.filter((c=>c>=0)).length:coords[0]>mb[0]&&coords[0]<mb[2]&&coords[1]>mb[1]&&coords[1]<mb[3],isInRange?coords:null):null):null},parseZoom=value=>{const coords=value?.split(",");if(!Array.isArray(coords)||3!==coords?.length)return null;const zoom=parseFloat(coords[2]);return zoom.isNaN?null:zoom},getShortcutKey=(e,featuresViewport)=>{const number=e.code.slice(-1);return featuresViewport.length>=number?featuresViewport[number-1].id:""},getFeatureShape=feature=>{if((geometry=>{const coordinates=geometry?.coordinates?.[0];if(65!==coordinates?.length)return!1;const[x1,y1]=coordinates[0],[x2,y2]=coordinates[32],center=[(x1+x2)/2,(y1+y2)/2];let minDist=1/0,maxDist=-1/0,minEdge=1/0,maxEdge=-1/0;for(let i=0;i<64;i++){const[xA,yA]=coordinates[i],[xB,yB]=coordinates[(i+1)%64],dist=Math.hypot(xA-center[0],yA-center[1]);minDist=Math.min(minDist,dist),maxDist=Math.max(maxDist,dist);const edgeDist=Math.hypot(xB-xA,yB-yA);minEdge=Math.min(minEdge,edgeDist),maxEdge=Math.max(maxEdge,edgeDist)}const tolerance=(detectCoordinateType(center),.3);return Math.abs(maxDist-minDist)<tolerance&&Math.abs(maxEdge-minEdge)<tolerance})(feature?.geometry))return"circle";if("polygon"===feature?.geometry?.type?.toLowerCase()){const coords=feature.geometry?.coordinates,flatCoords=coords&&Array.from(new Set(coords.flat(2)))||null;return 4===flatCoords?.length?"square":"polygon"}return null},spatialNavigate=(direction,start,pixels)=>{const quadrant=pixels.filter((p=>{const offsetX=Math.abs(p[0]-start[0]),offsetY=Math.abs(p[1]-start[1]);let isQuadrant=!1;return isQuadrant="up"===direction?p[1]<=start[1]&&offsetY>=offsetX:"down"===direction?p[1]>start[1]&&offsetY>=offsetX:"left"===direction?p[0]<=start[0]&&offsetY<offsetX:p[0]>start[0]&&offsetY<offsetX,isQuadrant&&JSON.stringify(p)!==JSON.stringify(start)}));quadrant.length||quadrant.push(start);const distances=quadrant.map((p=>{return a=Math.abs(start[0]-p[0]),b=Math.abs(start[1]-p[1]),Math.sqrt(Math.pow(a,2)+Math.pow(b,2));var a,b})),closest=quadrant[distances.indexOf(Math.min(...distances))];return pixels.findIndex((i=>JSON.stringify(i)===JSON.stringify(closest)))},getScale=size=>({small:1,medium:1.5,large:2}[size]||1),getPoint=(el,e,scale)=>{const{left,top}=el.getBoundingClientRect(),{clientX,clientY}=e.nativeEvent;return[(clientX-left)/scale,(clientY-top)/scale]},getStyle=(styles=[])=>{const validStyles=styles.filter((s=>_store_constants__WEBPACK_IMPORTED_MODULE_0__.NT.STYLES.includes(s.name))),style=window.localStorage.getItem("style");return validStyles.find((s=>s.name===style))||validStyles.find((s=>"default"===s.name))}},"./src/js/provider/os-maplibre/constants.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{A:()=>css,N:()=>defaults});const defaults={PRECISION:6,ANIMATION:{duration:500,curve:0},DELAY:300,MAX_FEATURES:9,SHORTCUT_LABEL_OFFSET:-30},css={MARKER_VISIBLE:"fm-c-marker--visible"}},"./src/js/provider/os-maplibre/provider.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{default:()=>provider});var polylabel=__webpack_require__("./node_modules/polylabel/polylabel.js"),esm=__webpack_require__("./node_modules/@turf/area/dist/esm/index.js"),dist_esm=__webpack_require__("./node_modules/@turf/distance/dist/esm/index.js"),helpers_dist_esm=__webpack_require__("./node_modules/@turf/helpers/dist/esm/index.js"),bbox_clip_dist_esm=__webpack_require__("./node_modules/@turf/bbox-clip/dist/esm/index.js"),viewport=__webpack_require__("./src/js/lib/viewport.js"),constants=__webpack_require__("./src/js/provider/os-maplibre/constants.js");function getPaddedBounds(){const{map}=this,padding=map.getPadding(),bounds=map.getBounds(),sw=map.project([bounds.getWest(),bounds.getSouth()]),ne=map.project([bounds.getEast(),bounds.getNorth()]);sw.x+=padding.left,sw.y-=padding.bottom,ne.x-=padding.right,ne.y+=padding.top;const paddedSW=map.unproject(sw),paddedNE=map.unproject(ne);return[[paddedSW.lng,paddedSW.lat],[paddedNE.lng,paddedNE.lat]]}function addFeatureProperties(features){const{map}=this;return features.map((f=>{const{lng,lat}=map.getCenter(),coord="Polygon"===f.geometry.type?(0,polylabel.A)(f.geometry.coordinates,1e-5):f.geometry.coordinates,p1=new helpers_dist_esm.zx([coord[0],coord[1]]),p2=new helpers_dist_esm.zx([lng,lat]),distance=(0,dist_esm.I)(p1,p2,{units:"metres"});return{...f.properties,id:f.properties.id||f.id,geometryType:f.geometry.type,coord,distance}}))}function getViewport(){const{map}=this;let bounds=getPaddedBounds.bind(this)();bounds=bounds.flat(1).map((n=>parseFloat(n.toFixed(constants.N.PRECISION))));let center=map.getCenter(),zoom=map.getZoom();center=center.toArray().map((n=>parseFloat(n.toFixed(constants.N.PRECISION)))),zoom=parseFloat(zoom.toFixed(constants.N.PRECISION));return{bounds,center,zoom,isMaxZoom:map.getZoom()>=map.getMaxZoom(),isMinZoom:map.getZoom()<=map.getMinZoom()}}function addMapHoverBehaviour(){const{map,featureLayers,labelLayers}=this;map.on("mousemove",[...featureLayers,...labelLayers],(e=>{const features=map.queryRenderedFeatures(e.point,{layers:[...featureLayers,...labelLayers]}),isFeature=!e.originalEvent.altKey&&features&&!!features.find((f=>featureLayers.includes(f.layer.id))),isLabel=e.originalEvent.altKey&&features&&!!features.find((f=>labelLayers.includes(f.layer.id)));map.getCanvas().style.cursor=isFeature||isLabel?"pointer":""})),map.on("mouseout",[...featureLayers,...labelLayers],(()=>{map.getCanvas().style.cursor=""}))}async function getDetail(pixel){const{selectedLayers}=this,viewport=getViewport.bind(this)(),features=getFeatures.bind(this)(pixel),label=getHighlightedLabel.bind(this)(),selectedId=getSelectedFeatureId.bind(this)(selectedLayers);return{...viewport,resultType:features.resultType,coord:features.coord,selectedId,features,label}}function getFeatures(pixel){const{map,featureLayers,locationLayers,paddingBox,scale}=this,bounds=(0,viewport.mK)(paddingBox,scale);let layers=[...featureLayers,...locationLayers];layers=map.getStyle()?.layers.filter((l=>layers.includes(l?.id)&&"none"!==l?.layout?.visibility)).map((l=>l.id));let featuresAtPixel=map.queryRenderedFeatures(pixel,{layers});featuresAtPixel=featuresAtPixel.map((f=>({...f.properties,id:f.properties.id||f.id,name:f.properties.name,layer:f.layer.id})));const renderedFeaturesInViewport=map.queryRenderedFeatures(bounds,{layers:featureLayers}),featuresTotal=Array.from(new Set(renderedFeaturesInViewport.map((f=>f.properties.id||f.id)))).length,intersectingFeatures=function intersectFeatures(bounds,features){return features.map((f=>{if(["Polygon","MultiPolygon"].includes(f.geometry.type)){const polygon="Polygon"===f.geometry.type?new helpers_dist_esm.n1(f.geometry.coordinates):new helpers_dist_esm.g5(f.geometry.coordinates),clipped=(0,bbox_clip_dist_esm.y)(polygon,bounds);clipped.geometry.coordinates=clipped.geometry.coordinates.filter((c=>c.length)),f.geometry=clipped.geometry}return f}))}(getPaddedBounds.bind(this)().flat(1),renderedFeaturesInViewport),polygonFeatures=featuresTotal<=constants.N.MAX_FEATURES?function combineFeatures(features){const combined=[];return features.forEach((f=>{const group=combined.find((c=>c.length&&(f.id&&f.id===c[0].id||f.properties.id&&f.properties.id===c[0].properties.id)));if("MultiPolygon"===f.geometry.type){const parts=f.geometry.coordinates.map((c=>{const polygon=new helpers_dist_esm.n1([c[0]]);return polygon.properties={area:(0,esm.W)(polygon)},polygon})),largest=parts.find((p=>p.properties.area===Math.max(...parts.map((b=>b.properties.area)))));f.geometry=largest.geometry,f.properties.area=largest.properties.area}else if("Polygon"===f.geometry.type){const polygon=new helpers_dist_esm.n1([f.geometry.coordinates[0]]);f.properties.area=(0,esm.W)(polygon),f.geometry=polygon.geometry}else f.properties.area=0;group?.push(f)||combined.push([f])})),combined.map((g=>g.find((f=>f.properties.area===Math.max(...g.map((b=>b.properties.area)))))))}(intersectingFeatures):[],featuresInViewport=addFeatureProperties.bind(this)(polygonFeatures).sort(((a,b)=>a.distance-b.distance));let lngLat;pixel&&(lngLat=map.unproject(pixel),lngLat=[lngLat.lng,lngLat.lat],lngLat=lngLat.map((c=>Math.round(c*Math.pow(10,constants.N.PRECISION))/Math.pow(10,constants.N.PRECISION))));const feature=featuresAtPixel.length?featuresAtPixel[0]:null,featureType=featureLayers?.includes(feature?.layer)?"feature":locationLayers?.includes(feature?.layer)&&"pixel",hasPixelLayers=layers?.some((l=>locationLayers?.includes(l)));return{resultType:featureType||(hasPixelLayers?"pixel":null),items:featuresAtPixel,featuresTotal,featuresInViewport,isFeaturesInMap:!!layers?.length,isPixelFeaturesAtPixel:locationLayers?.includes(feature?.layer),isPixelFeaturesInMap:hasPixelLayers,coord:lngLat}}function toggleSelectedFeature(id){const{map,selectedLayers}=this;if(map?.getStyle())for(const layer of selectedLayers)map.setLayoutProperty(layer,"visibility",id?"visible":"none"),map.setFilter(layer,["any",["==",["id"],id||""],["==",["get","id"],id||""]])}function getHighlightedLabel(){const{map}=this,features=map.queryRenderedFeatures({layers:["label"]});let text;if(features?.length){const label=map.getStyle()?.layers.find((l=>"label"===l.id))?.layout["text-field"];text=`${label} (${features[0].properties.layer})`}return text}function getSelectedFeatureId(selectedLayers){const{map}=this,features=map.queryRenderedFeatures({layers:selectedLayers});return features.length?features[0].properties?.id||features[0]?.id:null}function getLabel(pixel){const{map,labelLayers}=this;return map.queryRenderedFeatures(pixel,{layers:labelLayers})[0]}function getLabels(){const{map,paddingBox,scale}=this,bounds=(0,viewport.mK)(paddingBox,scale);return map.queryRenderedFeatures(bounds,{layers:this.labelLayers}).map((f=>{let pixel="Point"===f.geometry.type&&map.project(f.geometry.coordinates);if("Point"!==f.geometry.type){const pixels=f.geometry.coordinates.flat("MultiLineString"===f.geometry.type?1:0).map((c=>map.project(c))),xS=pixels.map((p=>p.x)),yS=pixels.map((p=>p.y));pixel={x:(Math.max(...xS)-Math.min(...xS))/2+Math.min(...xS),y:(Math.max(...yS)-Math.min(...yS))/2+Math.min(...yS)}}return{feature:f,pixel:[pixel.x,pixel.y]}}))}var dist=__webpack_require__("./node_modules/computed-style-to-inline-style/dist/index.js"),dist_default=__webpack_require__.n(dist);const locationMarkerHTML=()=>{const el=document.createElement("div");return el.className="fm-c-marker fm-c-marker--location",el.innerHTML='<div class="fm-c-marker__inner"><svg width="20" height="20" viewBox="0 0 20 20" fill="currentColor"><circle cx="10" cy="10" r="8" stroke="#fff" stroke-width="3"/></svg></div>',el},targetMarkerHTML=()=>{const el=document.createElement("div");return el.className="fm-c-marker fm-c-marker--target",el.innerHTML='<div class="fm-c-marker__inner">\n    <svg width="38" height="38" viewBox="0 0 38 38" fill-rule="evenodd" fill="currentColor">\n      <path d="M5.035 20H1v-2h4.035C5.525 11.069 11.069 5.525 18 5.035V1h2v4.035c6.931.49 12.475 6.034 12.965 12.965H37v2h-4.035c-.49 6.931-6.034 12.475-12.965 12.965V37h-2v-4.035C11.069 32.475 5.525 26.931 5.035 20zM19 7A12.01 12.01 0 0 0 7 19a12.01 12.01 0 0 0 12 12 12.01 12.01 0 0 0 12-12A12.01 12.01 0 0 0 19 7zm0 10a2 2 0 1 1 0 4 2 2 0 1 1 0-4z"/>\n      <path d="M5.035 20H1v-2h4.035a14.02 14.02 0 0 1 .246-1.8l1.96.399C7.083 17.375 7 18.178 7 19s.083 1.625.241 2.401l-1.96.399a14.02 14.02 0 0 1-.246-1.8zM20 5.035a14.02 14.02 0 0 1 1.8.246l-.399 1.96C20.625 7.083 19.822 7 19 7s-1.625.083-2.401.241l-.399-1.96a14.02 14.02 0 0 1 1.8-.246V1h2v4.035zm-2 27.93a14.02 14.02 0 0 1-1.8-.246l.399-1.96c.776.158 1.579.241 2.401.241s1.625-.083 2.401-.241l.399 1.96a14.02 14.02 0 0 1-1.8.246V37h-2v-4.035zM32.965 20a14.02 14.02 0 0 1-.246 1.8l-1.96-.399c.158-.776.241-1.579.241-2.401s-.083-1.625-.241-2.401l1.96-.399a14.02 14.02 0 0 1 .246 1.8H37v2h-4.035zM19 17a2 2 0 1 1 0 4 2 2 0 1 1 0-4zm3.8-9.385l.634-1.897a13.98 13.98 0 0 1 4.848 2.805l-1.327 1.496c-1.196-1.06-2.605-1.886-4.155-2.404zm5.181 3.43l1.496-1.327a13.98 13.98 0 0 1 2.805 4.848l-1.897.634c-.518-1.55-1.344-2.959-2.404-4.155zM30.385 22.8l1.897.634a13.98 13.98 0 0 1-2.805 4.848l-1.496-1.327c1.06-1.196 1.886-2.605 2.404-4.155zm-3.43 5.181l1.327 1.496a13.98 13.98 0 0 1-4.848 2.805l-.634-1.897c1.55-.518 2.959-1.344 4.155-2.404zM15.2 30.385l-.634 1.897a13.98 13.98 0 0 1-4.848-2.805l1.327-1.496c1.196 1.06 2.605 1.886 4.155 2.404zm-5.181-3.43l-1.496 1.327a13.98 13.98 0 0 1-2.805-4.848l1.897-.634c.518 1.55 1.344 2.959 2.404 4.155zM7.615 15.2l-1.897-.634a13.98 13.98 0 0 1 2.805-4.848l1.496 1.327c-1.06 1.196-1.886 2.605-2.404 4.155zm3.43-5.181L9.718 8.523a13.98 13.98 0 0 1 4.848-2.805l.634 1.897c-1.55.518-2.959 1.344-4.155 2.404z"/>\n    </svg>\n  </div>',el},shortcutMarkerHTML=key=>{const el=document.createElement("div");return el.className="fm-c-marker fm-c-marker--shortcut",el.innerHTML=`<div class="fm-c-marker__inner">${key}</div>`,el};var symbols=__webpack_require__("./src/js/lib/symbols.js");function amendLineSymbolLayers(){const{map}=this;map.getStyle().layers.filter((l=>l.layout&&"symbol-placement"in l.layout&&"line"===l.layout["symbol-placement"])).forEach((l=>map.setLayoutProperty(l.id,"symbol-placement","line-center")))}function addHighlightedLabelLayer(){const{map}=this,layers=map.getStyle().layers;this.labelLayers=layers.filter((l=>"label"!==l.id&&l.layout?l.layout["text-field"]:null)).map((l=>l.id)),map.addSource("label",{type:"geojson",data:{type:"FeatureCollection",features:[]}}),map.addLayer({id:"label",type:"symbol",source:"label",layout:{"text-allow-overlap":!0,"text-ignore-placement":!0},paint:{"text-halo-width":3,"text-halo-blur":1,"text-opacity":1}})}function addShortcutMarkers(features){const{map,shortcutMarkers}=this,{Marker}=this.modules;shortcutMarkers.forEach((m=>m.remove())),features.forEach(((f,i)=>{const offset="Point"===f.geometryType?[0,constants.N.SHORTCUT_LABEL_OFFSET]:[0,0];shortcutMarkers.push(new Marker({element:shortcutMarkerHTML(i+1),offset}).setLngLat(f.coord).addTo(map))}))}function highlightLabel(feature){const{map,scale,style}=this;if(map.style)if(feature){map.moveLayer("label"),map.getSource("label").setData({type:"Feature",geometry:feature.geometry,properties:{...feature.properties,layer:feature.layer.id}});const textScale=1===scale?1.5:1.25,textField=feature.layer.layout["text-field"];map.setLayoutProperty("label","symbol-placement",feature.layer.layout["symbol-placement"]),map.setLayoutProperty("label","text-field",textField.sections?textField.sections[0].text:textField),map.setLayoutProperty("label","text-font",feature.layer.layout["text-font"]),map.setLayoutProperty("label","text-letter-spacing",feature.layer.layout["text-letter-spacing"]),map.setLayoutProperty("label","text-size",feature.layer.layout["text-size"]*textScale),map.setLayoutProperty("label","text-anchor",feature.layer.layout["text-anchor"]),map.setLayoutProperty("label","text-justify",feature.layer.layout["text-justify"]),map.setLayoutProperty("label","text-offset",feature.layer.layout["text-offset"]?.map((o=>o/textScale))),map.setPaintProperty("label","text-color","dark"===style?"#ffffff":"#000000"),map.setPaintProperty("label","text-halo-color","dark"===style?"#000000":"#ffffff")}else map?.getSource("label")?.setData({type:"FeatureCollection",features:[]})}function addSelectedLayers(layers,selectedId,isDarkBasemap){const{map}=this,selectedLayers=[];for(const layer of layers)layer.id=`${layer.id}-selected`,layer.filter=["==","id",selectedId||""],"symbol"===layer.type&&(layer.layout["icon-image"]=["concat",layer.layout["icon-image"],"-selected"]),"fill"===layer.type&&(layer.paint={"line-color":isDarkBasemap?"#ffffff":"#0b0c0c","line-width":2},layer.type="line"),map.getLayer(layer.id)&&map.removeLayer(layer.id),selectedLayers.push(layer.id),setTimeout((()=>map.addLayer(layer)),0);return selectedLayers}function loadSymbols(){let fn;if(this.symbols?.length){const{map,symbols,style}=this,isDarkBasemap=["dark","aerial"].includes(style.name);fn=Promise.all(symbols.map((u=>fetch(u)))).then((responses=>Promise.all(responses.map((r=>r.text()))))).then((texts=>Promise.all(texts.map(((t,i)=>loadImage(getName(symbols[i]),t,map,isDarkBasemap))).concat(texts.map(((t,i)=>loadImage(`${getName(symbols[i])}-selected`,t,map,isDarkBasemap)))))))}return fn}const getName=path=>path.split("\\").pop().split("/").pop().slice(0,-Math.abs(4)),loadImage=(name,text,map,isDarkBasemap)=>{const parsed=(0,symbols.c)(name,null,text,isDarkBasemap,2),container=map.getCanvasContainer();container.insertAdjacentHTML("beforeend",parsed);const el=container.lastChild;dist_default()(el,{recursive:!0,properties:["stroke","fill"]});const base64="data:image/svg+xml;base64,"+btoa(container.lastChild.outerHTML),img=document.createElement("img");return el?.remove(),new Promise(((resolve,reject)=>{img.onload=()=>{try{if(map?.hasImage(name))return;map.addImage(name,img),resolve(img)}catch(err){console.log(err)}},img.onerror=reject,img.src=base64}))},getResolution=map=>{const center=map.getCenter(),zoom=map.getZoom(),lat=center.lat,scale=Math.pow(2,zoom);return 40075016.686*Math.cos(lat*Math.PI/180)/(512*scale)},getAttributions=map=>{const style=map.getStyle();if(!style)return[];const currentZoom=map.getZoom(),activeAttributions=new Set;return style.layers.forEach((layer=>{if(!layer.source)return;const minZoom=void 0!==layer.minzoom?layer.minzoom:0,maxZoom=void 0!==layer.maxzoom?layer.maxzoom:24;if(currentZoom>=minZoom&&currentZoom<maxZoom&&(!layer.layout||"none"!==layer.layout.visibility)){const source=style.sources[layer.source];source&&source.attribution&&activeAttributions.add(source.attribution)}})),Array.from(activeAttributions)};async function handleLoad(){const{map}=this;await loadSymbols.bind(this)(),this.isLoaded=!0;const resolution=getResolution(map),zoom=map.getZoom(),attributions=getAttributions(map);this.dispatchEvent(new CustomEvent("load",{detail:{framework:{map},resolution,zoom,attributions}}))}async function handleStyleLoad(){const{map}=this;this.baseLayers=map.getStyle().layers,amendLineSymbolLayers.bind(this)(),addHighlightedLabelLayer.bind(this)(),addMapHoverBehaviour.bind(this)(this.featureLayers,this.labelLayers),this.isLoaded&&(await loadSymbols.bind(this)(),this.dispatchEvent(new CustomEvent("style",{detail:{type:"style"}})))}async function handleIdle(){if(this.map){const{map,paddingBox,selectedId,scale}=this,{offsetTop,offsetLeft,offsetWidth,offsetHeight}=paddingBox,{offsetTop:parentOffsetTop,offsetLeft:parentOffsetLeft}=paddingBox.parentNode,pixel=[offsetLeft+parentOffsetLeft+offsetWidth/2,offsetTop+parentOffsetTop+offsetHeight/2].map((c=>c/scale)),detail=await getDetail.bind(this)(selectedId?null:pixel),attributions=getAttributions(map);addShortcutMarkers.bind(this)(detail?.features?.featuresInViewport),this.dispatchEvent(new CustomEvent("update",{detail:{...detail,attributions}}))}}async function handleMoveStart(e){this.hideLabel(),this.dispatchEvent(new CustomEvent("movestart",{detail:{isUserInitiated:e.isUserInitiated||!!e.originalEvent}}))}function handleMove(){const{map}=this,isMaxZoom=map.getZoom()>=map.getMaxZoom(),isMinZoom=map.getZoom()<=map.getMinZoom(),zoom=map.getZoom(),resolution=getResolution(map),attributions=getAttributions(map);this.dispatchEvent(new CustomEvent("move",{detail:{isMaxZoom,isMinZoom,zoom,resolution,attributions}}))}function handleStyleData(e){if(this.baseLayers.length){const{map,style,selectedId}=this,featureLayers=e.target.getStyle().layers.filter((l=>this.featureLayers.includes(l.id)));if(map.getStyle().layers.filter((l=>l.id.includes("selected"))).length!==featureLayers.length){const isDarkBasemap=["dark","aerial"].includes(style.name);this.selectedLayers=addSelectedLayers.bind(this)(featureLayers,selectedId,isDarkBasemap)}}}function handleError(err){console.log(err)}var debounce=__webpack_require__("./src/js/lib/debounce.js"),capabilities=__webpack_require__("./src/js/lib/capabilities.js"),store_constants=__webpack_require__("./src/js/store/constants.js");class Provider extends EventTarget{constructor({transformRequest,symbols}){super(),this.srid=4326,this.capabilities={...capabilities.R.default,hasDraw:!0,hasSize:!!window.globalThis},this.transformRequest=transformRequest,this.symbols=symbols,this.baseLayers=[],this.selectedId="",this.selectedCoordinate=null,this.isLoaded=!1}init(options){this.capabilities.isLatest?__webpack_require__.e(8803).then(__webpack_require__.t.bind(__webpack_require__,"./node_modules/maplibre-gl/dist/maplibre-gl.js",23)).then((module=>{this.addMap(module,options)})):Promise.all([__webpack_require__.e(8689).then(__webpack_require__.t.bind(__webpack_require__,"./node_modules/maplibre-gl-legacy/dist/maplibre-gl.js",23)),__webpack_require__.e(8689).then(__webpack_require__.bind(__webpack_require__,"./node_modules/resize-observer/lib/ResizeObserver.js")),__webpack_require__.e(8689).then(__webpack_require__.t.bind(__webpack_require__,"./node_modules/array-flat-polyfill/index.mjs",23))]).then((promises=>{window.ResizeObserver||promises[1].install(),this.addMap(promises[0],options)}))}remove(){this.map?.remove(),this.map=null}addMap(module,options){const{container,paddingBox,bounds,maxBounds,center,zoom,minZoom,maxZoom,style,size,featureLayers,locationLayers,callBack}=options,{Map:MaplibreMap,Marker}=module.default,scale=(0,viewport.X_)(size),map=new MaplibreMap({...options,container,style:style?.url,maxBounds:maxBounds||store_constants.NT.MAX_BOUNDS_4326,bounds,center,zoom,minZoom,maxZoom,fadeDuration:0,attributionControl:!1,dragRotate:!1});map.setPadding((0,viewport.Ig)(paddingBox,scale)),bounds?map.fitBounds(bounds,{animate:!1}):map.flyTo({center,zoom,animate:!1}),map.touchZoomRotate.disableRotation(),map.setPixelRatio&&map.setPixelRatio(window.devicePixelRatio*scale);const canvas=map.getCanvas();canvas.removeAttribute("role"),canvas.removeAttribute("tabindex"),canvas.removeAttribute("aria-label"),canvas.style.display="block",this.container=container,this.map=map,this.featureLayers=featureLayers||[],this.locationLayers=locationLayers||[],this.selectedLayers=[],this.paddingBox=paddingBox,this.style=style,this.scale=scale,this.targetMarker=new Marker({element:targetMarkerHTML()}).setLngLat([0,0]).addTo(map),this.locationMarker=new Marker({element:locationMarkerHTML()}).setLngLat([0,0]).addTo(map),this.shortcutMarkers=[],this.modules={MaplibreMap,Marker},this.framework={map},map.on("load",handleLoad.bind(this)),map.on("movestart",handleMoveStart.bind(this)),map.on("move",handleMove.bind(this)),map.on("styledata",handleStyleData.bind(this));const debounceHandleIdle=(0,debounce.s)((()=>{handleIdle.bind(this)()}),constants.N.DELAY);map.on("idle",debounceHandleIdle),map.on("style.load",handleStyleLoad.bind(this)),map.on("error",handleError.bind(this)),callBack&&callBack(this)}getPixel(coord){let pixel;return this.map&&coord&&(pixel=this.map.project(coord),pixel=[Math.round(pixel.x),Math.round(pixel.y)]),pixel}panBy(offset,isUserInitiated=!0){this.map&&this.map.panBy(offset,{...constants.N.ANIMATION},{isUserInitiated})}panTo(coord){this.map.flyTo({center:coord,...constants.N.ANIMATION})}zoomIn(){this.map&&this.map.zoomIn(constants.N.ANIMATION)}zoomOut(){this.map&&this.map.zoomOut(constants.N.ANIMATION)}setStyle(style){this.style=style,this.map.setStyle(style.url,{diff:!1}),this.draw?.setStyle?.()}setPadding(coord,isAnimate){if(this.map){const{map,paddingBox,scale}=this,padding=(0,viewport.Ig)(paddingBox,scale);this.map.setPadding(padding||map.getPadding()),coord&&this.map.easeTo({center:coord,animate:isAnimate,...constants.N.ANIMATION})}}setSize(size){const scale=(0,viewport.X_)(size);this.scale=scale,this.setPadding(),this.map.setPixelRatio&&this.map?.setPixelRatio(window.devicePixelRatio*scale),setTimeout((()=>{this.map.resize(),this.dispatchEvent(new CustomEvent("style",{detail:{type:"size"}}))}),constants.N.DELAY)}fitBounds(bounds,isAnimate=!0){bounds=[[bounds[0],bounds[1]],[bounds[2],bounds[3]]],this.map.fitBounds(bounds,{animate:isAnimate,linear:!0,duration:constants.N.ANIMATION.duration})}setCentre(coord,_zoom){this.map&&this.map.flyTo({center:coord,...constants.N.ANIMATION})}initDraw(options){Promise.all([__webpack_require__.e(4809),__webpack_require__.e(4194)]).then(__webpack_require__.bind(__webpack_require__,"./src/js/provider/os-maplibre/draw.js")).then((module=>{const Draw=module.default;this.draw=new Draw(this,options)}))}setTargetMarker(coord,hasData,isVisible){const{targetMarker}=this;if(targetMarker){targetMarker.setLngLat(coord||[0,0]);const el=targetMarker.getElement();el.classList.toggle("fm-c-marker--has-data",hasData),el.classList.toggle(constants.A.MARKER_VISIBLE,isVisible&&coord)}}selectFeature(id){this.selectedId=id,toggleSelectedFeature.bind(this)(id)}selectCoordinate(coord){this.selectedCoordinate=coord}async queryFeature(id){if(id){const detail=await getDetail.bind(this)(null,!1);detail.features.items=[detail.features.items.find((f=>f.id===id))],this.dispatchEvent(new CustomEvent("mapquery",{detail}))}}async queryPoint(point){const detail=await getDetail.bind(this)(point,this.selectedLayers);this.hideLabel(),this.dispatchEvent(new CustomEvent("mapquery",{detail:{resultType:detail.features.resultType,...detail}}))}getGeoLocation(success,error){navigator.geolocation.getCurrentPosition((async position=>{let coord=[position.coords.longitude,position.coords.latitude];coord=coord.map((n=>parseFloat(n.toFixed(constants.N.PRECISION)))),success(coord,null)}),(err=>{console.log(err),error(err)}),{enableHighAccuracy:!1})}showLocation(coord){const{locationMarker}=this;locationMarker.setLngLat(coord).addClassName(constants.A.MARKER_VISIBLE)}showNextLabel(pixel,direction){const labels=getLabels.bind(this)(),{lng,lat}=this.map.getCenter(),center=this.map.project([lng,lat]),pixels=labels.map((c=>c.pixel)),index=(0,viewport.cj)(direction,pixel||[center.x,center.y],pixels),feature=labels[index]?.feature;return highlightLabel.bind(this)(feature),labels[index]?.pixel}showLabel(point){const feature=getLabel.bind(this)(point);return highlightLabel.bind(this)(feature),point}hideLabel(){this.map&&highlightLabel.bind(this)()}}const provider=Provider}}]);