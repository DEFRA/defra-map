{"version":3,"file":"flood-map-maplibre-provider.js","mappings":"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","sources":["webpack://defra/./node_modules/@turf/helpers/dist/esm/index.js","webpack://defra/./node_modules/computed-style-to-inline-style/dist/index.js","webpack://defra/./src/js/provider/maplibre/constants.js","webpack://defra/./node_modules/@turf/area/dist/esm/index.js","webpack://defra/./node_modules/tinyqueue/index.js","webpack://defra/./node_modules/polylabel/polylabel.js","webpack://defra/./node_modules/@turf/bbox-clip/dist/esm/index.js","webpack://defra/./src/js/provider/maplibre/query.js","webpack://defra/./src/js/provider/maplibre/marker.js","webpack://defra/./src/js/provider/maplibre/symbols.js","webpack://defra/./src/js/provider/maplibre/events.js","webpack://defra/./src/js/provider/maplibre/provider.js","webpack://defra/./src/js/lib/throttle.js","webpack://defra/./src/js/lib/symbols.js","webpack://defra/./node_modules/@turf/invariant/dist/esm/index.js","webpack://defra/./node_modules/@turf/distance/dist/esm/index.js","webpack://defra/./src/js/lib/debounce.js","webpack://defra/./node_modules/@turf/meta/dist/esm/index.js","webpack://defra/./src/js/lib/viewport.js"],"sourcesContent":["// index.ts\nvar earthRadius = 63710088e-1;\nvar factors = {\n  centimeters: earthRadius * 100,\n  centimetres: earthRadius * 100,\n  degrees: 360 / (2 * Math.PI),\n  feet: earthRadius * 3.28084,\n  inches: earthRadius * 39.37,\n  kilometers: earthRadius / 1e3,\n  kilometres: earthRadius / 1e3,\n  meters: earthRadius,\n  metres: earthRadius,\n  miles: earthRadius / 1609.344,\n  millimeters: earthRadius * 1e3,\n  millimetres: earthRadius * 1e3,\n  nauticalmiles: earthRadius / 1852,\n  radians: 1,\n  yards: earthRadius * 1.0936\n};\nvar areaFactors = {\n  acres: 247105e-9,\n  centimeters: 1e4,\n  centimetres: 1e4,\n  feet: 10.763910417,\n  hectares: 1e-4,\n  inches: 1550.003100006,\n  kilometers: 1e-6,\n  kilometres: 1e-6,\n  meters: 1,\n  metres: 1,\n  miles: 386e-9,\n  nauticalmiles: 29155334959812285e-23,\n  millimeters: 1e6,\n  millimetres: 1e6,\n  yards: 1.195990046\n};\nfunction feature(geom, properties, options = {}) {\n  const feat = { type: \"Feature\" };\n  if (options.id === 0 || options.id) {\n    feat.id = options.id;\n  }\n  if (options.bbox) {\n    feat.bbox = options.bbox;\n  }\n  feat.properties = properties || {};\n  feat.geometry = geom;\n  return feat;\n}\nfunction geometry(type, coordinates, _options = {}) {\n  switch (type) {\n    case \"Point\":\n      return point(coordinates).geometry;\n    case \"LineString\":\n      return lineString(coordinates).geometry;\n    case \"Polygon\":\n      return polygon(coordinates).geometry;\n    case \"MultiPoint\":\n      return multiPoint(coordinates).geometry;\n    case \"MultiLineString\":\n      return multiLineString(coordinates).geometry;\n    case \"MultiPolygon\":\n      return multiPolygon(coordinates).geometry;\n    default:\n      throw new Error(type + \" is invalid\");\n  }\n}\nfunction point(coordinates, properties, options = {}) {\n  if (!coordinates) {\n    throw new Error(\"coordinates is required\");\n  }\n  if (!Array.isArray(coordinates)) {\n    throw new Error(\"coordinates must be an Array\");\n  }\n  if (coordinates.length < 2) {\n    throw new Error(\"coordinates must be at least 2 numbers long\");\n  }\n  if (!isNumber(coordinates[0]) || !isNumber(coordinates[1])) {\n    throw new Error(\"coordinates must contain numbers\");\n  }\n  const geom = {\n    type: \"Point\",\n    coordinates\n  };\n  return feature(geom, properties, options);\n}\nfunction points(coordinates, properties, options = {}) {\n  return featureCollection(\n    coordinates.map((coords) => {\n      return point(coords, properties);\n    }),\n    options\n  );\n}\nfunction polygon(coordinates, properties, options = {}) {\n  for (const ring of coordinates) {\n    if (ring.length < 4) {\n      throw new Error(\n        \"Each LinearRing of a Polygon must have 4 or more Positions.\"\n      );\n    }\n    if (ring[ring.length - 1].length !== ring[0].length) {\n      throw new Error(\"First and last Position are not equivalent.\");\n    }\n    for (let j = 0; j < ring[ring.length - 1].length; j++) {\n      if (ring[ring.length - 1][j] !== ring[0][j]) {\n        throw new Error(\"First and last Position are not equivalent.\");\n      }\n    }\n  }\n  const geom = {\n    type: \"Polygon\",\n    coordinates\n  };\n  return feature(geom, properties, options);\n}\nfunction polygons(coordinates, properties, options = {}) {\n  return featureCollection(\n    coordinates.map((coords) => {\n      return polygon(coords, properties);\n    }),\n    options\n  );\n}\nfunction lineString(coordinates, properties, options = {}) {\n  if (coordinates.length < 2) {\n    throw new Error(\"coordinates must be an array of two or more positions\");\n  }\n  const geom = {\n    type: \"LineString\",\n    coordinates\n  };\n  return feature(geom, properties, options);\n}\nfunction lineStrings(coordinates, properties, options = {}) {\n  return featureCollection(\n    coordinates.map((coords) => {\n      return lineString(coords, properties);\n    }),\n    options\n  );\n}\nfunction featureCollection(features, options = {}) {\n  const fc = { type: \"FeatureCollection\" };\n  if (options.id) {\n    fc.id = options.id;\n  }\n  if (options.bbox) {\n    fc.bbox = options.bbox;\n  }\n  fc.features = features;\n  return fc;\n}\nfunction multiLineString(coordinates, properties, options = {}) {\n  const geom = {\n    type: \"MultiLineString\",\n    coordinates\n  };\n  return feature(geom, properties, options);\n}\nfunction multiPoint(coordinates, properties, options = {}) {\n  const geom = {\n    type: \"MultiPoint\",\n    coordinates\n  };\n  return feature(geom, properties, options);\n}\nfunction multiPolygon(coordinates, properties, options = {}) {\n  const geom = {\n    type: \"MultiPolygon\",\n    coordinates\n  };\n  return feature(geom, properties, options);\n}\nfunction geometryCollection(geometries, properties, options = {}) {\n  const geom = {\n    type: \"GeometryCollection\",\n    geometries\n  };\n  return feature(geom, properties, options);\n}\nfunction round(num, precision = 0) {\n  if (precision && !(precision >= 0)) {\n    throw new Error(\"precision must be a positive number\");\n  }\n  const multiplier = Math.pow(10, precision || 0);\n  return Math.round(num * multiplier) / multiplier;\n}\nfunction radiansToLength(radians, units = \"kilometers\") {\n  const factor = factors[units];\n  if (!factor) {\n    throw new Error(units + \" units is invalid\");\n  }\n  return radians * factor;\n}\nfunction lengthToRadians(distance, units = \"kilometers\") {\n  const factor = factors[units];\n  if (!factor) {\n    throw new Error(units + \" units is invalid\");\n  }\n  return distance / factor;\n}\nfunction lengthToDegrees(distance, units) {\n  return radiansToDegrees(lengthToRadians(distance, units));\n}\nfunction bearingToAzimuth(bearing) {\n  let angle = bearing % 360;\n  if (angle < 0) {\n    angle += 360;\n  }\n  return angle;\n}\nfunction azimuthToBearing(angle) {\n  angle = angle % 360;\n  if (angle > 180) {\n    return angle - 360;\n  } else if (angle < -180) {\n    return angle + 360;\n  }\n  return angle;\n}\nfunction radiansToDegrees(radians) {\n  const normalisedRadians = radians % (2 * Math.PI);\n  return normalisedRadians * 180 / Math.PI;\n}\nfunction degreesToRadians(degrees) {\n  const normalisedDegrees = degrees % 360;\n  return normalisedDegrees * Math.PI / 180;\n}\nfunction convertLength(length, originalUnit = \"kilometers\", finalUnit = \"kilometers\") {\n  if (!(length >= 0)) {\n    throw new Error(\"length must be a positive number\");\n  }\n  return radiansToLength(lengthToRadians(length, originalUnit), finalUnit);\n}\nfunction convertArea(area, originalUnit = \"meters\", finalUnit = \"kilometers\") {\n  if (!(area >= 0)) {\n    throw new Error(\"area must be a positive number\");\n  }\n  const startFactor = areaFactors[originalUnit];\n  if (!startFactor) {\n    throw new Error(\"invalid original units\");\n  }\n  const finalFactor = areaFactors[finalUnit];\n  if (!finalFactor) {\n    throw new Error(\"invalid final units\");\n  }\n  return area / startFactor * finalFactor;\n}\nfunction isNumber(num) {\n  return !isNaN(num) && num !== null && !Array.isArray(num);\n}\nfunction isObject(input) {\n  return input !== null && typeof input === \"object\" && !Array.isArray(input);\n}\nfunction validateBBox(bbox) {\n  if (!bbox) {\n    throw new Error(\"bbox is required\");\n  }\n  if (!Array.isArray(bbox)) {\n    throw new Error(\"bbox must be an Array\");\n  }\n  if (bbox.length !== 4 && bbox.length !== 6) {\n    throw new Error(\"bbox must be an Array of 4 or 6 numbers\");\n  }\n  bbox.forEach((num) => {\n    if (!isNumber(num)) {\n      throw new Error(\"bbox must only contain numbers\");\n    }\n  });\n}\nfunction validateId(id) {\n  if (!id) {\n    throw new Error(\"id is required\");\n  }\n  if ([\"string\", \"number\"].indexOf(typeof id) === -1) {\n    throw new Error(\"id must be a number or a string\");\n  }\n}\nexport {\n  areaFactors,\n  azimuthToBearing,\n  bearingToAzimuth,\n  convertArea,\n  convertLength,\n  degreesToRadians,\n  earthRadius,\n  factors,\n  feature,\n  featureCollection,\n  geometry,\n  geometryCollection,\n  isNumber,\n  isObject,\n  lengthToDegrees,\n  lengthToRadians,\n  lineString,\n  lineStrings,\n  multiLineString,\n  multiPoint,\n  multiPolygon,\n  point,\n  points,\n  polygon,\n  polygons,\n  radiansToDegrees,\n  radiansToLength,\n  round,\n  validateBBox,\n  validateId\n};\n//# sourceMappingURL=index.js.map","!function(e,t){\"object\"==typeof exports&&\"object\"==typeof module?module.exports=t():\"function\"==typeof define&&define.amd?define([],t):\"object\"==typeof exports?exports.computedStyleToInlineStyle=t():e.computedStyleToInlineStyle=t()}(this,(()=>(()=>{\"use strict\";var e={};return(()=>{var t=e;Object.defineProperty(t,\"__esModule\",{value:!0}),t.default=function e(t,o){if(!t)throw new Error(\"No element specified.\");(null==o?void 0:o.recursive)&&Array.prototype.forEach.call(t.children,(t=>{e(t,o)}));const r=getComputedStyle(t);Array.prototype.forEach.call((null==o?void 0:o.properties)||r,(e=>{t.style[e]=r.getPropertyValue(e)}))}})(),e})()));","export const defaults = {\n  PRECISION: 6,\n  ANIMATION: {\n    duration: 500,\n    curve: 0\n  },\n  DELAY: 500,\n  THROTTLE: 100,\n  MAX_FEATURES: 9,\n  SHORTCUT_LABEL_OFFSET: -30\n}\n\nexport const css = {\n  MARKER_VISIBLE: 'fm-c-marker--visible'\n}\n","// index.ts\nimport { earthRadius } from \"@turf/helpers\";\nimport { geomReduce } from \"@turf/meta\";\nfunction area(geojson) {\n  return geomReduce(\n    geojson,\n    (value, geom) => {\n      return value + calculateArea(geom);\n    },\n    0\n  );\n}\nfunction calculateArea(geom) {\n  let total = 0;\n  let i;\n  switch (geom.type) {\n    case \"Polygon\":\n      return polygonArea(geom.coordinates);\n    case \"MultiPolygon\":\n      for (i = 0; i < geom.coordinates.length; i++) {\n        total += polygonArea(geom.coordinates[i]);\n      }\n      return total;\n    case \"Point\":\n    case \"MultiPoint\":\n    case \"LineString\":\n    case \"MultiLineString\":\n      return 0;\n  }\n  return 0;\n}\nfunction polygonArea(coords) {\n  let total = 0;\n  if (coords && coords.length > 0) {\n    total += Math.abs(ringArea(coords[0]));\n    for (let i = 1; i < coords.length; i++) {\n      total -= Math.abs(ringArea(coords[i]));\n    }\n  }\n  return total;\n}\nvar FACTOR = earthRadius * earthRadius / 2;\nvar PI_OVER_180 = Math.PI / 180;\nfunction ringArea(coords) {\n  const coordsLength = coords.length - 1;\n  if (coordsLength <= 2) return 0;\n  let total = 0;\n  let i = 0;\n  while (i < coordsLength) {\n    const lower = coords[i];\n    const middle = coords[i + 1 === coordsLength ? 0 : i + 1];\n    const upper = coords[i + 2 >= coordsLength ? (i + 2) % coordsLength : i + 2];\n    const lowerX = lower[0] * PI_OVER_180;\n    const middleY = middle[1] * PI_OVER_180;\n    const upperX = upper[0] * PI_OVER_180;\n    total += (upperX - lowerX) * Math.sin(middleY);\n    i++;\n  }\n  return total * FACTOR;\n}\nvar turf_area_default = area;\nexport {\n  area,\n  turf_area_default as default\n};\n//# sourceMappingURL=index.js.map","\nexport default class TinyQueue {\n    constructor(data = [], compare = (a, b) => (a < b ? -1 : a > b ? 1 : 0)) {\n        this.data = data;\n        this.length = this.data.length;\n        this.compare = compare;\n\n        if (this.length > 0) {\n            for (let i = (this.length >> 1) - 1; i >= 0; i--) this._down(i);\n        }\n    }\n\n    push(item) {\n        this.data.push(item);\n        this._up(this.length++);\n    }\n\n    pop() {\n        if (this.length === 0) return undefined;\n\n        const top = this.data[0];\n        const bottom = this.data.pop();\n\n        if (--this.length > 0) {\n            this.data[0] = bottom;\n            this._down(0);\n        }\n\n        return top;\n    }\n\n    peek() {\n        return this.data[0];\n    }\n\n    _up(pos) {\n        const {data, compare} = this;\n        const item = data[pos];\n\n        while (pos > 0) {\n            const parent = (pos - 1) >> 1;\n            const current = data[parent];\n            if (compare(item, current) >= 0) break;\n            data[pos] = current;\n            pos = parent;\n        }\n\n        data[pos] = item;\n    }\n\n    _down(pos) {\n        const {data, compare} = this;\n        const halfLength = this.length >> 1;\n        const item = data[pos];\n\n        while (pos < halfLength) {\n            let bestChild = (pos << 1) + 1; // initially it is the left child\n            const right = bestChild + 1;\n\n            if (right < this.length && compare(data[right], data[bestChild]) < 0) {\n                bestChild = right;\n            }\n            if (compare(data[bestChild], item) >= 0) break;\n\n            data[pos] = data[bestChild];\n            pos = bestChild;\n        }\n\n        data[pos] = item;\n    }\n}\n","\nimport Queue from 'tinyqueue';\n\nexport default function polylabel(polygon, precision = 1.0, debug = false) {\n    // find the bounding box of the outer ring\n    let minX = Infinity;\n    let minY = Infinity;\n    let maxX = -Infinity;\n    let maxY = -Infinity;\n\n    for (const [x, y] of polygon[0]) {\n        if (x < minX) minX = x;\n        if (y < minY) minY = y;\n        if (x > maxX) maxX = x;\n        if (y > maxY) maxY = y;\n    }\n\n    const width = maxX - minX;\n    const height = maxY - minY;\n    const cellSize = Math.max(precision, Math.min(width, height));\n\n    if (cellSize === precision) {\n        const result = [minX, minY];\n        result.distance = 0;\n        return result;\n    }\n\n    // a priority queue of cells in order of their \"potential\" (max distance to polygon)\n    const cellQueue = new Queue([], (a, b) => b.max - a.max);\n\n    // take centroid as the first best guess\n    let bestCell = getCentroidCell(polygon);\n\n    // second guess: bounding box centroid\n    const bboxCell = new Cell(minX + width / 2, minY + height / 2, 0, polygon);\n    if (bboxCell.d > bestCell.d) bestCell = bboxCell;\n\n    let numProbes = 2;\n\n    function potentiallyQueue(x, y, h) {\n        const cell = new Cell(x, y, h, polygon);\n        numProbes++;\n        if (cell.max > bestCell.d + precision) cellQueue.push(cell);\n\n        // update the best cell if we found a better one\n        if (cell.d > bestCell.d) {\n            bestCell = cell;\n            if (debug) console.log(`found best ${Math.round(1e4 * cell.d) / 1e4} after ${numProbes} probes`);\n        }\n    }\n\n    // cover polygon with initial cells\n    let h = cellSize / 2;\n    for (let x = minX; x < maxX; x += cellSize) {\n        for (let y = minY; y < maxY; y += cellSize) {\n            potentiallyQueue(x + h, y + h, h);\n        }\n    }\n\n    while (cellQueue.length) {\n        // pick the most promising cell from the queue\n        const {max, x, y, h: ch} = cellQueue.pop();\n\n        // do not drill down further if there's no chance of a better solution\n        if (max - bestCell.d <= precision) break;\n\n        // split the cell into four cells\n        h = ch / 2;\n        potentiallyQueue(x - h, y - h, h);\n        potentiallyQueue(x + h, y - h, h);\n        potentiallyQueue(x - h, y + h, h);\n        potentiallyQueue(x + h, y + h, h);\n    }\n\n    if (debug) {\n        console.log(`num probes: ${numProbes}\\nbest distance: ${bestCell.d}`);\n    }\n\n    const result = [bestCell.x, bestCell.y];\n    result.distance = bestCell.d;\n    return result;\n}\n\nfunction Cell(x, y, h, polygon) {\n    this.x = x; // cell center x\n    this.y = y; // cell center y\n    this.h = h; // half the cell size\n    this.d = pointToPolygonDist(x, y, polygon); // distance from cell center to polygon\n    this.max = this.d + this.h * Math.SQRT2; // max distance to polygon within a cell\n}\n\n// signed distance from point to polygon outline (negative if point is outside)\nfunction pointToPolygonDist(x, y, polygon) {\n    let inside = false;\n    let minDistSq = Infinity;\n\n    for (const ring of polygon) {\n        for (let i = 0, len = ring.length, j = len - 1; i < len; j = i++) {\n            const a = ring[i];\n            const b = ring[j];\n\n            if ((a[1] > y !== b[1] > y) &&\n                (x < (b[0] - a[0]) * (y - a[1]) / (b[1] - a[1]) + a[0])) inside = !inside;\n\n            minDistSq = Math.min(minDistSq, getSegDistSq(x, y, a, b));\n        }\n    }\n\n    return minDistSq === 0 ? 0 : (inside ? 1 : -1) * Math.sqrt(minDistSq);\n}\n\n// get polygon centroid\nfunction getCentroidCell(polygon) {\n    let area = 0;\n    let x = 0;\n    let y = 0;\n    const points = polygon[0];\n\n    for (let i = 0, len = points.length, j = len - 1; i < len; j = i++) {\n        const a = points[i];\n        const b = points[j];\n        const f = a[0] * b[1] - b[0] * a[1];\n        x += (a[0] + b[0]) * f;\n        y += (a[1] + b[1]) * f;\n        area += f * 3;\n    }\n    const centroid = new Cell(x / area, y / area, 0, polygon);\n    if (area === 0 || centroid.d < 0) return new Cell(points[0][0], points[0][1], 0, polygon);\n    return centroid;\n}\n\n// get squared distance from a point to a segment\nfunction getSegDistSq(px, py, a, b) {\n    let x = a[0];\n    let y = a[1];\n    let dx = b[0] - x;\n    let dy = b[1] - y;\n\n    if (dx !== 0 || dy !== 0) {\n        const t = ((px - x) * dx + (py - y) * dy) / (dx * dx + dy * dy);\n\n        if (t > 1) {\n            x = b[0];\n            y = b[1];\n\n        } else if (t > 0) {\n            x += dx * t;\n            y += dy * t;\n        }\n    }\n\n    dx = px - x;\n    dy = py - y;\n\n    return dx * dx + dy * dy;\n}\n","// index.ts\nimport {\n  lineString,\n  multiLineString,\n  multiPolygon,\n  polygon\n} from \"@turf/helpers\";\nimport { getGeom } from \"@turf/invariant\";\n\n// lib/lineclip.ts\nfunction lineclip(points, bbox, result) {\n  var len = points.length, codeA = bitCode(points[0], bbox), part = [], i, codeB, lastCode;\n  let a;\n  let b;\n  if (!result) result = [];\n  for (i = 1; i < len; i++) {\n    a = points[i - 1];\n    b = points[i];\n    codeB = lastCode = bitCode(b, bbox);\n    while (true) {\n      if (!(codeA | codeB)) {\n        part.push(a);\n        if (codeB !== lastCode) {\n          part.push(b);\n          if (i < len - 1) {\n            result.push(part);\n            part = [];\n          }\n        } else if (i === len - 1) {\n          part.push(b);\n        }\n        break;\n      } else if (codeA & codeB) {\n        break;\n      } else if (codeA) {\n        a = intersect(a, b, codeA, bbox);\n        codeA = bitCode(a, bbox);\n      } else {\n        b = intersect(a, b, codeB, bbox);\n        codeB = bitCode(b, bbox);\n      }\n    }\n    codeA = lastCode;\n  }\n  if (part.length) result.push(part);\n  return result;\n}\nfunction polygonclip(points, bbox) {\n  var result, edge, prev, prevInside, i, p, inside;\n  for (edge = 1; edge <= 8; edge *= 2) {\n    result = [];\n    prev = points[points.length - 1];\n    prevInside = !(bitCode(prev, bbox) & edge);\n    for (i = 0; i < points.length; i++) {\n      p = points[i];\n      inside = !(bitCode(p, bbox) & edge);\n      if (inside !== prevInside) result.push(intersect(prev, p, edge, bbox));\n      if (inside) result.push(p);\n      prev = p;\n      prevInside = inside;\n    }\n    points = result;\n    if (!points.length) break;\n  }\n  return result;\n}\nfunction intersect(a, b, edge, bbox) {\n  return edge & 8 ? [a[0] + (b[0] - a[0]) * (bbox[3] - a[1]) / (b[1] - a[1]), bbox[3]] : edge & 4 ? [a[0] + (b[0] - a[0]) * (bbox[1] - a[1]) / (b[1] - a[1]), bbox[1]] : edge & 2 ? [bbox[2], a[1] + (b[1] - a[1]) * (bbox[2] - a[0]) / (b[0] - a[0])] : edge & 1 ? [bbox[0], a[1] + (b[1] - a[1]) * (bbox[0] - a[0]) / (b[0] - a[0])] : null;\n}\nfunction bitCode(p, bbox) {\n  var code = 0;\n  if (p[0] < bbox[0]) code |= 1;\n  else if (p[0] > bbox[2]) code |= 2;\n  if (p[1] < bbox[1]) code |= 4;\n  else if (p[1] > bbox[3]) code |= 8;\n  return code;\n}\n\n// index.ts\nfunction bboxClip(feature, bbox) {\n  const geom = getGeom(feature);\n  const type = geom.type;\n  const properties = feature.type === \"Feature\" ? feature.properties : {};\n  let coords = geom.coordinates;\n  switch (type) {\n    case \"LineString\":\n    case \"MultiLineString\": {\n      const lines = [];\n      if (type === \"LineString\") {\n        coords = [coords];\n      }\n      coords.forEach((line) => {\n        lineclip(line, bbox, lines);\n      });\n      if (lines.length === 1) {\n        return lineString(lines[0], properties);\n      }\n      return multiLineString(lines, properties);\n    }\n    case \"Polygon\":\n      return polygon(clipPolygon(coords, bbox), properties);\n    case \"MultiPolygon\":\n      return multiPolygon(\n        coords.map((poly) => {\n          return clipPolygon(poly, bbox);\n        }),\n        properties\n      );\n    default:\n      throw new Error(\"geometry \" + type + \" not supported\");\n  }\n}\nfunction clipPolygon(rings, bbox) {\n  const outRings = [];\n  for (const ring of rings) {\n    const clipped = polygonclip(ring, bbox);\n    if (clipped.length > 0) {\n      if (clipped[0][0] !== clipped[clipped.length - 1][0] || clipped[0][1] !== clipped[clipped.length - 1][1]) {\n        clipped.push(clipped[0]);\n      }\n      if (clipped.length >= 4) {\n        outRings.push(clipped);\n      }\n    }\n  }\n  return outRings;\n}\nvar turf_bbox_clip_default = bboxClip;\nexport {\n  bboxClip,\n  turf_bbox_clip_default as default\n};\n//# sourceMappingURL=index.js.map","import polylabel from 'polylabel'\nimport { area as turfArea } from '@turf/area'\nimport { distance as turfDistance } from '@turf/distance'\nimport { point as TurfPoint, polygon as TurfPolygon, multiPolygon as TurfMultiPolygon } from '@turf/helpers'\nimport { bboxClip as TurfBboxClip } from '@turf/bbox-clip'\nimport { getFocusBounds } from '../../lib/viewport'\nimport { defaults } from './constants'\n\nfunction getPaddedBounds () {\n  const { map } = this\n  const padding = map.getPadding()\n  const bounds = map.getBounds()\n\n  // Get the pixel coordinates for the current bounds\n  const sw = map.project([bounds.getWest(), bounds.getSouth()])\n  const ne = map.project([bounds.getEast(), bounds.getNorth()])\n\n  // Adjust for padding\n  sw.x += padding.left\n  sw.y -= padding.bottom\n  ne.x -= padding.right\n  ne.y += padding.top\n\n  // Convert back to geographical coordinates\n  const paddedSW = map.unproject(sw)\n  const paddedNE = map.unproject(ne)\n\n  // Create new bounds\n  const paddedBounds = [[paddedSW.lng, paddedSW.lat], [paddedNE.lng, paddedNE.lat]]\n\n  return paddedBounds.flat(1)\n}\n\nfunction addFeatureProperties (features) {\n  const { map } = this\n  return features.map(f => {\n    const { lng, lat } = map.getCenter()\n    const coord = f.geometry.type === 'Polygon' ? polylabel(f.geometry.coordinates, 0.00001) : f.geometry.coordinates\n    const p1 = new TurfPoint([coord[0], coord[1]])\n    const p2 = new TurfPoint([lng, lat])\n    const distance = turfDistance(p1, p2, { units: 'metres' })\n    return {\n      ...f.properties,\n      id: f.properties.id || f.id,\n      geometryType: f.geometry.type,\n      coord,\n      distance\n    }\n  })\n}\n\nfunction intersectFeatures (bounds, features) {\n  features = features.map(f => {\n    if (['Polygon', 'MultiPolygon'].includes(f.geometry.type)) {\n      const polygon = f.geometry.type === 'Polygon' ? new TurfPolygon(f.geometry.coordinates) : new TurfMultiPolygon(f.geometry.coordinates)\n      const clipped = TurfBboxClip(polygon, bounds)\n      // Remove empty rings\n      clipped.geometry.coordinates = clipped.geometry.coordinates.filter(c => c.length)\n      // const clippedGeometry = martinez.intersection(boundsPolygon.geometry.coordinates, f.geometry.coordinates)\n      f.geometry = clipped.geometry\n    }\n    return f\n  })\n  return features\n}\n\nfunction combineFeatures (features) {\n  const combined = []\n  features.forEach(f => {\n    const group = combined.find(c => c.length && ((f.id && f.id === c[0].id) || (f.properties.id && f.properties.id === c[0].properties.id)))\n    if (f.geometry.type === 'MultiPolygon') {\n      // Get largest single polygon, outer shape (excluding holes) and add area\n      const parts = f.geometry.coordinates.map(c => {\n        const polygon = new TurfPolygon([c[0]])\n        polygon.properties = { area: turfArea(polygon) }\n        return polygon\n      })\n      const largest = parts.find(p => p.properties.area === Math.max(...parts.map(b => b.properties.area)))\n      f.geometry = largest.geometry\n      f.properties.area = largest.properties.area\n    } else if (f.geometry.type === 'Polygon') {\n      // Get out shape (excluding holes) and add area\n      const polygon = new TurfPolygon([f.geometry.coordinates[0]])\n      f.properties.area = turfArea(polygon)\n      f.geometry = polygon.geometry\n    } else {\n      f.properties.area = 0\n    }\n    group?.push(f) || combined.push([f])\n  })\n  // Return largest single polygon\n  return combined.map(g => g.find(f => f.properties.area === Math.max(...g.map(b => b.properties.area))))\n}\n\nfunction getViewport () {\n  const { map } = this\n  const bounds = map.getBounds().toArray().flat(1)\n  const focusBounds = getPaddedBounds.bind(this)()\n  let center = map.getCenter()\n  let zoom = map.getZoom()\n  center = center.toArray().map(n => parseFloat(n.toFixed(defaults.PRECISION)))\n  zoom = parseFloat(zoom.toFixed(defaults.PRECISION))\n  const isMaxZoom = map.getZoom() >= map.getMaxZoom()\n  const isMinZoom = map.getZoom() <= map.getMinZoom()\n\n  return {\n    bounds,\n    focusBounds,\n    center,\n    zoom,\n    isMaxZoom,\n    isMinZoom\n  }\n}\n\nexport function addMapHoverBehaviour () {\n  const { map, featureLayers, labelLayers } = this\n\n  // Toggle cursor style for features\n  map.on('mousemove', [...featureLayers, ...labelLayers], e => {\n    const features = map.queryRenderedFeatures(e.point, { layers: [...featureLayers, ...labelLayers] })\n    const isFeature = !e.originalEvent.altKey && features && !!features.find(f => featureLayers.includes(f.layer.id))\n    const isLabel = e.originalEvent.altKey && features && !!features.find(f => labelLayers.includes(f.layer.id))\n    map.getCanvas().style.cursor = isFeature || isLabel ? 'pointer' : ''\n  })\n\n  // Revert cursor on mouseout\n  map.on('mouseout', [...featureLayers, ...labelLayers], () => { map.getCanvas().style.cursor = '' })\n}\n\nexport async function getDetail (pixel) {\n  const { selectedLayers } = this\n  const viewport = getViewport.bind(this)()\n  const features = getFeatures.bind(this)(pixel)\n  const label = getHighlightedLabel.bind(this)()\n  const selectedId = getSelectedFeatureId.bind(this)(selectedLayers)\n\n  return {\n    ...viewport,\n    resultType: features.resultType,\n    coord: features.coord,\n    selectedId,\n    features,\n    label\n  }\n}\n\nexport function getFeatures (pixel) {\n  const { map, featureLayers, locationLayers, paddingBox, scale } = this\n  const bounds = getFocusBounds(paddingBox, scale)\n\n  // Get all visible feature and pixel layers\n  let layers = [...featureLayers, ...locationLayers]\n  layers = map.getStyle()?.layers.filter(l => layers.includes(l?.id) && l?.layout?.visibility !== 'none').map(l => l.id)\n\n  // Get all features at given pixel\n  let featuresAtPixel = map.queryRenderedFeatures(pixel, { layers })\n\n  featuresAtPixel = (featuresAtPixel.map(f => {\n    return {\n      ...f.properties,\n      id: f.properties.id || f.id,\n      name: f.properties.name,\n      layer: f.layer.id\n    }\n  }))\n\n  // Get all 'featureLayer' features in the viewport\n  const renderedFeaturesInViewport = map.queryRenderedFeatures({ layers: featureLayers })\n\n  // Get total 'featureLayer' features in viewport (May be more than 9)\n  const featuresTotal = Array.from(new Set(renderedFeaturesInViewport.map(f => f.properties.id || f.id))).length\n\n  // Get all 'featureLayer' features in the padded bounds\n  const renderedFeaturesInPadding = map.queryRenderedFeatures(bounds, { layers: featureLayers })\n\n  // Get total 'featureLayer' features in padding bounds (May be more than 9)\n  const featuresFocusTotal = Array.from(new Set(renderedFeaturesInPadding.map(f => f.properties.id || f.id))).length\n\n  // Get geometry that intersects bounds\n  const intersectingFocusFeatures = intersectFeatures(getPaddedBounds.bind(this)(), renderedFeaturesInPadding)\n\n  // Split multi polygons and combine duplicate features\n  const viewportPolygonFeatures = featuresFocusTotal <= defaults.MAX_FEATURES ? combineFeatures(renderedFeaturesInViewport) : []\n  const focusPolygonFeatures = featuresFocusTotal <= defaults.MAX_FEATURES ? combineFeatures(intersectingFocusFeatures) : []\n\n  // Add props and sort features\n  const featuresInViewport = renderedFeaturesInViewport.length <= defaults.MAX_FEATURES ? addFeatureProperties.bind(this)(viewportPolygonFeatures) : []\n  const featuresInFocus = addFeatureProperties.bind(this)(focusPolygonFeatures).sort((a, b) => a.distance - b.distance)\n\n  // Get long lat of query\n  let lngLat\n  if (pixel) {\n    lngLat = map.unproject(pixel)\n    lngLat = [lngLat.lng, lngLat.lat]\n    lngLat = lngLat.map(c => Math.round(c * Math.pow(10, defaults.PRECISION)) / Math.pow(10, defaults.PRECISION))\n  }\n\n  // Set 'features' result type\n  const feature = featuresAtPixel.length ? featuresAtPixel[0] : null\n  const featureType = (featureLayers?.includes(feature?.layer) && 'feature') || (locationLayers?.includes(feature?.layer) && 'pixel')\n  const hasFeatureLayers = layers?.some(l => featureLayers?.includes(l))\n  const hasPixelLayers = layers?.some(l => locationLayers?.includes(l))\n  const resultType = featureType || (hasPixelLayers ? 'pixel' : null)\n\n  return {\n    resultType,\n    items: featuresAtPixel,\n    featuresTotal,\n    featuresInViewport,\n    featuresFocusTotal,\n    featuresInFocus,\n    isFeaturesInMap: hasFeatureLayers,\n    isPixelFeaturesAtPixel: locationLayers?.includes(feature?.layer),\n    isPixelFeaturesInMap: hasPixelLayers,\n    coord: lngLat\n  }\n}\n\nexport function toggleSelectedFeature (id) {\n  const { map, selectedLayers } = this\n  if (map?.getStyle()) {\n    for (const layer of selectedLayers) {\n      map.setLayoutProperty(layer, 'visibility', id ? 'visible' : 'none')\n      map.setFilter(layer, [\n        'any',\n        ['==', ['id'], id || ''],\n        ['==', ['get', 'id'], id || '']\n      ])\n    }\n  }\n}\n\nexport function getHighlightedLabel () {\n  const { map } = this\n  const features = map.queryRenderedFeatures({ layers: ['label'] })\n  let text\n  if (features?.length) {\n    const label = map.getStyle()?.layers.find(l => l.id === 'label')?.layout['text-field']\n    text = `${label} (${features[0].properties.layer})`\n  }\n  return text\n}\n\nexport function getSelectedFeatureId (selectedLayers) {\n  const { map } = this\n  const features = map.queryRenderedFeatures({ layers: selectedLayers })\n  return features.length ? (features[0].properties?.id || features[0]?.id) : null\n}\n\nexport function getLabel (pixel) {\n  const { map, labelLayers } = this\n  const feature = map.queryRenderedFeatures(pixel, { layers: labelLayers })[0]\n  return feature\n}\n\nexport function getLabels () {\n  const { map, paddingBox, scale } = this\n  const bounds = getFocusBounds(paddingBox, scale)\n  const features = map.queryRenderedFeatures(bounds, { layers: this.labelLayers })\n  const labels = features.map(f => {\n    let pixel = f.geometry.type === 'Point' && map.project(f.geometry.coordinates)\n    if (f.geometry.type !== 'Point') {\n      const coordinates = f.geometry.coordinates.flat(f.geometry.type === 'MultiLineString' ? 1 : 0)\n      const pixels = coordinates.map(c => map.project(c))\n      const xS = pixels.map(p => p.x)\n      const yS = pixels.map(p => p.y)\n      const centerX = ((Math.max(...xS) - Math.min(...xS)) / 2) + Math.min(...xS)\n      const centerY = ((Math.max(...yS) - Math.min(...yS)) / 2) + Math.min(...yS)\n      pixel = { x: centerX, y: centerY }\n    }\n    return {\n      feature: f,\n      pixel: [pixel.x, pixel.y]\n    }\n  })\n  return labels\n}\n","export const locationMarkerHTML = () => {\n  const el = document.createElement('div')\n  el.className = 'fm-c-marker fm-c-marker--location'\n  el.innerHTML = '<div class=\"fm-c-marker__inner\"><svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" fill=\"currentColor\"><circle cx=\"10\" cy=\"10\" r=\"8\" stroke=\"#fff\" stroke-width=\"3\"/></svg></div>'\n  return el\n}\n\nexport const targetMarkerHTML = () => {\n  const el = document.createElement('div')\n  el.className = 'fm-c-marker fm-c-marker--target'\n  el.innerHTML = `<div class=\"fm-c-marker__inner\">\n    <svg width=\"38\" height=\"38\" viewBox=\"0 0 38 38\" fill-rule=\"evenodd\" fill=\"currentColor\">\n      <path d=\"M5.035 20H1v-2h4.035C5.525 11.069 11.069 5.525 18 5.035V1h2v4.035c6.931.49 12.475 6.034 12.965 12.965H37v2h-4.035c-.49 6.931-6.034 12.475-12.965 12.965V37h-2v-4.035C11.069 32.475 5.525 26.931 5.035 20zM19 7A12.01 12.01 0 0 0 7 19a12.01 12.01 0 0 0 12 12 12.01 12.01 0 0 0 12-12A12.01 12.01 0 0 0 19 7zm0 10a2 2 0 1 1 0 4 2 2 0 1 1 0-4z\"/>\n      <path d=\"M5.035 20H1v-2h4.035a14.02 14.02 0 0 1 .246-1.8l1.96.399C7.083 17.375 7 18.178 7 19s.083 1.625.241 2.401l-1.96.399a14.02 14.02 0 0 1-.246-1.8zM20 5.035a14.02 14.02 0 0 1 1.8.246l-.399 1.96C20.625 7.083 19.822 7 19 7s-1.625.083-2.401.241l-.399-1.96a14.02 14.02 0 0 1 1.8-.246V1h2v4.035zm-2 27.93a14.02 14.02 0 0 1-1.8-.246l.399-1.96c.776.158 1.579.241 2.401.241s1.625-.083 2.401-.241l.399 1.96a14.02 14.02 0 0 1-1.8.246V37h-2v-4.035zM32.965 20a14.02 14.02 0 0 1-.246 1.8l-1.96-.399c.158-.776.241-1.579.241-2.401s-.083-1.625-.241-2.401l1.96-.399a14.02 14.02 0 0 1 .246 1.8H37v2h-4.035zM19 17a2 2 0 1 1 0 4 2 2 0 1 1 0-4zm3.8-9.385l.634-1.897a13.98 13.98 0 0 1 4.848 2.805l-1.327 1.496c-1.196-1.06-2.605-1.886-4.155-2.404zm5.181 3.43l1.496-1.327a13.98 13.98 0 0 1 2.805 4.848l-1.897.634c-.518-1.55-1.344-2.959-2.404-4.155zM30.385 22.8l1.897.634a13.98 13.98 0 0 1-2.805 4.848l-1.496-1.327c1.06-1.196 1.886-2.605 2.404-4.155zm-3.43 5.181l1.327 1.496a13.98 13.98 0 0 1-4.848 2.805l-.634-1.897c1.55-.518 2.959-1.344 4.155-2.404zM15.2 30.385l-.634 1.897a13.98 13.98 0 0 1-4.848-2.805l1.327-1.496c1.196 1.06 2.605 1.886 4.155 2.404zm-5.181-3.43l-1.496 1.327a13.98 13.98 0 0 1-2.805-4.848l1.897-.634c.518 1.55 1.344 2.959 2.404 4.155zM7.615 15.2l-1.897-.634a13.98 13.98 0 0 1 2.805-4.848l1.496 1.327c-1.06 1.196-1.886 2.605-2.404 4.155zm3.43-5.181L9.718 8.523a13.98 13.98 0 0 1 4.848-2.805l.634 1.897c-1.55.518-2.959 1.344-4.155 2.404z\"/>\n    </svg>\n  </div>`\n  return el\n}\n\nexport const shortcutMarkerHTML = (key) => {\n  const el = document.createElement('div')\n  el.className = 'fm-c-marker fm-c-marker--shortcut'\n  el.innerHTML = `<div class=\"fm-c-marker__inner\">${key}</div>`\n  return el\n}\n","import computedStyleToInlineStyle from 'computed-style-to-inline-style'\nimport { defaults } from './constants'\nimport { shortcutMarkerHTML } from './marker'\nimport { parseSVG } from '../../lib/symbols'\n\nconst SYMBOL_PLACEMENT = 'symbol-placement'\nconst TEXT_FIELD = 'text-field'\nconst SCALE_FACTOR_SMALL = 1.5\nconst SCALE_FACTOR_LARGE = 1.25\n\nexport function amendLineSymbolLayers () {\n  const { map } = this\n  const lineSymbolLayers = map.getStyle().layers.filter(l => l.layout && (SYMBOL_PLACEMENT in l.layout) && l.layout[SYMBOL_PLACEMENT] === 'line')\n  lineSymbolLayers.forEach(l => map.setLayoutProperty(l.id, SYMBOL_PLACEMENT, 'line-center'))\n}\n\nexport function addHighlightedLabelLayer () {\n  const { map } = this\n  const layers = map.getStyle().layers\n  this.labelLayers = layers.filter(l => l.id !== 'label' && l.layout ? l.layout[TEXT_FIELD] : null).map(l => l.id)\n  map.addSource('label', { type: 'geojson', data: { type: 'FeatureCollection', features: [] } })\n  map.addLayer({\n    id: 'label',\n    type: 'symbol',\n    source: 'label',\n    layout: {\n      'text-allow-overlap': true,\n      'text-ignore-placement': true\n    },\n    paint: {\n      'text-halo-width': 3,\n      'text-halo-blur': 1,\n      'text-opacity': 1\n    }\n  })\n}\n\nexport function addShortcutMarkers (features) {\n  const { map, shortcutMarkers } = this\n  const { Marker } = this.modules\n  shortcutMarkers.forEach(m => m.remove())\n  features.forEach((f, i) => {\n    const offset = f.geometryType === 'Point' ? [0, defaults.SHORTCUT_LABEL_OFFSET] : [0, 0]\n    shortcutMarkers.push(new Marker({ element: shortcutMarkerHTML(i + 1), offset }).setLngLat(f.coord).addTo(map))\n  })\n}\n\nexport function highlightLabel (feature) {\n  const { map, scale, style } = this\n\n  if (!map.style) {\n    return\n  }\n\n  if (feature) {\n    map.moveLayer('label')\n    map.getSource('label').setData({\n      type: 'Feature',\n      geometry: feature.geometry,\n      properties: {\n        ...feature.properties,\n        layer: feature.layer.id\n      }\n    })\n    // Clone layout properties\n    const textScale = scale === 1 ? SCALE_FACTOR_SMALL : SCALE_FACTOR_LARGE\n    const textField = feature.layer.layout[TEXT_FIELD]\n    map.setLayoutProperty('label', SYMBOL_PLACEMENT, feature.layer.layout[SYMBOL_PLACEMENT])\n    map.setLayoutProperty('label', TEXT_FIELD, textField.sections ? textField.sections[0].text : textField)\n    map.setLayoutProperty('label', 'text-font', feature.layer.layout['text-font'])\n    map.setLayoutProperty('label', 'text-letter-spacing', feature.layer.layout['text-letter-spacing'])\n    map.setLayoutProperty('label', 'text-size', feature.layer.layout['text-size'] * textScale)\n    map.setLayoutProperty('label', 'text-anchor', feature.layer.layout['text-anchor'])\n    map.setLayoutProperty('label', 'text-justify', feature.layer.layout['text-justify'])\n    map.setLayoutProperty('label', 'text-offset', feature.layer.layout['text-offset']?.map(o => o / textScale))\n    // Clone paint properties\n    map.setPaintProperty('label', 'text-color', (style === 'dark' ? '#ffffff' : '#000000'))\n    map.setPaintProperty('label', 'text-halo-color', (style === 'dark' ? '#000000' : '#ffffff'))\n  } else {\n    map?.getSource('label')?.setData({\n      type: 'FeatureCollection',\n      features: []\n    })\n  }\n}\n\nexport function addSelectedLayers (layers, selectedId, isDarkBasemap) {\n  const { map } = this\n  const selectedLayers = []\n  for (const layer of layers) {\n    layer.id = `${layer.id}-selected`\n    layer.filter = ['==', 'id', selectedId || '']\n    if (layer.type === 'symbol') {\n      layer.layout['icon-image'] = ['concat', layer.layout['icon-image'], '-selected']\n    }\n    if (layer.type === 'fill') {\n      layer.paint = { 'line-color': isDarkBasemap ? '#ffffff' : '#0b0c0c', 'line-width': 2 }\n      layer.type = 'line'\n    }\n    if (map.getLayer(layer.id)) {\n      map.removeLayer(layer.id)\n    }\n    selectedLayers.push(layer.id)\n    setTimeout(() => map.addLayer(layer), 0)\n  }\n  return selectedLayers\n}\n\nexport function loadSymbols () {\n  let fn\n  if (this.symbols?.length) {\n    const { map, symbols, style } = this\n    const isDarkBasemap = ['dark', 'aerial'].includes(style.name)\n\n    fn = Promise.all(symbols.map(u => fetch(u))).then(responses =>\n      Promise.all(responses.map(r => r.text()))\n    ).then(texts => Promise.all(texts.map((t, i) => loadImage(getName(symbols[i]), t, map, isDarkBasemap))\n      .concat(texts.map((t, i) => loadImage(`${getName(symbols[i])}-selected`, t, map, isDarkBasemap)))\n    ))\n  }\n  return fn\n}\n\nconst getName = path => {\n  const extNumChars = 4\n  return path.split('\\\\').pop().split('/').pop().slice(0, -Math.abs(extNumChars))\n}\n\nconst loadImage = (name, text, map, isDarkBasemap) => {\n  const parsed = parseSVG(name, null, text, isDarkBasemap, 2)\n  const container = map.getCanvasContainer()\n  container.insertAdjacentHTML('beforeend', parsed)\n  const el = container.lastChild\n  computedStyleToInlineStyle(el, { recursive: true, properties: ['stroke', 'fill'] })\n  const base64 = 'data:image/svg+xml;base64,' + btoa(container.lastChild.outerHTML)\n  const img = document.createElement('img')\n  el?.remove()\n  return new Promise((resolve, reject) => {\n    img.onload = () => {\n      try {\n        if (map?.hasImage(name)) {\n          return\n        }\n        map.addImage(name, img)\n        resolve(img)\n      } catch (err) {\n        console.log(err)\n      }\n    }\n    img.onerror = reject\n    img.src = base64\n  })\n}\n","import { getDetail, addMapHoverBehaviour } from './query'\nimport { loadSymbols, addHighlightedLabelLayer, amendLineSymbolLayers, addShortcutMarkers, addSelectedLayers } from './symbols'\n\nexport const getResolution = (map) => {\n  const center = map.getCenter()\n  const zoom = map.getZoom()\n  const lat = center.lat\n  const EARTH_CIRCUMFERENCE = 40075016.686\n  const TILE_SIZE = 512\n  const scale = Math.pow(2, zoom)\n  const resolution = (EARTH_CIRCUMFERENCE * Math.cos((lat * Math.PI) / 180)) / (scale * TILE_SIZE)\n  return resolution\n}\n\nexport const getAttributions = (map) => {\n  const style = map.getStyle()\n  if (!style) {\n    return []\n  }\n\n  const currentZoom = map.getZoom()\n  const activeAttributions = new Set()\n\n  // Check each layer for visibility at current zoom\n  style.layers.forEach(layer => {\n    // Skip layers without a source\n    if (!layer.source) return\n\n    // Check if layer is visible based on zoom and visibility property\n    const minZoom = layer.minzoom !== undefined ? layer.minzoom : 0\n    const maxZoom = layer.maxzoom !== undefined ? layer.maxzoom : 24\n    const isVisible = currentZoom >= minZoom && currentZoom < maxZoom && (!layer.layout || layer.layout.visibility !== 'none')\n\n    // If layer is visible, get attribution from its source\n    if (isVisible) {\n      const source = style.sources[layer.source]\n      if (source && source.attribution) {\n        activeAttributions.add(source.attribution)\n      }\n    }\n  })\n\n  return Array.from(activeAttributions)\n}\n\nexport async function handleLoad () {\n  const { map } = this\n  await loadSymbols.bind(this)()\n  this.isLoaded = true\n  const resolution = getResolution(map)\n  const zoom = map.getZoom()\n  const attributions = getAttributions(map)\n  this.dispatchEvent(new CustomEvent('load', {\n    detail: {\n      framework: { map },\n      resolution,\n      zoom,\n      attributions\n    }\n  }))\n}\n\nexport async function handleStyleLoad () {\n  const { map } = this\n  // Store ref to baselayers when a new style is loaded\n  this.baseLayers = map.getStyle().layers\n  // Amend symbol-placement prop so labels have a coordinate\n  amendLineSymbolLayers.bind(this)()\n  // Add highlighted label layer and source\n  addHighlightedLabelLayer.bind(this)()\n  // Change cursor type on feature hover\n  addMapHoverBehaviour.bind(this)(this.featureLayers, this.labelLayers)\n  if (this.isLoaded) {\n    await loadSymbols.bind(this)()\n    this.dispatchEvent(new CustomEvent('style', {\n      detail: {\n        type: 'style'\n      }\n    }))\n  }\n}\n\nexport async function handleIdle () {\n  if (this.map) {\n    const { map, paddingBox, selectedId, scale } = this\n    const { offsetTop, offsetLeft, offsetWidth, offsetHeight } = paddingBox\n    const { offsetTop: parentOffsetTop, offsetLeft: parentOffsetLeft } = paddingBox.parentNode\n    const pixel = [offsetLeft + parentOffsetLeft + (offsetWidth / 2), offsetTop + parentOffsetTop + (offsetHeight / 2)].map(c => c / scale)\n    const detail = await getDetail.bind(this)(selectedId ? null : pixel)\n    const attributions = getAttributions(map)\n    addShortcutMarkers.bind(this)(detail?.features?.featuresInFocus)\n    this.dispatchEvent(new CustomEvent('update', {\n      detail: {\n        ...detail,\n        attributions\n      }\n    }))\n  }\n}\n\nexport async function handleMoveStart (e) {\n  this.hideLabel()\n  this.dispatchEvent(new CustomEvent('movestart', {\n    detail: {\n      isUserInitiated: e.isUserInitiated || !!e.originalEvent\n    }\n  }))\n}\n\nexport function handleMove () {\n  const { map } = this\n  const isMaxZoom = map.getZoom() >= map.getMaxZoom()\n  const isMinZoom = map.getZoom() <= map.getMinZoom()\n  const zoom = map.getZoom()\n  const resolution = getResolution(map)\n  const attributions = getAttributions(map)\n\n  // Need to include maxBounds check as this can also constrain zoom\n  this.dispatchEvent(new CustomEvent('move', {\n    detail: {\n      isMaxZoom,\n      isMinZoom,\n      zoom,\n      resolution,\n      attributions\n    }\n  }))\n}\n\nexport function handleStyleData (e) {\n  if (this.baseLayers.length) {\n    const { map, style, selectedId } = this\n    const featureLayers = e.target.getStyle().layers.filter(l => this.featureLayers.includes(l.id))\n    const selectedLayers = map.getStyle().layers.filter(l => l.id.includes('selected'))\n    if (selectedLayers.length !== featureLayers.length) {\n      const isDarkBasemap = ['dark', 'aerial'].includes(style.name)\n      this.selectedLayers = addSelectedLayers.bind(this)(featureLayers, selectedId, isDarkBasemap)\n    }\n  }\n}\n\nexport function handleError (err) {\n  console.log(err)\n}\n","import { handleLoad, handleMoveStart, handleMove, handleIdle, handleStyleData, handleStyleLoad, handleError } from './events.js'\nimport { toggleSelectedFeature, getDetail, getLabels, getLabel } from './query.js'\nimport { locationMarkerHTML, targetMarkerHTML } from './marker.js'\nimport { highlightLabel } from './symbols.js'\nimport { getFocusPadding, spatialNavigate, getScale } from '../../lib/viewport.js'\nimport { debounce } from '../../lib/debounce.js'\nimport { throttle } from '../../lib/throttle.js'\nimport { defaults, css } from './constants.js'\nimport { defaults as storeDefaults } from '../../store/constants.js'\n\nclass Provider extends EventTarget {\n  constructor ({ capabilities, transformRequest, symbols }) {\n    super()\n    this.srid = 4326\n    this.capabilities = capabilities\n    this.transformRequest = transformRequest\n    this.symbols = symbols\n    this.baseLayers = []\n    this.selectedId = ''\n    this.selectedCoordinate = null\n    this.isLoaded = false\n  }\n\n  init (options) {\n    if (this.capabilities.isLatest) {\n      import(/* webpackChunkName: \"maplibre\", webpackExports: [\"Map\", \"Marker\", \"LngLatBounds\"] */ 'maplibre-gl').then(module => {\n        this.addMap(module, options)\n      })\n    } else {\n      Promise.all([\n        import(/* webpackChunkName: \"maplibre-legacy\", webpackExports: [\"Map\", \"Marker\", \"LngLatBounds\"] */ 'maplibre-gl-legacy'),\n        import(/* webpackChunkName: \"maplibre-legacy\", webpackExports: [\"install\"] */ 'resize-observer'),\n        import(/* webpackChunkName: \"maplibre-legacy\" */ 'array-flat-polyfill')\n      ]).then(promises => {\n        if (!window.ResizeObserver) {\n          promises[1].install()\n        }\n        this.addMap(promises[0], options)\n      })\n    }\n  }\n\n  remove () {\n    this.map?.remove()\n    this.map = null\n  }\n\n  addMap (module, options) {\n    const { container, paddingBox, bounds, maxBounds, center, zoom, minZoom, maxZoom, style, size, featureLayers, locationLayers, callBack } = options\n    const { Map: MaplibreMap, Marker, LngLatBounds } = module.default\n    const scale = getScale(size)\n\n    const map = new MaplibreMap({\n      ...options,\n      container,\n      style: style?.url,\n      maxBounds: maxBounds || storeDefaults.MAX_BOUNDS_4326,\n      bounds,\n      center,\n      zoom,\n      minZoom,\n      maxZoom,\n      fadeDuration: 0,\n      attributionControl: false,\n      dragRotate: false\n    })\n\n    // Set initial padding, bounds and center (*No option to set in constructor)\n    // map.showPadding = true\n\n    map.setPadding(getFocusPadding(paddingBox, scale))\n    if (bounds) {\n      map.fitBounds(bounds, { animate: false })\n    } else {\n      map.flyTo({ center, zoom, animate: false })\n    }\n\n    // Disable rotation\n    map.touchZoomRotate.disableRotation()\n\n    // Overide device pixel ratio\n    if (map.setPixelRatio) {\n      map.setPixelRatio(window.devicePixelRatio * scale)\n    }\n\n    // Tidy up canvas\n    const canvas = map.getCanvas()\n    canvas.removeAttribute('role')\n    canvas.removeAttribute('tabindex')\n    canvas.removeAttribute('aria-label')\n    canvas.style.display = 'block'\n\n    this.container = container\n    this.map = map\n    this.featureLayers = featureLayers || []\n    this.locationLayers = locationLayers || []\n    this.selectedLayers = []\n    this.paddingBox = paddingBox\n    this.style = style\n    this.scale = scale\n\n    // Add markers\n    this.targetMarker = new Marker({ element: targetMarkerHTML() }).setLngLat([0, 0]).addTo(map)\n    this.locationMarker = new Marker({ element: locationMarkerHTML() }).setLngLat([0, 0]).addTo(map)\n    this.shortcutMarkers = []\n\n    // Return ref to dynamically loaded modules and framework functions\n    this.modules = { MaplibreMap, Marker, LngLatBounds }\n    this.framework = { map }\n\n    // Map ready event (first load)\n    map.on('load', handleLoad.bind(this))\n\n    // Map movestart\n    map.on('movestart', handleMoveStart.bind(this))\n\n    // Detect max/min zoom on move\n    const throttleHandleMove = throttle(() => { handleMove.bind(this)() }, defaults.THROTTLE)\n    map.on('move', throttleHandleMove)\n\n    // Detect map layer addition\n    map.on('styledata', handleStyleData.bind(this))\n\n    // All render/changes/animations complete. Must debounce, min 500ms\n    const debounceHandleIdle = debounce(() => { handleIdle.bind(this)() }, defaults.DELAY)\n    map.on('idle', debounceHandleIdle)\n\n    // Map style change\n    map.on('style.load', handleStyleLoad.bind(this))\n\n    // Capture errors\n    map.on('error', handleError.bind(this))\n\n    // Implementation callback after initialisation\n    if (callBack) {\n      callBack(this)\n    }\n  }\n\n  getPixel (coord) {\n    let pixel\n    if (this.map && coord) {\n      pixel = this.map.project(coord)\n      pixel = [Math.round(pixel.x), Math.round(pixel.y)]\n    }\n    return pixel\n  }\n\n  panBy (offset, isUserInitiated = true) {\n    if (this.map) {\n      this.map.panBy(offset, { ...defaults.ANIMATION }, { isUserInitiated })\n    }\n  }\n\n  panTo (coord) {\n    this.map.flyTo({ center: coord, ...defaults.ANIMATION })\n  }\n\n  zoomIn () {\n    if (this.map) {\n      this.map.zoomIn(defaults.ANIMATION)\n    }\n  }\n\n  zoomOut () {\n    if (this.map) {\n      this.map.zoomOut(defaults.ANIMATION)\n    }\n  }\n\n  setStyle (style) {\n    this.style = style\n    this.map.setStyle(style.url, { diff: false })\n\n    // Udate draw style\n    this.draw?.setStyle?.()\n  }\n\n  setPadding (coord, isAnimate) {\n    if (this.map) {\n      const { map, paddingBox, scale } = this\n      const padding = getFocusPadding(paddingBox, scale)\n      // Search needs to set padding first before fitBounds\n      this.map.setPadding(padding || map.getPadding())\n      // Ease map to new when coord is obscured\n      coord && this.map.easeTo({ center: coord, animate: isAnimate, ...defaults.ANIMATION })\n    }\n  }\n\n  setSize (size) {\n    const scale = getScale(size)\n    this.scale = scale\n    this.setPadding()\n    if (this.map.setPixelRatio) {\n      this.map?.setPixelRatio(window.devicePixelRatio * scale)\n    }\n    setTimeout(() => {\n      this.map.resize()\n      this.dispatchEvent(new CustomEvent('style', {\n        detail: {\n          type: 'size'\n        }\n      }))\n    }, defaults.DELAY)\n  }\n\n  fitBounds (bounds, isAnimate = true) {\n    bounds = [[bounds[0], bounds[1]], [bounds[2], bounds[3]]]\n    this.map.fitBounds(bounds, { animate: isAnimate, linear: true, duration: defaults.ANIMATION.duration })\n  }\n\n  setCentre (coord, _zoom) {\n    if (this.map) {\n      this.map.flyTo({ center: coord, ...defaults.ANIMATION })\n    }\n  }\n\n  initDraw (options) {\n    import(/* webpackChunkName: \"maplibre-draw\" */ './draw.js').then(module => {\n      const Draw = module.default\n      this.draw = new Draw(this, options)\n    })\n  }\n\n  setTargetMarker (coord, hasData, isVisible) {\n    const { targetMarker } = this\n    if (targetMarker) {\n      targetMarker.setLngLat(coord || [0, 0])\n      const el = targetMarker.getElement() // addClassName not supported in v1.15\n      el.classList.toggle('fm-c-marker--has-data', hasData)\n      el.classList.toggle(css.MARKER_VISIBLE, isVisible && coord)\n    }\n  }\n\n  selectFeature (id) {\n    this.selectedId = id\n    toggleSelectedFeature.bind(this)(id)\n  }\n\n  selectCoordinate (coord) {\n    this.selectedCoordinate = coord\n  }\n\n  async queryFeature (id) {\n    if (id) {\n      const detail = await getDetail.bind(this)(null, false)\n      detail.features.items = [detail.features.items.find(f => f.id === id)]\n      this.dispatchEvent(new CustomEvent('mapquery', { detail }))\n    }\n  }\n\n  async queryPoint (point) {\n    const detail = await getDetail.bind(this)(point, this.selectedLayers)\n    this.hideLabel()\n    this.dispatchEvent(new CustomEvent('mapquery', {\n      detail: {\n        resultType: detail.features.resultType,\n        ...detail\n      }\n    }))\n  }\n\n  getGeoLocation (success, error) {\n    navigator.geolocation.getCurrentPosition(async (position) => {\n      let coord = [position.coords.longitude, position.coords.latitude]\n      coord = coord.map(n => parseFloat(n.toFixed(defaults.PRECISION)))\n      // const place = this.getNearest ? await this.getNearest(coord) : null\n      success(coord, null)\n    }, (err) => {\n      console.log(err)\n      error(err)\n    }, {\n      enableHighAccuracy: false\n    })\n  }\n\n  showLocation (coord) {\n    const { locationMarker } = this\n    locationMarker.setLngLat(coord).addClassName(css.MARKER_VISIBLE)\n  }\n\n  showNextLabel (pixel, direction) {\n    const labels = getLabels.bind(this)()\n    const { lng, lat } = this.map.getCenter()\n    const center = this.map.project([lng, lat])\n    const pixels = labels.map(c => c.pixel)\n    const index = spatialNavigate(direction, pixel || [center.x, center.y], pixels)\n    const feature = labels[index]?.feature\n    highlightLabel.bind(this)(feature)\n    return labels[index]?.pixel\n  }\n\n  showLabel (point) {\n    const feature = getLabel.bind(this)(point)\n    highlightLabel.bind(this)(feature)\n    return point\n  }\n\n  hideLabel () {\n    if (this.map) {\n      highlightLabel.bind(this)()\n    }\n  }\n}\n\nexport default Provider\n","export const throttle = (fn, wait) => {\n  let lastCallTime = 0\n  return (...args) => {\n    const now = Date.now()\n    if (now - lastCallTime >= wait) {\n      lastCallTime = now\n      fn(...args)\n    }\n  }\n}\n","const { DOMParser } = window\n\nexport const parseSVG = (icon, fill, text, isDarkBasemap = false, scale = 1) => {\n  const isSelected = icon.includes('selected')\n  // let styled = text.replace(/#0f0|#00ff00|#0F0|#00FF00/g, isSelected ? isDarkBasemap ? '#ffffff' : '#0b0c0c' : 'transparent')\n  // styled = styled.replace(/#00f|#0000ff|#00F|#0000FF/g, isDarkBasemap ? '#162232' : '#ffffff')\n  const parser = new DOMParser()\n  const dom = parser.parseFromString(text, 'text/html')\n  const svg = dom.querySelector('svg')\n  // Add xmlns attribute and class to svg\n  // svg.setAttribute('xmlns', 'http://www.w3.org/2000/svg')\n  svg.classList.add('fm-c-symbol')\n  svg.classList.toggle('fm-c-symbol--selected', isSelected)\n  svg.classList.toggle('fm-c-symbol--dark', isDarkBasemap)\n  // Set svg height and width\n  const viewBox = svg.getAttribute('viewBox')\n  const width = parseInt(viewBox.split(' ')[2], 10) * scale\n  const height = parseInt(viewBox.split(' ')[3], 10) * scale\n  svg.setAttribute('width', width)\n  svg.setAttribute('height', height)\n  // Conditionally add fill\n  if (fill) {\n    svg.setAttribute('fill', fill)\n  }\n  // Add classnames\n  const olFill = svg.querySelectorAll('[fill=\"#0b0c0c\" i], [style*=\"fill:#0b0c0c\" i]')\n  const olStroke = svg.querySelectorAll('[stroke=\"#0b0c0c\" i], [style*=\"stroke:#0b0c0c\" i]')\n  olFill.forEach(n => n.classList.add('fm-c-symbol__ol-fill'))\n  olStroke.forEach(n => n.classList.add('fm-c-symbol__ol-stroke'))\n  const bgFill = svg.querySelectorAll('[fill=\"#fff\" i], [fill=\"#ffffff\" i], [style*=\"fill:#fff\" i], [style*=\"fill:#ffffff\" i]')\n  const bgStroke = svg.querySelectorAll('[stroke*=\"#fff\" i], [stroke*=\"#ffffff\" i], [style*=\"stroke:#fff\" i], [style*=\"stroke:#ffffff\" i]')\n  bgFill.forEach(n => n.classList.add('fm-c-symbol__bg-fill'))\n  bgStroke.forEach(n => n.classList.add('fm-c-symbol__bg-stroke'))\n  const fgFill = svg.querySelectorAll(':not(.fm-c-symbol__ol-fill):not(.fm-c-symbol__bg-fill)[fill], :not(.fm-c-symbol__ol-fill):not(.fm-c-symbol__bg-fill)[style*=\"fill\"]')\n  const fgStroke = svg.querySelectorAll(':not(.fm-c-symbol__ol-stroke):not(.fm-c-symbol__bg-stroke)[stroke], :not(.fm-c-symbol__ol-stroke):not(.fm-c-symbol__bg-stroke)[style*=\"stroke\"]')\n  fgFill.forEach(n => n.classList.add('fm-c-symbol__fg-fill'))\n  fgStroke.forEach(n => n.classList.add('fm-c-symbol__fg-stroke'))\n  return dom.body.innerHTML\n}\n","// index.ts\nimport { isNumber } from \"@turf/helpers\";\nfunction getCoord(coord) {\n  if (!coord) {\n    throw new Error(\"coord is required\");\n  }\n  if (!Array.isArray(coord)) {\n    if (coord.type === \"Feature\" && coord.geometry !== null && coord.geometry.type === \"Point\") {\n      return [...coord.geometry.coordinates];\n    }\n    if (coord.type === \"Point\") {\n      return [...coord.coordinates];\n    }\n  }\n  if (Array.isArray(coord) && coord.length >= 2 && !Array.isArray(coord[0]) && !Array.isArray(coord[1])) {\n    return [...coord];\n  }\n  throw new Error(\"coord must be GeoJSON Point or an Array of numbers\");\n}\nfunction getCoords(coords) {\n  if (Array.isArray(coords)) {\n    return coords;\n  }\n  if (coords.type === \"Feature\") {\n    if (coords.geometry !== null) {\n      return coords.geometry.coordinates;\n    }\n  } else {\n    if (coords.coordinates) {\n      return coords.coordinates;\n    }\n  }\n  throw new Error(\n    \"coords must be GeoJSON Feature, Geometry Object or an Array\"\n  );\n}\nfunction containsNumber(coordinates) {\n  if (coordinates.length > 1 && isNumber(coordinates[0]) && isNumber(coordinates[1])) {\n    return true;\n  }\n  if (Array.isArray(coordinates[0]) && coordinates[0].length) {\n    return containsNumber(coordinates[0]);\n  }\n  throw new Error(\"coordinates must only contain numbers\");\n}\nfunction geojsonType(value, type, name) {\n  if (!type || !name) {\n    throw new Error(\"type and name required\");\n  }\n  if (!value || value.type !== type) {\n    throw new Error(\n      \"Invalid input to \" + name + \": must be a \" + type + \", given \" + value.type\n    );\n  }\n}\nfunction featureOf(feature, type, name) {\n  if (!feature) {\n    throw new Error(\"No feature passed\");\n  }\n  if (!name) {\n    throw new Error(\".featureOf() requires a name\");\n  }\n  if (!feature || feature.type !== \"Feature\" || !feature.geometry) {\n    throw new Error(\n      \"Invalid input to \" + name + \", Feature with geometry required\"\n    );\n  }\n  if (!feature.geometry || feature.geometry.type !== type) {\n    throw new Error(\n      \"Invalid input to \" + name + \": must be a \" + type + \", given \" + feature.geometry.type\n    );\n  }\n}\nfunction collectionOf(featureCollection, type, name) {\n  if (!featureCollection) {\n    throw new Error(\"No featureCollection passed\");\n  }\n  if (!name) {\n    throw new Error(\".collectionOf() requires a name\");\n  }\n  if (!featureCollection || featureCollection.type !== \"FeatureCollection\") {\n    throw new Error(\n      \"Invalid input to \" + name + \", FeatureCollection required\"\n    );\n  }\n  for (const feature of featureCollection.features) {\n    if (!feature || feature.type !== \"Feature\" || !feature.geometry) {\n      throw new Error(\n        \"Invalid input to \" + name + \", Feature with geometry required\"\n      );\n    }\n    if (!feature.geometry || feature.geometry.type !== type) {\n      throw new Error(\n        \"Invalid input to \" + name + \": must be a \" + type + \", given \" + feature.geometry.type\n      );\n    }\n  }\n}\nfunction getGeom(geojson) {\n  if (geojson.type === \"Feature\") {\n    return geojson.geometry;\n  }\n  return geojson;\n}\nfunction getType(geojson, _name) {\n  if (geojson.type === \"FeatureCollection\") {\n    return \"FeatureCollection\";\n  }\n  if (geojson.type === \"GeometryCollection\") {\n    return \"GeometryCollection\";\n  }\n  if (geojson.type === \"Feature\" && geojson.geometry !== null) {\n    return geojson.geometry.type;\n  }\n  return geojson.type;\n}\nexport {\n  collectionOf,\n  containsNumber,\n  featureOf,\n  geojsonType,\n  getCoord,\n  getCoords,\n  getGeom,\n  getType\n};\n//# sourceMappingURL=index.js.map","// index.ts\nimport { getCoord } from \"@turf/invariant\";\nimport { radiansToLength, degreesToRadians } from \"@turf/helpers\";\nfunction distance(from, to, options = {}) {\n  var coordinates1 = getCoord(from);\n  var coordinates2 = getCoord(to);\n  var dLat = degreesToRadians(coordinates2[1] - coordinates1[1]);\n  var dLon = degreesToRadians(coordinates2[0] - coordinates1[0]);\n  var lat1 = degreesToRadians(coordinates1[1]);\n  var lat2 = degreesToRadians(coordinates2[1]);\n  var a = Math.pow(Math.sin(dLat / 2), 2) + Math.pow(Math.sin(dLon / 2), 2) * Math.cos(lat1) * Math.cos(lat2);\n  return radiansToLength(\n    2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a)),\n    options.units\n  );\n}\nvar turf_distance_default = distance;\nexport {\n  turf_distance_default as default,\n  distance\n};\n//# sourceMappingURL=index.js.map","export const debounce = (fn, wait) => {\n  let timeoutId = null\n  return (...args) => {\n    window.clearTimeout(timeoutId)\n    timeoutId = window.setTimeout(() => {\n      fn(...args)\n    }, wait)\n  }\n}\n","// index.js\nimport { feature, point, lineString, isObject } from \"@turf/helpers\";\nfunction coordEach(geojson, callback, excludeWrapCoord) {\n  if (geojson === null) return;\n  var j, k, l, geometry, stopG, coords, geometryMaybeCollection, wrapShrink = 0, coordIndex = 0, isGeometryCollection, type = geojson.type, isFeatureCollection = type === \"FeatureCollection\", isFeature = type === \"Feature\", stop = isFeatureCollection ? geojson.features.length : 1;\n  for (var featureIndex = 0; featureIndex < stop; featureIndex++) {\n    geometryMaybeCollection = isFeatureCollection ? geojson.features[featureIndex].geometry : isFeature ? geojson.geometry : geojson;\n    isGeometryCollection = geometryMaybeCollection ? geometryMaybeCollection.type === \"GeometryCollection\" : false;\n    stopG = isGeometryCollection ? geometryMaybeCollection.geometries.length : 1;\n    for (var geomIndex = 0; geomIndex < stopG; geomIndex++) {\n      var multiFeatureIndex = 0;\n      var geometryIndex = 0;\n      geometry = isGeometryCollection ? geometryMaybeCollection.geometries[geomIndex] : geometryMaybeCollection;\n      if (geometry === null) continue;\n      coords = geometry.coordinates;\n      var geomType = geometry.type;\n      wrapShrink = excludeWrapCoord && (geomType === \"Polygon\" || geomType === \"MultiPolygon\") ? 1 : 0;\n      switch (geomType) {\n        case null:\n          break;\n        case \"Point\":\n          if (callback(\n            coords,\n            coordIndex,\n            featureIndex,\n            multiFeatureIndex,\n            geometryIndex\n          ) === false)\n            return false;\n          coordIndex++;\n          multiFeatureIndex++;\n          break;\n        case \"LineString\":\n        case \"MultiPoint\":\n          for (j = 0; j < coords.length; j++) {\n            if (callback(\n              coords[j],\n              coordIndex,\n              featureIndex,\n              multiFeatureIndex,\n              geometryIndex\n            ) === false)\n              return false;\n            coordIndex++;\n            if (geomType === \"MultiPoint\") multiFeatureIndex++;\n          }\n          if (geomType === \"LineString\") multiFeatureIndex++;\n          break;\n        case \"Polygon\":\n        case \"MultiLineString\":\n          for (j = 0; j < coords.length; j++) {\n            for (k = 0; k < coords[j].length - wrapShrink; k++) {\n              if (callback(\n                coords[j][k],\n                coordIndex,\n                featureIndex,\n                multiFeatureIndex,\n                geometryIndex\n              ) === false)\n                return false;\n              coordIndex++;\n            }\n            if (geomType === \"MultiLineString\") multiFeatureIndex++;\n            if (geomType === \"Polygon\") geometryIndex++;\n          }\n          if (geomType === \"Polygon\") multiFeatureIndex++;\n          break;\n        case \"MultiPolygon\":\n          for (j = 0; j < coords.length; j++) {\n            geometryIndex = 0;\n            for (k = 0; k < coords[j].length; k++) {\n              for (l = 0; l < coords[j][k].length - wrapShrink; l++) {\n                if (callback(\n                  coords[j][k][l],\n                  coordIndex,\n                  featureIndex,\n                  multiFeatureIndex,\n                  geometryIndex\n                ) === false)\n                  return false;\n                coordIndex++;\n              }\n              geometryIndex++;\n            }\n            multiFeatureIndex++;\n          }\n          break;\n        case \"GeometryCollection\":\n          for (j = 0; j < geometry.geometries.length; j++)\n            if (coordEach(geometry.geometries[j], callback, excludeWrapCoord) === false)\n              return false;\n          break;\n        default:\n          throw new Error(\"Unknown Geometry Type\");\n      }\n    }\n  }\n}\nfunction coordReduce(geojson, callback, initialValue, excludeWrapCoord) {\n  var previousValue = initialValue;\n  coordEach(\n    geojson,\n    function(currentCoord, coordIndex, featureIndex, multiFeatureIndex, geometryIndex) {\n      if (coordIndex === 0 && initialValue === void 0)\n        previousValue = currentCoord;\n      else\n        previousValue = callback(\n          previousValue,\n          currentCoord,\n          coordIndex,\n          featureIndex,\n          multiFeatureIndex,\n          geometryIndex\n        );\n    },\n    excludeWrapCoord\n  );\n  return previousValue;\n}\nfunction propEach(geojson, callback) {\n  var i;\n  switch (geojson.type) {\n    case \"FeatureCollection\":\n      for (i = 0; i < geojson.features.length; i++) {\n        if (callback(geojson.features[i].properties, i) === false) break;\n      }\n      break;\n    case \"Feature\":\n      callback(geojson.properties, 0);\n      break;\n  }\n}\nfunction propReduce(geojson, callback, initialValue) {\n  var previousValue = initialValue;\n  propEach(geojson, function(currentProperties, featureIndex) {\n    if (featureIndex === 0 && initialValue === void 0)\n      previousValue = currentProperties;\n    else\n      previousValue = callback(previousValue, currentProperties, featureIndex);\n  });\n  return previousValue;\n}\nfunction featureEach(geojson, callback) {\n  if (geojson.type === \"Feature\") {\n    callback(geojson, 0);\n  } else if (geojson.type === \"FeatureCollection\") {\n    for (var i = 0; i < geojson.features.length; i++) {\n      if (callback(geojson.features[i], i) === false) break;\n    }\n  }\n}\nfunction featureReduce(geojson, callback, initialValue) {\n  var previousValue = initialValue;\n  featureEach(geojson, function(currentFeature, featureIndex) {\n    if (featureIndex === 0 && initialValue === void 0)\n      previousValue = currentFeature;\n    else previousValue = callback(previousValue, currentFeature, featureIndex);\n  });\n  return previousValue;\n}\nfunction coordAll(geojson) {\n  var coords = [];\n  coordEach(geojson, function(coord) {\n    coords.push(coord);\n  });\n  return coords;\n}\nfunction geomEach(geojson, callback) {\n  var i, j, g, geometry, stopG, geometryMaybeCollection, isGeometryCollection, featureProperties, featureBBox, featureId, featureIndex = 0, isFeatureCollection = geojson.type === \"FeatureCollection\", isFeature = geojson.type === \"Feature\", stop = isFeatureCollection ? geojson.features.length : 1;\n  for (i = 0; i < stop; i++) {\n    geometryMaybeCollection = isFeatureCollection ? geojson.features[i].geometry : isFeature ? geojson.geometry : geojson;\n    featureProperties = isFeatureCollection ? geojson.features[i].properties : isFeature ? geojson.properties : {};\n    featureBBox = isFeatureCollection ? geojson.features[i].bbox : isFeature ? geojson.bbox : void 0;\n    featureId = isFeatureCollection ? geojson.features[i].id : isFeature ? geojson.id : void 0;\n    isGeometryCollection = geometryMaybeCollection ? geometryMaybeCollection.type === \"GeometryCollection\" : false;\n    stopG = isGeometryCollection ? geometryMaybeCollection.geometries.length : 1;\n    for (g = 0; g < stopG; g++) {\n      geometry = isGeometryCollection ? geometryMaybeCollection.geometries[g] : geometryMaybeCollection;\n      if (geometry === null) {\n        if (callback(\n          null,\n          featureIndex,\n          featureProperties,\n          featureBBox,\n          featureId\n        ) === false)\n          return false;\n        continue;\n      }\n      switch (geometry.type) {\n        case \"Point\":\n        case \"LineString\":\n        case \"MultiPoint\":\n        case \"Polygon\":\n        case \"MultiLineString\":\n        case \"MultiPolygon\": {\n          if (callback(\n            geometry,\n            featureIndex,\n            featureProperties,\n            featureBBox,\n            featureId\n          ) === false)\n            return false;\n          break;\n        }\n        case \"GeometryCollection\": {\n          for (j = 0; j < geometry.geometries.length; j++) {\n            if (callback(\n              geometry.geometries[j],\n              featureIndex,\n              featureProperties,\n              featureBBox,\n              featureId\n            ) === false)\n              return false;\n          }\n          break;\n        }\n        default:\n          throw new Error(\"Unknown Geometry Type\");\n      }\n    }\n    featureIndex++;\n  }\n}\nfunction geomReduce(geojson, callback, initialValue) {\n  var previousValue = initialValue;\n  geomEach(\n    geojson,\n    function(currentGeometry, featureIndex, featureProperties, featureBBox, featureId) {\n      if (featureIndex === 0 && initialValue === void 0)\n        previousValue = currentGeometry;\n      else\n        previousValue = callback(\n          previousValue,\n          currentGeometry,\n          featureIndex,\n          featureProperties,\n          featureBBox,\n          featureId\n        );\n    }\n  );\n  return previousValue;\n}\nfunction flattenEach(geojson, callback) {\n  geomEach(geojson, function(geometry, featureIndex, properties, bbox, id) {\n    var type = geometry === null ? null : geometry.type;\n    switch (type) {\n      case null:\n      case \"Point\":\n      case \"LineString\":\n      case \"Polygon\":\n        if (callback(\n          feature(geometry, properties, { bbox, id }),\n          featureIndex,\n          0\n        ) === false)\n          return false;\n        return;\n    }\n    var geomType;\n    switch (type) {\n      case \"MultiPoint\":\n        geomType = \"Point\";\n        break;\n      case \"MultiLineString\":\n        geomType = \"LineString\";\n        break;\n      case \"MultiPolygon\":\n        geomType = \"Polygon\";\n        break;\n    }\n    for (var multiFeatureIndex = 0; multiFeatureIndex < geometry.coordinates.length; multiFeatureIndex++) {\n      var coordinate = geometry.coordinates[multiFeatureIndex];\n      var geom = {\n        type: geomType,\n        coordinates: coordinate\n      };\n      if (callback(feature(geom, properties), featureIndex, multiFeatureIndex) === false)\n        return false;\n    }\n  });\n}\nfunction flattenReduce(geojson, callback, initialValue) {\n  var previousValue = initialValue;\n  flattenEach(\n    geojson,\n    function(currentFeature, featureIndex, multiFeatureIndex) {\n      if (featureIndex === 0 && multiFeatureIndex === 0 && initialValue === void 0)\n        previousValue = currentFeature;\n      else\n        previousValue = callback(\n          previousValue,\n          currentFeature,\n          featureIndex,\n          multiFeatureIndex\n        );\n    }\n  );\n  return previousValue;\n}\nfunction segmentEach(geojson, callback) {\n  flattenEach(geojson, function(feature2, featureIndex, multiFeatureIndex) {\n    var segmentIndex = 0;\n    if (!feature2.geometry) return;\n    var type = feature2.geometry.type;\n    if (type === \"Point\" || type === \"MultiPoint\") return;\n    var previousCoords;\n    var previousFeatureIndex = 0;\n    var previousMultiIndex = 0;\n    var prevGeomIndex = 0;\n    if (coordEach(\n      feature2,\n      function(currentCoord, coordIndex, featureIndexCoord, multiPartIndexCoord, geometryIndex) {\n        if (previousCoords === void 0 || featureIndex > previousFeatureIndex || multiPartIndexCoord > previousMultiIndex || geometryIndex > prevGeomIndex) {\n          previousCoords = currentCoord;\n          previousFeatureIndex = featureIndex;\n          previousMultiIndex = multiPartIndexCoord;\n          prevGeomIndex = geometryIndex;\n          segmentIndex = 0;\n          return;\n        }\n        var currentSegment = lineString(\n          [previousCoords, currentCoord],\n          feature2.properties\n        );\n        if (callback(\n          currentSegment,\n          featureIndex,\n          multiFeatureIndex,\n          geometryIndex,\n          segmentIndex\n        ) === false)\n          return false;\n        segmentIndex++;\n        previousCoords = currentCoord;\n      }\n    ) === false)\n      return false;\n  });\n}\nfunction segmentReduce(geojson, callback, initialValue) {\n  var previousValue = initialValue;\n  var started = false;\n  segmentEach(\n    geojson,\n    function(currentSegment, featureIndex, multiFeatureIndex, geometryIndex, segmentIndex) {\n      if (started === false && initialValue === void 0)\n        previousValue = currentSegment;\n      else\n        previousValue = callback(\n          previousValue,\n          currentSegment,\n          featureIndex,\n          multiFeatureIndex,\n          geometryIndex,\n          segmentIndex\n        );\n      started = true;\n    }\n  );\n  return previousValue;\n}\nfunction lineEach(geojson, callback) {\n  if (!geojson) throw new Error(\"geojson is required\");\n  flattenEach(geojson, function(feature2, featureIndex, multiFeatureIndex) {\n    if (feature2.geometry === null) return;\n    var type = feature2.geometry.type;\n    var coords = feature2.geometry.coordinates;\n    switch (type) {\n      case \"LineString\":\n        if (callback(feature2, featureIndex, multiFeatureIndex, 0, 0) === false)\n          return false;\n        break;\n      case \"Polygon\":\n        for (var geometryIndex = 0; geometryIndex < coords.length; geometryIndex++) {\n          if (callback(\n            lineString(coords[geometryIndex], feature2.properties),\n            featureIndex,\n            multiFeatureIndex,\n            geometryIndex\n          ) === false)\n            return false;\n        }\n        break;\n    }\n  });\n}\nfunction lineReduce(geojson, callback, initialValue) {\n  var previousValue = initialValue;\n  lineEach(\n    geojson,\n    function(currentLine, featureIndex, multiFeatureIndex, geometryIndex) {\n      if (featureIndex === 0 && initialValue === void 0)\n        previousValue = currentLine;\n      else\n        previousValue = callback(\n          previousValue,\n          currentLine,\n          featureIndex,\n          multiFeatureIndex,\n          geometryIndex\n        );\n    }\n  );\n  return previousValue;\n}\nfunction findSegment(geojson, options) {\n  options = options || {};\n  if (!isObject(options)) throw new Error(\"options is invalid\");\n  var featureIndex = options.featureIndex || 0;\n  var multiFeatureIndex = options.multiFeatureIndex || 0;\n  var geometryIndex = options.geometryIndex || 0;\n  var segmentIndex = options.segmentIndex || 0;\n  var properties = options.properties;\n  var geometry;\n  switch (geojson.type) {\n    case \"FeatureCollection\":\n      if (featureIndex < 0)\n        featureIndex = geojson.features.length + featureIndex;\n      properties = properties || geojson.features[featureIndex].properties;\n      geometry = geojson.features[featureIndex].geometry;\n      break;\n    case \"Feature\":\n      properties = properties || geojson.properties;\n      geometry = geojson.geometry;\n      break;\n    case \"Point\":\n    case \"MultiPoint\":\n      return null;\n    case \"LineString\":\n    case \"Polygon\":\n    case \"MultiLineString\":\n    case \"MultiPolygon\":\n      geometry = geojson;\n      break;\n    default:\n      throw new Error(\"geojson is invalid\");\n  }\n  if (geometry === null) return null;\n  var coords = geometry.coordinates;\n  switch (geometry.type) {\n    case \"Point\":\n    case \"MultiPoint\":\n      return null;\n    case \"LineString\":\n      if (segmentIndex < 0) segmentIndex = coords.length + segmentIndex - 1;\n      return lineString(\n        [coords[segmentIndex], coords[segmentIndex + 1]],\n        properties,\n        options\n      );\n    case \"Polygon\":\n      if (geometryIndex < 0) geometryIndex = coords.length + geometryIndex;\n      if (segmentIndex < 0)\n        segmentIndex = coords[geometryIndex].length + segmentIndex - 1;\n      return lineString(\n        [\n          coords[geometryIndex][segmentIndex],\n          coords[geometryIndex][segmentIndex + 1]\n        ],\n        properties,\n        options\n      );\n    case \"MultiLineString\":\n      if (multiFeatureIndex < 0)\n        multiFeatureIndex = coords.length + multiFeatureIndex;\n      if (segmentIndex < 0)\n        segmentIndex = coords[multiFeatureIndex].length + segmentIndex - 1;\n      return lineString(\n        [\n          coords[multiFeatureIndex][segmentIndex],\n          coords[multiFeatureIndex][segmentIndex + 1]\n        ],\n        properties,\n        options\n      );\n    case \"MultiPolygon\":\n      if (multiFeatureIndex < 0)\n        multiFeatureIndex = coords.length + multiFeatureIndex;\n      if (geometryIndex < 0)\n        geometryIndex = coords[multiFeatureIndex].length + geometryIndex;\n      if (segmentIndex < 0)\n        segmentIndex = coords[multiFeatureIndex][geometryIndex].length - segmentIndex - 1;\n      return lineString(\n        [\n          coords[multiFeatureIndex][geometryIndex][segmentIndex],\n          coords[multiFeatureIndex][geometryIndex][segmentIndex + 1]\n        ],\n        properties,\n        options\n      );\n  }\n  throw new Error(\"geojson is invalid\");\n}\nfunction findPoint(geojson, options) {\n  options = options || {};\n  if (!isObject(options)) throw new Error(\"options is invalid\");\n  var featureIndex = options.featureIndex || 0;\n  var multiFeatureIndex = options.multiFeatureIndex || 0;\n  var geometryIndex = options.geometryIndex || 0;\n  var coordIndex = options.coordIndex || 0;\n  var properties = options.properties;\n  var geometry;\n  switch (geojson.type) {\n    case \"FeatureCollection\":\n      if (featureIndex < 0)\n        featureIndex = geojson.features.length + featureIndex;\n      properties = properties || geojson.features[featureIndex].properties;\n      geometry = geojson.features[featureIndex].geometry;\n      break;\n    case \"Feature\":\n      properties = properties || geojson.properties;\n      geometry = geojson.geometry;\n      break;\n    case \"Point\":\n    case \"MultiPoint\":\n      return null;\n    case \"LineString\":\n    case \"Polygon\":\n    case \"MultiLineString\":\n    case \"MultiPolygon\":\n      geometry = geojson;\n      break;\n    default:\n      throw new Error(\"geojson is invalid\");\n  }\n  if (geometry === null) return null;\n  var coords = geometry.coordinates;\n  switch (geometry.type) {\n    case \"Point\":\n      return point(coords, properties, options);\n    case \"MultiPoint\":\n      if (multiFeatureIndex < 0)\n        multiFeatureIndex = coords.length + multiFeatureIndex;\n      return point(coords[multiFeatureIndex], properties, options);\n    case \"LineString\":\n      if (coordIndex < 0) coordIndex = coords.length + coordIndex;\n      return point(coords[coordIndex], properties, options);\n    case \"Polygon\":\n      if (geometryIndex < 0) geometryIndex = coords.length + geometryIndex;\n      if (coordIndex < 0)\n        coordIndex = coords[geometryIndex].length + coordIndex;\n      return point(coords[geometryIndex][coordIndex], properties, options);\n    case \"MultiLineString\":\n      if (multiFeatureIndex < 0)\n        multiFeatureIndex = coords.length + multiFeatureIndex;\n      if (coordIndex < 0)\n        coordIndex = coords[multiFeatureIndex].length + coordIndex;\n      return point(coords[multiFeatureIndex][coordIndex], properties, options);\n    case \"MultiPolygon\":\n      if (multiFeatureIndex < 0)\n        multiFeatureIndex = coords.length + multiFeatureIndex;\n      if (geometryIndex < 0)\n        geometryIndex = coords[multiFeatureIndex].length + geometryIndex;\n      if (coordIndex < 0)\n        coordIndex = coords[multiFeatureIndex][geometryIndex].length - coordIndex;\n      return point(\n        coords[multiFeatureIndex][geometryIndex][coordIndex],\n        properties,\n        options\n      );\n  }\n  throw new Error(\"geojson is invalid\");\n}\nexport {\n  coordAll,\n  coordEach,\n  coordReduce,\n  featureEach,\n  featureReduce,\n  findPoint,\n  findSegment,\n  flattenEach,\n  flattenReduce,\n  geomEach,\n  geomReduce,\n  lineEach,\n  lineReduce,\n  propEach,\n  propReduce,\n  segmentEach,\n  segmentReduce\n};\n//# sourceMappingURL=index.js.map","import { distance as turfDistance } from '@turf/distance'\nimport { point as TurfPoint } from '@turf/helpers'\nimport { defaults } from '../store/constants'\n\nconst getBearing = (coord1, coord2) => {\n  const east = coord1[0] < coord2[0] && 'east'\n  const west = coord1[0] > coord2[0] && 'west'\n  const north = coord1[1] < coord2[1] && 'north'\n  const south = coord1[1] > coord2[1] && 'south'\n  return [east, west, north, south].filter(b => b && typeof b === 'string')\n}\n\nconst getUnits = (metres) => {\n  const MAX_METRES = 800\n  const MAX_MILES = 5000\n  const RATIO = 0.621371\n  let units\n  if (metres < MAX_METRES) {\n    units = `${metres} metres`\n  } else if (metres < MAX_MILES) {\n    units = (metres / 1000 * RATIO).toFixed(1) + ' miles'\n  } else {\n    units = Math.round((metres / 1000) * RATIO) + ' miles'\n  }\n  return units\n}\n\nconst getDirection = (coord1, coord2) => {\n  coord1 = coord1.map(n => n > 1000 ? Math.round(n) : Math.round(n * 100000) / 100000)\n  coord2 = coord2.map(n => n > 1000 ? Math.round(n) : Math.round(n * 100000) / 100000)\n  const ns1 = [coord1[0], coord1[1]]\n  const ns2 = [coord1[0], coord2[1]]\n  const ew1 = [coord1[0], coord1[1]]\n  const ew2 = [coord2[0], coord1[1]]\n  const nsd = getDistance(ns1, ns2)\n  const ewd = getDistance(ew1, ew2)\n  const bearing = getBearing(coord1, coord2)\n  const ewc = bearing.filter(b => ['east', 'west'].includes(b)).join('')\n  const nsc = bearing.filter(b => ['north', 'south'].includes(b)).join('')\n  const ew = ewc ? `${ewc} ${getUnits(ewd)}` : ''\n  const ns = nsc ? `${nsc} ${getUnits(nsd)}` : ''\n  return `${ns + (ewc && nsc ? ', ' : '') + ew}`\n}\n\nconst getArea = (bounds) => {\n  const ew = getDistance([bounds[0], bounds[1]], [bounds[2], bounds[1]])\n  const ns = getDistance([bounds[0], bounds[1]], [bounds[0], bounds[3]])\n  return `${getUnits(ew)} by ${getUnits(ns)}`\n}\n\nconst getBoundsChange = (oCentre, originalZoom, isMaxZoom, isMinZoom, center, zoom) => {\n  const isSameCentre = JSON.stringify(oCentre) === JSON.stringify(center)\n  const isSameZoom = originalZoom === zoom\n  const isMove = oCentre && originalZoom && !(isSameCentre && isSameZoom)\n  const maxZoom = isMaxZoom ? ' (Maximum zoom reached)' : ''\n  const minZoom = isMinZoom ? ' (Minimum zoom reached)' : ''\n  let change = ''\n  if (isMove) {\n    if (!isSameCentre && !isSameZoom) {\n      change = `New area${maxZoom}${minZoom}. `\n    } else if (!isSameCentre) {\n      change = `Map move: ${getDirection(oCentre, center)}. `\n    } else {\n      const direction = zoom > originalZoom ? 'in' : 'out'\n      change = `Zoomed ${direction}${maxZoom}${minZoom}. `\n    }\n  }\n  return change\n}\n\nconst getSelectedStatus = (featuresInViewport, id) => {\n  const total = featuresInViewport.length\n  const index = featuresInViewport.findIndex(f => f.id === id)\n  return index >= 0 && `${total} feature${total !== 1 ? 's' : ''} in this area. ${featuresInViewport[index].name}. ${index + 1} of ${total} highlighted.`\n}\n\nconst getOffsetBoundingClientRect = (el) => {\n  const offsetParent = el.closest('[data-fm-main]') || document.body\n  return offsetParent.getBoundingClientRect()\n}\n\nconst isCirclePolygon = (geometry) => {\n  const coordinates = geometry?.coordinates?.[0]\n\n  // Expect exactly 64 points\n  if (coordinates?.length !== 65) {\n    return false\n  }\n\n  // Compute approximate centre using two opposite points\n  const [x1, y1] = coordinates[0]\n  const [x2, y2] = coordinates[32]\n  const center = [(x1 + x2) / 2, (y1 + y2) / 2]\n\n  let minDist = Infinity; let maxDist = -Infinity\n  let minEdge = Infinity; let maxEdge = -Infinity\n\n  for (let i = 0; i < 64; i++) {\n    const [xA, yA] = coordinates[i]\n    const [xB, yB] = coordinates[(i + 1) % 64]\n\n    // Distance from center\n    const dist = Math.hypot(xA - center[0], yA - center[1])\n    minDist = Math.min(minDist, dist)\n    maxDist = Math.max(maxDist, dist)\n\n    // Distance to next vertex (edge length)\n    const edgeDist = Math.hypot(xB - xA, yB - yA)\n    minEdge = Math.min(minEdge, edgeDist)\n    maxEdge = Math.max(maxEdge, edgeDist)\n  }\n\n  // Need to revist tolerance as they depend on size too\n  const WSG84_TOLERANCE = 0.3\n  const BNG_TOLERANCE = 0.3\n  const tolerance = detectCoordinateType(center) === 'WSG84' ? WSG84_TOLERANCE : BNG_TOLERANCE\n\n  return Math.abs(maxDist - minDist) < tolerance && Math.abs(maxEdge - minEdge) < tolerance\n}\n\n// const metresToImperial = (metres) => {\n//   const MILE = 1609.344\n//   const YARD = 0.9144\n//   const pluralize = (value, singular, plural) => `${value} ${value === 1 ? singular : plural}`\n//   if (metres >= MILE) {\n//     const miles = Math.floor(metres / MILE)\n//     const remainder = metres % MILE\n//     const yards = Math.floor(remainder / YARD)\n//     return `${pluralize(miles, 'mile', 'miles')}, ${pluralize(yards, 'yard', 'yards')}`\n//   } else {\n//     const yards = Math.floor(metres / YARD)\n//     return `${pluralize(yards, 'yard', 'yards')}`\n//   }\n// }\n\nconst metresToKilometres = (metres) => {\n  const KILOMETRE = 1000\n  // const pluralize = (value, singular, plural) => `${value} ${value === 1 ? singular : plural}`\n  if (metres >= KILOMETRE) {\n    const kilometres = metres / KILOMETRE\n    const roundedKm = Math.round(kilometres * 100) / 100\n    return `${roundedKm}km`\n  } else {\n    // return `${pluralize(Math.round(metres), 'metre', 'metres')}`\n    return `${Math.round(metres)}m`\n  }\n}\n\nexport const squareMetresToKm = (metres) => {\n  const SQ_KM = 1_000_000\n  if (metres >= SQ_KM) {\n    let km2 = (metres / SQ_KM).toFixed(2)\n    km2 = Number(km2).toLocaleString(undefined, { minimumFractionDigits: 0, maximumFractionDigits: 2 })\n    return `${km2}km²`\n  } else {\n    return `${Math.ceil(metres).toLocaleString()}m²`\n  }\n}\n\nexport const parseDimensions = (dimensions) => {\n  const { area, center, width, radius } = dimensions\n  const areaDisplay = area ? squareMetresToKm(area) : null\n  const centerDisplay = center ? center.map(c => Math.round(c)).join(', ') : null\n  const widthDisplay = width ? metresToKilometres(width) : null\n  const radiusDisplay = radius ? metresToKilometres(radius) : null\n  return { ...dimensions, areaDisplay, centerDisplay, widthDisplay, radiusDisplay }\n}\n\nexport const detectCoordinateType = (coords) => {\n  if (coords.length === 3) {\n    return 'BNG' // If a third value exists (zone), it's UTM\n  }\n  const [x, y] = coords\n  if (x >= -180 && x <= 180 && y >= -90 && y <= 90) {\n    return 'WSG84'\n  }\n  if (x > 180 && y > 90) {\n    return 'BNG'\n  }\n  return 'Unknown'\n}\n\nexport const getDistance = (coord1, coord2) => {\n  let distance\n  if (coord1[0] > 1000) {\n    const x = Math.abs(coord1[0] - coord2[0])\n    const y = Math.abs(coord1[1] - coord2[1])\n    const dist = Math.sqrt((Math.pow(x, 2)) + (Math.pow(y, 2)))\n    distance = dist\n  } else {\n    const p1 = new TurfPoint(coord1)\n    const p2 = new TurfPoint(coord2)\n    distance = turfDistance(p1, p2, { units: 'metres' })\n  }\n  return Math.round(distance)\n}\n\nexport const getFocusPadding = (el, scale) => {\n  let padding\n  if (el) {\n    const parent = getOffsetBoundingClientRect(el)\n    const box = el.getBoundingClientRect()\n    const boxX = box.x || box.left\n    const boxY = box.y || box.top\n    const parentX = parent.x || parent.left\n    const parentY = parent.y || parent.top\n    padding = {\n      top: (boxY - parentY) / scale,\n      left: (boxX - parentX) / scale,\n      right: (parent.width - box.width - (boxX - parentX)) / scale,\n      bottom: (parent.height - box.height - (boxY - parentY)) / scale\n    }\n  }\n  // Addresses repid browser resizing\n  const isValid = Object.values(padding).every(i => i >= 0)\n  return isValid && padding\n}\n\nexport const getFocusBounds = (el, scale) => {\n  let bounds\n  if (el) {\n    const parent = getOffsetBoundingClientRect(el)\n    const box = el.getBoundingClientRect()\n    const m = 10\n    bounds = [[\n      ((box.x || box.left) - (parent.x || parent.left) + m) / scale,\n      (((box.y || box.top) - (parent.y || parent.top)) + box.height - m) / scale\n    ], [\n      (box.width + ((box.x || box.left) - (parent.x || parent.left)) - m) / scale,\n      ((box.y || box.top) - (parent.y || parent.top) + m) / scale\n    ]]\n  }\n  return bounds\n}\n\nexport const getMapPixel = (el, scale) => {\n  const parent = getOffsetBoundingClientRect(el)\n  const box = el.getBoundingClientRect()\n  const left = ((box.x || box.left) - (parent.x || parent.left)) / scale\n  const top = ((box.y || box.top) - (parent.y || parent.top)) / scale\n  const offsetLeft = (box.width / 2) / scale\n  const offsetTop = (box.height / 2) / scale\n  const point = [left + offsetLeft, top + offsetTop]\n  return point\n}\n\nexport const getDescription = (place, bounds, focusBounds, features, isFocusArea) => {\n  const { featuresTotal, featuresFocusTotal, isFeaturesInMap, isPixelFeaturesAtPixel, isPixelFeaturesInMap } = features || {}\n  const activeFeaturesTotal = isFocusArea ? featuresFocusTotal : featuresTotal\n  const activeBounds = isFocusArea ? focusBounds : bounds\n  let text = ''\n  if (activeFeaturesTotal) {\n    text = `${activeFeaturesTotal} feature${activeFeaturesTotal === 1 ? '' : 's'} in this area. `\n  } else if (isPixelFeaturesAtPixel) {\n    text = 'Data visible at the center coordinate. '\n  } else if (isPixelFeaturesInMap) {\n    text = 'No data visible at the center coordinate. '\n  } else if (isFeaturesInMap) {\n    text = 'No feature data in this area. '\n  } else {\n    // Null\n  }\n\n  const display = isFocusArea ? 'Focus area ' : ''\n  const newPlace = place ? `Approximate centre ${place}. ` : ''\n  const newArea = `Covering ${getArea(activeBounds)}. `\n  const findPlace = place ? '' : 'Use ALT plus I to find closest place'\n\n  return `${display}${newPlace}${newArea}${text}${findPlace}`\n}\n\nexport const getStatus = ({ action, isBoundsChange, place, isFocusArea, prevZoom, prevCenter, center, bounds, focusBounds, zoom, isMaxZoom, isMinZoom, features, label, featureId }) => {\n  let status = null\n  if (label) {\n    status = label\n  } else if (featureId) {\n    const selected = getSelectedStatus(features?.featuresInViewport, featureId)\n    status = selected\n  } else if (action === 'GEOCODE') {\n    status = getDescription(place, bounds, focusBounds, features, isFocusArea)\n  } else if (action === 'DATA') {\n    status = 'Map change: new data. Use ALT plus I to get new details'\n  } else if (isBoundsChange) {\n    const direction = getBoundsChange(prevCenter, prevZoom, isMaxZoom, isMinZoom, center, zoom)\n    const description = getDescription(place, bounds, focusBounds, features, isFocusArea)\n    status = `${direction}${description}`\n  } else {\n    status = ''\n  }\n  return status\n}\n\nexport const getPlace = (isUserInitiated, action, oPlace, newPlace) => {\n  let place\n  if (!isUserInitiated) {\n    if (action === 'RESET') {\n      place = oPlace\n    } else {\n      place = newPlace\n    }\n  }\n  return place\n}\n\nexport const parseCentre = (value, srid) => {\n  const mb = defaults[`MAX_BOUNDS_${srid}`]\n  let isInRange\n  let coords = value?.split(',')\n  // Query string formed correctly\n  if (!(Array.isArray(coords) && coords?.length === 3)) {\n    return null\n  }\n  // Coords are numbers\n  coords = coords.slice(0, 2).map(x => parseFloat(x))\n  coords = !coords.some(isNaN) && coords\n  if (!coords) {\n    return null\n  }\n  // Coords are within the valid range\n  if (srid === '27700') {\n    isInRange = !!coords.filter(c => c >= 0).length\n  } else {\n    isInRange = (coords[0] > mb[0] && coords[0] < mb[2]) && (coords[1] > mb[1] && coords[1] < mb[3])\n  }\n  return isInRange ? coords : null\n}\n\nexport const parseZoom = value => {\n  const coords = value?.split(',')\n  if (!(Array.isArray(coords) && coords?.length === 3)) {\n    return null\n  }\n  const zoom = parseFloat(coords[2])\n  return !zoom.isNaN ? zoom : null\n}\n\nexport const getShortcutKey = (e, featuresViewport) => {\n  const number = e.code.slice(-1)\n  const hasFeature = featuresViewport.length >= number\n  const id = hasFeature ? featuresViewport[number - 1].id : ''\n  return id\n}\n\nexport const getFeatureShape = (feature) => {\n  if (isCirclePolygon(feature?.geometry)) {\n    return 'circle'\n  }\n  if (feature?.geometry?.type?.toLowerCase() === 'polygon') {\n    const coords = feature.geometry?.coordinates\n    const flatCoords = (coords && Array.from(new Set(coords.flat(2)))) || null\n    return flatCoords?.length === 4 ? 'square' : 'polygon'\n  }\n  return null\n}\n\nexport const spatialNavigate = (direction, start, pixels) => {\n  const quadrant = pixels.filter(p => {\n    const offsetX = Math.abs(p[0] - start[0])\n    const offsetY = Math.abs(p[1] - start[1])\n    let isQuadrant = false\n    if (direction === 'up') {\n      isQuadrant = p[1] <= start[1] && offsetY >= offsetX\n    } else if (direction === 'down') {\n      isQuadrant = p[1] > start[1] && offsetY >= offsetX\n    } else if (direction === 'left') {\n      isQuadrant = p[0] <= start[0] && offsetY < offsetX\n    } else {\n      isQuadrant = p[0] > start[0] && offsetY < offsetX\n    }\n    return isQuadrant && (JSON.stringify(p) !== JSON.stringify(start))\n  })\n  if (!quadrant.length) {\n    quadrant.push(start)\n  }\n  const pythagorean = (a, b) => Math.sqrt(Math.pow(a, 2) + Math.pow(b, 2))\n  const distances = quadrant.map(p => pythagorean(Math.abs(start[0] - p[0]), Math.abs(start[1] - p[1])))\n  const closest = quadrant[distances.indexOf(Math.min(...distances))]\n  return pixels.findIndex(i => JSON.stringify(i) === JSON.stringify(closest))\n}\n\nexport const getScale = (size) => {\n  return { small: 1, medium: 1.5, large: 2 }[size] || 1\n}\n\nexport const getPoint = (el, e, scale) => {\n  const { left, top } = el.getBoundingClientRect()\n  const { clientX, clientY } = e.nativeEvent\n  const x = clientX - left\n  const y = clientY - top\n  return [x / scale, y / scale]\n}\n\nexport const getStyle = (styles = []) => {\n  const validStyles = styles.filter(s => defaults.STYLES.includes(s.name))\n  const style = window.localStorage.getItem('style')\n  return validStyles.find(s => s.name === style) || validStyles.find(s => s.name === 'default')\n}\n"],"names":["earthRadius","factors","centimeters","centimetres","degrees","Math","PI","feet","inches","kilometers","kilometres","meters","metres","miles","millimeters","millimetres","nauticalmiles","radians","yards","feature","geom","properties","options","feat","type","id","bbox","geometry","point","coordinates","Error","Array","isArray","length","isNumber","polygon","ring","j","lineString","featureCollection","features","fc","multiLineString","multiPolygon","radiansToLength","units","factor","lengthToRadians","distance","radiansToDegrees","degreesToRadians","num","isNaN","module","exports","t","e","Object","defineProperty","value","default","o","recursive","prototype","forEach","call","children","r","getComputedStyle","style","getPropertyValue","defaults","PRECISION","ANIMATION","duration","curve","DELAY","THROTTLE","MAX_FEATURES","SHORTCUT_LABEL_OFFSET","css","MARKER_VISIBLE","area","geojson","i","total","polygonArea","calculateArea","coords","abs","ringArea","FACTOR","PI_OVER_180","coordsLength","lower","middle","upper","lowerX","middleY","sin","turf_area_default","TinyQueue","constructor","data","compare","a","b","this","_down","push","item","_up","pop","top","bottom","peek","pos","parent","current","halfLength","bestChild","right","Cell","x","y","h","d","inside","minDistSq","Infinity","len","min","getSegDistSq","sqrt","pointToPolygonDist","max","SQRT2","px","py","dx","dy","polygonclip","points","result","edge","prev","prevInside","p","bitCode","intersect","code","clipPolygon","rings","outRings","clipped","_regeneratorRuntime","n","hasOwnProperty","Symbol","iterator","c","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","arg","l","f","s","GeneratorFunction","GeneratorFunctionPrototype","getPrototypeOf","v","values","g","defineIteratorMethods","_invoke","AsyncIterator","invoke","_typeof","resolve","__await","then","callInvokeWithMethodAndArg","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","return","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","reset","displayName","isGeneratorFunction","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","charAt","slice","stop","rval","handle","complete","finish","catch","delegateYield","asyncGeneratorStep","_toConsumableArray","_arrayLikeToArray","_arrayWithoutHoles","from","_iterableToArray","_unsupportedIterableToArray","_nonIterableSpread","toString","test","ownKeys","getOwnPropertySymbols","filter","getOwnPropertyDescriptor","apply","_objectSpread","arguments","_defineProperty","getOwnPropertyDescriptors","defineProperties","toPrimitive","String","_toPrimitive","_toPropertyKey","getPaddedBounds","map","padding","getPadding","bounds","getBounds","sw","project","getWest","getSouth","ne","getEast","getNorth","left","paddedSW","unproject","paddedNE","lng","lat","flat","addFeatureProperties","_map$getCenter","getCenter","coord","precision","debug","minX","minY","maxX","maxY","width","height","cellSize","cellQueue","bestCell","centroid","getCentroidCell","bboxCell","numProbes","potentiallyQueue","cell","console","log","round","ch","polylabel","p1","TurfPoint","p2","turfDistance","geometryType","combineFeatures","combined","group","find","parts","TurfPolygon","turfArea","largest","getViewport","toArray","focusBounds","bind","center","zoom","getZoom","parseFloat","toFixed","isMaxZoom","getMaxZoom","isMinZoom","getMinZoom","addMapHoverBehaviour","featureLayers","labelLayers","on","concat","queryRenderedFeatures","layers","isFeature","originalEvent","altKey","includes","layer","isLabel","getCanvas","cursor","getDetail","_x","_getDetail","_callee","pixel","selectedLayers","viewport","label","selectedId","_context","getFeatures","getHighlightedLabel","getSelectedFeatureId","resultType","_next","_throw","_map$getStyle","_layers","_layers2","locationLayers","paddingBox","scale","getFocusBounds","getStyle","_l$layout","layout","visibility","featuresAtPixel","lngLat","renderedFeaturesInViewport","featuresTotal","Set","renderedFeaturesInPadding","featuresFocusTotal","intersectingFocusFeatures","lines","line","codeB","lastCode","codeA","part","lineclip","poly","TurfBboxClip","TurfMultiPolygon","intersectFeatures","viewportPolygonFeatures","focusPolygonFeatures","featuresInViewport","featuresInFocus","sort","pow","featureType","hasFeatureLayers","some","hasPixelLayers","items","isFeaturesInMap","isPixelFeaturesAtPixel","isPixelFeaturesInMap","toggleSelectedFeature","_step","_iterator","_n","F","_createForOfIteratorHelper","setLayoutProperty","setFilter","err","text","_map$getStyle2","_features$0$propertie","_features$","getLabel","getLabels","pixels","xS","yS","locationMarkerHTML","el","document","createElement","className","innerHTML","SYMBOL_PLACEMENT","TEXT_FIELD","amendLineSymbolLayers","addHighlightedLabelLayer","addSource","addLayer","source","paint","addShortcutMarkers","shortcutMarkers","Marker","modules","m","remove","key","offset","element","setLngLat","addTo","highlightLabel","_feature$layer$layout","moveLayer","getSource","setData","textScale","textField","sections","setPaintProperty","_map$getSource","addSelectedLayers","isDarkBasemap","_loop","getLayer","removeLayer","setTimeout","loadSymbols","_this$symbols","fn","symbols","all","fetch","responses","texts","loadImage","getName","path","split","parsed","parseSVG","container","getCanvasContainer","insertAdjacentHTML","lastChild","computedStyleToInlineStyle","base64","btoa","outerHTML","img","reject","onload","hasImage","addImage","onerror","src","_asyncToGenerator","getResolution","cos","getAttributions","currentZoom","activeAttributions","minZoom","undefined","minzoom","maxZoom","maxzoom","sources","attribution","add","handleLoad","_handleLoad","resolution","attributions","isLoaded","dispatchEvent","CustomEvent","detail","framework","handleStyleLoad","_handleStyleLoad","_callee2","_context2","baseLayers","handleIdle","_handleIdle","_callee3","_detail$features","offsetTop","offsetLeft","offsetWidth","offsetHeight","_paddingBox$parentNod","parentOffsetTop","parentOffsetLeft","_context3","parentNode","handleMoveStart","_handleMoveStart","_callee4","_context4","hideLabel","isUserInitiated","handleMove","handleStyleData","_this","target","handleError","_defineProperties","_wrapNativeSuper","Map","Function","indexOf","_isNativeFunction","has","get","set","Wrapper","_isNativeReflectConstruct","Reflect","construct","_setPrototypeOf","_construct","_getPrototypeOf","Boolean","valueOf","Provider","_EventTarget","_ref","capabilities","transformRequest","_classCallCheck","ReferenceError","_assertThisInitialized","_possibleConstructorReturn","_callSuper","srid","selectedCoordinate","_inherits","_this2","isLatest","addMap","promises","window","ResizeObserver","install","_this$map","_this3","maxBounds","size","callBack","_module$default","MaplibreMap","LngLatBounds","getScale","url","storeDefaults","MAX_BOUNDS_4326","fadeDuration","attributionControl","dragRotate","setPadding","getFocusPadding","fitBounds","animate","flyTo","touchZoomRotate","disableRotation","setPixelRatio","devicePixelRatio","canvas","removeAttribute","display","targetMarker","locationMarker","wait","lastCallTime","throttleHandleMove","now","Date","debounceHandleIdle","debounce","panBy","zoomIn","zoomOut","_this$draw","_this$draw$setStyle","setStyle","diff","draw","isAnimate","easeTo","_this$map2","_this4","resize","linear","_zoom","_this5","Draw","hasData","isVisible","getElement","classList","toggle","_queryFeature","_queryPoint","_x2","success","error","navigator","geolocation","getCurrentPosition","_ref2","position","longitude","latitude","_x3","enableHighAccuracy","addClassName","direction","_labels$index","_labels$index2","labels","_this$map$getCenter","index","spatialNavigate","EventTarget","DOMParser","icon","fill","isSelected","dom","parseFromString","svg","querySelector","viewBox","getAttribute","parseInt","setAttribute","olFill","querySelectorAll","olStroke","bgFill","bgStroke","fgFill","fgStroke","body","getCoord","getCoords","getGeom","to","coordinates1","coordinates2","dLat","dLon","lat1","lat2","atan2","timeoutId","_len","args","_key","clearTimeout","geomEach","callback","stopG","geometryMaybeCollection","isGeometryCollection","featureProperties","featureBBox","featureId","featureIndex","isFeatureCollection","geometries","geomReduce","initialValue","previousValue","currentGeometry","flattenEach","geomType","multiFeatureIndex","getUnits","RATIO","getOffsetBoundingClientRect","closest","getBoundingClientRect","metresToKilometres","roundedKm","squareMetresToKm","SQ_KM","km2","Number","toLocaleString","minimumFractionDigits","maximumFractionDigits","ceil","parseDimensions","dimensions","radius","areaDisplay","centerDisplay","join","widthDisplay","radiusDisplay","detectCoordinateType","_coords","_slicedToArray","getDistance","coord1","coord2","box","boxX","boxY","parentX","parentY","every","getMapPixel","getDescription","place","isFocusArea","activeFeaturesTotal","activeBounds","newPlace","newArea","ew","ns","getArea","findPlace","getStatus","action","isBoundsChange","prevZoom","prevCenter","status","findIndex","oCentre","originalZoom","isSameCentre","JSON","stringify","isSameZoom","change","ns1","ns2","ew1","ew2","nsd","ewd","bearing","getBearing","ewc","nsc","getDirection","getBoundsChange","description","getPlace","oPlace","parseCentre","_coords2","mb","parseZoom","getShortcutKey","featuresViewport","number","getFeatureShape","_feature$geometry","_geometry$coordinates","_coordinates$","x1","y1","_coordinates$2","minDist","maxDist","minEdge","maxEdge","_coordinates$i","xA","yA","_coordinates","xB","yB","dist","hypot","edgeDist","tolerance","isCirclePolygon","toLowerCase","_feature$geometry2","flatCoords","start","quadrant","offsetX","offsetY","distances","small","medium","large","getPoint","_el$getBoundingClient","_e$nativeEvent","nativeEvent","clientX","clientY","validStyles","STYLES","localStorage","getItem"],"sourceRoot":""}