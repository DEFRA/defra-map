{"version":3,"file":"flood-map-maplibre-provider.js","mappings":"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","sources":["webpack://@defra/flood-map/./node_modules/@turf/invariant/dist/esm/index.js","webpack://@defra/flood-map/./src/js/lib/debounce.js","webpack://@defra/flood-map/./src/js/provider/maplibre/constants.js","webpack://@defra/flood-map/./node_modules/@turf/helpers/dist/esm/index.js","webpack://@defra/flood-map/./node_modules/computed-style-to-inline-style/dist/index.js","webpack://@defra/flood-map/./src/js/lib/symbols.js","webpack://@defra/flood-map/./node_modules/@turf/distance/dist/esm/index.js","webpack://@defra/flood-map/./node_modules/@turf/area/dist/esm/index.js","webpack://@defra/flood-map/./src/js/lib/viewport.js","webpack://@defra/flood-map/./node_modules/tinyqueue/index.js","webpack://@defra/flood-map/./node_modules/polylabel/polylabel.js","webpack://@defra/flood-map/./node_modules/@turf/bbox-clip/dist/esm/index.js","webpack://@defra/flood-map/./src/js/provider/maplibre/query.js","webpack://@defra/flood-map/./src/js/provider/maplibre/marker.js","webpack://@defra/flood-map/./src/js/provider/maplibre/symbols.js","webpack://@defra/flood-map/./src/js/provider/maplibre/events.js","webpack://@defra/flood-map/./src/js/provider/maplibre/provider.js","webpack://@defra/flood-map/./src/js/lib/throttle.js","webpack://@defra/flood-map/./node_modules/@turf/meta/dist/esm/index.js"],"sourcesContent":["// index.ts\nimport { isNumber } from \"@turf/helpers\";\nfunction getCoord(coord) {\n  if (!coord) {\n    throw new Error(\"coord is required\");\n  }\n  if (!Array.isArray(coord)) {\n    if (coord.type === \"Feature\" && coord.geometry !== null && coord.geometry.type === \"Point\") {\n      return [...coord.geometry.coordinates];\n    }\n    if (coord.type === \"Point\") {\n      return [...coord.coordinates];\n    }\n  }\n  if (Array.isArray(coord) && coord.length >= 2 && !Array.isArray(coord[0]) && !Array.isArray(coord[1])) {\n    return [...coord];\n  }\n  throw new Error(\"coord must be GeoJSON Point or an Array of numbers\");\n}\nfunction getCoords(coords) {\n  if (Array.isArray(coords)) {\n    return coords;\n  }\n  if (coords.type === \"Feature\") {\n    if (coords.geometry !== null) {\n      return coords.geometry.coordinates;\n    }\n  } else {\n    if (coords.coordinates) {\n      return coords.coordinates;\n    }\n  }\n  throw new Error(\n    \"coords must be GeoJSON Feature, Geometry Object or an Array\"\n  );\n}\nfunction containsNumber(coordinates) {\n  if (coordinates.length > 1 && isNumber(coordinates[0]) && isNumber(coordinates[1])) {\n    return true;\n  }\n  if (Array.isArray(coordinates[0]) && coordinates[0].length) {\n    return containsNumber(coordinates[0]);\n  }\n  throw new Error(\"coordinates must only contain numbers\");\n}\nfunction geojsonType(value, type, name) {\n  if (!type || !name) {\n    throw new Error(\"type and name required\");\n  }\n  if (!value || value.type !== type) {\n    throw new Error(\n      \"Invalid input to \" + name + \": must be a \" + type + \", given \" + value.type\n    );\n  }\n}\nfunction featureOf(feature, type, name) {\n  if (!feature) {\n    throw new Error(\"No feature passed\");\n  }\n  if (!name) {\n    throw new Error(\".featureOf() requires a name\");\n  }\n  if (!feature || feature.type !== \"Feature\" || !feature.geometry) {\n    throw new Error(\n      \"Invalid input to \" + name + \", Feature with geometry required\"\n    );\n  }\n  if (!feature.geometry || feature.geometry.type !== type) {\n    throw new Error(\n      \"Invalid input to \" + name + \": must be a \" + type + \", given \" + feature.geometry.type\n    );\n  }\n}\nfunction collectionOf(featureCollection, type, name) {\n  if (!featureCollection) {\n    throw new Error(\"No featureCollection passed\");\n  }\n  if (!name) {\n    throw new Error(\".collectionOf() requires a name\");\n  }\n  if (!featureCollection || featureCollection.type !== \"FeatureCollection\") {\n    throw new Error(\n      \"Invalid input to \" + name + \", FeatureCollection required\"\n    );\n  }\n  for (const feature of featureCollection.features) {\n    if (!feature || feature.type !== \"Feature\" || !feature.geometry) {\n      throw new Error(\n        \"Invalid input to \" + name + \", Feature with geometry required\"\n      );\n    }\n    if (!feature.geometry || feature.geometry.type !== type) {\n      throw new Error(\n        \"Invalid input to \" + name + \": must be a \" + type + \", given \" + feature.geometry.type\n      );\n    }\n  }\n}\nfunction getGeom(geojson) {\n  if (geojson.type === \"Feature\") {\n    return geojson.geometry;\n  }\n  return geojson;\n}\nfunction getType(geojson, _name) {\n  if (geojson.type === \"FeatureCollection\") {\n    return \"FeatureCollection\";\n  }\n  if (geojson.type === \"GeometryCollection\") {\n    return \"GeometryCollection\";\n  }\n  if (geojson.type === \"Feature\" && geojson.geometry !== null) {\n    return geojson.geometry.type;\n  }\n  return geojson.type;\n}\nexport {\n  collectionOf,\n  containsNumber,\n  featureOf,\n  geojsonType,\n  getCoord,\n  getCoords,\n  getGeom,\n  getType\n};\n//# sourceMappingURL=index.js.map","export const debounce = (fn, wait) => {\n  let timeoutId = null\n  return (...args) => {\n    window.clearTimeout(timeoutId)\n    timeoutId = window.setTimeout(() => {\n      fn(...args)\n    }, wait)\n  }\n}\n","export const defaults = {\n  PRECISION: 6,\n  ANIMATION: {\n    duration: 500,\n    curve: 0\n  },\n  DELAY: 500,\n  THROTTLE: 100,\n  MAX_FEATURES: 9,\n  SHORTCUT_LABEL_OFFSET: -30\n}\n\nexport const css = {\n  MARKER_VISIBLE: 'fm-c-marker--visible'\n}\n","// index.ts\nvar earthRadius = 63710088e-1;\nvar factors = {\n  centimeters: earthRadius * 100,\n  centimetres: earthRadius * 100,\n  degrees: 360 / (2 * Math.PI),\n  feet: earthRadius * 3.28084,\n  inches: earthRadius * 39.37,\n  kilometers: earthRadius / 1e3,\n  kilometres: earthRadius / 1e3,\n  meters: earthRadius,\n  metres: earthRadius,\n  miles: earthRadius / 1609.344,\n  millimeters: earthRadius * 1e3,\n  millimetres: earthRadius * 1e3,\n  nauticalmiles: earthRadius / 1852,\n  radians: 1,\n  yards: earthRadius * 1.0936\n};\nvar areaFactors = {\n  acres: 247105e-9,\n  centimeters: 1e4,\n  centimetres: 1e4,\n  feet: 10.763910417,\n  hectares: 1e-4,\n  inches: 1550.003100006,\n  kilometers: 1e-6,\n  kilometres: 1e-6,\n  meters: 1,\n  metres: 1,\n  miles: 386e-9,\n  nauticalmiles: 29155334959812285e-23,\n  millimeters: 1e6,\n  millimetres: 1e6,\n  yards: 1.195990046\n};\nfunction feature(geom, properties, options = {}) {\n  const feat = { type: \"Feature\" };\n  if (options.id === 0 || options.id) {\n    feat.id = options.id;\n  }\n  if (options.bbox) {\n    feat.bbox = options.bbox;\n  }\n  feat.properties = properties || {};\n  feat.geometry = geom;\n  return feat;\n}\nfunction geometry(type, coordinates, _options = {}) {\n  switch (type) {\n    case \"Point\":\n      return point(coordinates).geometry;\n    case \"LineString\":\n      return lineString(coordinates).geometry;\n    case \"Polygon\":\n      return polygon(coordinates).geometry;\n    case \"MultiPoint\":\n      return multiPoint(coordinates).geometry;\n    case \"MultiLineString\":\n      return multiLineString(coordinates).geometry;\n    case \"MultiPolygon\":\n      return multiPolygon(coordinates).geometry;\n    default:\n      throw new Error(type + \" is invalid\");\n  }\n}\nfunction point(coordinates, properties, options = {}) {\n  if (!coordinates) {\n    throw new Error(\"coordinates is required\");\n  }\n  if (!Array.isArray(coordinates)) {\n    throw new Error(\"coordinates must be an Array\");\n  }\n  if (coordinates.length < 2) {\n    throw new Error(\"coordinates must be at least 2 numbers long\");\n  }\n  if (!isNumber(coordinates[0]) || !isNumber(coordinates[1])) {\n    throw new Error(\"coordinates must contain numbers\");\n  }\n  const geom = {\n    type: \"Point\",\n    coordinates\n  };\n  return feature(geom, properties, options);\n}\nfunction points(coordinates, properties, options = {}) {\n  return featureCollection(\n    coordinates.map((coords) => {\n      return point(coords, properties);\n    }),\n    options\n  );\n}\nfunction polygon(coordinates, properties, options = {}) {\n  for (const ring of coordinates) {\n    if (ring.length < 4) {\n      throw new Error(\n        \"Each LinearRing of a Polygon must have 4 or more Positions.\"\n      );\n    }\n    if (ring[ring.length - 1].length !== ring[0].length) {\n      throw new Error(\"First and last Position are not equivalent.\");\n    }\n    for (let j = 0; j < ring[ring.length - 1].length; j++) {\n      if (ring[ring.length - 1][j] !== ring[0][j]) {\n        throw new Error(\"First and last Position are not equivalent.\");\n      }\n    }\n  }\n  const geom = {\n    type: \"Polygon\",\n    coordinates\n  };\n  return feature(geom, properties, options);\n}\nfunction polygons(coordinates, properties, options = {}) {\n  return featureCollection(\n    coordinates.map((coords) => {\n      return polygon(coords, properties);\n    }),\n    options\n  );\n}\nfunction lineString(coordinates, properties, options = {}) {\n  if (coordinates.length < 2) {\n    throw new Error(\"coordinates must be an array of two or more positions\");\n  }\n  const geom = {\n    type: \"LineString\",\n    coordinates\n  };\n  return feature(geom, properties, options);\n}\nfunction lineStrings(coordinates, properties, options = {}) {\n  return featureCollection(\n    coordinates.map((coords) => {\n      return lineString(coords, properties);\n    }),\n    options\n  );\n}\nfunction featureCollection(features, options = {}) {\n  const fc = { type: \"FeatureCollection\" };\n  if (options.id) {\n    fc.id = options.id;\n  }\n  if (options.bbox) {\n    fc.bbox = options.bbox;\n  }\n  fc.features = features;\n  return fc;\n}\nfunction multiLineString(coordinates, properties, options = {}) {\n  const geom = {\n    type: \"MultiLineString\",\n    coordinates\n  };\n  return feature(geom, properties, options);\n}\nfunction multiPoint(coordinates, properties, options = {}) {\n  const geom = {\n    type: \"MultiPoint\",\n    coordinates\n  };\n  return feature(geom, properties, options);\n}\nfunction multiPolygon(coordinates, properties, options = {}) {\n  const geom = {\n    type: \"MultiPolygon\",\n    coordinates\n  };\n  return feature(geom, properties, options);\n}\nfunction geometryCollection(geometries, properties, options = {}) {\n  const geom = {\n    type: \"GeometryCollection\",\n    geometries\n  };\n  return feature(geom, properties, options);\n}\nfunction round(num, precision = 0) {\n  if (precision && !(precision >= 0)) {\n    throw new Error(\"precision must be a positive number\");\n  }\n  const multiplier = Math.pow(10, precision || 0);\n  return Math.round(num * multiplier) / multiplier;\n}\nfunction radiansToLength(radians, units = \"kilometers\") {\n  const factor = factors[units];\n  if (!factor) {\n    throw new Error(units + \" units is invalid\");\n  }\n  return radians * factor;\n}\nfunction lengthToRadians(distance, units = \"kilometers\") {\n  const factor = factors[units];\n  if (!factor) {\n    throw new Error(units + \" units is invalid\");\n  }\n  return distance / factor;\n}\nfunction lengthToDegrees(distance, units) {\n  return radiansToDegrees(lengthToRadians(distance, units));\n}\nfunction bearingToAzimuth(bearing) {\n  let angle = bearing % 360;\n  if (angle < 0) {\n    angle += 360;\n  }\n  return angle;\n}\nfunction azimuthToBearing(angle) {\n  angle = angle % 360;\n  if (angle > 180) {\n    return angle - 360;\n  } else if (angle < -180) {\n    return angle + 360;\n  }\n  return angle;\n}\nfunction radiansToDegrees(radians) {\n  const normalisedRadians = radians % (2 * Math.PI);\n  return normalisedRadians * 180 / Math.PI;\n}\nfunction degreesToRadians(degrees) {\n  const normalisedDegrees = degrees % 360;\n  return normalisedDegrees * Math.PI / 180;\n}\nfunction convertLength(length, originalUnit = \"kilometers\", finalUnit = \"kilometers\") {\n  if (!(length >= 0)) {\n    throw new Error(\"length must be a positive number\");\n  }\n  return radiansToLength(lengthToRadians(length, originalUnit), finalUnit);\n}\nfunction convertArea(area, originalUnit = \"meters\", finalUnit = \"kilometers\") {\n  if (!(area >= 0)) {\n    throw new Error(\"area must be a positive number\");\n  }\n  const startFactor = areaFactors[originalUnit];\n  if (!startFactor) {\n    throw new Error(\"invalid original units\");\n  }\n  const finalFactor = areaFactors[finalUnit];\n  if (!finalFactor) {\n    throw new Error(\"invalid final units\");\n  }\n  return area / startFactor * finalFactor;\n}\nfunction isNumber(num) {\n  return !isNaN(num) && num !== null && !Array.isArray(num);\n}\nfunction isObject(input) {\n  return input !== null && typeof input === \"object\" && !Array.isArray(input);\n}\nfunction validateBBox(bbox) {\n  if (!bbox) {\n    throw new Error(\"bbox is required\");\n  }\n  if (!Array.isArray(bbox)) {\n    throw new Error(\"bbox must be an Array\");\n  }\n  if (bbox.length !== 4 && bbox.length !== 6) {\n    throw new Error(\"bbox must be an Array of 4 or 6 numbers\");\n  }\n  bbox.forEach((num) => {\n    if (!isNumber(num)) {\n      throw new Error(\"bbox must only contain numbers\");\n    }\n  });\n}\nfunction validateId(id) {\n  if (!id) {\n    throw new Error(\"id is required\");\n  }\n  if ([\"string\", \"number\"].indexOf(typeof id) === -1) {\n    throw new Error(\"id must be a number or a string\");\n  }\n}\nexport {\n  areaFactors,\n  azimuthToBearing,\n  bearingToAzimuth,\n  convertArea,\n  convertLength,\n  degreesToRadians,\n  earthRadius,\n  factors,\n  feature,\n  featureCollection,\n  geometry,\n  geometryCollection,\n  isNumber,\n  isObject,\n  lengthToDegrees,\n  lengthToRadians,\n  lineString,\n  lineStrings,\n  multiLineString,\n  multiPoint,\n  multiPolygon,\n  point,\n  points,\n  polygon,\n  polygons,\n  radiansToDegrees,\n  radiansToLength,\n  round,\n  validateBBox,\n  validateId\n};\n//# sourceMappingURL=index.js.map","!function(e,t){\"object\"==typeof exports&&\"object\"==typeof module?module.exports=t():\"function\"==typeof define&&define.amd?define([],t):\"object\"==typeof exports?exports.computedStyleToInlineStyle=t():e.computedStyleToInlineStyle=t()}(this,(()=>(()=>{\"use strict\";var e={};return(()=>{var t=e;Object.defineProperty(t,\"__esModule\",{value:!0}),t.default=function e(t,o){if(!t)throw new Error(\"No element specified.\");(null==o?void 0:o.recursive)&&Array.prototype.forEach.call(t.children,(t=>{e(t,o)}));const r=getComputedStyle(t);Array.prototype.forEach.call((null==o?void 0:o.properties)||r,(e=>{t.style[e]=r.getPropertyValue(e)}))}})(),e})()));","const { DOMParser } = window\n\nexport const parseSVG = (icon, fill, text, isDarkBasemap = false, scale = 1) => {\n  const isSelected = icon.includes('selected')\n  // let styled = text.replace(/#0f0|#00ff00|#0F0|#00FF00/g, isSelected ? isDarkBasemap ? '#ffffff' : '#0b0c0c' : 'transparent')\n  // styled = styled.replace(/#00f|#0000ff|#00F|#0000FF/g, isDarkBasemap ? '#162232' : '#ffffff')\n  const parser = new DOMParser()\n  const dom = parser.parseFromString(text, 'text/html')\n  const svg = dom.querySelector('svg')\n  // Add xmlns attribute and class to svg\n  // svg.setAttribute('xmlns', 'http://www.w3.org/2000/svg')\n  svg.classList.add('fm-c-symbol')\n  svg.classList.toggle('fm-c-symbol--selected', isSelected)\n  svg.classList.toggle('fm-c-symbol--dark', isDarkBasemap)\n  // Set svg height and width\n  const viewBox = svg.getAttribute('viewBox')\n  const width = parseInt(viewBox.split(' ')[2], 10) * scale\n  const height = parseInt(viewBox.split(' ')[3], 10) * scale\n  svg.setAttribute('width', width)\n  svg.setAttribute('height', height)\n  // Conditionally add fill\n  if (fill) {\n    svg.setAttribute('fill', fill)\n  }\n  // Add classnames\n  const olFill = svg.querySelectorAll('[fill=\"#0b0c0c\" i], [style*=\"fill:#0b0c0c\" i]')\n  const olStroke = svg.querySelectorAll('[stroke=\"#0b0c0c\" i], [style*=\"stroke:#0b0c0c\" i]')\n  olFill.forEach(n => n.classList.add('fm-c-symbol__ol-fill'))\n  olStroke.forEach(n => n.classList.add('fm-c-symbol__ol-stroke'))\n  const bgFill = svg.querySelectorAll('[fill=\"#fff\" i], [fill=\"#ffffff\" i], [style*=\"fill:#fff\" i], [style*=\"fill:#ffffff\" i]')\n  const bgStroke = svg.querySelectorAll('[stroke*=\"#fff\" i], [stroke*=\"#ffffff\" i], [style*=\"stroke:#fff\" i], [style*=\"stroke:#ffffff\" i]')\n  bgFill.forEach(n => n.classList.add('fm-c-symbol__bg-fill'))\n  bgStroke.forEach(n => n.classList.add('fm-c-symbol__bg-stroke'))\n  const fgFill = svg.querySelectorAll(':not(.fm-c-symbol__ol-fill):not(.fm-c-symbol__bg-fill)[fill], :not(.fm-c-symbol__ol-fill):not(.fm-c-symbol__bg-fill)[style*=\"fill\"]')\n  const fgStroke = svg.querySelectorAll(':not(.fm-c-symbol__ol-stroke):not(.fm-c-symbol__bg-stroke)[stroke], :not(.fm-c-symbol__ol-stroke):not(.fm-c-symbol__bg-stroke)[style*=\"stroke\"]')\n  fgFill.forEach(n => n.classList.add('fm-c-symbol__fg-fill'))\n  fgStroke.forEach(n => n.classList.add('fm-c-symbol__fg-stroke'))\n  return dom.body.innerHTML\n}\n","// index.ts\nimport { getCoord } from \"@turf/invariant\";\nimport { radiansToLength, degreesToRadians } from \"@turf/helpers\";\nfunction distance(from, to, options = {}) {\n  var coordinates1 = getCoord(from);\n  var coordinates2 = getCoord(to);\n  var dLat = degreesToRadians(coordinates2[1] - coordinates1[1]);\n  var dLon = degreesToRadians(coordinates2[0] - coordinates1[0]);\n  var lat1 = degreesToRadians(coordinates1[1]);\n  var lat2 = degreesToRadians(coordinates2[1]);\n  var a = Math.pow(Math.sin(dLat / 2), 2) + Math.pow(Math.sin(dLon / 2), 2) * Math.cos(lat1) * Math.cos(lat2);\n  return radiansToLength(\n    2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a)),\n    options.units\n  );\n}\nvar turf_distance_default = distance;\nexport {\n  turf_distance_default as default,\n  distance\n};\n//# sourceMappingURL=index.js.map","// index.ts\nimport { earthRadius } from \"@turf/helpers\";\nimport { geomReduce } from \"@turf/meta\";\nfunction area(geojson) {\n  return geomReduce(\n    geojson,\n    (value, geom) => {\n      return value + calculateArea(geom);\n    },\n    0\n  );\n}\nfunction calculateArea(geom) {\n  let total = 0;\n  let i;\n  switch (geom.type) {\n    case \"Polygon\":\n      return polygonArea(geom.coordinates);\n    case \"MultiPolygon\":\n      for (i = 0; i < geom.coordinates.length; i++) {\n        total += polygonArea(geom.coordinates[i]);\n      }\n      return total;\n    case \"Point\":\n    case \"MultiPoint\":\n    case \"LineString\":\n    case \"MultiLineString\":\n      return 0;\n  }\n  return 0;\n}\nfunction polygonArea(coords) {\n  let total = 0;\n  if (coords && coords.length > 0) {\n    total += Math.abs(ringArea(coords[0]));\n    for (let i = 1; i < coords.length; i++) {\n      total -= Math.abs(ringArea(coords[i]));\n    }\n  }\n  return total;\n}\nvar FACTOR = earthRadius * earthRadius / 2;\nvar PI_OVER_180 = Math.PI / 180;\nfunction ringArea(coords) {\n  const coordsLength = coords.length - 1;\n  if (coordsLength <= 2) return 0;\n  let total = 0;\n  let i = 0;\n  while (i < coordsLength) {\n    const lower = coords[i];\n    const middle = coords[i + 1 === coordsLength ? 0 : i + 1];\n    const upper = coords[i + 2 >= coordsLength ? (i + 2) % coordsLength : i + 2];\n    const lowerX = lower[0] * PI_OVER_180;\n    const middleY = middle[1] * PI_OVER_180;\n    const upperX = upper[0] * PI_OVER_180;\n    total += (upperX - lowerX) * Math.sin(middleY);\n    i++;\n  }\n  return total * FACTOR;\n}\nvar turf_area_default = area;\nexport {\n  area,\n  turf_area_default as default\n};\n//# sourceMappingURL=index.js.map","import { distance as turfDistance } from '@turf/distance'\nimport { point as TurfPoint } from '@turf/helpers'\nimport { defaults } from '../store/constants'\n\nconst getBearing = (coord1, coord2) => {\n  const east = coord1[0] < coord2[0] && 'east'\n  const west = coord1[0] > coord2[0] && 'west'\n  const north = coord1[1] < coord2[1] && 'north'\n  const south = coord1[1] > coord2[1] && 'south'\n  return [east, west, north, south].filter(b => b && typeof b === 'string')\n}\n\nconst getUnits = (metres) => {\n  const MAX_METRES = 800\n  const MAX_MILES = 5000\n  const RATIO = 0.621371\n  let units\n  if (metres < MAX_METRES) {\n    units = `${metres} metres`\n  } else if (metres < MAX_MILES) {\n    units = (metres / 1000 * RATIO).toFixed(1) + ' miles'\n  } else {\n    units = Math.round((metres / 1000) * RATIO) + ' miles'\n  }\n  return units\n}\n\nconst getDirection = (coord1, coord2) => {\n  coord1 = coord1.map(n => n > 1000 ? Math.round(n) : Math.round(n * 100000) / 100000)\n  coord2 = coord2.map(n => n > 1000 ? Math.round(n) : Math.round(n * 100000) / 100000)\n  const ns1 = [coord1[0], coord1[1]]\n  const ns2 = [coord1[0], coord2[1]]\n  const ew1 = [coord1[0], coord1[1]]\n  const ew2 = [coord2[0], coord1[1]]\n  const nsd = getDistance(ns1, ns2)\n  const ewd = getDistance(ew1, ew2)\n  const bearing = getBearing(coord1, coord2)\n  const ewc = bearing.filter(b => ['east', 'west'].includes(b)).join('')\n  const nsc = bearing.filter(b => ['north', 'south'].includes(b)).join('')\n  const ew = ewc ? `${ewc} ${getUnits(ewd)}` : ''\n  const ns = nsc ? `${nsc} ${getUnits(nsd)}` : ''\n  return `${ns + (ewc && nsc ? ', ' : '') + ew}`\n}\n\nconst getArea = (bounds) => {\n  const ew = getDistance([bounds[0], bounds[1]], [bounds[2], bounds[1]])\n  const ns = getDistance([bounds[0], bounds[1]], [bounds[0], bounds[3]])\n  return `${getUnits(ew)} by ${getUnits(ns)}`\n}\n\nconst getBoundsChange = (oCentre, originalZoom, isMaxZoom, isMinZoom, center, zoom) => {\n  const isSameCentre = JSON.stringify(oCentre) === JSON.stringify(center)\n  const isSameZoom = originalZoom === zoom\n  const isMove = oCentre && originalZoom && !(isSameCentre && isSameZoom)\n  const maxZoom = isMaxZoom ? ' (Maximum zoom reached)' : ''\n  const minZoom = isMinZoom ? ' (Minimum zoom reached)' : ''\n  let change = ''\n  if (isMove) {\n    if (!isSameCentre && !isSameZoom) {\n      change = `New area${maxZoom}${minZoom}. `\n    } else if (!isSameCentre) {\n      change = `Map move: ${getDirection(oCentre, center)}. `\n    } else {\n      const direction = zoom > originalZoom ? 'in' : 'out'\n      change = `Zoomed ${direction}${maxZoom}${minZoom}. `\n    }\n  }\n  return change\n}\n\nconst getSelectedStatus = (featuresInViewport, id) => {\n  const total = featuresInViewport.length\n  const index = featuresInViewport.findIndex(f => f.id === id)\n  return index >= 0 && `${total} feature${total !== 1 ? 's' : ''} in this area. ${featuresInViewport[index].name}. ${index + 1} of ${total} highlighted.`\n}\n\nconst getOffsetBoundingClientRect = (el) => {\n  const offsetParent = el.closest('[data-fm-main]') || document.body\n  return offsetParent.getBoundingClientRect()\n}\n\nconst isCirclePolygon = (geometry) => {\n  const coordinates = geometry?.coordinates?.[0]\n\n  // Expect exactly 64 points\n  if (coordinates?.length !== 65) {\n    return false\n  }\n\n  // Compute approximate centre using two opposite points\n  const [x1, y1] = coordinates[0]\n  const [x2, y2] = coordinates[32]\n  const center = [(x1 + x2) / 2, (y1 + y2) / 2]\n\n  let minDist = Infinity; let maxDist = -Infinity\n  let minEdge = Infinity; let maxEdge = -Infinity\n\n  for (let i = 0; i < 64; i++) {\n    const [xA, yA] = coordinates[i]\n    const [xB, yB] = coordinates[(i + 1) % 64]\n\n    // Distance from center\n    const dist = Math.hypot(xA - center[0], yA - center[1])\n    minDist = Math.min(minDist, dist)\n    maxDist = Math.max(maxDist, dist)\n\n    // Distance to next vertex (edge length)\n    const edgeDist = Math.hypot(xB - xA, yB - yA)\n    minEdge = Math.min(minEdge, edgeDist)\n    maxEdge = Math.max(maxEdge, edgeDist)\n  }\n\n  // Need to revist tolerance as they depend on size too\n  const WSG84_TOLERANCE = 0.3\n  const BNG_TOLERANCE = 0.3\n  const tolerance = detectCoordinateType(center) === 'WSG84' ? WSG84_TOLERANCE : BNG_TOLERANCE\n\n  return Math.abs(maxDist - minDist) < tolerance && Math.abs(maxEdge - minEdge) < tolerance\n}\n\n// const metresToImperial = (metres) => {\n//   const MILE = 1609.344\n//   const YARD = 0.9144\n//   const pluralize = (value, singular, plural) => `${value} ${value === 1 ? singular : plural}`\n//   if (metres >= MILE) {\n//     const miles = Math.floor(metres / MILE)\n//     const remainder = metres % MILE\n//     const yards = Math.floor(remainder / YARD)\n//     return `${pluralize(miles, 'mile', 'miles')}, ${pluralize(yards, 'yard', 'yards')}`\n//   } else {\n//     const yards = Math.floor(metres / YARD)\n//     return `${pluralize(yards, 'yard', 'yards')}`\n//   }\n// }\n\nconst metresToKilometres = (metres) => {\n  const KILOMETRE = 1000\n  // const pluralize = (value, singular, plural) => `${value} ${value === 1 ? singular : plural}`\n  if (metres >= KILOMETRE) {\n    const kilometres = metres / KILOMETRE\n    const roundedKm = Math.round(kilometres * 100) / 100\n    return `${roundedKm}km`\n  } else {\n    // return `${pluralize(Math.round(metres), 'metre', 'metres')}`\n    return `${Math.round(metres)}m`\n  }\n}\n\nexport const squareMetresToKm = (metres) => {\n  const SQ_KM = 1_000_000\n  if (metres >= SQ_KM) {\n    let km2 = (metres / SQ_KM).toFixed(2)\n    km2 = Number(km2).toLocaleString(undefined, { minimumFractionDigits: 0, maximumFractionDigits: 2 })\n    return `${km2}km²`\n  } else {\n    return `${Math.ceil(metres).toLocaleString()}m²`\n  }\n}\n\nexport const parseDimensions = (dimensions) => {\n  const { area, center, width, radius } = dimensions\n  const areaDisplay = area ? squareMetresToKm(area) : null\n  const centerDisplay = center ? center.map(c => Math.round(c)).join(', ') : null\n  const widthDisplay = width ? metresToKilometres(width) : null\n  const radiusDisplay = radius ? metresToKilometres(radius) : null\n  return { ...dimensions, areaDisplay, centerDisplay, widthDisplay, radiusDisplay }\n}\n\nexport const detectCoordinateType = (coords) => {\n  if (coords.length === 3) {\n    return 'BNG' // If a third value exists (zone), it's UTM\n  }\n  const [x, y] = coords\n  if (x >= -180 && x <= 180 && y >= -90 && y <= 90) {\n    return 'WSG84'\n  }\n  if (x > 180 && y > 90) {\n    return 'BNG'\n  }\n  return 'Unknown'\n}\n\nexport const getDistance = (coord1, coord2) => {\n  let distance\n  if (coord1[0] > 1000) {\n    const x = Math.abs(coord1[0] - coord2[0])\n    const y = Math.abs(coord1[1] - coord2[1])\n    const dist = Math.sqrt((Math.pow(x, 2)) + (Math.pow(y, 2)))\n    distance = dist\n  } else {\n    const p1 = new TurfPoint(coord1)\n    const p2 = new TurfPoint(coord2)\n    distance = turfDistance(p1, p2, { units: 'metres' })\n  }\n  return Math.round(distance)\n}\n\nexport const getFocusPadding = (el, scale) => {\n  let padding\n  if (el) {\n    const parent = getOffsetBoundingClientRect(el)\n    const box = el.getBoundingClientRect()\n    const boxX = box.x || box.left\n    const boxY = box.y || box.top\n    const parentX = parent.x || parent.left\n    const parentY = parent.y || parent.top\n    padding = {\n      top: (boxY - parentY) / scale,\n      left: (boxX - parentX) / scale,\n      right: (parent.width - box.width - (boxX - parentX)) / scale,\n      bottom: (parent.height - box.height - (boxY - parentY)) / scale\n    }\n  }\n  // Addresses repid browser resizing\n  const isValid = Object.values(padding).every(i => i >= 0)\n  return isValid && padding\n}\n\nexport const getFocusBounds = (el, scale) => {\n  let bounds\n  if (el) {\n    const parent = getOffsetBoundingClientRect(el)\n    const box = el.getBoundingClientRect()\n    const m = 10\n    bounds = [[\n      ((box.x || box.left) - (parent.x || parent.left) + m) / scale,\n      (((box.y || box.top) - (parent.y || parent.top)) + box.height - m) / scale\n    ], [\n      (box.width + ((box.x || box.left) - (parent.x || parent.left)) - m) / scale,\n      ((box.y || box.top) - (parent.y || parent.top) + m) / scale\n    ]]\n  }\n  return bounds\n}\n\nexport const getMapPixel = (el, scale) => {\n  const parent = getOffsetBoundingClientRect(el)\n  const box = el.getBoundingClientRect()\n  const left = ((box.x || box.left) - (parent.x || parent.left)) / scale\n  const top = ((box.y || box.top) - (parent.y || parent.top)) / scale\n  const offsetLeft = (box.width / 2) / scale\n  const offsetTop = (box.height / 2) / scale\n  const point = [left + offsetLeft, top + offsetTop]\n  return point\n}\n\nexport const getDescription = (place, bounds, focusBounds, features, isFocusArea) => {\n  const { featuresTotal, featuresFocusTotal, isFeaturesInMap, isPixelFeaturesAtPixel, isPixelFeaturesInMap } = features || {}\n  const activeFeaturesTotal = isFocusArea ? featuresFocusTotal : featuresTotal\n  const activeBounds = isFocusArea ? focusBounds : bounds\n  let text = ''\n  if (activeFeaturesTotal) {\n    text = `${activeFeaturesTotal} feature${activeFeaturesTotal === 1 ? '' : 's'} in this area. `\n  } else if (isPixelFeaturesAtPixel) {\n    text = 'Data visible at the center coordinate. '\n  } else if (isPixelFeaturesInMap) {\n    text = 'No data visible at the center coordinate. '\n  } else if (isFeaturesInMap) {\n    text = 'No feature data in this area. '\n  } else {\n    // Null\n  }\n\n  const display = isFocusArea ? 'Focus area ' : ''\n  const newPlace = place ? `Approximate centre ${place}. ` : ''\n  const newArea = `Covering ${getArea(activeBounds)}. `\n  const findPlace = place ? '' : 'Use ALT plus I to find closest place'\n\n  return `${display}${newPlace}${newArea}${text}${findPlace}`\n}\n\nexport const getStatus = ({ action, isBoundsChange, place, isFocusArea, prevZoom, prevCenter, center, bounds, focusBounds, zoom, isMaxZoom, isMinZoom, features, label, featureId }) => {\n  let status = null\n  if (label) {\n    status = label\n  } else if (featureId) {\n    const selected = getSelectedStatus(features?.featuresInViewport, featureId)\n    status = selected\n  } else if (action === 'GEOCODE') {\n    status = getDescription(place, bounds, focusBounds, features, isFocusArea)\n  } else if (action === 'DATA') {\n    status = 'Map change: new data. Use ALT plus I to get new details'\n  } else if (isBoundsChange) {\n    const direction = getBoundsChange(prevCenter, prevZoom, isMaxZoom, isMinZoom, center, zoom)\n    const description = getDescription(place, bounds, focusBounds, features, isFocusArea)\n    status = `${direction}${description}`\n  } else {\n    status = ''\n  }\n  return status\n}\n\nexport const getPlace = (isUserInitiated, action, oPlace, newPlace) => {\n  let place\n  if (!isUserInitiated) {\n    if (action === 'RESET') {\n      place = oPlace\n    } else {\n      place = newPlace\n    }\n  }\n  return place\n}\n\nexport const parseCentre = (value, srid) => {\n  const mb = defaults[`MAX_BOUNDS_${srid}`]\n  let isInRange\n  let coords = value?.split(',')\n  // Query string formed correctly\n  if (!(Array.isArray(coords) && coords?.length === 3)) {\n    return null\n  }\n  // Coords are numbers\n  coords = coords.slice(0, 2).map(x => parseFloat(x))\n  coords = !coords.some(isNaN) && coords\n  if (!coords) {\n    return null\n  }\n  // Coords are within the valid range\n  if (srid === '27700') {\n    isInRange = !!coords.filter(c => c >= 0).length\n  } else {\n    isInRange = (coords[0] > mb[0] && coords[0] < mb[2]) && (coords[1] > mb[1] && coords[1] < mb[3])\n  }\n  return isInRange ? coords : null\n}\n\nexport const parseZoom = value => {\n  const coords = value?.split(',')\n  if (!(Array.isArray(coords) && coords?.length === 3)) {\n    return null\n  }\n  const zoom = parseFloat(coords[2])\n  return !zoom.isNaN ? zoom : null\n}\n\nexport const getShortcutKey = (e, featuresViewport) => {\n  const number = e.code.slice(-1)\n  const hasFeature = featuresViewport.length >= number\n  const id = hasFeature ? featuresViewport[number - 1].id : ''\n  return id\n}\n\nexport const getFeatureShape = (feature) => {\n  if (isCirclePolygon(feature?.geometry)) {\n    return 'circle'\n  }\n  if (feature?.geometry?.type?.toLowerCase() === 'polygon') {\n    const coords = feature.geometry?.coordinates\n    const flatCoords = (coords && Array.from(new Set(coords.flat(2)))) || null\n    return flatCoords?.length === 4 ? 'square' : 'polygon'\n  }\n  return null\n}\n\nexport const spatialNavigate = (direction, start, pixels) => {\n  const quadrant = pixels.filter(p => {\n    const offsetX = Math.abs(p[0] - start[0])\n    const offsetY = Math.abs(p[1] - start[1])\n    let isQuadrant = false\n    if (direction === 'up') {\n      isQuadrant = p[1] <= start[1] && offsetY >= offsetX\n    } else if (direction === 'down') {\n      isQuadrant = p[1] > start[1] && offsetY >= offsetX\n    } else if (direction === 'left') {\n      isQuadrant = p[0] <= start[0] && offsetY < offsetX\n    } else {\n      isQuadrant = p[0] > start[0] && offsetY < offsetX\n    }\n    return isQuadrant && (JSON.stringify(p) !== JSON.stringify(start))\n  })\n  if (!quadrant.length) {\n    quadrant.push(start)\n  }\n  const pythagorean = (a, b) => Math.sqrt(Math.pow(a, 2) + Math.pow(b, 2))\n  const distances = quadrant.map(p => pythagorean(Math.abs(start[0] - p[0]), Math.abs(start[1] - p[1])))\n  const closest = quadrant[distances.indexOf(Math.min(...distances))]\n  return pixels.findIndex(i => JSON.stringify(i) === JSON.stringify(closest))\n}\n\nexport const getScale = (size) => {\n  return { small: 1, medium: 1.5, large: 2 }[size] || 1\n}\n\nexport const getPoint = (el, e, scale) => {\n  const { left, top } = el.getBoundingClientRect()\n  const { clientX, clientY } = e.nativeEvent\n  const x = clientX - left\n  const y = clientY - top\n  return [x / scale, y / scale]\n}\n\nexport const getStyle = (styles = []) => {\n  const validStyles = styles.filter(s => defaults.STYLES.includes(s.name))\n  const style = window.localStorage.getItem('style')\n  return validStyles.find(s => s.name === style) || validStyles.find(s => s.name === 'default')\n}\n","\nexport default class TinyQueue {\n    constructor(data = [], compare = (a, b) => (a < b ? -1 : a > b ? 1 : 0)) {\n        this.data = data;\n        this.length = this.data.length;\n        this.compare = compare;\n\n        if (this.length > 0) {\n            for (let i = (this.length >> 1) - 1; i >= 0; i--) this._down(i);\n        }\n    }\n\n    push(item) {\n        this.data.push(item);\n        this._up(this.length++);\n    }\n\n    pop() {\n        if (this.length === 0) return undefined;\n\n        const top = this.data[0];\n        const bottom = this.data.pop();\n\n        if (--this.length > 0) {\n            this.data[0] = bottom;\n            this._down(0);\n        }\n\n        return top;\n    }\n\n    peek() {\n        return this.data[0];\n    }\n\n    _up(pos) {\n        const {data, compare} = this;\n        const item = data[pos];\n\n        while (pos > 0) {\n            const parent = (pos - 1) >> 1;\n            const current = data[parent];\n            if (compare(item, current) >= 0) break;\n            data[pos] = current;\n            pos = parent;\n        }\n\n        data[pos] = item;\n    }\n\n    _down(pos) {\n        const {data, compare} = this;\n        const halfLength = this.length >> 1;\n        const item = data[pos];\n\n        while (pos < halfLength) {\n            let bestChild = (pos << 1) + 1; // initially it is the left child\n            const right = bestChild + 1;\n\n            if (right < this.length && compare(data[right], data[bestChild]) < 0) {\n                bestChild = right;\n            }\n            if (compare(data[bestChild], item) >= 0) break;\n\n            data[pos] = data[bestChild];\n            pos = bestChild;\n        }\n\n        data[pos] = item;\n    }\n}\n","\nimport Queue from 'tinyqueue';\n\nexport default function polylabel(polygon, precision = 1.0, debug = false) {\n    // find the bounding box of the outer ring\n    let minX = Infinity;\n    let minY = Infinity;\n    let maxX = -Infinity;\n    let maxY = -Infinity;\n\n    for (const [x, y] of polygon[0]) {\n        if (x < minX) minX = x;\n        if (y < minY) minY = y;\n        if (x > maxX) maxX = x;\n        if (y > maxY) maxY = y;\n    }\n\n    const width = maxX - minX;\n    const height = maxY - minY;\n    const cellSize = Math.max(precision, Math.min(width, height));\n\n    if (cellSize === precision) {\n        const result = [minX, minY];\n        result.distance = 0;\n        return result;\n    }\n\n    // a priority queue of cells in order of their \"potential\" (max distance to polygon)\n    const cellQueue = new Queue([], (a, b) => b.max - a.max);\n\n    // take centroid as the first best guess\n    let bestCell = getCentroidCell(polygon);\n\n    // second guess: bounding box centroid\n    const bboxCell = new Cell(minX + width / 2, minY + height / 2, 0, polygon);\n    if (bboxCell.d > bestCell.d) bestCell = bboxCell;\n\n    let numProbes = 2;\n\n    function potentiallyQueue(x, y, h) {\n        const cell = new Cell(x, y, h, polygon);\n        numProbes++;\n        if (cell.max > bestCell.d + precision) cellQueue.push(cell);\n\n        // update the best cell if we found a better one\n        if (cell.d > bestCell.d) {\n            bestCell = cell;\n            if (debug) console.log(`found best ${Math.round(1e4 * cell.d) / 1e4} after ${numProbes} probes`);\n        }\n    }\n\n    // cover polygon with initial cells\n    let h = cellSize / 2;\n    for (let x = minX; x < maxX; x += cellSize) {\n        for (let y = minY; y < maxY; y += cellSize) {\n            potentiallyQueue(x + h, y + h, h);\n        }\n    }\n\n    while (cellQueue.length) {\n        // pick the most promising cell from the queue\n        const {max, x, y, h: ch} = cellQueue.pop();\n\n        // do not drill down further if there's no chance of a better solution\n        if (max - bestCell.d <= precision) break;\n\n        // split the cell into four cells\n        h = ch / 2;\n        potentiallyQueue(x - h, y - h, h);\n        potentiallyQueue(x + h, y - h, h);\n        potentiallyQueue(x - h, y + h, h);\n        potentiallyQueue(x + h, y + h, h);\n    }\n\n    if (debug) {\n        console.log(`num probes: ${numProbes}\\nbest distance: ${bestCell.d}`);\n    }\n\n    const result = [bestCell.x, bestCell.y];\n    result.distance = bestCell.d;\n    return result;\n}\n\nfunction Cell(x, y, h, polygon) {\n    this.x = x; // cell center x\n    this.y = y; // cell center y\n    this.h = h; // half the cell size\n    this.d = pointToPolygonDist(x, y, polygon); // distance from cell center to polygon\n    this.max = this.d + this.h * Math.SQRT2; // max distance to polygon within a cell\n}\n\n// signed distance from point to polygon outline (negative if point is outside)\nfunction pointToPolygonDist(x, y, polygon) {\n    let inside = false;\n    let minDistSq = Infinity;\n\n    for (const ring of polygon) {\n        for (let i = 0, len = ring.length, j = len - 1; i < len; j = i++) {\n            const a = ring[i];\n            const b = ring[j];\n\n            if ((a[1] > y !== b[1] > y) &&\n                (x < (b[0] - a[0]) * (y - a[1]) / (b[1] - a[1]) + a[0])) inside = !inside;\n\n            minDistSq = Math.min(minDistSq, getSegDistSq(x, y, a, b));\n        }\n    }\n\n    return minDistSq === 0 ? 0 : (inside ? 1 : -1) * Math.sqrt(minDistSq);\n}\n\n// get polygon centroid\nfunction getCentroidCell(polygon) {\n    let area = 0;\n    let x = 0;\n    let y = 0;\n    const points = polygon[0];\n\n    for (let i = 0, len = points.length, j = len - 1; i < len; j = i++) {\n        const a = points[i];\n        const b = points[j];\n        const f = a[0] * b[1] - b[0] * a[1];\n        x += (a[0] + b[0]) * f;\n        y += (a[1] + b[1]) * f;\n        area += f * 3;\n    }\n    const centroid = new Cell(x / area, y / area, 0, polygon);\n    if (area === 0 || centroid.d < 0) return new Cell(points[0][0], points[0][1], 0, polygon);\n    return centroid;\n}\n\n// get squared distance from a point to a segment\nfunction getSegDistSq(px, py, a, b) {\n    let x = a[0];\n    let y = a[1];\n    let dx = b[0] - x;\n    let dy = b[1] - y;\n\n    if (dx !== 0 || dy !== 0) {\n        const t = ((px - x) * dx + (py - y) * dy) / (dx * dx + dy * dy);\n\n        if (t > 1) {\n            x = b[0];\n            y = b[1];\n\n        } else if (t > 0) {\n            x += dx * t;\n            y += dy * t;\n        }\n    }\n\n    dx = px - x;\n    dy = py - y;\n\n    return dx * dx + dy * dy;\n}\n","// index.ts\nimport {\n  lineString,\n  multiLineString,\n  multiPolygon,\n  polygon\n} from \"@turf/helpers\";\nimport { getGeom } from \"@turf/invariant\";\n\n// lib/lineclip.ts\nfunction lineclip(points, bbox, result) {\n  var len = points.length, codeA = bitCode(points[0], bbox), part = [], i, codeB, lastCode;\n  let a;\n  let b;\n  if (!result) result = [];\n  for (i = 1; i < len; i++) {\n    a = points[i - 1];\n    b = points[i];\n    codeB = lastCode = bitCode(b, bbox);\n    while (true) {\n      if (!(codeA | codeB)) {\n        part.push(a);\n        if (codeB !== lastCode) {\n          part.push(b);\n          if (i < len - 1) {\n            result.push(part);\n            part = [];\n          }\n        } else if (i === len - 1) {\n          part.push(b);\n        }\n        break;\n      } else if (codeA & codeB) {\n        break;\n      } else if (codeA) {\n        a = intersect(a, b, codeA, bbox);\n        codeA = bitCode(a, bbox);\n      } else {\n        b = intersect(a, b, codeB, bbox);\n        codeB = bitCode(b, bbox);\n      }\n    }\n    codeA = lastCode;\n  }\n  if (part.length) result.push(part);\n  return result;\n}\nfunction polygonclip(points, bbox) {\n  var result, edge, prev, prevInside, i, p, inside;\n  for (edge = 1; edge <= 8; edge *= 2) {\n    result = [];\n    prev = points[points.length - 1];\n    prevInside = !(bitCode(prev, bbox) & edge);\n    for (i = 0; i < points.length; i++) {\n      p = points[i];\n      inside = !(bitCode(p, bbox) & edge);\n      if (inside !== prevInside) result.push(intersect(prev, p, edge, bbox));\n      if (inside) result.push(p);\n      prev = p;\n      prevInside = inside;\n    }\n    points = result;\n    if (!points.length) break;\n  }\n  return result;\n}\nfunction intersect(a, b, edge, bbox) {\n  return edge & 8 ? [a[0] + (b[0] - a[0]) * (bbox[3] - a[1]) / (b[1] - a[1]), bbox[3]] : edge & 4 ? [a[0] + (b[0] - a[0]) * (bbox[1] - a[1]) / (b[1] - a[1]), bbox[1]] : edge & 2 ? [bbox[2], a[1] + (b[1] - a[1]) * (bbox[2] - a[0]) / (b[0] - a[0])] : edge & 1 ? [bbox[0], a[1] + (b[1] - a[1]) * (bbox[0] - a[0]) / (b[0] - a[0])] : null;\n}\nfunction bitCode(p, bbox) {\n  var code = 0;\n  if (p[0] < bbox[0]) code |= 1;\n  else if (p[0] > bbox[2]) code |= 2;\n  if (p[1] < bbox[1]) code |= 4;\n  else if (p[1] > bbox[3]) code |= 8;\n  return code;\n}\n\n// index.ts\nfunction bboxClip(feature, bbox) {\n  const geom = getGeom(feature);\n  const type = geom.type;\n  const properties = feature.type === \"Feature\" ? feature.properties : {};\n  let coords = geom.coordinates;\n  switch (type) {\n    case \"LineString\":\n    case \"MultiLineString\": {\n      const lines = [];\n      if (type === \"LineString\") {\n        coords = [coords];\n      }\n      coords.forEach((line) => {\n        lineclip(line, bbox, lines);\n      });\n      if (lines.length === 1) {\n        return lineString(lines[0], properties);\n      }\n      return multiLineString(lines, properties);\n    }\n    case \"Polygon\":\n      return polygon(clipPolygon(coords, bbox), properties);\n    case \"MultiPolygon\":\n      return multiPolygon(\n        coords.map((poly) => {\n          return clipPolygon(poly, bbox);\n        }),\n        properties\n      );\n    default:\n      throw new Error(\"geometry \" + type + \" not supported\");\n  }\n}\nfunction clipPolygon(rings, bbox) {\n  const outRings = [];\n  for (const ring of rings) {\n    const clipped = polygonclip(ring, bbox);\n    if (clipped.length > 0) {\n      if (clipped[0][0] !== clipped[clipped.length - 1][0] || clipped[0][1] !== clipped[clipped.length - 1][1]) {\n        clipped.push(clipped[0]);\n      }\n      if (clipped.length >= 4) {\n        outRings.push(clipped);\n      }\n    }\n  }\n  return outRings;\n}\nvar turf_bbox_clip_default = bboxClip;\nexport {\n  bboxClip,\n  turf_bbox_clip_default as default\n};\n//# sourceMappingURL=index.js.map","import polylabel from 'polylabel'\nimport { area as turfArea } from '@turf/area'\nimport { distance as turfDistance } from '@turf/distance'\nimport { point as TurfPoint, polygon as TurfPolygon, multiPolygon as TurfMultiPolygon } from '@turf/helpers'\nimport { bboxClip as TurfBboxClip } from '@turf/bbox-clip'\nimport { getFocusBounds } from '../../lib/viewport'\nimport { defaults } from './constants'\n\nfunction getPaddedBounds () {\n  const { map } = this\n  const padding = map.getPadding()\n  const bounds = map.getBounds()\n\n  // Get the pixel coordinates for the current bounds\n  const sw = map.project([bounds.getWest(), bounds.getSouth()])\n  const ne = map.project([bounds.getEast(), bounds.getNorth()])\n\n  // Adjust for padding\n  sw.x += padding.left\n  sw.y -= padding.bottom\n  ne.x -= padding.right\n  ne.y += padding.top\n\n  // Convert back to geographical coordinates\n  const paddedSW = map.unproject(sw)\n  const paddedNE = map.unproject(ne)\n\n  // Create new bounds\n  const paddedBounds = [[paddedSW.lng, paddedSW.lat], [paddedNE.lng, paddedNE.lat]]\n\n  return paddedBounds.flat(1)\n}\n\nfunction addFeatureProperties (features) {\n  const { map } = this\n  return features.map(f => {\n    const { lng, lat } = map.getCenter()\n    const coord = f.geometry.type === 'Polygon' ? polylabel(f.geometry.coordinates, 0.00001) : f.geometry.coordinates\n    const p1 = new TurfPoint([coord[0], coord[1]])\n    const p2 = new TurfPoint([lng, lat])\n    const distance = turfDistance(p1, p2, { units: 'metres' })\n    return {\n      ...f.properties,\n      id: f.properties.id || f.id,\n      geometryType: f.geometry.type,\n      coord,\n      distance\n    }\n  })\n}\n\nfunction intersectFeatures (bounds, features) {\n  features = features.map(f => {\n    if (['Polygon', 'MultiPolygon'].includes(f.geometry.type)) {\n      const polygon = f.geometry.type === 'Polygon' ? new TurfPolygon(f.geometry.coordinates) : new TurfMultiPolygon(f.geometry.coordinates)\n      const clipped = TurfBboxClip(polygon, bounds)\n      // Remove empty rings\n      clipped.geometry.coordinates = clipped.geometry.coordinates.filter(c => c.length)\n      // const clippedGeometry = martinez.intersection(boundsPolygon.geometry.coordinates, f.geometry.coordinates)\n      f.geometry = clipped.geometry\n    }\n    return f\n  })\n  return features\n}\n\nfunction combineFeatures (features) {\n  const combined = []\n  features.forEach(f => {\n    const group = combined.find(c => c.length && ((f.id && f.id === c[0].id) || (f.properties.id && f.properties.id === c[0].properties.id)))\n    if (f.geometry.type === 'MultiPolygon') {\n      // Get largest single polygon, outer shape (excluding holes) and add area\n      const parts = f.geometry.coordinates.map(c => {\n        const polygon = new TurfPolygon([c[0]])\n        polygon.properties = { area: turfArea(polygon) }\n        return polygon\n      })\n      const largest = parts.find(p => p.properties.area === Math.max(...parts.map(b => b.properties.area)))\n      f.geometry = largest.geometry\n      f.properties.area = largest.properties.area\n    } else if (f.geometry.type === 'Polygon') {\n      // Get out shape (excluding holes) and add area\n      const polygon = new TurfPolygon([f.geometry.coordinates[0]])\n      f.properties.area = turfArea(polygon)\n      f.geometry = polygon.geometry\n    } else {\n      f.properties.area = 0\n    }\n    group?.push(f) || combined.push([f])\n  })\n  // Return largest single polygon\n  return combined.map(g => g.find(f => f.properties.area === Math.max(...g.map(b => b.properties.area))))\n}\n\nfunction getViewport () {\n  const { map } = this\n  const bounds = map.getBounds().toArray().flat(1)\n  const focusBounds = getPaddedBounds.bind(this)()\n  let center = map.getCenter()\n  let zoom = map.getZoom()\n  center = center.toArray().map(n => parseFloat(n.toFixed(defaults.PRECISION)))\n  zoom = parseFloat(zoom.toFixed(defaults.PRECISION))\n  const isMaxZoom = map.getZoom() >= map.getMaxZoom()\n  const isMinZoom = map.getZoom() <= map.getMinZoom()\n\n  return {\n    bounds,\n    focusBounds,\n    center,\n    zoom,\n    isMaxZoom,\n    isMinZoom\n  }\n}\n\nexport function addMapHoverBehaviour () {\n  const { map, featureLayers, labelLayers } = this\n\n  // Toggle cursor style for features\n  map.on('mousemove', [...featureLayers, ...labelLayers], e => {\n    const features = map.queryRenderedFeatures(e.point, { layers: [...featureLayers, ...labelLayers] })\n    const isFeature = !e.originalEvent.altKey && features && !!features.find(f => featureLayers.includes(f.layer.id))\n    const isLabel = e.originalEvent.altKey && features && !!features.find(f => labelLayers.includes(f.layer.id))\n    map.getCanvas().style.cursor = isFeature || isLabel ? 'pointer' : ''\n  })\n\n  // Revert cursor on mouseout\n  map.on('mouseout', [...featureLayers, ...labelLayers], () => { map.getCanvas().style.cursor = '' })\n}\n\nexport async function getDetail (pixel) {\n  const { selectedLayers } = this\n  const viewport = getViewport.bind(this)()\n  const features = getFeatures.bind(this)(pixel)\n  const label = getHighlightedLabel.bind(this)()\n  const selectedId = getSelectedFeatureId.bind(this)(selectedLayers)\n\n  return {\n    ...viewport,\n    resultType: features.resultType,\n    coord: features.coord,\n    selectedId,\n    features,\n    label\n  }\n}\n\nexport function getFeatures (pixel) {\n  const { map, featureLayers, locationLayers, paddingBox, scale } = this\n  const bounds = getFocusBounds(paddingBox, scale)\n\n  // Get all visible feature and pixel layers\n  let layers = [...featureLayers, ...locationLayers]\n  layers = map.getStyle()?.layers.filter(l => layers.includes(l?.id) && l?.layout?.visibility !== 'none').map(l => l.id)\n\n  // Get all features at given pixel\n  let featuresAtPixel = map.queryRenderedFeatures(pixel, { layers })\n\n  featuresAtPixel = (featuresAtPixel.map(f => {\n    return {\n      ...f.properties,\n      id: f.properties.id || f.id,\n      name: f.properties.name,\n      layer: f.layer.id\n    }\n  }))\n\n  // Get all 'featureLayer' features in the viewport\n  const renderedFeaturesInViewport = map.queryRenderedFeatures({ layers: featureLayers })\n\n  // Get total 'featureLayer' features in viewport (May be more than 9)\n  const featuresTotal = Array.from(new Set(renderedFeaturesInViewport.map(f => f.properties.id || f.id))).length\n\n  // Get all 'featureLayer' features in the padded bounds\n  const renderedFeaturesInPadding = map.queryRenderedFeatures(bounds, { layers: featureLayers })\n\n  // Get total 'featureLayer' features in padding bounds (May be more than 9)\n  const featuresFocusTotal = Array.from(new Set(renderedFeaturesInPadding.map(f => f.properties.id || f.id))).length\n\n  // Get geometry that intersects bounds\n  const intersectingFocusFeatures = intersectFeatures(getPaddedBounds.bind(this)(), renderedFeaturesInPadding)\n\n  // Split multi polygons and combine duplicate features\n  const viewportPolygonFeatures = featuresFocusTotal <= defaults.MAX_FEATURES ? combineFeatures(renderedFeaturesInViewport) : []\n  const focusPolygonFeatures = featuresFocusTotal <= defaults.MAX_FEATURES ? combineFeatures(intersectingFocusFeatures) : []\n\n  // Add props and sort features\n  const featuresInViewport = renderedFeaturesInViewport.length <= defaults.MAX_FEATURES ? addFeatureProperties.bind(this)(viewportPolygonFeatures) : []\n  const featuresInFocus = addFeatureProperties.bind(this)(focusPolygonFeatures).sort((a, b) => a.distance - b.distance)\n\n  // Get long lat of query\n  let lngLat\n  if (pixel) {\n    lngLat = map.unproject(pixel)\n    lngLat = [lngLat.lng, lngLat.lat]\n    lngLat = lngLat.map(c => Math.round(c * Math.pow(10, defaults.PRECISION)) / Math.pow(10, defaults.PRECISION))\n  }\n\n  // Set 'features' result type\n  const feature = featuresAtPixel.length ? featuresAtPixel[0] : null\n  const featureType = (featureLayers?.includes(feature?.layer) && 'feature') || (locationLayers?.includes(feature?.layer) && 'pixel')\n  const hasFeatureLayers = layers?.some(l => featureLayers?.includes(l))\n  const hasPixelLayers = layers?.some(l => locationLayers?.includes(l))\n  const resultType = featureType || (hasPixelLayers ? 'pixel' : null)\n\n  return {\n    resultType,\n    items: featuresAtPixel,\n    featuresTotal,\n    featuresInViewport,\n    featuresFocusTotal,\n    featuresInFocus,\n    isFeaturesInMap: hasFeatureLayers,\n    isPixelFeaturesAtPixel: locationLayers?.includes(feature?.layer),\n    isPixelFeaturesInMap: hasPixelLayers,\n    coord: lngLat\n  }\n}\n\nexport function toggleSelectedFeature (id) {\n  const { map, selectedLayers } = this\n  if (map?.getStyle()) {\n    for (const layer of selectedLayers) {\n      map.setLayoutProperty(layer, 'visibility', id ? 'visible' : 'none')\n      map.setFilter(layer, [\n        'any',\n        ['==', ['id'], id || ''],\n        ['==', ['get', 'id'], id || '']\n      ])\n    }\n  }\n}\n\nexport function getHighlightedLabel () {\n  const { map } = this\n  const features = map.queryRenderedFeatures({ layers: ['label'] })\n  let text\n  if (features?.length) {\n    const label = map.getStyle()?.layers.find(l => l.id === 'label')?.layout['text-field']\n    text = `${label} (${features[0].properties.layer})`\n  }\n  return text\n}\n\nexport function getSelectedFeatureId (selectedLayers) {\n  const { map } = this\n  const features = map.queryRenderedFeatures({ layers: selectedLayers })\n  return features.length ? (features[0].properties?.id || features[0]?.id) : null\n}\n\nexport function getLabel (pixel) {\n  const { map, labelLayers } = this\n  const feature = map.queryRenderedFeatures(pixel, { layers: labelLayers })[0]\n  return feature\n}\n\nexport function getLabels () {\n  const { map, paddingBox, scale } = this\n  const bounds = getFocusBounds(paddingBox, scale)\n  const features = map.queryRenderedFeatures(bounds, { layers: this.labelLayers })\n  const labels = features.map(f => {\n    let pixel = f.geometry.type === 'Point' && map.project(f.geometry.coordinates)\n    if (f.geometry.type !== 'Point') {\n      const coordinates = f.geometry.coordinates.flat(f.geometry.type === 'MultiLineString' ? 1 : 0)\n      const pixels = coordinates.map(c => map.project(c))\n      const xS = pixels.map(p => p.x)\n      const yS = pixels.map(p => p.y)\n      const centerX = ((Math.max(...xS) - Math.min(...xS)) / 2) + Math.min(...xS)\n      const centerY = ((Math.max(...yS) - Math.min(...yS)) / 2) + Math.min(...yS)\n      pixel = { x: centerX, y: centerY }\n    }\n    return {\n      feature: f,\n      pixel: [pixel.x, pixel.y]\n    }\n  })\n  return labels\n}\n","export const locationMarkerHTML = () => {\n  const el = document.createElement('div')\n  el.className = 'fm-c-marker fm-c-marker--location'\n  el.innerHTML = '<div class=\"fm-c-marker__inner\"><svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" fill=\"currentColor\"><circle cx=\"10\" cy=\"10\" r=\"8\" stroke=\"#fff\" stroke-width=\"3\"/></svg></div>'\n  return el\n}\n\nexport const targetMarkerHTML = () => {\n  const el = document.createElement('div')\n  el.className = 'fm-c-marker fm-c-marker--target'\n  el.innerHTML = `<div class=\"fm-c-marker__inner\">\n    <svg width=\"38\" height=\"38\" viewBox=\"0 0 38 38\" fill-rule=\"evenodd\" fill=\"currentColor\">\n      <path d=\"M5.035 20H1v-2h4.035C5.525 11.069 11.069 5.525 18 5.035V1h2v4.035c6.931.49 12.475 6.034 12.965 12.965H37v2h-4.035c-.49 6.931-6.034 12.475-12.965 12.965V37h-2v-4.035C11.069 32.475 5.525 26.931 5.035 20zM19 7A12.01 12.01 0 0 0 7 19a12.01 12.01 0 0 0 12 12 12.01 12.01 0 0 0 12-12A12.01 12.01 0 0 0 19 7zm0 10a2 2 0 1 1 0 4 2 2 0 1 1 0-4z\"/>\n      <path d=\"M5.035 20H1v-2h4.035a14.02 14.02 0 0 1 .246-1.8l1.96.399C7.083 17.375 7 18.178 7 19s.083 1.625.241 2.401l-1.96.399a14.02 14.02 0 0 1-.246-1.8zM20 5.035a14.02 14.02 0 0 1 1.8.246l-.399 1.96C20.625 7.083 19.822 7 19 7s-1.625.083-2.401.241l-.399-1.96a14.02 14.02 0 0 1 1.8-.246V1h2v4.035zm-2 27.93a14.02 14.02 0 0 1-1.8-.246l.399-1.96c.776.158 1.579.241 2.401.241s1.625-.083 2.401-.241l.399 1.96a14.02 14.02 0 0 1-1.8.246V37h-2v-4.035zM32.965 20a14.02 14.02 0 0 1-.246 1.8l-1.96-.399c.158-.776.241-1.579.241-2.401s-.083-1.625-.241-2.401l1.96-.399a14.02 14.02 0 0 1 .246 1.8H37v2h-4.035zM19 17a2 2 0 1 1 0 4 2 2 0 1 1 0-4zm3.8-9.385l.634-1.897a13.98 13.98 0 0 1 4.848 2.805l-1.327 1.496c-1.196-1.06-2.605-1.886-4.155-2.404zm5.181 3.43l1.496-1.327a13.98 13.98 0 0 1 2.805 4.848l-1.897.634c-.518-1.55-1.344-2.959-2.404-4.155zM30.385 22.8l1.897.634a13.98 13.98 0 0 1-2.805 4.848l-1.496-1.327c1.06-1.196 1.886-2.605 2.404-4.155zm-3.43 5.181l1.327 1.496a13.98 13.98 0 0 1-4.848 2.805l-.634-1.897c1.55-.518 2.959-1.344 4.155-2.404zM15.2 30.385l-.634 1.897a13.98 13.98 0 0 1-4.848-2.805l1.327-1.496c1.196 1.06 2.605 1.886 4.155 2.404zm-5.181-3.43l-1.496 1.327a13.98 13.98 0 0 1-2.805-4.848l1.897-.634c.518 1.55 1.344 2.959 2.404 4.155zM7.615 15.2l-1.897-.634a13.98 13.98 0 0 1 2.805-4.848l1.496 1.327c-1.06 1.196-1.886 2.605-2.404 4.155zm3.43-5.181L9.718 8.523a13.98 13.98 0 0 1 4.848-2.805l.634 1.897c-1.55.518-2.959 1.344-4.155 2.404z\"/>\n    </svg>\n  </div>`\n  return el\n}\n\nexport const shortcutMarkerHTML = (key) => {\n  const el = document.createElement('div')\n  el.className = 'fm-c-marker fm-c-marker--shortcut'\n  el.innerHTML = `<div class=\"fm-c-marker__inner\">${key}</div>`\n  return el\n}\n","import computedStyleToInlineStyle from 'computed-style-to-inline-style'\nimport { defaults } from './constants'\nimport { shortcutMarkerHTML } from './marker'\nimport { parseSVG } from '../../lib/symbols'\n\nconst SYMBOL_PLACEMENT = 'symbol-placement'\nconst TEXT_FIELD = 'text-field'\nconst SCALE_FACTOR_SMALL = 1.5\nconst SCALE_FACTOR_LARGE = 1.25\n\nexport function amendLineSymbolLayers () {\n  const { map } = this\n  const lineSymbolLayers = map.getStyle().layers.filter(l => l.layout && (SYMBOL_PLACEMENT in l.layout) && l.layout[SYMBOL_PLACEMENT] === 'line')\n  lineSymbolLayers.forEach(l => map.setLayoutProperty(l.id, SYMBOL_PLACEMENT, 'line-center'))\n}\n\nexport function addHighlightedLabelLayer () {\n  const { map } = this\n  const layers = map.getStyle().layers\n  this.labelLayers = layers.filter(l => l.id !== 'label' && l.layout ? l.layout[TEXT_FIELD] : null).map(l => l.id)\n  map.addSource('label', { type: 'geojson', data: { type: 'FeatureCollection', features: [] } })\n  map.addLayer({\n    id: 'label',\n    type: 'symbol',\n    source: 'label',\n    layout: {\n      'text-allow-overlap': true,\n      'text-ignore-placement': true\n    },\n    paint: {\n      'text-halo-width': 3,\n      'text-halo-blur': 1,\n      'text-opacity': 1\n    }\n  })\n}\n\nexport function addShortcutMarkers (features) {\n  const { map, shortcutMarkers } = this\n  const { Marker } = this.modules\n  shortcutMarkers.forEach(m => m.remove())\n  features.forEach((f, i) => {\n    const offset = f.geometryType === 'Point' ? [0, defaults.SHORTCUT_LABEL_OFFSET] : [0, 0]\n    shortcutMarkers.push(new Marker({ element: shortcutMarkerHTML(i + 1), offset }).setLngLat(f.coord).addTo(map))\n  })\n}\n\nexport function highlightLabel (feature) {\n  const { map, scale, style } = this\n\n  if (!map.style) {\n    return\n  }\n\n  if (feature) {\n    map.moveLayer('label')\n    map.getSource('label').setData({\n      type: 'Feature',\n      geometry: feature.geometry,\n      properties: {\n        ...feature.properties,\n        layer: feature.layer.id\n      }\n    })\n    // Clone layout properties\n    const textScale = scale === 1 ? SCALE_FACTOR_SMALL : SCALE_FACTOR_LARGE\n    const textField = feature.layer.layout[TEXT_FIELD]\n    map.setLayoutProperty('label', SYMBOL_PLACEMENT, feature.layer.layout[SYMBOL_PLACEMENT])\n    map.setLayoutProperty('label', TEXT_FIELD, textField.sections ? textField.sections[0].text : textField)\n    map.setLayoutProperty('label', 'text-font', feature.layer.layout['text-font'])\n    map.setLayoutProperty('label', 'text-letter-spacing', feature.layer.layout['text-letter-spacing'])\n    map.setLayoutProperty('label', 'text-size', feature.layer.layout['text-size'] * textScale)\n    map.setLayoutProperty('label', 'text-anchor', feature.layer.layout['text-anchor'])\n    map.setLayoutProperty('label', 'text-justify', feature.layer.layout['text-justify'])\n    map.setLayoutProperty('label', 'text-offset', feature.layer.layout['text-offset']?.map(o => o / textScale))\n    // Clone paint properties\n    map.setPaintProperty('label', 'text-color', (style === 'dark' ? '#ffffff' : '#000000'))\n    map.setPaintProperty('label', 'text-halo-color', (style === 'dark' ? '#000000' : '#ffffff'))\n  } else {\n    map?.getSource('label')?.setData({\n      type: 'FeatureCollection',\n      features: []\n    })\n  }\n}\n\nexport function addSelectedLayers (layers, selectedId, isDarkBasemap) {\n  const { map } = this\n  const selectedLayers = []\n  for (const layer of layers) {\n    layer.id = `${layer.id}-selected`\n    layer.filter = ['==', 'id', selectedId || '']\n    if (layer.type === 'symbol') {\n      layer.layout['icon-image'] = ['concat', layer.layout['icon-image'], '-selected']\n    }\n    if (layer.type === 'fill') {\n      layer.paint = { 'line-color': isDarkBasemap ? '#ffffff' : '#0b0c0c', 'line-width': 2 }\n      layer.type = 'line'\n    }\n    if (map.getLayer(layer.id)) {\n      map.removeLayer(layer.id)\n    }\n    selectedLayers.push(layer.id)\n    setTimeout(() => map.addLayer(layer), 0)\n  }\n  return selectedLayers\n}\n\nexport function loadSymbols () {\n  let fn\n  if (this.symbols?.length) {\n    const { map, symbols, style } = this\n    const isDarkBasemap = ['dark', 'aerial'].includes(style.name)\n\n    fn = Promise.all(symbols.map(u => fetch(u))).then(responses =>\n      Promise.all(responses.map(r => r.text()))\n    ).then(texts => Promise.all(texts.map((t, i) => loadImage(getName(symbols[i]), t, map, isDarkBasemap))\n      .concat(texts.map((t, i) => loadImage(`${getName(symbols[i])}-selected`, t, map, isDarkBasemap)))\n    ))\n  }\n  return fn\n}\n\nconst getName = path => {\n  const extNumChars = 4\n  return path.split('\\\\').pop().split('/').pop().slice(0, -Math.abs(extNumChars))\n}\n\nconst loadImage = (name, text, map, isDarkBasemap) => {\n  const parsed = parseSVG(name, null, text, isDarkBasemap, 2)\n  const container = map.getCanvasContainer()\n  container.insertAdjacentHTML('beforeend', parsed)\n  const el = container.lastChild\n  computedStyleToInlineStyle(el, { recursive: true, properties: ['stroke', 'fill'] })\n  const base64 = 'data:image/svg+xml;base64,' + btoa(container.lastChild.outerHTML)\n  const img = document.createElement('img')\n  el?.remove()\n  return new Promise((resolve, reject) => {\n    img.onload = () => {\n      try {\n        if (map?.hasImage(name)) {\n          return\n        }\n        map.addImage(name, img)\n        resolve(img)\n      } catch (err) {\n        console.log(err)\n      }\n    }\n    img.onerror = reject\n    img.src = base64\n  })\n}\n","import { getDetail, addMapHoverBehaviour } from './query'\nimport { loadSymbols, addHighlightedLabelLayer, amendLineSymbolLayers, addShortcutMarkers, addSelectedLayers } from './symbols'\n\nexport const getResolution = (map) => {\n  const center = map.getCenter()\n  const zoom = map.getZoom()\n  const lat = center.lat\n  const EARTH_CIRCUMFERENCE = 40075016.686\n  const TILE_SIZE = 512\n  const scale = Math.pow(2, zoom)\n  const resolution = (EARTH_CIRCUMFERENCE * Math.cos((lat * Math.PI) / 180)) / (scale * TILE_SIZE)\n  return resolution\n}\n\nexport const getAttributions = (map) => {\n  const style = map.getStyle()\n  if (!style) {\n    return []\n  }\n\n  const currentZoom = map.getZoom()\n  const activeAttributions = new Set()\n\n  // Check each layer for visibility at current zoom\n  style.layers.forEach(layer => {\n    // Skip layers without a source\n    if (!layer.source) return\n\n    // Check if layer is visible based on zoom and visibility property\n    const minZoom = layer.minzoom !== undefined ? layer.minzoom : 0\n    const maxZoom = layer.maxzoom !== undefined ? layer.maxzoom : 24\n    const isVisible = currentZoom >= minZoom && currentZoom < maxZoom && (!layer.layout || layer.layout.visibility !== 'none')\n\n    // If layer is visible, get attribution from its source\n    if (isVisible) {\n      const source = style.sources[layer.source]\n      if (source && source.attribution) {\n        activeAttributions.add(source.attribution)\n      }\n    }\n  })\n\n  return Array.from(activeAttributions)\n}\n\nexport async function handleLoad () {\n  const { map } = this\n  await loadSymbols.bind(this)()\n  this.isLoaded = true\n  const resolution = getResolution(map)\n  const zoom = map.getZoom()\n  const attributions = getAttributions(map)\n  this.dispatchEvent(new CustomEvent('load', {\n    detail: {\n      framework: { map },\n      resolution,\n      zoom,\n      attributions\n    }\n  }))\n}\n\nexport async function handleStyleLoad () {\n  const { map } = this\n  // Store ref to baselayers when a new style is loaded\n  this.baseLayers = map.getStyle().layers\n  // Amend symbol-placement prop so labels have a coordinate\n  amendLineSymbolLayers.bind(this)()\n  // Add highlighted label layer and source\n  addHighlightedLabelLayer.bind(this)()\n  // Change cursor type on feature hover\n  addMapHoverBehaviour.bind(this)(this.featureLayers, this.labelLayers)\n  if (this.isLoaded) {\n    await loadSymbols.bind(this)()\n    this.dispatchEvent(new CustomEvent('style', {\n      detail: {\n        type: 'style'\n      }\n    }))\n  }\n}\n\nexport async function handleIdle () {\n  if (this.map) {\n    const { map, paddingBox, selectedId, scale } = this\n    const { offsetTop, offsetLeft, offsetWidth, offsetHeight } = paddingBox\n    const { offsetTop: parentOffsetTop, offsetLeft: parentOffsetLeft } = paddingBox.parentNode\n    const pixel = [offsetLeft + parentOffsetLeft + (offsetWidth / 2), offsetTop + parentOffsetTop + (offsetHeight / 2)].map(c => c / scale)\n    const detail = await getDetail.bind(this)(selectedId ? null : pixel)\n    const attributions = getAttributions(map)\n    addShortcutMarkers.bind(this)(detail?.features?.featuresInFocus)\n    this.dispatchEvent(new CustomEvent('update', {\n      detail: {\n        ...detail,\n        attributions\n      }\n    }))\n  }\n}\n\nexport async function handleMoveStart (e) {\n  this.hideLabel()\n  this.dispatchEvent(new CustomEvent('movestart', {\n    detail: {\n      isUserInitiated: e.isUserInitiated || !!e.originalEvent\n    }\n  }))\n}\n\nexport function handleMove () {\n  const { map } = this\n  const isMaxZoom = map.getZoom() >= map.getMaxZoom()\n  const isMinZoom = map.getZoom() <= map.getMinZoom()\n  const zoom = map.getZoom()\n  const resolution = getResolution(map)\n  const attributions = getAttributions(map)\n\n  // Need to include maxBounds check as this can also constrain zoom\n  this.dispatchEvent(new CustomEvent('move', {\n    detail: {\n      isMaxZoom,\n      isMinZoom,\n      zoom,\n      resolution,\n      attributions\n    }\n  }))\n}\n\nexport function handleStyleData (e) {\n  if (this.baseLayers.length) {\n    const { map, style, selectedId } = this\n    const featureLayers = e.target.getStyle().layers.filter(l => this.featureLayers.includes(l.id))\n    const selectedLayers = map.getStyle().layers.filter(l => l.id.includes('selected'))\n    if (selectedLayers.length !== featureLayers.length) {\n      const isDarkBasemap = ['dark', 'aerial'].includes(style.name)\n      this.selectedLayers = addSelectedLayers.bind(this)(featureLayers, selectedId, isDarkBasemap)\n    }\n  }\n}\n\nexport function handleError (err) {\n  console.log(err)\n}\n","import { handleLoad, handleMoveStart, handleMove, handleIdle, handleStyleData, handleStyleLoad, handleError } from './events.js'\nimport { toggleSelectedFeature, getDetail, getLabels, getLabel } from './query.js'\nimport { locationMarkerHTML, targetMarkerHTML } from './marker.js'\nimport { highlightLabel } from './symbols.js'\nimport { getFocusPadding, spatialNavigate, getScale } from '../../lib/viewport.js'\nimport { debounce } from '../../lib/debounce.js'\nimport { throttle } from '../../lib/throttle.js'\nimport { defaults, css } from './constants.js'\nimport { defaults as storeDefaults } from '../../store/constants.js'\n\nclass Provider extends EventTarget {\n  constructor ({ capabilities, transformRequest, symbols }) {\n    super()\n    this.srid = 4326\n    this.capabilities = capabilities\n    this.transformRequest = transformRequest\n    this.symbols = symbols\n    this.baseLayers = []\n    this.selectedId = ''\n    this.selectedCoordinate = null\n    this.isLoaded = false\n  }\n\n  init (options) {\n    if (this.capabilities.isLatest) {\n      import(/* webpackChunkName: \"maplibre\", webpackExports: [\"Map\", \"Marker\", \"LngLatBounds\"] */ 'maplibre-gl').then(module => {\n        this.addMap(module, options)\n      })\n    } else {\n      Promise.all([\n        import(/* webpackChunkName: \"maplibre-legacy\", webpackExports: [\"Map\", \"Marker\", \"LngLatBounds\"] */ 'maplibre-gl-legacy'),\n        import(/* webpackChunkName: \"maplibre-legacy\", webpackExports: [\"install\"] */ 'resize-observer'),\n        import(/* webpackChunkName: \"maplibre-legacy\" */ 'array-flat-polyfill')\n      ]).then(promises => {\n        if (!window.ResizeObserver) {\n          promises[1].install()\n        }\n        this.addMap(promises[0], options)\n      })\n    }\n  }\n\n  remove () {\n    this.map?.remove()\n    this.map = null\n  }\n\n  addMap (module, options) {\n    const { container, paddingBox, bounds, maxBounds, center, zoom, minZoom, maxZoom, style, size, featureLayers, locationLayers, callBack } = options\n    const { Map: MaplibreMap, Marker, LngLatBounds } = module.default\n    const scale = getScale(size)\n\n    const map = new MaplibreMap({\n      ...options,\n      container,\n      style: style?.url,\n      maxBounds: maxBounds || storeDefaults.MAX_BOUNDS_4326,\n      bounds,\n      center,\n      zoom,\n      minZoom,\n      maxZoom,\n      fadeDuration: 0,\n      attributionControl: false,\n      dragRotate: false\n    })\n\n    // Set initial padding, bounds and center (*No option to set in constructor)\n    // map.showPadding = true\n\n    map.setPadding(getFocusPadding(paddingBox, scale))\n    if (bounds) {\n      map.fitBounds(bounds, { animate: false })\n    } else {\n      map.flyTo({ center, zoom, animate: false })\n    }\n\n    // Disable rotation\n    map.touchZoomRotate.disableRotation()\n\n    // Overide device pixel ratio\n    if (map.setPixelRatio) {\n      map.setPixelRatio(window.devicePixelRatio * scale)\n    }\n\n    // Tidy up canvas\n    const canvas = map.getCanvas()\n    canvas.removeAttribute('role')\n    canvas.removeAttribute('tabindex')\n    canvas.removeAttribute('aria-label')\n    canvas.style.display = 'block'\n\n    this.container = container\n    this.map = map\n    this.featureLayers = featureLayers || []\n    this.locationLayers = locationLayers || []\n    this.selectedLayers = []\n    this.paddingBox = paddingBox\n    this.style = style\n    this.scale = scale\n\n    // Add markers\n    this.targetMarker = new Marker({ element: targetMarkerHTML() }).setLngLat([0, 0]).addTo(map)\n    this.locationMarker = new Marker({ element: locationMarkerHTML() }).setLngLat([0, 0]).addTo(map)\n    this.shortcutMarkers = []\n\n    // Return ref to dynamically loaded modules and framework functions\n    this.modules = { MaplibreMap, Marker, LngLatBounds }\n    this.framework = { map }\n\n    // Map ready event (first load)\n    map.on('load', handleLoad.bind(this))\n\n    // Map movestart\n    map.on('movestart', handleMoveStart.bind(this))\n\n    // Detect max/min zoom on move\n    const throttleHandleMove = throttle(() => { handleMove.bind(this)() }, defaults.THROTTLE)\n    map.on('move', throttleHandleMove)\n\n    // Detect map layer addition\n    map.on('styledata', handleStyleData.bind(this))\n\n    // All render/changes/animations complete. Must debounce, min 500ms\n    const debounceHandleIdle = debounce(() => { handleIdle.bind(this)() }, defaults.DELAY)\n    map.on('idle', debounceHandleIdle)\n\n    // Map style change\n    map.on('style.load', handleStyleLoad.bind(this))\n\n    // Capture errors\n    map.on('error', handleError.bind(this))\n\n    // Implementation callback after initialisation\n    if (callBack) {\n      callBack(this)\n    }\n  }\n\n  getPixel (coord) {\n    let pixel\n    if (this.map && coord) {\n      pixel = this.map.project(coord)\n      pixel = [Math.round(pixel.x), Math.round(pixel.y)]\n    }\n    return pixel\n  }\n\n  panBy (offset, isUserInitiated = true) {\n    if (this.map) {\n      this.map.panBy(offset, { ...defaults.ANIMATION }, { isUserInitiated })\n    }\n  }\n\n  panTo (coord) {\n    this.map.flyTo({ center: coord, ...defaults.ANIMATION })\n  }\n\n  zoomIn () {\n    if (this.map) {\n      this.map.zoomIn(defaults.ANIMATION)\n    }\n  }\n\n  zoomOut () {\n    if (this.map) {\n      this.map.zoomOut(defaults.ANIMATION)\n    }\n  }\n\n  setStyle (style) {\n    this.style = style\n    this.map.setStyle(style.url, { diff: false })\n\n    // Udate draw style\n    this.draw?.setStyle?.()\n  }\n\n  setPadding (coord, isAnimate) {\n    if (this.map) {\n      const { map, paddingBox, scale } = this\n      const padding = getFocusPadding(paddingBox, scale)\n      // Search needs to set padding first before fitBounds\n      this.map.setPadding(padding || map.getPadding())\n      // Ease map to new when coord is obscured\n      coord && this.map.easeTo({ center: coord, animate: isAnimate, ...defaults.ANIMATION })\n    }\n  }\n\n  setSize (size) {\n    const scale = getScale(size)\n    this.scale = scale\n    this.setPadding()\n    if (this.map.setPixelRatio) {\n      this.map?.setPixelRatio(window.devicePixelRatio * scale)\n    }\n    setTimeout(() => {\n      this.map.resize()\n      this.dispatchEvent(new CustomEvent('style', {\n        detail: {\n          type: 'size'\n        }\n      }))\n    }, defaults.DELAY)\n  }\n\n  fitBounds (bounds, isAnimate = true) {\n    bounds = [[bounds[0], bounds[1]], [bounds[2], bounds[3]]]\n    this.map.fitBounds(bounds, { animate: isAnimate, linear: true, duration: defaults.ANIMATION.duration })\n  }\n\n  setCentre (coord, _zoom) {\n    if (this.map) {\n      this.map.flyTo({ center: coord, ...defaults.ANIMATION })\n    }\n  }\n\n  initDraw (options) {\n    import(/* webpackChunkName: \"maplibre-draw\" */ './draw.js').then(module => {\n      const Draw = module.default\n      this.draw = new Draw(this, options)\n    })\n  }\n\n  setTargetMarker (coord, hasData, isVisible) {\n    const { targetMarker } = this\n    if (targetMarker) {\n      targetMarker.setLngLat(coord || [0, 0])\n      const el = targetMarker.getElement() // addClassName not supported in v1.15\n      el.classList.toggle('fm-c-marker--has-data', hasData)\n      el.classList.toggle(css.MARKER_VISIBLE, isVisible && coord)\n    }\n  }\n\n  selectFeature (id) {\n    this.selectedId = id\n    toggleSelectedFeature.bind(this)(id)\n  }\n\n  selectCoordinate (coord) {\n    this.selectedCoordinate = coord\n  }\n\n  async queryFeature (id) {\n    if (id) {\n      const detail = await getDetail.bind(this)(null, false)\n      detail.features.items = [detail.features.items.find(f => f.id === id)]\n      this.dispatchEvent(new CustomEvent('mapquery', { detail }))\n    }\n  }\n\n  async queryPoint (point) {\n    const detail = await getDetail.bind(this)(point, this.selectedLayers)\n    this.hideLabel()\n    this.dispatchEvent(new CustomEvent('mapquery', {\n      detail: {\n        resultType: detail.features.resultType,\n        ...detail\n      }\n    }))\n  }\n\n  getGeoLocation (success, error) {\n    navigator.geolocation.getCurrentPosition(async (position) => {\n      let coord = [position.coords.longitude, position.coords.latitude]\n      coord = coord.map(n => parseFloat(n.toFixed(defaults.PRECISION)))\n      // const place = this.getNearest ? await this.getNearest(coord) : null\n      success(coord, null)\n    }, (err) => {\n      console.log(err)\n      error(err)\n    }, {\n      enableHighAccuracy: false\n    })\n  }\n\n  showLocation (coord) {\n    const { locationMarker } = this\n    locationMarker.setLngLat(coord).addClassName(css.MARKER_VISIBLE)\n  }\n\n  showNextLabel (pixel, direction) {\n    const labels = getLabels.bind(this)()\n    const { lng, lat } = this.map.getCenter()\n    const center = this.map.project([lng, lat])\n    const pixels = labels.map(c => c.pixel)\n    const index = spatialNavigate(direction, pixel || [center.x, center.y], pixels)\n    const feature = labels[index]?.feature\n    highlightLabel.bind(this)(feature)\n    return labels[index]?.pixel\n  }\n\n  showLabel (point) {\n    const feature = getLabel.bind(this)(point)\n    highlightLabel.bind(this)(feature)\n    return point\n  }\n\n  hideLabel () {\n    if (this.map) {\n      highlightLabel.bind(this)()\n    }\n  }\n}\n\nexport default Provider\n","export const throttle = (fn, wait) => {\n  let lastCallTime = 0\n  return (...args) => {\n    const now = Date.now()\n    if (now - lastCallTime >= wait) {\n      lastCallTime = now\n      fn(...args)\n    }\n  }\n}\n","// index.js\nimport { feature, point, lineString, isObject } from \"@turf/helpers\";\nfunction coordEach(geojson, callback, excludeWrapCoord) {\n  if (geojson === null) return;\n  var j, k, l, geometry, stopG, coords, geometryMaybeCollection, wrapShrink = 0, coordIndex = 0, isGeometryCollection, type = geojson.type, isFeatureCollection = type === \"FeatureCollection\", isFeature = type === \"Feature\", stop = isFeatureCollection ? geojson.features.length : 1;\n  for (var featureIndex = 0; featureIndex < stop; featureIndex++) {\n    geometryMaybeCollection = isFeatureCollection ? geojson.features[featureIndex].geometry : isFeature ? geojson.geometry : geojson;\n    isGeometryCollection = geometryMaybeCollection ? geometryMaybeCollection.type === \"GeometryCollection\" : false;\n    stopG = isGeometryCollection ? geometryMaybeCollection.geometries.length : 1;\n    for (var geomIndex = 0; geomIndex < stopG; geomIndex++) {\n      var multiFeatureIndex = 0;\n      var geometryIndex = 0;\n      geometry = isGeometryCollection ? geometryMaybeCollection.geometries[geomIndex] : geometryMaybeCollection;\n      if (geometry === null) continue;\n      coords = geometry.coordinates;\n      var geomType = geometry.type;\n      wrapShrink = excludeWrapCoord && (geomType === \"Polygon\" || geomType === \"MultiPolygon\") ? 1 : 0;\n      switch (geomType) {\n        case null:\n          break;\n        case \"Point\":\n          if (callback(\n            coords,\n            coordIndex,\n            featureIndex,\n            multiFeatureIndex,\n            geometryIndex\n          ) === false)\n            return false;\n          coordIndex++;\n          multiFeatureIndex++;\n          break;\n        case \"LineString\":\n        case \"MultiPoint\":\n          for (j = 0; j < coords.length; j++) {\n            if (callback(\n              coords[j],\n              coordIndex,\n              featureIndex,\n              multiFeatureIndex,\n              geometryIndex\n            ) === false)\n              return false;\n            coordIndex++;\n            if (geomType === \"MultiPoint\") multiFeatureIndex++;\n          }\n          if (geomType === \"LineString\") multiFeatureIndex++;\n          break;\n        case \"Polygon\":\n        case \"MultiLineString\":\n          for (j = 0; j < coords.length; j++) {\n            for (k = 0; k < coords[j].length - wrapShrink; k++) {\n              if (callback(\n                coords[j][k],\n                coordIndex,\n                featureIndex,\n                multiFeatureIndex,\n                geometryIndex\n              ) === false)\n                return false;\n              coordIndex++;\n            }\n            if (geomType === \"MultiLineString\") multiFeatureIndex++;\n            if (geomType === \"Polygon\") geometryIndex++;\n          }\n          if (geomType === \"Polygon\") multiFeatureIndex++;\n          break;\n        case \"MultiPolygon\":\n          for (j = 0; j < coords.length; j++) {\n            geometryIndex = 0;\n            for (k = 0; k < coords[j].length; k++) {\n              for (l = 0; l < coords[j][k].length - wrapShrink; l++) {\n                if (callback(\n                  coords[j][k][l],\n                  coordIndex,\n                  featureIndex,\n                  multiFeatureIndex,\n                  geometryIndex\n                ) === false)\n                  return false;\n                coordIndex++;\n              }\n              geometryIndex++;\n            }\n            multiFeatureIndex++;\n          }\n          break;\n        case \"GeometryCollection\":\n          for (j = 0; j < geometry.geometries.length; j++)\n            if (coordEach(geometry.geometries[j], callback, excludeWrapCoord) === false)\n              return false;\n          break;\n        default:\n          throw new Error(\"Unknown Geometry Type\");\n      }\n    }\n  }\n}\nfunction coordReduce(geojson, callback, initialValue, excludeWrapCoord) {\n  var previousValue = initialValue;\n  coordEach(\n    geojson,\n    function(currentCoord, coordIndex, featureIndex, multiFeatureIndex, geometryIndex) {\n      if (coordIndex === 0 && initialValue === void 0)\n        previousValue = currentCoord;\n      else\n        previousValue = callback(\n          previousValue,\n          currentCoord,\n          coordIndex,\n          featureIndex,\n          multiFeatureIndex,\n          geometryIndex\n        );\n    },\n    excludeWrapCoord\n  );\n  return previousValue;\n}\nfunction propEach(geojson, callback) {\n  var i;\n  switch (geojson.type) {\n    case \"FeatureCollection\":\n      for (i = 0; i < geojson.features.length; i++) {\n        if (callback(geojson.features[i].properties, i) === false) break;\n      }\n      break;\n    case \"Feature\":\n      callback(geojson.properties, 0);\n      break;\n  }\n}\nfunction propReduce(geojson, callback, initialValue) {\n  var previousValue = initialValue;\n  propEach(geojson, function(currentProperties, featureIndex) {\n    if (featureIndex === 0 && initialValue === void 0)\n      previousValue = currentProperties;\n    else\n      previousValue = callback(previousValue, currentProperties, featureIndex);\n  });\n  return previousValue;\n}\nfunction featureEach(geojson, callback) {\n  if (geojson.type === \"Feature\") {\n    callback(geojson, 0);\n  } else if (geojson.type === \"FeatureCollection\") {\n    for (var i = 0; i < geojson.features.length; i++) {\n      if (callback(geojson.features[i], i) === false) break;\n    }\n  }\n}\nfunction featureReduce(geojson, callback, initialValue) {\n  var previousValue = initialValue;\n  featureEach(geojson, function(currentFeature, featureIndex) {\n    if (featureIndex === 0 && initialValue === void 0)\n      previousValue = currentFeature;\n    else previousValue = callback(previousValue, currentFeature, featureIndex);\n  });\n  return previousValue;\n}\nfunction coordAll(geojson) {\n  var coords = [];\n  coordEach(geojson, function(coord) {\n    coords.push(coord);\n  });\n  return coords;\n}\nfunction geomEach(geojson, callback) {\n  var i, j, g, geometry, stopG, geometryMaybeCollection, isGeometryCollection, featureProperties, featureBBox, featureId, featureIndex = 0, isFeatureCollection = geojson.type === \"FeatureCollection\", isFeature = geojson.type === \"Feature\", stop = isFeatureCollection ? geojson.features.length : 1;\n  for (i = 0; i < stop; i++) {\n    geometryMaybeCollection = isFeatureCollection ? geojson.features[i].geometry : isFeature ? geojson.geometry : geojson;\n    featureProperties = isFeatureCollection ? geojson.features[i].properties : isFeature ? geojson.properties : {};\n    featureBBox = isFeatureCollection ? geojson.features[i].bbox : isFeature ? geojson.bbox : void 0;\n    featureId = isFeatureCollection ? geojson.features[i].id : isFeature ? geojson.id : void 0;\n    isGeometryCollection = geometryMaybeCollection ? geometryMaybeCollection.type === \"GeometryCollection\" : false;\n    stopG = isGeometryCollection ? geometryMaybeCollection.geometries.length : 1;\n    for (g = 0; g < stopG; g++) {\n      geometry = isGeometryCollection ? geometryMaybeCollection.geometries[g] : geometryMaybeCollection;\n      if (geometry === null) {\n        if (callback(\n          null,\n          featureIndex,\n          featureProperties,\n          featureBBox,\n          featureId\n        ) === false)\n          return false;\n        continue;\n      }\n      switch (geometry.type) {\n        case \"Point\":\n        case \"LineString\":\n        case \"MultiPoint\":\n        case \"Polygon\":\n        case \"MultiLineString\":\n        case \"MultiPolygon\": {\n          if (callback(\n            geometry,\n            featureIndex,\n            featureProperties,\n            featureBBox,\n            featureId\n          ) === false)\n            return false;\n          break;\n        }\n        case \"GeometryCollection\": {\n          for (j = 0; j < geometry.geometries.length; j++) {\n            if (callback(\n              geometry.geometries[j],\n              featureIndex,\n              featureProperties,\n              featureBBox,\n              featureId\n            ) === false)\n              return false;\n          }\n          break;\n        }\n        default:\n          throw new Error(\"Unknown Geometry Type\");\n      }\n    }\n    featureIndex++;\n  }\n}\nfunction geomReduce(geojson, callback, initialValue) {\n  var previousValue = initialValue;\n  geomEach(\n    geojson,\n    function(currentGeometry, featureIndex, featureProperties, featureBBox, featureId) {\n      if (featureIndex === 0 && initialValue === void 0)\n        previousValue = currentGeometry;\n      else\n        previousValue = callback(\n          previousValue,\n          currentGeometry,\n          featureIndex,\n          featureProperties,\n          featureBBox,\n          featureId\n        );\n    }\n  );\n  return previousValue;\n}\nfunction flattenEach(geojson, callback) {\n  geomEach(geojson, function(geometry, featureIndex, properties, bbox, id) {\n    var type = geometry === null ? null : geometry.type;\n    switch (type) {\n      case null:\n      case \"Point\":\n      case \"LineString\":\n      case \"Polygon\":\n        if (callback(\n          feature(geometry, properties, { bbox, id }),\n          featureIndex,\n          0\n        ) === false)\n          return false;\n        return;\n    }\n    var geomType;\n    switch (type) {\n      case \"MultiPoint\":\n        geomType = \"Point\";\n        break;\n      case \"MultiLineString\":\n        geomType = \"LineString\";\n        break;\n      case \"MultiPolygon\":\n        geomType = \"Polygon\";\n        break;\n    }\n    for (var multiFeatureIndex = 0; multiFeatureIndex < geometry.coordinates.length; multiFeatureIndex++) {\n      var coordinate = geometry.coordinates[multiFeatureIndex];\n      var geom = {\n        type: geomType,\n        coordinates: coordinate\n      };\n      if (callback(feature(geom, properties), featureIndex, multiFeatureIndex) === false)\n        return false;\n    }\n  });\n}\nfunction flattenReduce(geojson, callback, initialValue) {\n  var previousValue = initialValue;\n  flattenEach(\n    geojson,\n    function(currentFeature, featureIndex, multiFeatureIndex) {\n      if (featureIndex === 0 && multiFeatureIndex === 0 && initialValue === void 0)\n        previousValue = currentFeature;\n      else\n        previousValue = callback(\n          previousValue,\n          currentFeature,\n          featureIndex,\n          multiFeatureIndex\n        );\n    }\n  );\n  return previousValue;\n}\nfunction segmentEach(geojson, callback) {\n  flattenEach(geojson, function(feature2, featureIndex, multiFeatureIndex) {\n    var segmentIndex = 0;\n    if (!feature2.geometry) return;\n    var type = feature2.geometry.type;\n    if (type === \"Point\" || type === \"MultiPoint\") return;\n    var previousCoords;\n    var previousFeatureIndex = 0;\n    var previousMultiIndex = 0;\n    var prevGeomIndex = 0;\n    if (coordEach(\n      feature2,\n      function(currentCoord, coordIndex, featureIndexCoord, multiPartIndexCoord, geometryIndex) {\n        if (previousCoords === void 0 || featureIndex > previousFeatureIndex || multiPartIndexCoord > previousMultiIndex || geometryIndex > prevGeomIndex) {\n          previousCoords = currentCoord;\n          previousFeatureIndex = featureIndex;\n          previousMultiIndex = multiPartIndexCoord;\n          prevGeomIndex = geometryIndex;\n          segmentIndex = 0;\n          return;\n        }\n        var currentSegment = lineString(\n          [previousCoords, currentCoord],\n          feature2.properties\n        );\n        if (callback(\n          currentSegment,\n          featureIndex,\n          multiFeatureIndex,\n          geometryIndex,\n          segmentIndex\n        ) === false)\n          return false;\n        segmentIndex++;\n        previousCoords = currentCoord;\n      }\n    ) === false)\n      return false;\n  });\n}\nfunction segmentReduce(geojson, callback, initialValue) {\n  var previousValue = initialValue;\n  var started = false;\n  segmentEach(\n    geojson,\n    function(currentSegment, featureIndex, multiFeatureIndex, geometryIndex, segmentIndex) {\n      if (started === false && initialValue === void 0)\n        previousValue = currentSegment;\n      else\n        previousValue = callback(\n          previousValue,\n          currentSegment,\n          featureIndex,\n          multiFeatureIndex,\n          geometryIndex,\n          segmentIndex\n        );\n      started = true;\n    }\n  );\n  return previousValue;\n}\nfunction lineEach(geojson, callback) {\n  if (!geojson) throw new Error(\"geojson is required\");\n  flattenEach(geojson, function(feature2, featureIndex, multiFeatureIndex) {\n    if (feature2.geometry === null) return;\n    var type = feature2.geometry.type;\n    var coords = feature2.geometry.coordinates;\n    switch (type) {\n      case \"LineString\":\n        if (callback(feature2, featureIndex, multiFeatureIndex, 0, 0) === false)\n          return false;\n        break;\n      case \"Polygon\":\n        for (var geometryIndex = 0; geometryIndex < coords.length; geometryIndex++) {\n          if (callback(\n            lineString(coords[geometryIndex], feature2.properties),\n            featureIndex,\n            multiFeatureIndex,\n            geometryIndex\n          ) === false)\n            return false;\n        }\n        break;\n    }\n  });\n}\nfunction lineReduce(geojson, callback, initialValue) {\n  var previousValue = initialValue;\n  lineEach(\n    geojson,\n    function(currentLine, featureIndex, multiFeatureIndex, geometryIndex) {\n      if (featureIndex === 0 && initialValue === void 0)\n        previousValue = currentLine;\n      else\n        previousValue = callback(\n          previousValue,\n          currentLine,\n          featureIndex,\n          multiFeatureIndex,\n          geometryIndex\n        );\n    }\n  );\n  return previousValue;\n}\nfunction findSegment(geojson, options) {\n  options = options || {};\n  if (!isObject(options)) throw new Error(\"options is invalid\");\n  var featureIndex = options.featureIndex || 0;\n  var multiFeatureIndex = options.multiFeatureIndex || 0;\n  var geometryIndex = options.geometryIndex || 0;\n  var segmentIndex = options.segmentIndex || 0;\n  var properties = options.properties;\n  var geometry;\n  switch (geojson.type) {\n    case \"FeatureCollection\":\n      if (featureIndex < 0)\n        featureIndex = geojson.features.length + featureIndex;\n      properties = properties || geojson.features[featureIndex].properties;\n      geometry = geojson.features[featureIndex].geometry;\n      break;\n    case \"Feature\":\n      properties = properties || geojson.properties;\n      geometry = geojson.geometry;\n      break;\n    case \"Point\":\n    case \"MultiPoint\":\n      return null;\n    case \"LineString\":\n    case \"Polygon\":\n    case \"MultiLineString\":\n    case \"MultiPolygon\":\n      geometry = geojson;\n      break;\n    default:\n      throw new Error(\"geojson is invalid\");\n  }\n  if (geometry === null) return null;\n  var coords = geometry.coordinates;\n  switch (geometry.type) {\n    case \"Point\":\n    case \"MultiPoint\":\n      return null;\n    case \"LineString\":\n      if (segmentIndex < 0) segmentIndex = coords.length + segmentIndex - 1;\n      return lineString(\n        [coords[segmentIndex], coords[segmentIndex + 1]],\n        properties,\n        options\n      );\n    case \"Polygon\":\n      if (geometryIndex < 0) geometryIndex = coords.length + geometryIndex;\n      if (segmentIndex < 0)\n        segmentIndex = coords[geometryIndex].length + segmentIndex - 1;\n      return lineString(\n        [\n          coords[geometryIndex][segmentIndex],\n          coords[geometryIndex][segmentIndex + 1]\n        ],\n        properties,\n        options\n      );\n    case \"MultiLineString\":\n      if (multiFeatureIndex < 0)\n        multiFeatureIndex = coords.length + multiFeatureIndex;\n      if (segmentIndex < 0)\n        segmentIndex = coords[multiFeatureIndex].length + segmentIndex - 1;\n      return lineString(\n        [\n          coords[multiFeatureIndex][segmentIndex],\n          coords[multiFeatureIndex][segmentIndex + 1]\n        ],\n        properties,\n        options\n      );\n    case \"MultiPolygon\":\n      if (multiFeatureIndex < 0)\n        multiFeatureIndex = coords.length + multiFeatureIndex;\n      if (geometryIndex < 0)\n        geometryIndex = coords[multiFeatureIndex].length + geometryIndex;\n      if (segmentIndex < 0)\n        segmentIndex = coords[multiFeatureIndex][geometryIndex].length - segmentIndex - 1;\n      return lineString(\n        [\n          coords[multiFeatureIndex][geometryIndex][segmentIndex],\n          coords[multiFeatureIndex][geometryIndex][segmentIndex + 1]\n        ],\n        properties,\n        options\n      );\n  }\n  throw new Error(\"geojson is invalid\");\n}\nfunction findPoint(geojson, options) {\n  options = options || {};\n  if (!isObject(options)) throw new Error(\"options is invalid\");\n  var featureIndex = options.featureIndex || 0;\n  var multiFeatureIndex = options.multiFeatureIndex || 0;\n  var geometryIndex = options.geometryIndex || 0;\n  var coordIndex = options.coordIndex || 0;\n  var properties = options.properties;\n  var geometry;\n  switch (geojson.type) {\n    case \"FeatureCollection\":\n      if (featureIndex < 0)\n        featureIndex = geojson.features.length + featureIndex;\n      properties = properties || geojson.features[featureIndex].properties;\n      geometry = geojson.features[featureIndex].geometry;\n      break;\n    case \"Feature\":\n      properties = properties || geojson.properties;\n      geometry = geojson.geometry;\n      break;\n    case \"Point\":\n    case \"MultiPoint\":\n      return null;\n    case \"LineString\":\n    case \"Polygon\":\n    case \"MultiLineString\":\n    case \"MultiPolygon\":\n      geometry = geojson;\n      break;\n    default:\n      throw new Error(\"geojson is invalid\");\n  }\n  if (geometry === null) return null;\n  var coords = geometry.coordinates;\n  switch (geometry.type) {\n    case \"Point\":\n      return point(coords, properties, options);\n    case \"MultiPoint\":\n      if (multiFeatureIndex < 0)\n        multiFeatureIndex = coords.length + multiFeatureIndex;\n      return point(coords[multiFeatureIndex], properties, options);\n    case \"LineString\":\n      if (coordIndex < 0) coordIndex = coords.length + coordIndex;\n      return point(coords[coordIndex], properties, options);\n    case \"Polygon\":\n      if (geometryIndex < 0) geometryIndex = coords.length + geometryIndex;\n      if (coordIndex < 0)\n        coordIndex = coords[geometryIndex].length + coordIndex;\n      return point(coords[geometryIndex][coordIndex], properties, options);\n    case \"MultiLineString\":\n      if (multiFeatureIndex < 0)\n        multiFeatureIndex = coords.length + multiFeatureIndex;\n      if (coordIndex < 0)\n        coordIndex = coords[multiFeatureIndex].length + coordIndex;\n      return point(coords[multiFeatureIndex][coordIndex], properties, options);\n    case \"MultiPolygon\":\n      if (multiFeatureIndex < 0)\n        multiFeatureIndex = coords.length + multiFeatureIndex;\n      if (geometryIndex < 0)\n        geometryIndex = coords[multiFeatureIndex].length + geometryIndex;\n      if (coordIndex < 0)\n        coordIndex = coords[multiFeatureIndex][geometryIndex].length - coordIndex;\n      return point(\n        coords[multiFeatureIndex][geometryIndex][coordIndex],\n        properties,\n        options\n      );\n  }\n  throw new Error(\"geojson is invalid\");\n}\nexport {\n  coordAll,\n  coordEach,\n  coordReduce,\n  featureEach,\n  featureReduce,\n  findPoint,\n  findSegment,\n  flattenEach,\n  flattenReduce,\n  geomEach,\n  geomReduce,\n  lineEach,\n  lineReduce,\n  propEach,\n  propReduce,\n  segmentEach,\n  segmentReduce\n};\n//# sourceMappingURL=index.js.map"],"names":["getCoord","coord","Error","Array","isArray","type","geometry","coordinates","length","getCoords","coords","getGeom","geojson","debounce","fn","wait","timeoutId","_len","arguments","args","_key","window","clearTimeout","setTimeout","apply","defaults","PRECISION","ANIMATION","duration","curve","DELAY","THROTTLE","MAX_FEATURES","SHORTCUT_LABEL_OFFSET","css","MARKER_VISIBLE","earthRadius","factors","centimeters","centimetres","degrees","Math","PI","feet","inches","kilometers","kilometres","meters","metres","miles","millimeters","millimetres","nauticalmiles","radians","yards","feature","geom","properties","options","feat","id","bbox","point","isNumber","polygon","ring","j","lineString","featureCollection","features","fc","multiLineString","multiPolygon","radiansToLength","units","factor","lengthToRadians","distance","radiansToDegrees","degreesToRadians","num","isNaN","t","e","module","exports","Object","defineProperty","value","default","o","recursive","prototype","forEach","call","children","r","getComputedStyle","style","getPropertyValue","DOMParser","parseSVG","icon","fill","text","isDarkBasemap","undefined","scale","isSelected","includes","dom","parseFromString","svg","querySelector","classList","add","toggle","viewBox","getAttribute","width","parseInt","split","height","setAttribute","olFill","querySelectorAll","olStroke","n","bgFill","bgStroke","fgFill","fgStroke","body","innerHTML","from","to","coordinates1","coordinates2","dLat","dLon","lat1","lat2","a","pow","sin","cos","atan2","sqrt","area","i","total","polygonArea","calculateArea","abs","ringArea","FACTOR","PI_OVER_180","coordsLength","lower","middle","upper","lowerX","middleY","turf_area_default","getUnits","RATIO","concat","toFixed","round","getOffsetBoundingClientRect","el","closest","document","getBoundingClientRect","metresToKilometres","roundedKm","squareMetresToKm","SQ_KM","km2","Number","toLocaleString","minimumFractionDigits","maximumFractionDigits","ceil","parseDimensions","dimensions","center","radius","areaDisplay","centerDisplay","map","c","join","widthDisplay","radiusDisplay","_objectSpread","detectCoordinateType","_coords","_slicedToArray","x","y","getDistance","coord1","coord2","p1","TurfPoint","p2","turfDistance","getFocusPadding","padding","parent","box","boxX","left","boxY","top","parentX","parentY","right","bottom","values","every","getFocusBounds","bounds","getMapPixel","getDescription","place","focusBounds","isFocusArea","_ref","featuresTotal","featuresFocusTotal","isFeaturesInMap","isPixelFeaturesAtPixel","isPixelFeaturesInMap","activeFeaturesTotal","activeBounds","display","newPlace","newArea","ew","ns","getArea","findPlace","getStatus","_ref2","featuresInViewport","index","action","isBoundsChange","prevZoom","prevCenter","zoom","isMaxZoom","isMinZoom","label","featureId","status","findIndex","f","name","direction","oCentre","originalZoom","isSameCentre","JSON","stringify","isSameZoom","maxZoom","minZoom","change","ns1","ns2","ew1","ew2","nsd","ewd","bearing","filter","b","getBearing","ewc","nsc","getDirection","getBoundsChange","description","getPlace","isUserInitiated","oPlace","parseCentre","srid","_coords2","mb","slice","parseFloat","some","parseZoom","getShortcutKey","featuresViewport","number","code","getFeatureShape","_feature$geometry","_geometry$coordinates","_coordinates$","x1","y1","_coordinates$2","minDist","Infinity","maxDist","minEdge","maxEdge","_coordinates$i","xA","yA","_coordinates","xB","yB","dist","hypot","min","max","edgeDist","tolerance","isCirclePolygon","toLowerCase","_feature$geometry2","flatCoords","Set","flat","spatialNavigate","start","pixels","quadrant","p","offsetX","offsetY","push","distances","indexOf","getScale","size","small","medium","large","getPoint","_el$getBoundingClient","_e$nativeEvent","nativeEvent","clientX","clientY","getStyle","validStyles","s","STYLES","localStorage","getItem","find","TinyQueue","constructor","data","compare","this","_down","item","_up","pop","peek","pos","current","halfLength","bestChild","Cell","h","d","inside","minDistSq","len","getSegDistSq","pointToPolygonDist","SQRT2","px","py","dx","dy","polygonclip","points","result","edge","prev","prevInside","bitCode","intersect","clipPolygon","rings","outRings","clipped","_regeneratorRuntime","hasOwnProperty","Symbol","iterator","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","arg","l","GeneratorFunction","GeneratorFunctionPrototype","getPrototypeOf","v","g","defineIteratorMethods","_invoke","AsyncIterator","invoke","_typeof","resolve","__await","then","callInvokeWithMethodAndArg","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","return","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","reset","displayName","isGeneratorFunction","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","charAt","stop","rval","handle","complete","finish","catch","delegateYield","asyncGeneratorStep","_toConsumableArray","_arrayLikeToArray","_arrayWithoutHoles","_iterableToArray","_unsupportedIterableToArray","_nonIterableSpread","toString","test","ownKeys","getOwnPropertySymbols","getOwnPropertyDescriptor","_defineProperty","getOwnPropertyDescriptors","defineProperties","toPrimitive","String","_toPrimitive","_toPropertyKey","getPaddedBounds","getPadding","getBounds","sw","project","getWest","getSouth","ne","getEast","getNorth","paddedSW","unproject","paddedNE","lng","lat","addFeatureProperties","_map$getCenter","getCenter","precision","debug","minX","minY","maxX","maxY","cellSize","cellQueue","bestCell","centroid","getCentroidCell","bboxCell","numProbes","potentiallyQueue","cell","console","log","ch","polylabel","geometryType","combineFeatures","combined","group","parts","TurfPolygon","turfArea","largest","getViewport","toArray","bind","getZoom","getMaxZoom","getMinZoom","addMapHoverBehaviour","featureLayers","labelLayers","on","queryRenderedFeatures","layers","isFeature","originalEvent","altKey","layer","isLabel","getCanvas","cursor","getDetail","_x","_getDetail","_callee","pixel","selectedLayers","viewport","selectedId","_context","getFeatures","getHighlightedLabel","getSelectedFeatureId","resultType","_next","_throw","_map$getStyle","_layers","_layers2","locationLayers","paddingBox","_l$layout","layout","visibility","featuresAtPixel","lngLat","renderedFeaturesInViewport","renderedFeaturesInPadding","intersectingFocusFeatures","lines","line","codeB","lastCode","codeA","part","lineclip","poly","TurfBboxClip","TurfMultiPolygon","intersectFeatures","viewportPolygonFeatures","focusPolygonFeatures","featuresInFocus","sort","featureType","hasFeatureLayers","hasPixelLayers","items","toggleSelectedFeature","_step","_iterator","_n","F","_createForOfIteratorHelper","setLayoutProperty","setFilter","err","_map$getStyle2","_features$0$propertie","_features$","getLabel","getLabels","xS","yS","locationMarkerHTML","createElement","className","SYMBOL_PLACEMENT","TEXT_FIELD","amendLineSymbolLayers","addHighlightedLabelLayer","addSource","addLayer","source","paint","addShortcutMarkers","shortcutMarkers","Marker","modules","m","remove","key","offset","element","setLngLat","addTo","highlightLabel","_feature$layer$layout","moveLayer","getSource","setData","textScale","textField","sections","setPaintProperty","_map$getSource","addSelectedLayers","_loop","getLayer","removeLayer","loadSymbols","_this$symbols","symbols","all","fetch","responses","texts","loadImage","getName","path","parsed","container","getCanvasContainer","insertAdjacentHTML","lastChild","computedStyleToInlineStyle","base64","btoa","outerHTML","img","reject","onload","hasImage","addImage","onerror","src","_asyncToGenerator","getResolution","getAttributions","currentZoom","activeAttributions","minzoom","maxzoom","sources","attribution","handleLoad","_handleLoad","resolution","attributions","isLoaded","dispatchEvent","CustomEvent","detail","framework","handleStyleLoad","_handleStyleLoad","_callee2","_context2","baseLayers","handleIdle","_handleIdle","_callee3","_detail$features","offsetTop","offsetLeft","offsetWidth","offsetHeight","_paddingBox$parentNod","parentOffsetTop","parentOffsetLeft","_context3","parentNode","handleMoveStart","_handleMoveStart","_callee4","_context4","hideLabel","handleMove","handleStyleData","_this","target","handleError","_defineProperties","_wrapNativeSuper","Map","Function","_isNativeFunction","has","get","set","Wrapper","_isNativeReflectConstruct","Reflect","construct","_setPrototypeOf","_construct","_getPrototypeOf","Boolean","valueOf","Provider","_EventTarget","capabilities","transformRequest","_classCallCheck","ReferenceError","_assertThisInitialized","_possibleConstructorReturn","_callSuper","selectedCoordinate","_inherits","_this2","isLatest","addMap","promises","ResizeObserver","install","_this$map","_this3","maxBounds","callBack","_module$default","MaplibreMap","LngLatBounds","url","storeDefaults","MAX_BOUNDS_4326","fadeDuration","attributionControl","dragRotate","setPadding","fitBounds","animate","flyTo","touchZoomRotate","disableRotation","setPixelRatio","devicePixelRatio","canvas","removeAttribute","targetMarker","locationMarker","lastCallTime","throttleHandleMove","now","Date","debounceHandleIdle","panBy","zoomIn","zoomOut","_this$draw","_this$draw$setStyle","setStyle","diff","draw","isAnimate","easeTo","_this$map2","_this4","resize","linear","_zoom","_this5","Draw","hasData","isVisible","getElement","_queryFeature","_queryPoint","_x2","success","error","navigator","geolocation","getCurrentPosition","position","longitude","latitude","_x3","enableHighAccuracy","addClassName","_labels$index","_labels$index2","labels","_this$map$getCenter","EventTarget","geomEach","callback","stopG","geometryMaybeCollection","isGeometryCollection","featureProperties","featureBBox","featureIndex","isFeatureCollection","geometries","geomReduce","initialValue","previousValue","currentGeometry","flattenEach","geomType","multiFeatureIndex"],"sourceRoot":""}